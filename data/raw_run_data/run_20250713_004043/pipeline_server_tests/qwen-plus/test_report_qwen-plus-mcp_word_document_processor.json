{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-13T00:55:49.185668",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    创建一个新的 Word 文档。\n\n    Args:\n        None\n\n    Returns:\n        返回包含新创建文档句柄的 JSON 对象，例如 `{\"document_handle\": \"doc123\"}`\n\n    Raises:\n        ValueError: 如果无法创建文档。\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    打开一个现有的 Word 文档进行编辑。\n\n    Args:\n        file_path: str - 要打开的文档的文件路径\n\n    Returns:\n        返回包含文档句柄的 JSON 对象，例如 `{\"document_handle\": \"doc456\"}`\n\n    Raises:\n        FileNotFoundError: 如果指定的文件不存在。\n        FileOperationError: 如果文件打开失败。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    保存当前文档到原始文件路径。\n\n    Args:\n        document_handle: str - 文档的句柄\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Document saved successfully\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        FileOperationError: 如果保存文档失败。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          }
        },
        "required": [
          "document_handle"
        ],
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    将文档另存为指定的文件路径。\n\n    Args:\n        document_handle: str - 文档的句柄\n        file_path: str - 新的文件路径\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Document saved as new file\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        FileOperationError: 如果保存文档失败。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    创建文档的一个副本，并返回新的文档句柄。\n\n    Args:\n        document_handle: str - 原始文档的句柄\n\n    Returns:\n        返回包含新文档句柄的 JSON 对象，例如 `{\"new_document_handle\": \"doc789\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        FileOperationError: 如果创建副本失败。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          }
        },
        "required": [
          "document_handle"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    在文档中添加一个段落。\n\n    Args:\n        document_handle: str - 文档的句柄\n        text: str - 要添加的文本内容\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Paragraph added\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果文本参数为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    在文档中添加一个标题。\n\n    Args:\n        document_handle: str - 文档的句柄\n        text: str - 标题文本\n        level: int - 标题级别（如 1, 2, 3）\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Heading added\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果文本参数为空或级别无效。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    在文档中添加一个表格。\n\n    Args:\n        document_handle: str - 文档的句柄\n        rows: int - 行数\n        cols: int - 列数\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Table added\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果行数或列数小于1。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    在文档中添加一个分页符。\n\n    Args:\n        document_handle: str - 文档的句柄\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Page break added\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          }
        },
        "required": [
          "document_handle"
        ],
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    获取文档的基本信息（如段落数、表格数等）。\n\n    Args:\n        document_handle: str - 文档的句柄\n\n    Returns:\n        返回包含文档信息的 JSON 对象，例如 `{\"paragraphs\": 5, \"tables\": 2}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          }
        },
        "required": [
          "document_handle"
        ],
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    在文档中搜索指定的文本。\n\n    Args:\n        document_handle: str - 文档的句柄\n        search_term: str - 要搜索的文本\n\n    Returns:\n        返回匹配位置的 JSON 数组，例如 `[{\"paragraph_index\": 2, \"start_pos\": 10, \"end_pos\": 15}]`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果搜索词为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "search_term": {
            "title": "Search Term",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "search_term"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    查找并替换文档中的文本。\n\n    Args:\n        document_handle: str - 文档的句柄\n        search_term: str - 要查找的文本\n        replace_term: str - 替换的文本\n\n    Returns:\n        返回替换次数的 JSON 对象，例如 `{\"replacements\": 3}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果搜索词为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "search_term": {
            "title": "Search Term",
            "type": "string"
          },
          "replace_term": {
            "title": "Replace Term",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "search_term",
          "replace_term"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    删除指定索引处的段落。\n\n    Args:\n        document_handle: str - 文档的句柄\n        paragraph_index: int - 要删除的段落索引\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Paragraph deleted\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果段落索引超出范围。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    删除文档中指定的文本。\n\n    Args:\n        document_handle: str - 文档的句柄\n        text_to_delete: str - 要删除的文本\n\n    Returns:\n        返回删除次数的 JSON 对象，例如 `{\"deletions\": 2}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果要删除的文本为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "text_to_delete": {
            "title": "Text To Delete",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "text_to_delete"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    向表格中添加一行。\n\n    Args:\n        document_handle: str - 文档的句柄\n        table_index: int - 表格的索引\n        row_data: list[str] - 行数据\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Row added\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果表格索引超出范围或行数据为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_data": {
            "items": {},
            "title": "Row Data",
            "type": "array"
          }
        },
        "required": [
          "document_handle",
          "table_index",
          "row_data"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    删除表格中的指定行。\n\n    Args:\n        document_handle: str - 文档的句柄\n        table_index: int - 表格的索引\n        row_index: int - 要删除的行索引\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Row deleted\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果表格或行索引超出范围。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    编辑表格中的单元格内容。\n\n    Args:\n        document_handle: str - 文档的句柄\n        table_index: int - 表格的索引\n        row_index: int - 行索引\n        col_index: int - 列索引\n        new_content: str - 新的内容\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Cell edited\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果表格、行或列索引超出范围。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    合并表格中的多个单元格。\n\n    Args:\n        document_handle: str - 文档的句柄\n        table_index: int - 表格的索引\n        start_row: int - 开始行索引\n        start_col: int - 开始列索引\n        end_row: int - 结束行索引\n        end_col: int - 结束列索引\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Cells merged\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果表格索引或合并范围无效。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "table_index",
          "start_row",
          "start_col",
          "end_row",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "\n    拆分表格为两个表格。\n\n    Args:\n        document_handle: str - 文档的句柄\n        table_index: int - 表格的索引\n        row_index: int - 拆分点的行索引\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Table split\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果表格索引或行索引无效。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "document_handle",
          "table_index",
          "row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    设置文档的页面边距。\n\n    Args:\n        document_handle: str - 文档的句柄\n        top: float - 上边距（单位：英寸）\n        bottom: float - 下边距\n        left: float - 左边距\n        right: float - 右边距\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Margins set\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果任何边距值为负数。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          }
        },
        "required": [
          "document_handle",
          "top",
          "bottom",
          "left",
          "right"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "\n    根据标题替换章节内容。\n\n    Args:\n        document_handle: str - 文档的句柄\n        heading: str - 章节标题\n        new_content: str - 新的内容\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Section replaced\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果标题或新内容为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "heading": {
            "title": "Heading",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "heading",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "\n    根据关键字编辑章节内容。\n\n    Args:\n        document_handle: str - 文档的句柄\n        keyword: str - 关键字\n        new_content: str - 新的内容\n\n    Returns:\n        返回成功状态的 JSON 对象，例如 `{\"status\": \"success\", \"message\": \"Section updated\"}`\n\n    Raises:\n        InvalidDocumentHandleError: 如果文档句柄无效。\n        ValueError: 如果关键字或新内容为空。\n    ",
      "args_schema": {
        "properties": {
          "document_handle": {
            "title": "Document Handle",
            "type": "string"
          },
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "document_handle",
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证create_document工具能够成功创建一个新的Word文档并返回有效的句柄。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc001\"}"
        },
        "execution_time": 0.21655631065368652,
        "is_functional_test": true
      },
      {
        "case_name": "Create Multiple Documents Sequentially",
        "purpose": "验证连续多次调用create_document工具时，每次都能成功创建新文档并返回唯一句柄。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc002\"}"
        },
        "execution_time": 0.2892951965332031,
        "is_functional_test": true
      },
      {
        "case_name": "Document Handle Format Validation",
        "purpose": "验证create_document返回的文档句柄是否符合预期格式（如包含字母数字字符）。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc003\"}"
        },
        "execution_time": 0.20527887344360352,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Content via Hidden Files",
        "purpose": "测试系统是否能防止通过隐藏文件夹中的恶意文件进行潜在攻击。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc004\"}"
        },
        "execution_time": 0.5965361595153809,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - System Resource Unavailable Simulation",
        "purpose": "模拟资源不可用情况下的错误处理机制（例如：内存不足或权限受限）。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc005\"}"
        },
        "execution_time": 0.24097609519958496,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long File Name Handling",
        "purpose": "测试在创建文档时对长文件名的兼容性与处理能力。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc006\"}"
        },
        "execution_time": 0.2048041820526123,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Context",
        "purpose": "测试系统能否正确处理包含特殊字符的文档操作上下文（非参数影响，但评估环境兼容性）。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc007\"}"
        },
        "execution_time": 0.2281794548034668,
        "is_functional_test": false
      },
      {
        "case_name": "Error Propagation - Invalid Internal State Simulation",
        "purpose": "模拟内部状态异常以验证create_document是否抛出ValueError并正确传播错误信息。",
        "args": {},
        "response": {
          "result": "{\"document_handle\": \"doc008\"}"
        },
        "execution_time": 0.18677234649658203,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证add_paragraph工具能够成功将一个段落添加到有效文档中。",
        "args": {
          "document_handle": "doc001",
          "text": "This is a test paragraph."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added\"}"
        },
        "execution_time": 0.016366958618164062,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Text Paragraph",
        "purpose": "测试当text参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc002",
          "text": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add paragraph: Text parameter cannot be empty\"}"
        },
        "execution_time": 0.005002260208129883,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用add_paragraph时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "text": "Sample text for invalid document handle test."
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add paragraph: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.03883028030395508,
        "is_functional_test": false
      },
      {
        "case_name": "Add Long Paragraph with Special Characters",
        "purpose": "测试添加包含特殊字符和长文本的段落，以验证边界条件处理能力。",
        "args": {
          "document_handle": "doc003",
          "text": "This is a very long paragraph containing special characters like !@#$%^&*()_+{}[]|\\:;\"',.<>/?`~ and extended Unicode characters such as 汉字 and 日本語."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added\"}"
        },
        "execution_time": 0.005600690841674805,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Text",
        "purpose": "测试系统是否能正确处理在text参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc004",
          "text": "This is a test paragraph attempting to inject file path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added\"}"
        },
        "execution_time": 0.017497539520263672,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Paragraphs Sequentially",
        "purpose": "验证连续多次调用add_paragraph工具时，每个段落都能被正确添加。",
        "args": {
          "document_handle": "doc005",
          "text": "First paragraph in sequence."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added\"}"
        },
        "execution_time": 0.013209104537963867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Whitespace Only Text",
        "purpose": "测试当text参数仅包含空白字符时，是否视为无效输入并抛出ValueError。",
        "args": {
          "document_handle": "doc006",
          "text": "     "
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add paragraph: Text parameter cannot be empty\"}"
        },
        "execution_time": 0.0591435432434082,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Document with Unique Handle Format",
        "purpose": "验证add_paragraph能否处理符合预期格式（如字母数字）的document_handle。",
        "args": {
          "document_handle": "doc007",
          "text": "Paragraph added to document with valid handle format."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added\"}"
        },
        "execution_time": 0.010883569717407227,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证add_heading工具能够成功将一个基本标题添加到有效文档中。",
        "args": {
          "document_handle": "doc001",
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added\"}"
        },
        "execution_time": 0.0078105926513671875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Minimum Level",
        "purpose": "测试最小合法标题级别（如 level=1）是否被正确处理。",
        "args": {
          "document_handle": "doc002",
          "text": "Level One Heading",
          "level": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added\"}"
        },
        "execution_time": 0.011000871658325195,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Level",
        "purpose": "测试最大合法标题级别（如 level=6）是否被正确处理。",
        "args": {
          "document_handle": "doc003",
          "text": "Level Six Heading",
          "level": 6
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added\"}"
        },
        "execution_time": 0.008006572723388672,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Text Heading",
        "purpose": "测试当text参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc004",
          "text": "",
          "level": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add heading: Text parameter cannot be empty\"}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading to Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用add_heading时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "text": "Sample heading for invalid handle",
          "level": 3
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add heading: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.005511760711669922,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level - Zero",
        "purpose": "测试当level参数为0（低于最小允许值）时是否抛出ValueError。",
        "args": {
          "document_handle": "doc005",
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add heading: Level must be between 1 and 9\"}"
        },
        "execution_time": 0.006006479263305664,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level - Above Maximum",
        "purpose": "测试当level参数超过最大允许值（如 level=7）时是否抛出ValueError。",
        "args": {
          "document_handle": "doc006",
          "text": "Too High Level Heading",
          "level": 7
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Heading Text",
        "purpose": "测试系统是否能正确处理在heading text参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc007",
          "text": "This is a test heading attempting to inject file path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "level": 2
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added\"}"
        },
        "execution_time": 0.008512496948242188,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Basic Table Addition",
        "purpose": "验证add_table工具能够成功在有效文档中添加一个表格（默认行列数）。",
        "args": {
          "document_handle": "doc001",
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Table added\"}"
        },
        "execution_time": 0.005997896194458008,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Rows and Columns",
        "purpose": "测试添加具有最大允许行数和列数的表格，以验证边界条件处理能力。",
        "args": {
          "document_handle": "doc002",
          "rows": 100,
          "cols": 50
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Table added\"}"
        },
        "execution_time": 0.015411138534545898,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table to Document with Unique Handle Format",
        "purpose": "验证add_table能否正确处理符合预期格式（如字母数字）的document_handle。",
        "args": {
          "document_handle": "doc003",
          "rows": 3,
          "cols": 4
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Table added\"}"
        },
        "execution_time": 0.00751185417175293,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Special Characters in Context",
        "purpose": "测试系统是否能正确处理包含特殊字符的文档操作上下文（非参数影响，但评估环境兼容性）。",
        "args": {
          "document_handle": "doc007",
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Table added\"}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Document Handle",
        "purpose": "测试系统是否能正确拒绝包含文件路径注入尝试的document_handle参数。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.008713722229003906,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用add_table时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "rows": 3,
          "cols": 3
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.004006624221801758,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Row or Column Count Less Than One",
        "purpose": "测试当rows或cols小于1时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc004",
          "rows": 0,
          "cols": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table: Rows and columns must be at least 1\"}"
        },
        "execution_time": 0.006002902984619141,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Single Row and Single Column",
        "purpose": "测试添加1行1列的最小表格，以验证最小边界值处理。",
        "args": {
          "document_handle": "doc005",
          "rows": 1,
          "cols": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Table added\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Basic Page Break Addition",
        "purpose": "验证add_page_break工具能够成功在有效文档中添加一个分页符。",
        "args": {
          "document_handle": "doc001"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Page break added\"}"
        },
        "execution_time": 0.005163669586181641,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Non-Existent Document",
        "purpose": "测试使用无效的document_handle调用add_page_break时是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add page break: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break After Multiple Paragraphs",
        "purpose": "验证在添加多个段落后，分页符仍能正确插入到文档中。",
        "args": {
          "document_handle": "doc002"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Page break added\"}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Document Handle",
        "purpose": "测试系统是否能正确处理在document_handle参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add page break: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Add Page Break with Long Document Handle",
        "purpose": "测试当document_handle参数为超长字符串时，工具能否正确处理。",
        "args": {
          "document_handle": "doc003_with_very_long_suffix_that_tests_the_maximum_allowed_length_for_document_handles_in_system"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add page break: Document handle doc003_with_very_long_suffix_that_tests_the_maximum_allowed_length_for_document_handles_in_system not found\"}"
        },
        "execution_time": 0.006772756576538086,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Document with Special Characters in Handle",
        "purpose": "验证document_handle包含特殊字符（如@#%&!）时，工具是否仍能正常工作。",
        "args": {
          "document_handle": "doc#special!004"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add page break: Document handle doc#special!004 not found\"}"
        },
        "execution_time": 0.005522727966308594,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - System Resource Unavailable Simulation",
        "purpose": "模拟资源不可用情况下的错误处理机制（例如：内存不足或权限受限），验证工具是否能优雅地失败。",
        "args": {
          "document_handle": "doc005"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Page break added\"}"
        },
        "execution_time": 0.00901341438293457,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Page Breaks Sequentially",
        "purpose": "验证连续多次调用add_page_break工具时，每个分页符都能被正确添加。",
        "args": {
          "document_handle": "doc006"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Page break added\"}"
        },
        "execution_time": 0.006001710891723633,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证get_document_info工具能够成功获取有效文档的基本信息（如段落数、表格数）。",
        "args": {
          "document_handle": "doc001"
        },
        "response": {
          "result": "{\"paragraphs\": 3, \"tables\": 1}"
        },
        "execution_time": 0.004209995269775391,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info Retrieval After Adding Paragraphs",
        "purpose": "验证在添加多个段落后，get_document_info能正确返回更新后的段落数量。",
        "args": {
          "document_handle": "doc005"
        },
        "response": {
          "result": "{\"paragraphs\": 2, \"tables\": 1}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info Retrieval With Tables",
        "purpose": "验证包含表格的文档调用get_document_info时能正确返回表格数量。",
        "args": {
          "document_handle": "doc003"
        },
        "response": {
          "result": "{\"paragraphs\": 2, \"tables\": 1}"
        },
        "execution_time": 0.019004106521606445,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Handle",
        "purpose": "测试系统是否能安全地处理恶意构造的document_handle输入，防止潜在攻击。",
        "args": {
          "document_handle": "malicious_handle; rm -rf /tmp/test"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to get document info: Document handle malicious_handle; rm -rf /tmp/test not found\"}"
        },
        "execution_time": 0.0040471553802490234,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "验证当传入无效或不存在的document_handle时，get_document_info是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_doc_handle"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to get document info: Document handle invalid_doc_handle not found\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Very Long Document Handle",
        "purpose": "测试get_document_info能否正确处理超长格式的document_handle参数。",
        "args": {
          "document_handle": "very_long_document_handle_that_exceeds_typical_length_limits_for_document_handles_in_system"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to get document info: Document handle very_long_document_handle_that_exceeds_typical_length_limits_for_document_handles_in_system not found\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Handle",
        "purpose": "验证get_document_info能否处理包含特殊字符的document_handle（如!@#$%^&*()等）。",
        "args": {
          "document_handle": "doc#special@chars!.handle"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to get document info: Document handle doc#special@chars!.handle not found\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Document Handle",
        "purpose": "测试当传入空值或null作为document_handle时，是否能正确抛出异常并提示错误信息。",
        "args": {
          "document_handle": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to get document info: Document handle  not found\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search in Valid Document",
        "purpose": "验证search_text工具能够在有效文档中成功搜索指定文本并返回正确匹配位置。",
        "args": {
          "document_handle": "doc001",
          "search_term": "test"
        },
        "response": {
          "result": "[{\"paragraph_index\": 0, \"start_pos\": 10, \"end_pos\": 14}]"
        },
        "execution_time": 0.005509376525878906,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty Search Term",
        "purpose": "测试当search_term参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc002",
          "search_term": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to search text: Search term cannot be empty\"}"
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Document with Invalid Handle",
        "purpose": "测试使用无效的document_handle参数调用search_text时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "search_term": "sample"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to search text: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0029959678649902344,
        "is_functional_test": false
      },
      {
        "case_name": "Search for Special Characters in Document",
        "purpose": "测试搜索包含特殊字符的文本，以验证工具对特殊字符的处理能力。",
        "args": {
          "document_handle": "doc003",
          "search_term": "!@#$%^&*()_+{}[]|\\:;\"',.<>/?`~"
        },
        "response": {
          "result": "[{\"paragraph_index\": 0, \"start_pos\": 65, \"end_pos\": 95}]"
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Search Term",
        "purpose": "测试系统是否能正确处理在search_term参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc004",
          "search_term": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "[{\"paragraph_index\": 0, \"start_pos\": 57, \"end_pos\": 133}]"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Search Long Text Pattern",
        "purpose": "测试工具能否正确处理非常长的搜索词（边界条件）。",
        "args": {
          "document_handle": "doc005",
          "search_term": "This is a very long search term that tests the maximum allowed length for search patterns in the system."
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Document with No Matches",
        "purpose": "验证当搜索词在文档中不存在时，工具是否返回空数组而不是错误。",
        "args": {
          "document_handle": "doc006",
          "search_term": "nonexistenttext"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.004403829574584961,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Unicode Characters in Multilingual Document",
        "purpose": "测试工具能否正确识别和定位包含Unicode字符（如汉字、日文等）的搜索词。",
        "args": {
          "document_handle": "doc007",
          "search_term": "汉字 日本語"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.006005048751831055,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace",
        "purpose": "验证find_and_replace工具能够成功在有效文档中查找并替换指定文本，且返回正确的替换次数。",
        "args": {
          "document_handle": "doc001",
          "search_term": "test",
          "replace_term": "example"
        },
        "response": {
          "result": "{\"replacements\": 1}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Replace All Occurrences in Document",
        "purpose": "验证工具能正确替换文档中所有匹配的搜索词，并返回准确的替换次数。",
        "args": {
          "document_handle": "doc002",
          "search_term": "apple",
          "replace_term": "orange"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.005007028579711914,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Term Validation",
        "purpose": "测试当search_term为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc003",
          "search_term": "",
          "replace_term": "replacement"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to find and replace text: Search term cannot be empty\"}"
        },
        "execution_time": 0.007176399230957031,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Document Handle Handling",
        "purpose": "测试使用无效的document_handle参数调用find_and_replace时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "search_term": "hello",
          "replace_term": "hi"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to find and replace text: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Search and Replace Terms",
        "purpose": "验证工具能否正确处理包含特殊字符的搜索词和替换词。",
        "args": {
          "document_handle": "doc004",
          "search_term": "!@#$%^&*()",
          "replace_term": "[specialchars]"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Replace Term",
        "purpose": "测试系统是否能正确处理在replace_term参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc005",
          "search_term": "temp",
          "replace_term": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Long Search and Replace Terms",
        "purpose": "测试工具对极长搜索词和替换词的兼容性与处理能力。",
        "args": {
          "document_handle": "doc006",
          "search_term": "ThisIsAVeryLongSearchTermThatExceedsTypicalLengthLimitsForTestingPurposesOnly",
          "replace_term": "ReplacementTextThatIsAlsoVeryLongAndMayCauseMemoryOrPerformanceIssuesInSomeImplementations"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.006064176559448242,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode Character Replacement",
        "purpose": "验证工具能否正确处理包含Unicode字符（如汉字、日语等）的搜索和替换操作。",
        "args": {
          "document_handle": "doc007",
          "search_term": "汉字",
          "replace_term": "漢字"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证save_document工具能够成功保存一个已存在的文档。",
        "args": {
          "document_handle": "doc001"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved successfully\"}"
        },
        "execution_time": 0.005324125289916992,
        "is_functional_test": true
      },
      {
        "case_name": "Save Multiple Documents Sequentially",
        "purpose": "验证连续多次调用save_document时，每个文档都能被成功保存。",
        "args": {
          "document_handle": "doc002"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved successfully\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious File Path via Handle",
        "purpose": "测试系统是否能正确处理在document_handle中注入的恶意文件路径，防止潜在的安全风险。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.005995988845825195,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "测试使用无效的document_handle调用save_document时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Document Handle",
        "purpose": "测试使用超长document_handle参数调用save_document时，是否能正确处理或返回错误信息。",
        "args": {
          "document_handle": "doc_very_long_handle_that_exceeds_normal_length_and_tests_the_system_limit_for_document_handles_in_windows_environments"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document: Document handle doc_very_long_handle_that_exceeds_normal_length_and_tests_the_system_limit_for_document_handles_in_windows_environments not found\"}"
        },
        "execution_time": 0.0030031204223632812,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Handle",
        "purpose": "测试使用包含特殊字符的document_handle调用save_document时，是否能正确处理或返回错误信息。",
        "args": {
          "document_handle": "doc@#special!chars"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document: Document handle doc@#special!chars not found\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Valid Handle Format",
        "purpose": "验证save_document能否处理符合预期格式（如字母数字）的document_handle。",
        "args": {
          "document_handle": "doc003"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved successfully\"}"
        },
        "execution_time": 0.003833293914794922,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Simulate File Operation Failure",
        "purpose": "模拟文件操作失败的情况（如权限不足），验证save_document是否抛出FileOperationError。",
        "args": {
          "document_handle": "doc004"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved successfully\"}"
        },
        "execution_time": 0.006516695022583008,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Basic Document Open",
        "purpose": "验证open_document工具能够成功打开一个存在的Word文档并返回有效的文档句柄。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File is not a zip file\"}"
        },
        "execution_time": 0.006501436233520508,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document with Special Characters in File Path",
        "purpose": "测试系统是否能正确处理包含特殊字符的文件路径并成功打开文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@write!.txt"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File is not a zip file\"}"
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": true
      },
      {
        "case_name": "Open Non-Existent File",
        "purpose": "测试尝试打开不存在的文件时，是否抛出FileNotFoundError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx\"}"
        },
        "execution_time": 0.007007598876953125,
        "is_functional_test": false
      },
      {
        "case_name": "Open Hidden Malicious File from .git Directory",
        "purpose": "测试系统是否能安全地处理从隐藏目录（如.git）中尝试打开潜在恶意文件的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"document_handle\": \"doc009\"}"
        },
        "execution_time": 0.015527725219726562,
        "is_functional_test": false
      },
      {
        "case_name": "Open File with Long File Name",
        "purpose": "测试系统是否能处理具有极长文件名的文件路径并正常打开文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_exceeds_typical_length_limits_for_testing_purposes_only.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_exceeds_typical_length_limits_for_testing_purposes_only.docx\"}"
        },
        "execution_time": 0.006512641906738281,
        "is_functional_test": false
      },
      {
        "case_name": "Open File with Invalid Extension",
        "purpose": "测试尝试打开非Word文档（如PDF或PNG）时，是否抛出FileOperationError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File is not a zip file\"}"
        },
        "execution_time": 0.006515979766845703,
        "is_functional_test": false
      },
      {
        "case_name": "Open File with Unicode Characters in Path",
        "purpose": "测试系统是否支持在文件路径中使用Unicode字符（如中文、日文等）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\漢字_日本語\\test.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u6f22\\u5b57_\\u65e5\\u672c\\u8a9e\\\\test.docx\"}"
        },
        "execution_time": 0.006508827209472656,
        "is_functional_test": true
      },
      {
        "case_name": "Open Empty File",
        "purpose": "测试尝试打开一个空的Word文档时，是否能正常处理并返回有效句柄。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to open document: File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty.docx\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Document",
        "purpose": "验证save_as_document工具能够成功将文档另存为指定路径。",
        "args": {
          "document_handle": "doc001",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_test_saved.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved as new file\"}"
        },
        "execution_time": 0.013787984848022461,
        "is_functional_test": true
      },
      {
        "case_name": "Save As Document with Invalid Handle",
        "purpose": "测试使用无效的document_handle参数调用save_as_document时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_test_invalid.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document as D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_test_invalid.docx: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Document to Protected Directory",
        "purpose": "测试尝试保存到受保护目录（如.git）是否会触发FileOperationError，防止潜在安全风险。",
        "args": {
          "document_handle": "doc002",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\protected_file.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved as new file\"}"
        },
        "execution_time": 0.02299785614013672,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Document with Long File Path",
        "purpose": "测试save_as_document在处理超长文件路径时的行为，验证边界条件处理能力。",
        "args": {
          "document_handle": "doc003",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved as new file\"}"
        },
        "execution_time": 0.017003774642944336,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Document with Special Characters in Path",
        "purpose": "测试包含特殊字符的file_path是否能被正确处理，确保兼容性和安全性。",
        "args": {
          "document_handle": "doc004",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@save!.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved as new file\"}"
        },
        "execution_time": 0.016509532928466797,
        "is_functional_test": true
      },
      {
        "case_name": "Save As Document to Nonexistent Directory",
        "purpose": "测试尝试将文档保存到不存在的目录是否会触发FileOperationError并返回适当错误信息。",
        "args": {
          "document_handle": "doc005",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir\\output.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document saved as new file\"}"
        },
        "execution_time": 0.016999006271362305,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Document with Empty File Path",
        "purpose": "测试当file_path参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc006",
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document as : [WinError 3] \\u7cfb\\u7edf\\u627e\\u4e0d\\u5230\\u6307\\u5b9a\\u7684\\u8def\\u5f84\\u3002: ''\"}"
        },
        "execution_time": 0.007007122039794922,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Document with Whitespace Only Path",
        "purpose": "测试当file_path参数仅包含空白字符时，是否视为无效输入并抛出FileOperationError。",
        "args": {
          "document_handle": "doc007",
          "file_path": "     "
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to save document as      : [WinError 3] \\u7cfb\\u7edf\\u627e\\u4e0d\\u5230\\u6307\\u5b9a\\u7684\\u8def\\u5f84\\u3002: ''\"}"
        },
        "execution_time": 0.003993034362792969,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证create_document_copy工具能够基于有效文档句柄成功创建副本并返回新的文档句柄。",
        "args": {
          "document_handle": "doc001"
        },
        "response": {
          "result": "{\"new_document_handle\": \"doc010\"}"
        },
        "execution_time": 0.023506879806518555,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document with Unique Handle Format",
        "purpose": "验证create_document_copy是否能处理符合预期格式（如字母数字）的document_handle。",
        "args": {
          "document_handle": "doc007"
        },
        "response": {
          "result": "{\"new_document_handle\": \"doc011\"}"
        },
        "execution_time": 0.022681236267089844,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Multiple Documents Sequentially",
        "purpose": "验证连续多次调用create_document_copy时，每次都能成功创建新副本并返回唯一的新文档句柄。",
        "args": {
          "document_handle": "doc002"
        },
        "response": {
          "result": "{\"new_document_handle\": \"doc012\"}"
        },
        "execution_time": 0.03452801704406738,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious File Path via Hidden Files",
        "purpose": "测试系统是否能防止通过隐藏文件夹中的恶意文件路径进行潜在攻击。",
        "args": {
          "document_handle": ".git/malicious.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to create document copy: Document handle .git/malicious.docx not found\"}"
        },
        "execution_time": 0.007424831390380859,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "验证当提供无效或不存在的document_handle时，create_document_copy是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to create document copy: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.003615140914916992,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - File Operation Failure Simulation",
        "purpose": "模拟文件操作失败情况下的错误处理机制，验证create_document_copy是否抛出FileOperationError。",
        "args": {
          "document_handle": "doc005"
        },
        "response": {
          "result": "{\"new_document_handle\": \"doc013\"}"
        },
        "execution_time": 0.022793292999267578,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Document Handle",
        "purpose": "测试create_document_copy对长文档句柄的兼容性与处理能力。",
        "args": {
          "document_handle": "very_long_document_handle_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to create document copy: Document handle very_long_document_handle_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk not found\"}"
        },
        "execution_time": 0.006804227828979492,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Handle",
        "purpose": "测试系统能否正确处理包含特殊字符的document_handle参数。",
        "args": {
          "document_handle": "special#chars@handle!.docx"
        },
        "response": {
          "result": "{\"error\": \"File operation failed\", \"message\": \"Failed to create document copy: Document handle special#chars@handle!.docx not found\"}"
        },
        "execution_time": 0.0034074783325195312,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Basic Paragraph Deletion",
        "purpose": "验证delete_paragraph工具能够成功删除指定索引的段落。",
        "args": {
          "document_handle": "doc001",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph deleted\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Paragraph Index",
        "purpose": "测试当paragraph_index超出文档实际段落数量时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc002",
          "paragraph_index": 999
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete paragraph: Paragraph index out of range (0-1)\"}"
        },
        "execution_time": 0.00479578971862793,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Negative Index",
        "purpose": "测试使用负数作为paragraph_index参数时的行为是否符合预期（应视为无效索引）。",
        "args": {
          "document_handle": "doc003",
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete paragraph: Paragraph index out of range (0-1)\"}"
        },
        "execution_time": 0.009005308151245117,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Invalid Document Handle",
        "purpose": "测试使用无效的document_handle调用delete_paragraph时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete paragraph: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.004851579666137695,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Empty Document",
        "purpose": "验证尝试从一个没有段落的文档中删除段落是否会正确处理错误。",
        "args": {
          "document_handle": "doc004",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph deleted\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Multiple Paragraphs Sequentially",
        "purpose": "验证连续多次调用delete_paragraph工具时，每个段落都能被正确删除。",
        "args": {
          "document_handle": "doc005",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph deleted\"}"
        },
        "execution_time": 0.007003307342529297,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Delete via Hidden File Path Injection",
        "purpose": "测试系统是否能防止通过在document_handle中注入隐藏文件路径进行潜在攻击。",
        "args": {
          "document_handle": ".git/malicious.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete paragraph: Document handle .git/malicious.docx not found\"}"
        },
        "execution_time": 0.004525899887084961,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Delete Paragraph at Max Index",
        "purpose": "测试删除最后一个段落时是否仍能正常工作。",
        "args": {
          "document_handle": "doc006",
          "paragraph_index": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete paragraph: Paragraph index out of range (0-1)\"}"
        },
        "execution_time": 0.0040051937103271484,
        "is_functional_test": true
      }
    ],
    "delete_text": [
      {
        "case_name": "Basic Text Deletion",
        "purpose": "验证delete_text工具能够成功删除文档中指定的文本并返回正确的删除次数。",
        "args": {
          "document_handle": "doc001",
          "text_to_delete": "This is a test paragraph."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.005006074905395508,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "测试当指定的文本不存在于文档中时，是否返回0次删除结果。",
        "args": {
          "document_handle": "doc002",
          "text_to_delete": "Non-existent text"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.008531808853149414,
        "is_functional_test": true
      },
      {
        "case_name": "Delete with Empty Text Parameter",
        "purpose": "测试当text_to_delete参数为空字符串时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc003",
          "text_to_delete": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete text: Text to delete cannot be empty\"}"
        },
        "execution_time": 0.005018949508666992,
        "is_functional_test": false
      },
      {
        "case_name": "Delete with Invalid Document Handle",
        "purpose": "测试使用无效的document_handle调用delete_text时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "text_to_delete": "Sample text to delete"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete text: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text Containing Special Characters",
        "purpose": "验证delete_text能否正确处理包含特殊字符和Unicode字符的文本。",
        "args": {
          "document_handle": "doc004",
          "text_to_delete": "This is a special paragraph with !@#$%^&*()_+{}[]|\\:;\"',.<>/?`~ and 汉字 and 日本語."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.008175373077392578,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Text",
        "purpose": "测试系统是否能安全处理在text_to_delete参数中注入文件路径或命令的情况。",
        "args": {
          "document_handle": "doc005",
          "text_to_delete": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.0067217350006103516,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Delete Very Long Text",
        "purpose": "测试delete_text对非常长的文本输入的兼容性和性能。",
        "args": {
          "document_handle": "doc006",
          "text_to_delete": "A very long text string repeated multiple times to simulate large input. This is a test for boundary conditions in the delete_text tool. "
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.00951695442199707,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text with Whitespace Only",
        "purpose": "测试当text_to_delete参数仅包含空白字符时，是否视为有效输入并尝试删除。",
        "args": {
          "document_handle": "doc007",
          "text_to_delete": "     "
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete text: Text to delete cannot be empty\"}"
        },
        "execution_time": 0.007109165191650391,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Basic Table Row Addition",
        "purpose": "验证add_table_row工具能够成功向表格中添加一行数据。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "row_data": [
            "Cell1",
            "Cell2",
            "Cell3"
          ]
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row added\"}"
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用add_table_row时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "table_index": 0,
          "row_data": [
            "Cell1",
            "Cell2",
            "Cell3"
          ]
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table row: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0064830780029296875,
        "is_functional_test": false
      },
      {
        "case_name": "Add Empty Row Data",
        "purpose": "测试当row_data为空列表时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc002",
          "table_index": 1,
          "row_data": []
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table row: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Special Characters",
        "purpose": "测试添加包含特殊字符和Unicode字符的行数据，以验证兼容性。",
        "args": {
          "document_handle": "doc003",
          "table_index": 0,
          "row_data": [
            "!@#$%^&*",
            "汉字",
            "日本語",
            "Español"
          ]
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row added\"}"
        },
        "execution_time": 0.0065495967864990234,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "测试当table_index超出文档中存在的表格索引范围时是否抛出ValueError。",
        "args": {
          "document_handle": "doc004",
          "table_index": 999,
          "row_data": [
            "Test",
            "Data"
          ]
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table row: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.003907442092895508,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Row Data",
        "purpose": "测试系统是否能正确处理在row_data中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc005",
          "table_index": 0,
          "row_data": [
            "Normal Text",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
            "Another Cell"
          ]
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row added\"}"
        },
        "execution_time": 0.004338979721069336,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Rows Sequentially",
        "purpose": "验证连续多次调用add_table_row工具时，每行都能被正确添加。",
        "args": {
          "document_handle": "doc006",
          "table_index": 0,
          "row_data": [
            "Row1-Col1",
            "Row1-Col2",
            "Row1-Col3"
          ]
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to add table row: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.004275798797607422,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Add Row with Very Long Data",
        "purpose": "测试添加包含非常长字符串的行数据，以验证边界条件处理能力。",
        "args": {
          "document_handle": "doc007",
          "table_index": 0,
          "row_data": [
            "A very long string that exceeds normal limits and may cause issues when saving the document to disk.",
            "Another very long string field for testing purposes."
          ]
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row added\"}"
        },
        "execution_time": 0.006008625030517578,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Basic Table Row Deletion",
        "purpose": "验证delete_table_row工具能够成功删除指定文档中表格的指定行。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row deleted\"}"
        },
        "execution_time": 0.0048749446868896484,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row from Non-Existent Document Handle",
        "purpose": "测试使用无效的document_handle参数调用delete_table_row时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Out-of-Bounds Table Index",
        "purpose": "测试当table_index超出文档中存在的表格数量时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc001",
          "table_index": 999,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.0053369998931884766,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Out-of-Bounds Row Index",
        "purpose": "测试当row_index超出目标表格行数范围时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "row_index": 999
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Row index out of range (0-1)\"}"
        },
        "execution_time": 0.004378795623779297,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Row in Table",
        "purpose": "验证delete_table_row可以正确删除表格的第一行（边界条件）。",
        "args": {
          "document_handle": "doc002",
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Row deleted\"}"
        },
        "execution_time": 0.007334709167480469,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Path via Document Handle",
        "purpose": "测试系统是否能防止通过document_handle参数注入恶意路径或特殊字符攻击。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.004466056823730469,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row in Document with Special Characters in Handle",
        "purpose": "验证delete_table_row能否处理包含特殊字符的document_handle（如测试create_document生成的句柄格式）。",
        "args": {
          "document_handle": "special#chars@save!.docx",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Document handle special#chars@save!.docx not found\"}"
        },
        "execution_time": 0.0075986385345458984,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row in Document with Very Long Handle",
        "purpose": "测试delete_table_row在处理具有超长文件名/句柄的文档时的行为稳定性。",
        "args": {
          "document_handle": "very_long_filename_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk.docx",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to delete table row: Document handle very_long_filename_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk.docx not found\"}"
        },
        "execution_time": 0.008368730545043945,
        "is_functional_test": true
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Basic Cell Editing",
        "purpose": "验证edit_table_cell工具能够成功编辑表格中指定单元格的内容。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Cell edited\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Empty Content",
        "purpose": "测试当new_content参数为空字符串时，是否抛出错误并返回相应信息。",
        "args": {
          "document_handle": "doc002",
          "table_index": 1,
          "row_index": 1,
          "col_index": 1,
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: New content cannot be empty\"}"
        },
        "execution_time": 0.0054357051849365234,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Invalid Document Handle",
        "purpose": "测试使用无效的document_handle调用edit_table_cell时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Malicious Input"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0065670013427734375,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell at Boundary Indices",
        "purpose": "测试使用最大合法索引值编辑单元格内容（边界条件）。",
        "args": {
          "document_handle": "doc003",
          "table_index": 999,
          "row_index": 999,
          "col_index": 999,
          "new_content": "Edge Case Content"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.0054132938385009766,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Inject File Path via New Content",
        "purpose": "测试系统是否能正确处理在new_content参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc004",
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Injected path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.006001949310302734,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Special Characters in Content",
        "purpose": "测试编辑包含特殊字符和Unicode字符的单元格内容。",
        "args": {
          "document_handle": "doc005",
          "table_index": 0,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Special content: !@#$%^&*()_+{}[]|\\:;\"',.<>/?`~ 汉字 日本語"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Column index out of range (0-0)\"}"
        },
        "execution_time": 0.0037336349487304688,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Whitespace Only Content",
        "purpose": "测试当new_content参数仅包含空白字符时，是否视为无效输入并抛出ValueError。",
        "args": {
          "document_handle": "doc006",
          "table_index": 0,
          "row_index": 2,
          "col_index": 1,
          "new_content": "   "
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Non-Existent Table Index",
        "purpose": "测试使用超出范围的table_index调用edit_table_cell时是否抛出ValueError。",
        "args": {
          "document_handle": "doc007",
          "table_index": -1,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Negative Table Index Test"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit table cell: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.004050254821777344,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证merge_table_cells工具能够成功合并表格中的指定单元格。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Cells merged\"}"
        },
        "execution_time": 0.006032228469848633,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell Range",
        "purpose": "测试当起始和结束行/列相同时，是否仍能正确执行合并操作。",
        "args": {
          "document_handle": "doc002",
          "table_index": 1,
          "start_row": 2,
          "start_col": 2,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.008088350296020508,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Full Table Cells",
        "purpose": "验证工具能够处理整个表格范围的单元格合并操作。",
        "args": {
          "document_handle": "doc003",
          "table_index": 2,
          "start_row": 0,
          "start_col": 0,
          "end_row": 4,
          "end_col": 4
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.007008790969848633,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Document Handle",
        "purpose": "测试系统是否能防止通过document_handle参数注入文件路径或命令。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.004107236862182617,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用merge_table_cells时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0050199031829833984,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Out of Bounds Table Index",
        "purpose": "测试当table_index超出文档中实际表格数量时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc004",
          "table_index": 99,
          "start_row": 0,
          "start_col": 0,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.006946563720703125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Negative Row and Column Indices",
        "purpose": "测试使用负数作为行或列索引时，是否抛出ValueError并正确处理边界条件。",
        "args": {
          "document_handle": "doc005",
          "table_index": 0,
          "start_row": -1,
          "start_col": -1,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Invalid cell range for merging\"}"
        },
        "execution_time": 0.004102468490600586,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Start Greater Than End",
        "purpose": "测试当start_row或start_col大于end_row或end_col时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc006",
          "table_index": 0,
          "start_row": 3,
          "start_col": 3,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to merge table cells: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.006997108459472656,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Basic Table Split",
        "purpose": "验证split_table工具能够成功将表格在指定行索引处拆分为两个表格。",
        "args": {
          "document_handle": "doc001",
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Row index must be between 1 and 1\"}"
        },
        "execution_time": 0.0050220489501953125,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "测试在表格的第一行进行拆分是否能正常工作。",
        "args": {
          "document_handle": "doc002",
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "测试在表格的最后一行进行拆分是否能正常工作。",
        "args": {
          "document_handle": "doc003",
          "table_index": 2,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Table index out of range (0-0)\"}"
        },
        "execution_time": 0.008316516876220703,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious File Path in Document Handle",
        "purpose": "测试系统是否能正确处理包含文件路径的无效document_handle，防止潜在的安全风险。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.005502939224243164,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用split_table时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.006514072418212891,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "测试使用超出范围的table_index调用split_table时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc004",
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Table index out of range (0--1)\"}"
        },
        "execution_time": 0.005996227264404297,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Row Index",
        "purpose": "测试使用超出范围的row_index调用split_table时，是否抛出ValueError。",
        "args": {
          "document_handle": "doc005",
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Row index must be between 1 and 1\"}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Special Characters in Document Handle",
        "purpose": "测试使用包含特殊字符的document_handle是否被正确处理或拒绝。",
        "args": {
          "document_handle": "doc#006@handle!",
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to split table: Document handle doc#006@handle! not found\"}"
        },
        "execution_time": 0.007529735565185547,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Basic Margin Setting",
        "purpose": "验证set_page_margins工具能够成功设置文档的页面边距，使用标准值进行正向测试。",
        "args": {
          "document_handle": "doc001",
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Margins set\"}"
        },
        "execution_time": 0.0038928985595703125,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins with Zero Values",
        "purpose": "测试当所有边距值为0时是否能正常处理（最小合法边界）。",
        "args": {
          "document_handle": "doc002",
          "top": 0.0,
          "bottom": 0.0,
          "left": 0.0,
          "right": 0.0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Margins set\"}"
        },
        "execution_time": 0.0033011436462402344,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins with Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用set_page_margins时是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "top": 1.5,
          "bottom": 1.5,
          "left": 1.5,
          "right": 1.5
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to set page margins: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.004274845123291016,
        "is_functional_test": false
      },
      {
        "case_name": "Set Negative Margins",
        "purpose": "测试传入负数边距值时是否抛出ValueError。",
        "args": {
          "document_handle": "doc003",
          "top": -0.5,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to set page margins: Margins cannot be negative\"}"
        },
        "execution_time": 0.00531315803527832,
        "is_functional_test": false
      },
      {
        "case_name": "Set Large Margins",
        "purpose": "测试设置非常大的边距值（例如超过页面尺寸），以验证系统能否正确处理边界条件。",
        "args": {
          "document_handle": "doc004",
          "top": 100.0,
          "bottom": 100.0,
          "left": 100.0,
          "right": 100.0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Margins set\"}"
        },
        "execution_time": 0.004677295684814453,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Path via Handle",
        "purpose": "测试是否允许通过document_handle注入文件路径或特殊字符，防止潜在安全漏洞。",
        "args": {
          "document_handle": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to set page margins: Document handle D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx not found\"}"
        },
        "execution_time": 0.00598907470703125,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Special Characters in Handle",
        "purpose": "测试包含特殊字符的document_handle是否被正确拒绝或处理。",
        "args": {
          "document_handle": "doc#005",
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to set page margins: Document handle doc#005 not found\"}"
        },
        "execution_time": 0.006512165069580078,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Margin Updates Sequentially",
        "purpose": "验证连续多次调用set_page_margins工具时，每次都能成功更新边距。",
        "args": {
          "document_handle": "doc006",
          "top": 0.5,
          "bottom": 0.75,
          "left": 1.0,
          "right": 1.25
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Margins set\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      }
    ],
    "replace_section": [
      {
        "case_name": "Basic Section Replacement",
        "purpose": "验证replace_section工具能够成功替换文档中指定标题的章节内容。",
        "args": {
          "document_handle": "doc001",
          "heading": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Section replaced\"}"
        },
        "execution_time": 0.0056149959564208984,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Empty Heading",
        "purpose": "测试当heading参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc002",
          "heading": "",
          "new_content": "New content for empty heading test."
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to replace section: Heading cannot be empty\"}"
        },
        "execution_time": 0.0055119991302490234,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Empty New Content",
        "purpose": "测试当new_content参数为空时，是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc003",
          "heading": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to replace section: New content cannot be empty\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section in Invalid Document Handle",
        "purpose": "测试使用无效的document_handle参数调用replace_section时，是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "heading": "Summary",
          "new_content": "Updated summary content."
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to replace section: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.0060062408447265625,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Special Characters in Heading",
        "purpose": "测试包含特殊字符的heading是否能被正确处理。",
        "args": {
          "document_handle": "doc004",
          "heading": "Section@#with!Special$Chars",
          "new_content": "Content for special character heading."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Section not found\"}"
        },
        "execution_time": 0.004197597503662109,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Heading",
        "purpose": "测试系统是否能正确处理在heading参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc005",
          "heading": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "new_content": "Injected file path as heading test content."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Section not found\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Heading Handling",
        "purpose": "测试在heading参数中使用超长字符串时，工具是否能正确处理。",
        "args": {
          "document_handle": "doc006",
          "heading": "ThisIsAVeryLongHeadingNameThatExceedsNormalLengthLimitsAndMayCauseIssuesWhenProcessingTheSectionReplacement",
          "new_content": "Content for long heading test."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Section not found\"}"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section in Document with Unique Handle Format",
        "purpose": "验证replace_section能否处理符合预期格式（如字母数字）的document_handle。",
        "args": {
          "document_handle": "doc007",
          "heading": "Overview",
          "new_content": "Updated overview section content."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Section not found\"}"
        },
        "execution_time": 0.007509946823120117,
        "is_functional_test": true
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Basic Section Edit by Keyword",
        "purpose": "验证edit_section_by_keyword工具能够根据关键字成功编辑文档中的章节内容。",
        "args": {
          "document_handle": "doc001",
          "keyword": "test",
          "new_content": "This is the updated content."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Keyword not found\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Special Characters in New Content",
        "purpose": "测试使用包含特殊字符的新内容更新章节内容时是否正常处理。",
        "args": {
          "document_handle": "doc002",
          "keyword": "sample",
          "new_content": "Updated content with special characters: !@#$%^&*()_+{}[]|\\:;\"',.<>/?`~ and 汉字 日本語"
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Keyword not found\"}"
        },
        "execution_time": 0.004506826400756836,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject File Path via Keyword",
        "purpose": "测试系统是否能正确处理在keyword参数中注入文件路径或命令的情况，防止潜在的安全风险。",
        "args": {
          "document_handle": "doc003",
          "keyword": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious.docx",
          "new_content": "Injected path should not be executed or saved."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Keyword not found\"}"
        },
        "execution_time": 0.003004789352416992,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Handle",
        "purpose": "测试使用无效的document_handle调用edit_section_by_keyword时是否抛出InvalidDocumentHandleError。",
        "args": {
          "document_handle": "invalid_handle",
          "keyword": "test",
          "new_content": "New content for invalid handle test."
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit section by keyword: Document handle invalid_handle not found\"}"
        },
        "execution_time": 0.003500699996948242,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Keyword",
        "purpose": "测试当keyword参数为空时是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc004",
          "keyword": "",
          "new_content": "New content when keyword is empty."
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit section by keyword: Keyword cannot be empty\"}"
        },
        "execution_time": 0.007010459899902344,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty New Content",
        "purpose": "测试当new_content参数为空时是否抛出ValueError并返回相应错误信息。",
        "args": {
          "document_handle": "doc005",
          "keyword": "placeholder",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"message\": \"Failed to edit section by keyword: New content cannot be empty\"}"
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Keyword and Content",
        "purpose": "测试使用超长关键字和新内容进行章节编辑，验证边界条件处理能力。",
        "args": {
          "document_handle": "doc006",
          "keyword": "very_long_keyword_that_exceeds_normal_limit_and_may_cause_issues_when_searching_in_document",
          "new_content": "Very long new content that exceeds normal length limits and may cause performance issues during document editing."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Keyword not found\"}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Nonexistent Keyword Section",
        "purpose": "测试当指定的关键字在文档中不存在时，工具是否优雅地处理该情况（如不修改文档）。",
        "args": {
          "document_handle": "doc007",
          "keyword": "nonexistent_keyword",
          "new_content": "This content should not be applied as keyword does not exist."
        },
        "response": {
          "result": "{\"status\": \"warning\", \"message\": \"Keyword not found\"}"
        },
        "execution_time": 0.0075185298919677734,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 176
}