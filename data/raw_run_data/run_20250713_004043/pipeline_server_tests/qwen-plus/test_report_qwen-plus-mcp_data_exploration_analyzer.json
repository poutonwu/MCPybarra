{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_data_exploration_analyzer",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_data_exploration_analyzer/refined/server.py",
  "timestamp": "2025-07-13T00:53:53.226826",
  "tools": [
    {
      "name": "load_csv",
      "description": "\n    加载 CSV 文件数据并将其存储在内存中，支持多个数据集同时操作。\n\n    Args:\n        file_path: CSV 文件的路径。\n        dataset_name: 用于标识该数据集的名称（可选，默认为文件名）。\n\n    Returns:\n        一个包含状态、消息和数据集名称的 JSON 字符串。\n\n    示例:\n        load_csv(file_path=\"data.csv\", dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "dataset_name": {
            "default": null,
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "load_csvArguments",
        "type": "object"
      }
    },
    {
      "name": "run_script",
      "description": "\n    执行用户提供的 Python 数据分析脚本，支持使用 pandas、numpy、scipy、sklearn 和 statsmodels 等数据分析库，并将处理结果保存到内存中供后续操作。\n\n    Args:\n        script_code: 要执行的 Python 脚本代码。\n        dataset_name: 指定要使用的数据集名称。\n\n    Returns:\n        一个包含状态、脚本输出和处理后数据集名称的 JSON 字符串。\n\n    示例:\n        run_script(script_code=\"df.describe()\", dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "script_code": {
            "title": "Script Code",
            "type": "string"
          },
          "dataset_name": {
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "script_code",
          "dataset_name"
        ],
        "title": "run_scriptArguments",
        "type": "object"
      }
    },
    {
      "name": "generate_exploration_plan",
      "description": "\n    自动分析数据结构并生成数据探索计划，提供深度洞察的数据可视化建议。\n\n    Args:\n        dataset_name: 需要进行探索的数据集名称。\n\n    Returns:\n        一个包含状态、探索计划和可视化建议的 JSON 字符串。\n\n    示例:\n        generate_exploration_plan(dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "dataset_name": {
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "dataset_name"
        ],
        "title": "generate_exploration_planArguments",
        "type": "object"
      }
    },
    {
      "name": "execute_visualization",
      "description": "\n    根据生成的数据探索计划执行数据可视化任务。\n\n    Args:\n        plan_id: 指定要执行的探索计划 ID。\n\n    Returns:\n        一个包含状态和可视化结果的 JSON 字符串。\n\n    示例:\n        execute_visualization(plan_id=\"exploration_plan_0001\")\n    ",
      "args_schema": {
        "properties": {
          "plan_id": {
            "title": "Plan Id",
            "type": "string"
          }
        },
        "required": [
          "plan_id"
        ],
        "title": "execute_visualizationArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "load_csv": [
      {
        "case_name": "加载有效CSV文件并使用默认数据集名称",
        "purpose": "验证工具可以正确加载一个有效的CSV文件，并使用默认的数据集名称（即文件名）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.9530997276306152,
        "is_functional_test": true
      },
      {
        "case_name": "加载有效CSV文件并指定自定义数据集名称",
        "purpose": "验证工具可以正确加载一个有效的CSV文件，并允许用户指定自定义数据集名称。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "dataset_name": "custom_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.4212007522583008,
        "is_functional_test": true
      },
      {
        "case_name": "尝试加载空文件",
        "purpose": "验证工具在加载空文件时的处理能力，应返回成功但数据为空。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.3416898250579834,
        "is_functional_test": true
      },
      {
        "case_name": "尝试加载非CSV文件",
        "purpose": "验证工具是否能优雅地处理非CSV格式文件，如txt文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.43624091148376465,
        "is_functional_test": false
      },
      {
        "case_name": "加载包含特殊字符的文件名",
        "purpose": "验证工具能否正确处理带有特殊字符的文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@saved!.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.20829367637634277,
        "is_functional_test": true
      },
      {
        "case_name": "加载不存在的文件",
        "purpose": "验证工具在文件路径不存在时是否能够返回适当的错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.csv"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 文件 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.csv' 不存在。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 78, in load_csv\\n    raise FileNotFoundError(f\\\"文件 '{file_path}' 不存在。\\\")\\nFileNotFoundError: 文件 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.csv' 不存在。\\n\"}"
        },
        "execution_time": 0.17120027542114258,
        "is_functional_test": false
      },
      {
        "case_name": "加载隐藏或受保护的.git配置文件",
        "purpose": "验证工具是否能够安全处理隐藏或受保护的系统/配置文件，防止敏感信息泄露。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.2158186435699463,
        "is_functional_test": false
      },
      {
        "case_name": "加载非常长的文件名",
        "purpose": "验证工具是否支持加载具有最大长度限制的Windows文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems_saved.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.46454691886901855,
        "is_functional_test": true
      }
    ],
    "generate_exploration_plan": [
      {
        "case_name": "生成有效数据集的探索计划",
        "purpose": "验证工具可以为已加载的有效数据集生成数据探索计划和可视化建议。",
        "args": {
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.18594980239868164,
        "is_functional_test": true
      },
      {
        "case_name": "尝试生成未加载数据集的探索计划",
        "purpose": "验证工具在指定的数据集未被加载时能否返回适当的错误信息。",
        "args": {
          "dataset_name": "nonexistent_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.10533857345581055,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名的数据集生成探索计划",
        "purpose": "验证工具是否能正确处理包含特殊字符的数据集名称并生成探索计划。",
        "args": {
          "dataset_name": "dataset@#with!special*chars"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'dataset@#with!special*chars' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'dataset@#with!special*chars' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.09349799156188965,
        "is_functional_test": true
      },
      {
        "case_name": "尝试访问受保护或隐藏的数据集",
        "purpose": "验证工具是否安全地处理隐藏或受保护的数据集名称，防止敏感信息泄露。",
        "args": {
          "dataset_name": ".git_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 '.git_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 '.git_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.08914327621459961,
        "is_functional_test": false
      },
      {
        "case_name": "生成最大长度数据集名的探索计划",
        "purpose": "验证工具是否支持具有最大长度限制的数据集名称。",
        "args": {
          "dataset_name": "very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.3363349437713623,
        "is_functional_test": true
      },
      {
        "case_name": "在空数据集上生成探索计划",
        "purpose": "验证工具在数据集为空时是否能够生成合理的探索计划，并给出适当提示。",
        "args": {
          "dataset_name": "empty_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'empty_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'empty_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.12842965126037598,
        "is_functional_test": true
      },
      {
        "case_name": "尝试访问系统保留关键字命名的数据集",
        "purpose": "验证工具是否能安全处理系统保留关键字命名的数据集，如 CON、PRN、AUX 等。",
        "args": {
          "dataset_name": "CON"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'CON' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'CON' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.14444375038146973,
        "is_functional_test": false
      },
      {
        "case_name": "生成带 Unicode 字符的数据集探索计划",
        "purpose": "验证工具是否支持国际化字符集（如中文、日文等）作为数据集名称。",
        "args": {
          "dataset_name": "数据集_测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 '数据集_测试' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 '数据集_测试' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.3248484134674072,
        "is_functional_test": true
      }
    ],
    "execute_visualization": [
      {
        "case_name": "执行有效的数据可视化计划",
        "purpose": "验证工具可以基于一个已存在的探索计划ID执行数据可视化任务并返回结果。",
        "args": {
          "plan_id": "exploration_plan_0001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.0049970149993896484,
        "is_functional_test": true
      },
      {
        "case_name": "尝试使用空的探索计划ID执行可视化",
        "purpose": "验证工具在未提供有效 plan_id 时是否能正确处理错误输入。",
        "args": {
          "plan_id": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 'plan_id' 必须是有效的字符串。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 379, in execute_visualization\\n    raise ValueError(\\\"'plan_id' 必须是有效的字符串。\\\")\\nValueError: 'plan_id' 必须是有效的字符串。\\n\"}"
        },
        "execution_time": 0.010002851486206055,
        "is_functional_test": false
      },
      {
        "case_name": "执行不存在的探索计划ID的可视化任务",
        "purpose": "验证工具在指定的 plan_id 不存在时是否返回适当的错误信息。",
        "args": {
          "plan_id": "nonexistent_plan"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'nonexistent_plan' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'nonexistent_plan' 的探索计划。\\n\"}"
        },
        "execution_time": 0.011997699737548828,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名的 plan_id 执行可视化",
        "purpose": "验证工具是否能够安全地处理包含特殊字符的 plan_id 输入。",
        "args": {
          "plan_id": "plan@#with!special*chars"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'plan@#with!special*chars' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'plan@#with!special*chars' 的探索计划。\\n\"}"
        },
        "execution_time": 0.009274721145629883,
        "is_functional_test": false
      },
      {
        "case_name": "使用最大长度的 plan_id 执行可视化",
        "purpose": "验证工具是否支持具有最大长度限制的 plan_id 参数。",
        "args": {
          "plan_id": "very_long_plan_id_that_tests_the_maximum_allowed_length_for_windows_systems"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'very_long_plan_id_that_tests_the_maximum_allowed_length_for_windows_systems' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'very_long_plan_id_that_tests_the_maximum_allowed_length_for_windows_systems' 的探索计划。\\n\"}"
        },
        "execution_time": 0.006997108459472656,
        "is_functional_test": true
      },
      {
        "case_name": "尝试访问系统保留关键字命名的 plan_id",
        "purpose": "验证工具是否能安全处理系统保留关键字（如 CON、PRN）作为 plan_id 的情况。",
        "args": {
          "plan_id": "CON"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'CON' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'CON' 的探索计划。\\n\"}"
        },
        "execution_time": 0.009078025817871094,
        "is_functional_test": false
      },
      {
        "case_name": "使用带 Unicode 字符的 plan_id 执行可视化",
        "purpose": "验证工具是否支持国际化字符集（如中文、日文等）作为 plan_id。",
        "args": {
          "plan_id": "计划_测试_0001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 '计划_测试_0001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 '计划_测试_0001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.006891727447509766,
        "is_functional_test": true
      },
      {
        "case_name": "尝试执行可视化时后端资源不可用",
        "purpose": "验证工具在可视化资源或依赖服务不可用时是否能优雅地返回错误提示。",
        "args": {
          "plan_id": "exploration_plan_0001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.009999513626098633,
        "is_functional_test": false
      }
    ],
    "run_script": [
      {
        "case_name": "执行简单描述性统计脚本",
        "purpose": "验证 run_script 工具能够正确执行一个基本的 pandas 描述性统计分析脚本。",
        "args": {
          "script_code": "df.describe()",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.5218651294708252,
        "is_functional_test": true
      },
      {
        "case_name": "执行带 numpy 计算的新列生成脚本",
        "purpose": "验证 run_script 支持使用 numpy 库进行数据转换并新增列到数据集中。",
        "args": {
          "script_code": "import numpy as np\ndf['new_column'] = np.log(df['existing_column'])",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.3597407341003418,
        "is_functional_test": true
      },
      {
        "case_name": "执行 sklearn 标准化处理脚本",
        "purpose": "验证 run_script 能够使用 sklearn 对数据集进行标准化处理。",
        "args": {
          "script_code": "from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ndf[['col1', 'col2']] = scaler.fit_transform(df[['col1', 'col2']])",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.4251527786254883,
        "is_functional_test": true
      },
      {
        "case_name": "执行包含异常值检测的 scipy 脚本",
        "purpose": "验证 run_script 支持使用 scipy 进行统计异常值检测。",
        "args": {
          "script_code": "from scipy import stats\ndf['z_score'] = stats.zscore(df['numeric_column'])\ndf['outlier'] = df['z_score'].apply(lambda x: True if abs(x) > 3 else False)",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.5968713760375977,
        "is_functional_test": true
      },
      {
        "case_name": "执行 statsmodels 线性回归模型",
        "purpose": "验证 run_script 能够使用 statsmodels 构建线性回归模型并输出结果。",
        "args": {
          "script_code": "import statsmodels.api as sm\nX = sm.add_constant(df['independent_var'])\nmodel = sm.OLS(df['dependent_var'], X).fit()\nprint(model.summary())",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.09257340431213379,
        "is_functional_test": true
      },
      {
        "case_name": "尝试执行非法系统命令注入脚本",
        "purpose": "验证 run_script 是否安全地阻止了系统命令注入尝试。",
        "args": {
          "script_code": "import os\nos.system('rm -rf /')",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.10175442695617676,
        "is_functional_test": false
      },
      {
        "case_name": "执行包含敏感文件读取尝试的脚本",
        "purpose": "验证 run_script 是否能有效防止对敏感或隐藏文件的访问。",
        "args": {
          "script_code": "with open('D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config', 'r') as f:\n    print(f.read())",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.1981360912322998,
        "is_functional_test": false
      },
      {
        "case_name": "尝试执行无效语法的脚本",
        "purpose": "验证 run_script 在脚本语法错误时是否返回适当的错误信息。",
        "args": {
          "script_code": "df.describe(unknown_param=True)",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'my_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.12348341941833496,
        "is_functional_test": false
      },
      {
        "case_name": "在不存在的数据集上运行脚本",
        "purpose": "验证 run_script 在指定数据集不存在时能否返回清晰的错误提示。",
        "args": {
          "script_code": "df.head()",
          "dataset_name": "nonexistent_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.08804440498352051,
        "is_functional_test": false
      },
      {
        "case_name": "执行空字符串脚本",
        "purpose": "验证 run_script 是否能优雅处理空脚本输入。",
        "args": {
          "script_code": "",
          "dataset_name": "my_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 'script_code' 不能为空。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 144, in run_script\\n    raise ValueError(\\\"'script_code' 不能为空。\\\")\\nValueError: 'script_code' 不能为空。\\n\"}"
        },
        "execution_time": 0.16259312629699707,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名的数据集执行脚本",
        "purpose": "验证 run_script 是否支持带有特殊字符的数据集名称。",
        "args": {
          "script_code": "df.shape",
          "dataset_name": "dataset@#with!special*chars"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'dataset@#with!special*chars' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'dataset@#with!special*chars' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.1923980712890625,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大长度数据集名执行脚本",
        "purpose": "验证 run_script 是否支持具有最大 Windows 文件名长度限制的数据集名称。",
        "args": {
          "script_code": "df.columns.tolist()",
          "dataset_name": "very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'very_long_dataset_name_that_tests_the_maximum_allowed_length_for_windows_systems' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.09204983711242676,
        "is_functional_test": true
      },
      {
        "case_name": "在 Unicode 命名数据集上执行脚本",
        "purpose": "验证 run_script 是否支持国际化字符（如中文）作为数据集名称。",
        "args": {
          "script_code": "df.info()",
          "dataset_name": "数据集_测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 '数据集_测试' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 '数据集_测试' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.08454370498657227,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 37
}