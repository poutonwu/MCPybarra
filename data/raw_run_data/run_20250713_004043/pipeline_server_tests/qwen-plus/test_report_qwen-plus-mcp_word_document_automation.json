{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-13T00:50:26.934195",
  "tools": [
    {
      "name": "create_document",
      "description": "Creates a new Word document.\n\n    Args:\n        file_name (str): The name of the file to be created.\n\n    Returns:\n        A confirmation message indicating the document was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_name": {
            "title": "File Name",
            "type": "string"
          }
        },
        "required": [
          "file_name"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Opens an existing Word document.\n\n    Args:\n        file_path (str): The path to the document file.\n\n    Returns:\n        A confirmation message indicating the document was opened successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Saves the currently open Word document.\n\n    Args:\n        file_path (str): The path where the document should be saved.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Saves the currently open Word document with a new name or in a different location.\n\n    Args:\n        new_file_path (str): The new file path for saving the document.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "new_file_path": {
            "title": "New File Path",
            "type": "string"
          }
        },
        "required": [
          "new_file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Creates a copy of the currently open Word document.\n\n    Args:\n        copy_file_path (str): The file path where the copy should be saved.\n\n    Returns:\n        A confirmation message indicating the document copy was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "copy_file_path": {
            "title": "Copy File Path",
            "type": "string"
          }
        },
        "required": [
          "copy_file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Adds a paragraph to the document.\n\n    Args:\n        text (str): The text content of the paragraph.\n\n    Returns:\n        A confirmation message indicating the paragraph was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Adds a heading to the document.\n\n    Args:\n        text (str): The text content of the heading.\n        level (int): The level of the heading (e.g., 1 for main heading, 2 for subheading).\n\n    Returns:\n        A confirmation message indicating the heading was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Adds a table to the document.\n\n    Args:\n        rows (int): The number of rows in the table.\n        cols (int): The number of columns in the table.\n\n    Returns:\n        A confirmation message indicating the table was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Adds a page break to the document.\n\n    Returns:\n        A confirmation message indicating the page break was added successfully.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieves metadata about the document, such as the number of pages, paragraphs, and tables.\n\n    Returns:\n        A JSON string containing metadata about the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Searches for specific text within the document.\n\n    Args:\n        query (str): The text to search for.\n\n    Returns:\n        A JSON string of locations where the text was found.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Finds specific text in the document and replaces it with new text.\n\n    Args:\n        old_text (str): The text to find.\n        new_text (str): The text to replace it with.\n\n    Returns:\n        A confirmation message indicating the replacement was successful.\n    ",
      "args_schema": {
        "properties": {
          "old_text": {
            "title": "Old Text",
            "type": "string"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "old_text",
          "new_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Deletes a specified paragraph from the document.\n\n    Args:\n        paragraph_index (int): The index of the paragraph to delete.\n\n    Returns:\n        A confirmation message indicating the paragraph was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Deletes all instances of specified text from the document.\n\n    Args:\n        text_to_delete (str): The text to delete.\n\n    Returns:\n        A confirmation message indicating the text was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "text_to_delete": {
            "title": "Text To Delete",
            "type": "string"
          }
        },
        "required": [
          "text_to_delete"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Adds a new row to an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n\n    Returns:\n        A confirmation message indicating the row was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Deletes a row from an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row to delete.\n\n    Returns:\n        A confirmation message indicating the row was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edits the content of a specific cell in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row.\n        col_index (int): The index of the column.\n        new_content (str): The new content for the cell.\n\n    Returns:\n        A confirmation message indicating the cell was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merges cells in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        start_row (int): The starting row index for merging.\n        start_col (int): The starting column index for merging.\n        end_row (int): The ending row index for merging.\n        end_col (int): The ending column index for merging.\n\n    Returns:\n        A confirmation message indicating the cells were merged successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_col",
          "end_row",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Splits a table into two separate tables at a specified row.\n\n    Args:\n        table_index (int): The index of the table.\n        split_row_index (int): The row index where the split should occur.\n\n    Returns:\n        A confirmation message indicating the table was split successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "split_row_index": {
            "title": "Split Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "split_row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Sets the page margins for the document.\n\n    Args:\n        top (float): The top margin in inches.\n        bottom (float): The bottom margin in inches.\n        left (float): The left margin in inches.\n        right (float): The right margin in inches.\n\n    Returns:\n        A confirmation message indicating the margins were set successfully.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          }
        },
        "required": [
          "top",
          "bottom",
          "left",
          "right"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replaces the content of a section based on its title.\n\n    Args:\n        section_title (str): The title of the section to replace.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was replaced successfully.\n    ",
      "args_schema": {
        "properties": {
          "section_title": {
            "title": "Section Title",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "section_title",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edits a section of the document based on a keyword.\n\n    Args:\n        keyword (str): The keyword to locate the section.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create Document with Default File Name",
        "purpose": "验证工具能否使用默认文件名成功创建一个新的Word文档。",
        "args": {
          "file_name": "new_document.docx"
        },
        "response": {
          "result": "Document 'new_document.docx' created successfully."
        },
        "execution_time": 0.012000799179077148,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Custom File Name",
        "purpose": "验证工具是否能够使用指定的文件名成功创建一个Word文档。",
        "args": {
          "file_name": "custom_named_document.docx"
        },
        "response": {
          "result": "Document 'custom_named_document.docx' created successfully."
        },
        "execution_time": 0.017615795135498047,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document in Existing Directory",
        "purpose": "验证工具是否能在现有目录中成功创建文档。",
        "args": {
          "file_name": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\created_document.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\created_document.docx' created successfully."
        },
        "execution_time": 0.014008522033691406,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Special Characters in File Name",
        "purpose": "测试工具是否能处理包含特殊字符的文件名来创建文档。",
        "args": {
          "file_name": "special#chars@document!.docx"
        },
        "response": {
          "result": "Document 'special#chars@document!.docx' created successfully."
        },
        "execution_time": 0.018012523651123047,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document with Empty File Name",
        "purpose": "验证工具在未提供有效文件名时是否能正确处理错误。",
        "args": {
          "file_name": ""
        },
        "response": {
          "result": "Document '.docx' created successfully."
        },
        "execution_time": 0.014528036117553711,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Create Document in Non-Writable Directory",
        "purpose": "测试工具在尝试写入受保护或不可写目录时的行为。",
        "args": {
          "file_name": "C:\\Windows\\system32\\test_restricted.docx"
        },
        "response": {
          "result": "Document 'C:\\Windows\\system32\\test_restricted.docx' created successfully."
        },
        "execution_time": 0.01663041114807129,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Maximum Length File Name",
        "purpose": "验证工具是否支持长文件名（接近系统限制）。",
        "args": {
          "file_name": "very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx"
        },
        "response": {
          "result": "Document 'very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx' created successfully."
        },
        "execution_time": 0.014361858367919922,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Create Document in Hidden .git Directory",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中创建文档，防止潜在安全风险。",
        "args": {
          "file_name": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_created.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_created.docx' created successfully."
        },
        "execution_time": 0.014002799987792969,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Open Document with Valid File Path",
        "purpose": "验证工具能否成功打开指定的有效Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_document.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_document.docx' opened successfully."
        },
        "execution_time": 0.015999794006347656,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document in Existing Directory",
        "purpose": "验证工具是否能在现有目录中成功打开文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx' opened successfully."
        },
        "execution_time": 0.04424858093261719,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document with Special Characters in File Path",
        "purpose": "测试工具是否能处理包含特殊字符的文件路径来打开文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.docx' does not exist."
        },
        "execution_time": 0.008516788482666016,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Open Document in Sensitive .git Directory",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中打开文档，防止潜在安全风险。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx' opened successfully."
        },
        "execution_time": 0.012999773025512695,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Open Non-Existent Document",
        "purpose": "验证工具在尝试打开不存在的文档时是否能正确处理错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx' does not exist."
        },
        "execution_time": 0.003398418426513672,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Open Document Without Providing File Path",
        "purpose": "验证工具在未提供文件路径参数时是否能正确处理错误。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "File '' does not exist."
        },
        "execution_time": 0.0033791065216064453,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Open Document with Maximum Length File Path",
        "purpose": "验证工具是否支持长文件路径（接近系统限制）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx' does not exist."
        },
        "execution_time": 0.005009889602661133,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Traverse Directory Using Relative Path",
        "purpose": "测试工具是否阻止通过相对路径进行目录遍历以防止安全漏洞。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\metadata_document.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\metadata_document.docx' does not exist."
        },
        "execution_time": 0.004993438720703125,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph to Document with Valid Text",
        "purpose": "验证工具能否在文档中成功添加一段有效文本。",
        "args": {
          "text": "This is a valid paragraph of text to be added to the document."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.004178285598754883,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "测试工具在传入空文本时是否能正确处理并添加一个空段落。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005224704742431641,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的文本内容。",
        "args": {
          "text": "This paragraph contains special characters like #, @, and !."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.010404586791992188,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Maximum Length Text",
        "purpose": "验证工具是否支持添加接近系统限制长度的文本段落。",
        "args": {
          "text": "A very long paragraph that tests the maximum allowed length for a paragraph in the document. This is a stress test string designed to push the boundaries of what the system can handle without failing or truncating the content. It should be significantly long to ensure the tool handles large inputs gracefully."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Content via Paragraph",
        "purpose": "检查工具是否阻止通过段落文本注入潜在恶意内容（如脚本标签）。",
        "args": {
          "text": "<script>alert('malicious code');</script>"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005288362503051758,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Add Paragraph with Null Text Input",
        "purpose": "验证工具在未提供文本参数（null）时是否能正确处理错误。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006676197052001953,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Non-String Input (e.g., Number)",
        "purpose": "测试工具是否能正确处理非字符串类型的输入（如数字）。",
        "args": {
          "text": "1234567890"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Unicode and Multilingual Text",
        "purpose": "验证工具是否支持添加包含Unicode字符和多语言文本的段落。",
        "args": {
          "text": "这是一个中文段落。This is an English sentence. Это предложение на русском языке。"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.007465362548828125,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Valid Text and Level 1",
        "purpose": "验证工具是否能使用默认创建的文档添加一级标题。",
        "args": {
          "text": "Main Title",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Valid Text and Level 2",
        "purpose": "验证工具是否能使用默认文档添加二级子标题。",
        "args": {
          "text": "Subheading",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.008998870849609375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading in Document with Special Characters in Text",
        "purpose": "测试工具是否能正确处理包含特殊字符的标题文本。",
        "args": {
          "text": "Special#Chars@Heading!",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0070018768310546875,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Add Malicious Content in Hidden .git Directory Document",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中的文档中添加标题，防止潜在安全风险。",
        "args": {
          "text": "Hidden Git File Heading",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Add Empty Heading Text",
        "purpose": "验证工具在未提供有效标题文本时是否能正确处理错误。",
        "args": {
          "text": "",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.007514238357543945,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Add Heading with Invalid Level",
        "purpose": "验证工具在提供无效标题层级（如0或负数）时是否能正确处理错误。",
        "args": {
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "Heading level must be between 1 and 9."
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Heading with Maximum Length Text",
        "purpose": "验证工具是否支持接近系统限制长度的标题文本。",
        "args": {
          "text": "This is a very long heading text that tests the maximum allowed length for document headings in the system. It should be accepted if the system supports long strings.",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject HTML or Script via Heading Text",
        "purpose": "测试工具是否阻止通过标题注入HTML或脚本内容以防止XSS或其他攻击。",
        "args": {
          "text": "<script>alert('xss')</script>",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Rows and Columns",
        "purpose": "验证工具能否使用默认行数和列数成功添加表格。",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Custom Rows and Columns",
        "purpose": "验证工具是否能够使用指定的行数和列数成功添加表格。",
        "args": {
          "rows": 5,
          "cols": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Allowed Dimensions",
        "purpose": "测试工具在最小允许尺寸（1x1）下是否能正确添加表格。",
        "args": {
          "rows": 1,
          "cols": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.006193876266479492,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Allowed Dimensions",
        "purpose": "验证工具是否支持最大允许的表格尺寸（例如100x100）。",
        "args": {
          "rows": 100,
          "cols": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.02441263198852539,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Add Table in Sensitive .git Directory Document",
        "purpose": "检查工具是否阻止向位于敏感隐藏目录（如.git）中的文档添加表格，防止潜在安全风险。",
        "args": {
          "rows": 3,
          "cols": 4
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.007311105728149414,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Add Table with Zero Rows",
        "purpose": "验证工具在尝试添加零行的表格时是否能正确处理错误。",
        "args": {
          "rows": 0,
          "cols": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.005953073501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Add Table with Zero Columns",
        "purpose": "验证工具在尝试添加零列的表格时是否能正确处理错误。",
        "args": {
          "rows": 3,
          "cols": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0027441978454589844,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Table with Negative Rows",
        "purpose": "测试工具是否能正确拒绝负值行数的输入。",
        "args": {
          "rows": -1,
          "cols": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.006011486053466797,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Opened Document",
        "purpose": "验证工具能否在已打开的文档中成功添加分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.18563270568847656,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Opening Document",
        "purpose": "验证在未打开任何文档的情况下尝试添加分页符时，工具是否能正确处理错误。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.14051461219787598,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Sensitive .git Directory Document",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中的文档添加分页符，防止潜在安全风险。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.2723429203033447,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Document with Special Characters",
        "purpose": "测试工具是否能在包含特殊字符的文件路径的文档中成功添加分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.16364789009094238,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Empty Document",
        "purpose": "验证工具能否在空文档中成功添加分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.16594195365905762,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break During Concurrent Document Access",
        "purpose": "测试在并发访问文档时添加分页符的行为，确保不会导致冲突或数据损坏。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.1544358730316162,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break with Maximum Content Before",
        "purpose": "验证在文档内容接近最大容量时添加分页符是否仍然有效。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.1549968719482422,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Add Page Break via Directory Traversal Path",
        "purpose": "测试工具是否阻止通过相对路径进行目录遍历操作来添加分页符以防止安全漏洞。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.2336585521697998,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document to Default Path",
        "purpose": "验证工具能否将当前打开的Word文档保存到默认路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx'."
        },
        "execution_time": 0.05454230308532715,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Custom Path",
        "purpose": "验证工具是否能够将当前打开的文档保存到指定的自定义路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\custom_saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\custom_saved_document.docx'."
        },
        "execution_time": 0.038668155670166016,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in File Path",
        "purpose": "测试工具是否能处理包含特殊字符的文件路径进行文档保存。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@saved!.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@saved!.docx'."
        },
        "execution_time": 0.03516364097595215,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Save Document in Sensitive .git Directory",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中保存文档，防止潜在安全风险。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_saved.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_saved.docx'."
        },
        "execution_time": 0.03480792045593262,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Save Without Providing File Path",
        "purpose": "验证工具在未提供文件路径参数时是否能正确处理错误。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.011657953262329102,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Save Document in Non-Writable Directory",
        "purpose": "测试工具在尝试写入受保护或不可写目录时的行为。",
        "args": {
          "file_path": "C:\\Windows\\system32\\restricted_save.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\restricted_save.docx'"
        },
        "execution_time": 0.051163673400878906,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Save Document with Maximum Length File Path",
        "purpose": "验证工具是否支持长文件路径（接近系统限制）进行保存。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems_saved.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems_saved.docx'."
        },
        "execution_time": 0.08986210823059082,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Traverse Directory Using Relative Path for Save",
        "purpose": "测试工具是否阻止通过相对路径进行目录遍历以防止安全漏洞。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\malicious_traversal_save.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\testFiles\\\\malicious_traversal_save.docx'"
        },
        "execution_time": 0.014781713485717773,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document with Default File Name",
        "purpose": "验证工具是否能使用默认文件名成功保存当前打开的Word文档。",
        "args": {
          "new_file_path": "saved_document.docx"
        },
        "response": {
          "result": "Document saved as 'saved_document.docx' successfully."
        },
        "execution_time": 0.032120704650878906,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Custom File Name",
        "purpose": "验证工具是否能使用指定的自定义文件名保存当前打开的Word文档。",
        "args": {
          "new_file_path": "custom_saved_document.docx"
        },
        "response": {
          "result": "Document saved as 'custom_saved_document.docx' successfully."
        },
        "execution_time": 0.032003164291381836,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Existing Directory",
        "purpose": "验证工具是否能将文档保存到现有目录中。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_existing_dir.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_existing_dir.docx' successfully."
        },
        "execution_time": 0.03753232955932617,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in File Name",
        "purpose": "测试工具是否能处理包含特殊字符的文件名进行保存操作。",
        "args": {
          "new_file_path": "special#chars@saved!.docx"
        },
        "response": {
          "result": "Document saved as 'special#chars@saved!.docx' successfully."
        },
        "execution_time": 0.032850027084350586,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Save Document into Sensitive .git Directory",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中保存文档，防止潜在安全风险。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_saved.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_saved.docx' successfully."
        },
        "execution_time": 0.03188633918762207,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Save Document with Empty File Path",
        "purpose": "验证工具在未提供有效文件路径时是否能正确处理错误。",
        "args": {
          "new_file_path": ""
        },
        "response": {
          "result": "Document saved as '.docx' successfully."
        },
        "execution_time": 0.03496694564819336,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Save Document with Maximum Length File Name",
        "purpose": "验证工具是否支持长文件名（接近系统限制）进行保存。",
        "args": {
          "new_file_path": "very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems_saved.docx"
        },
        "response": {
          "result": "Document saved as 'very_long_file_name_that_tests_the_maximum_allowed_length_for_windows_systems_saved.docx' successfully."
        },
        "execution_time": 0.03199601173400879,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Traverse Directory Using Relative Path",
        "purpose": "测试工具是否阻止通过相对路径进行目录遍历以防止安全漏洞。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\malicious_traversal.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\testFiles\\\\malicious_traversal.docx'"
        },
        "execution_time": 0.0063762664794921875,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Copy Open Document to Valid Path",
        "purpose": "验证工具能否将当前打开的文档成功复制到一个有效的指定路径。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx' successfully."
        },
        "execution_time": 0.02451300621032715,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Open Document with Special Characters in Path",
        "purpose": "测试工具是否能处理包含特殊字符的目标文件路径来复制文档。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.docx' successfully."
        },
        "execution_time": 0.024415254592895508,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Copy Document into .git Directory",
        "purpose": "检查工具是否阻止在敏感隐藏目录（如.git）中创建副本，防止潜在安全风险。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_copy.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_copy.docx' successfully."
        },
        "execution_time": 0.028159141540527344,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Copy to Non-Writable Directory",
        "purpose": "测试工具在尝试写入受保护或不可写目录时的行为。",
        "args": {
          "copy_file_path": "C:\\Windows\\system32\\restricted_copy.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\restricted_copy.docx'"
        },
        "execution_time": 0.007005453109741211,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Copy Without Providing File Path",
        "purpose": "验证工具在未提供目标文件路径参数时是否能正确处理错误。",
        "args": {
          "copy_file_path": ""
        },
        "response": {
          "result": "Document copy created at '.docx' successfully."
        },
        "execution_time": 0.031052350997924805,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Copy Document with Maximum Length File Path",
        "purpose": "验证工具是否支持长目标文件路径（接近系统限制）。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_copied_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_copied_file_name_that_tests_the_maximum_allowed_length_for_windows_systems.docx' successfully."
        },
        "execution_time": 0.030223369598388672,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Traverse Directory Using Relative Path in Copy",
        "purpose": "测试工具是否阻止通过相对路径进行目录遍历以防止安全漏洞。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\malicious_traversal_copy.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\testFiles\\\\malicious_traversal_copy.docx'"
        },
        "execution_time": 0.0050771236419677734,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Existing File",
        "purpose": "验证工具在目标路径已存在文件时是否能正确覆盖或处理冲突。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt.docx' successfully."
        },
        "execution_time": 0.031500816345214844,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证get_document_info能否正确获取一个有效文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.23361635208129883,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Retrieve Info from .git Directory Document",
        "purpose": "检查工具是否允许从敏感隐藏目录（如.git）中读取文档元数据，防止潜在安全风险。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.22388076782226562,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - No Opened Document",
        "purpose": "验证在未打开任何文档的情况下调用get_document_info时是否能正确处理错误。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.2646503448486328,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Get Info for Document with Maximum Metadata",
        "purpose": "验证工具能否处理包含大量段落、表格和页面数的文档元数据。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.5085797309875488,
        "is_functional_test": true
      },
      {
        "case_name": "Get Info After Document Creation",
        "purpose": "验证使用create_document创建文档后，get_document_info能否正确返回默认元数据。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.15827226638793945,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Retrieve Info Using Path Traversal",
        "purpose": "测试工具是否阻止通过路径遍历攻击获取其他目录文档的元数据以防止安全漏洞。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.2044692039489746,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Corrupted Document",
        "purpose": "验证工具在尝试获取损坏文档元数据时是否能正确处理错误。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.2766909599304199,
        "is_functional_test": false
      },
      {
        "case_name": "Get Info for Special Character Document",
        "purpose": "验证工具能否正确获取包含特殊字符文件名的文档的元数据。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 23, \"tables\": 5}"
        },
        "execution_time": 0.2628026008605957,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search in Valid Document",
        "purpose": "验证工具能否在有效文档中搜索指定文本并返回正确结果。",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "[\"Paragraph 5\", \"Paragraph 14\"]"
        },
        "execution_time": 0.7430858612060547,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-Existent Text in Document",
        "purpose": "验证工具在文档中搜索不存在的文本时是否能正确返回空结果。",
        "args": {
          "query": "nonexistent_text"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.7992122173309326,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Search in Sensitive .git Directory File",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中的文件中搜索文本，防止潜在安全风险。",
        "args": {
          "query": "malicious"
        },
        "response": {
          "result": "[\"Paragraph 6\"]"
        },
        "execution_time": 0.6701061725616455,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Query Input",
        "purpose": "验证工具在未提供搜索文本参数时是否能正确处理错误。",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[\"Paragraph 1\", \"Paragraph 2\", \"Paragraph 3\", \"Paragraph 4\", \"Paragraph 5\", \"Paragraph 6\", \"Paragraph 7\", \"Paragraph 8\", \"Paragraph 9\", \"Paragraph 10\", \"Paragraph 11\", \"Paragraph 12\", \"Paragraph 13\", \"Paragraph 14\", \"Paragraph 15\", \"Paragraph 16\", \"Paragraph 17\", \"Paragraph 18\", \"Paragraph 19\", \"Paragraph 20\", \"Paragraph 21\", \"Paragraph 22\", \"Paragraph 23\", \"Table 1, Row 1, Cell 1\", \"Table 1, Row 1, Cell 2\", \"Table 1, Row 2, Cell 1\", \"Table 1, Row 2, Cell 2\", \"Table 2, Row 1, Cell 1\", \"Table 2, Row 1, Cell 2\", \"Table 2, Row 1, Cell 3\", \"Table 2, Row 2, Cell 1\", \"Table 2, Row 2, Cell 2\", \"Table 2, Row 2, Cell 3\", \"Table 2, Row 3, Cell 1\", \"Table 2, Row 3, Cell 2\", \"Table 2, Row 3, Cell 3\", \"Table 2, Row 4, Cell 1\", \"Table 2, Row 4, Cell 2\", \"Table 2, Row 4, Cell 3\", \"Table 2, Row 5, Cell 1\", \"Table 2, Row 5, Cell 2\", \"Table 2, Row 5, Cell 3\", \"Table 3, Row 1, Cell 1\", \"Table 4, Row 1, Cell 1\", \"Table 4, Row 1, Cell 2\", \"Table 4, Row 1, Cell 3\", \"Table 4, Row 1, Cell 4\", \"Table 4, Row 1, Cell 5\", \"Table 4, Row 1, Cell 6\", \"Table 4, Row 1, Cell 7\", \"Table 4, Row 1, Cell 8\", \"Table 4, Row 1, Cell 9\", \"Table 4, Row 1, Cell 10\", \"Table 4, Row 1, Cell 11\", \"Table 4, Row 1, Cell 12\", \"Table 4, Row 1, Cell 13\", \"Table 4, Row 1, Cell 14\", \"Table 4, Row 1, Cell 15\", \"Table 4, Row 1, Cell 16\", \"Table 4, Row 1, Cell 17\", \"Table 4, Row 1, Cell 18\", \"Table 4, Row 1, Cell 19\", \"Table 4, Row 1, Cell 20\", \"Table 4, Row 1, Cell 21\", \"Table 4, Row 1, Cell 22\", \"Table 4, Row 1, Cell 23\", \"Table 4...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计279591字符，剩余278091字符"
        },
        "execution_time": 0.727102518081665,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Search with Maximum Length Query",
        "purpose": "验证工具是否支持使用接近系统限制长度的文本进行搜索。",
        "args": {
          "query": "a_very_long_search_query_that_tests_the_maximum_allowed_length_for_windows_systems_and_potentially_exceeds_common_buffer_limits_to_check_for_overflow_vulnerabilities"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.8500227928161621,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Search Query",
        "purpose": "测试工具是否能正确处理包含特殊字符的搜索查询。",
        "args": {
          "query": "#special@chars!test"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.8432331085205078,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Search for Malicious Code Pattern",
        "purpose": "验证工具是否能检测或阻止可能的恶意代码模式搜索尝试。",
        "args": {
          "query": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "[\"Paragraph 15\"]"
        },
        "execution_time": 1.0174329280853271,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Previously Created Document",
        "purpose": "验证工具能否在之前创建的文档中成功搜索到指定文本。",
        "args": {
          "query": "created_document"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.7619531154632568,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace in Existing Document",
        "purpose": "验证工具能否在现有文档中正确执行查找和替换操作。",
        "args": {
          "old_text": "test",
          "new_text": "example"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.4061601161956787,
        "is_functional_test": true
      },
      {
        "case_name": "Find and Replace with Exact Match",
        "purpose": "测试工具是否能准确匹配并替换完全相同的文本内容。",
        "args": {
          "old_text": "exact_match",
          "new_text": "replaced_exact"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.4357788562774658,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Text Not Present in Document",
        "purpose": "验证当要查找的文本不存在时，工具是否不会进行任何更改。",
        "args": {
          "old_text": "nonexistent_text",
          "new_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.42034220695495605,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Code via Replacement",
        "purpose": "检查工具是否阻止通过替换文本注入恶意代码（如脚本标签）。",
        "args": {
          "old_text": "<script>alert('xss')</script>",
          "new_text": "safe_replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.4322507381439209,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Old Text Input",
        "purpose": "验证工具在未提供旧文本参数时是否能正确处理错误。",
        "args": {
          "old_text": "",
          "new_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.479837417602539,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Replace Maximum Length Text",
        "purpose": "测试工具是否支持长字符串的查找与替换（接近系统限制）。",
        "args": {
          "old_text": "a_very_long_string_that_tests_the_maximum_allowed_length_for_windows_systems",
          "new_text": "shortened_version"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.6677248477935791,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters Handling in Find and Replace",
        "purpose": "验证工具是否能正确处理包含特殊字符的查找和替换文本。",
        "args": {
          "old_text": "#special@chars!",
          "new_text": "replaced#special@chars!"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.6953659057617188,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - File Path Traversal Attempt in Replacement",
        "purpose": "防止路径遍历攻击，验证工具是否阻止在替换过程中使用相对路径尝试访问敏感目录。",
        "args": {
          "old_text": "../etc/passwd",
          "new_text": "blocked_access"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.6607680320739746,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete First Paragraph from Document",
        "purpose": "验证工具能否成功删除文档中第一个段落。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.005952358245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph from Document",
        "purpose": "验证工具能否成功删除文档中最后一个段落。",
        "args": {
          "paragraph_index": 4
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Middle Paragraph from Document",
        "purpose": "验证工具能否成功删除文档中间某个段落。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Delete Sensitive Hidden Content via Paragraph Index",
        "purpose": "测试是否可以通过段落索引间接访问或操作隐藏/敏感内容，防止信息泄露风险。",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Delete Non-Existent Paragraph (Negative Index)",
        "purpose": "验证工具在尝试删除负数索引的段落时是否能正确处理错误。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Delete Out-of-Bounds Paragraph",
        "purpose": "验证工具在尝试删除超出文档实际段落数量的索引时是否能正确处理错误。",
        "args": {
          "paragraph_index": 100
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.007005453109741211,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete Single Paragraph in Minimal Document",
        "purpose": "验证工具在仅有一个段落的最小文档中删除段落时的行为。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Paragraph with Maximum Allowed Index",
        "purpose": "验证工具在接近系统最大整数值作为段落索引时的行为。",
        "args": {
          "paragraph_index": 2147483647
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Text Successfully",
        "purpose": "验证工具能否成功删除文档中指定的文本内容。",
        "args": {
          "text_to_delete": "sample text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.169640064239502,
        "is_functional_test": true
      },
      {
        "case_name": "Delete All Instances of Text",
        "purpose": "验证工具是否能删除文档中所有匹配的文本实例，而只删除第一个或部分。",
        "args": {
          "text_to_delete": "repeat text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.1269309520721436,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "验证工具在尝试删除不存在于文档中的文本时的行为。",
        "args": {
          "text_to_delete": "nonexistent text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.0530991554260254,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text with Special Characters",
        "purpose": "测试工具是否能正确处理包含特殊字符的文本删除操作。",
        "args": {
          "text_to_delete": "#@!special_chars_text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.0264191627502441,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Delete Sensitive Content in Hidden .git File",
        "purpose": "检查工具是否允许从敏感隐藏目录（如.git）中的文件删除特定文本，防止潜在安全风险。",
        "args": {
          "text_to_delete": "malicious content"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.0390796661376953,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Text Input",
        "purpose": "验证工具在未提供要删除的文本参数时是否能正确处理错误。",
        "args": {
          "text_to_delete": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 2.8985183238983154,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete Maximum Length Text",
        "purpose": "验证工具是否支持删除接近系统限制长度的文本内容。",
        "args": {
          "text_to_delete": "very_long_text_that_tests_the_maximum_allowed_length_for_windows_systems_1234567890_abcdefghijklmnopqrstuvwxyz"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.0911810398101807,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Unicode and Multilingual Text",
        "purpose": "测试工具是否支持删除包含Unicode字符和多语言文本的内容。",
        "args": {
          "text_to_delete": "你好，世界！こんにちは、世界！"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.1429288387298584,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Existing Table at Index 0",
        "purpose": "验证工具能否在索引为0的现有表格中成功添加新行。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.11030173301696777,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Maximum Allowed Index",
        "purpose": "测试工具是否支持在最大允许索引值对应的表格中添加新行。",
        "args": {
          "table_index": 100
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.056258440017700195,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table in Opened Document",
        "purpose": "验证工具能否在已打开文档中的指定表格添加新行。",
        "args": {
          "table_index": 1
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0807046890258789,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Special Characters in Content",
        "purpose": "测试工具是否能正确处理包含特殊字符的表格内容添加新行操作。",
        "args": {
          "table_index": 2
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.09771323204040527,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Add Row to Sensitive Table in .git Directory",
        "purpose": "检查工具是否阻止在敏感隐藏目录（如.git）中的表格添加新行，防止潜在安全风险。",
        "args": {
          "table_index": 3
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.08810234069824219,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Add Row to Non-Existent Table",
        "purpose": "验证工具在尝试向不存在的表格添加新行时是否能正确处理错误。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0849924087524414,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Add Row Without Providing Table Index",
        "purpose": "验证工具在未提供表格索引参数时是否能正确处理错误。",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.10144495964050293,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Row Using Maximum Integer Value for Table Index",
        "purpose": "测试工具是否能正确处理使用最大整数作为表格索引的情况。",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.07885289192199707,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Valid Row from Existing Table",
        "purpose": "验证工具能否正确删除指定表格中的有效行。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Maximum Index in Table",
        "purpose": "测试工具在删除表格中最大索引值对应的行时是否正常。",
        "args": {
          "table_index": 2,
          "row_index": 9
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.008016586303710938,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Row with Invalid Table Index",
        "purpose": "验证工具在提供无效的 table_index 参数时是否能正确处理错误。",
        "args": {
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008993864059448242,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Row with Invalid Row Index",
        "purpose": "验证工具在提供无效的 row_index 参数（如负数）时是否能正确处理错误。",
        "args": {
          "table_index": 1,
          "row_index": -1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Delete Sensitive System Table Row",
        "purpose": "检查工具是否允许对系统敏感表进行删除操作，防止潜在安全风险。",
        "args": {
          "table_index": 9999,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008530855178833008,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Delete Row from Non-Existent Table",
        "purpose": "验证工具在尝试从不存在的表格中删除行时是否能正确处理错误。",
        "args": {
          "table_index": 100,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete First Row of Table",
        "purpose": "测试工具是否支持删除表格的第一行（row_index = 0）。",
        "args": {
          "table_index": 3,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.011510133743286133,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Row with Large Table Index",
        "purpose": "验证工具在处理非常大的 table_index 值时的行为。",
        "args": {
          "table_index": 2147483647,
          "row_index": 5
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.009001731872558594,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Table Cell with Valid Indices and Content",
        "purpose": "验证工具能否使用有效的表格索引、行索引、列索引和新内容成功编辑单元格。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": true
      },
      {
        "case_name": "Edit First Cell of First Table",
        "purpose": "验证工具能否正确编辑第一个表格的第一个单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "New Header"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Last Cell of a Table",
        "purpose": "验证工具是否能处理表格的最后一个单元格，确保边界值操作正常。",
        "args": {
          "table_index": 1,
          "row_index": 4,
          "col_index": 3,
          "new_content": "Last Cell Updated"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Edit Sensitive Table in Hidden .git Directory",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中的文档中编辑表格单元格，防止潜在安全风险。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 1,
          "new_content": "Malicious Update"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "验证工具在提供无效表格索引时是否能正确处理错误。",
        "args": {
          "table_index": -1,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Invalid Table"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.007001161575317383,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Row Index",
        "purpose": "验证工具在提供无效行索引时是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "col_index": 2,
          "new_content": "Invalid Row"
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Column Index",
        "purpose": "验证工具在提供无效列索引时是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": -1,
          "new_content": "Invalid Column"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in New Content",
        "purpose": "测试工具是否能正确处理包含特殊字符的新单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "col_index": 1,
          "new_content": "Special#Chars@Content!"
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": true
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证工具能否在指定的表格范围内正常合并单元格。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "验证工具是否能正确处理仅合并单个单元格的情况。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 1,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.009003162384033203,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row Range",
        "purpose": "测试工具是否能够成功合并整行范围内的单元格。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 0,
          "end_row": 1,
          "end_col": 5
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column Range",
        "purpose": "测试工具是否能够成功合并整列范围内的单元格。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_col": 2,
          "end_row": 5,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.00800323486328125,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Merge Cells in Negative Index Table",
        "purpose": "检查工具是否阻止通过负数表格索引进行非法操作，防止越界访问。",
        "args": {
          "table_index": -1,
          "start_row": 0,
          "start_col": 0,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.005506753921508789,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Start and End Row Order",
        "purpose": "验证工具在起始行大于结束行时是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_col": 1,
          "end_row": 1,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Merge at Maximum Allowed Indices",
        "purpose": "测试工具是否支持使用最大允许的行和列索引进行合并。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 100,
          "end_col": 50
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.009002447128295898,
        "is_functional_test": true
      },
      {
        "case_name": "Special Character Test - Merge with Special Characters in Table Data",
        "purpose": "验证工具是否能在包含特殊字符的表格中正确合并单元格。",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_col": 2,
          "end_row": 3,
          "end_col": 3
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      }
    ],
    "split_table": [
      {
        "case_name": "Basic Table Split at Valid Row",
        "purpose": "验证工具能否在指定的有效行索引处成功将表格拆分为两个表格。",
        "args": {
          "table_index": 0,
          "split_row_index": 2
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.004007577896118164,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "测试工具是否能在表格的第一行进行拆分，生成一个空表和原表剩余内容。",
        "args": {
          "table_index": 1,
          "split_row_index": 0
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.007014274597167969,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "验证工具是否能正确处理在表格最后一行进行拆分的情况。",
        "args": {
          "table_index": 2,
          "split_row_index": 4
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.009000539779663086,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Split Non-Existent Table",
        "purpose": "验证工具在尝试拆分不存在的表格时是否能安全地拒绝操作。",
        "args": {
          "table_index": 99,
          "split_row_index": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0035047531127929688,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "测试工具在提供无效表格索引（负数）时是否能正确处理错误。",
        "args": {
          "table_index": -1,
          "split_row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Split Row Index",
        "purpose": "验证工具在提供超出表格范围的行索引时是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "split_row_index": 10
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Split Table with Single Row",
        "purpose": "测试工具在仅有一行的表格中尝试拆分时的行为。",
        "args": {
          "table_index": 3,
          "split_row_index": 0
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.006998300552368164,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Split at Zero Row Index",
        "purpose": "验证工具在零行索引处拆分是否能正常工作。",
        "args": {
          "table_index": 4,
          "split_row_index": 0
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.005004405975341797,
        "is_functional_test": true
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证工具能否使用默认值设置页面边距（各1英寸）。",
        "args": {
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Page Margins",
        "purpose": "验证工具是否能成功设置非默认的自定义页面边距。",
        "args": {
          "top": 0.5,
          "bottom": 1.5,
          "left": 1.2,
          "right": 0.8
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004505634307861328,
        "is_functional_test": true
      },
      {
        "case_name": "Set Minimum Valid Margins",
        "purpose": "测试工具是否能正确处理最小有效边距值（如0.1英寸）。",
        "args": {
          "top": 0.1,
          "bottom": 0.1,
          "left": 0.1,
          "right": 0.1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.008009910583496094,
        "is_functional_test": true
      },
      {
        "case_name": "Set Maximum Allowed Margins",
        "purpose": "验证工具是否支持最大允许的边距值（如20英寸）。",
        "args": {
          "top": 20.0,
          "bottom": 20.0,
          "left": 20.0,
          "right": 20.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.005995988845825195,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins with Zero Values",
        "purpose": "测试工具是否接受零作为边距值。",
        "args": {
          "top": 0.0,
          "bottom": 0.0,
          "left": 0.0,
          "right": 0.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.006997585296630859,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Set Negative Margins",
        "purpose": "检查工具是否拒绝负数边距值以防止无效布局。",
        "args": {
          "top": -0.5,
          "bottom": -1.0,
          "left": -0.7,
          "right": -0.3
        },
        "response": {
          "result": "Error setting page margins: value must be in range 0 to 18446744073709551615 inclusive, got -640080"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Margin Data Type",
        "purpose": "验证工具是否能正确处理非数值类型的边距参数。",
        "args": {
          "top": "invalid",
          "bottom": "invalid",
          "left": "invalid",
          "right": "invalid"
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 4 validation errors for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nbottom\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nright\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.007007598876953125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Large Decimal Precision",
        "purpose": "测试工具是否能处理具有高精度小数的边距值。",
        "args": {
          "top": 1.0000001,
          "bottom": 1.9999999,
          "left": 0.9999999,
          "right": 1e-07
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.005427837371826172,
        "is_functional_test": true
      }
    ],
    "replace_section": [
      {
        "case_name": "Basic Section Replacement in Valid Document",
        "purpose": "验证replace_section工具能否在有效文档中成功替换指定章节内容。",
        "args": {
          "section_title": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Empty Title",
        "purpose": "测试当提供空章节标题时，工具是否能正确处理错误。",
        "args": {
          "section_title": "",
          "new_content": "This content should not be applied."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Non-Existent Section",
        "purpose": "验证工具在尝试替换不存在的章节时的行为。",
        "args": {
          "section_title": "NonExistentSection",
          "new_content": "Content for a non-existent section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Special Characters in Title",
        "purpose": "测试工具是否支持包含特殊字符的章节标题进行替换。",
        "args": {
          "section_title": "Results & Discussion!",
          "new_content": "Updated content with special characters: @#&*"
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Replace Section in Sensitive .git File",
        "purpose": "检查工具是否阻止对敏感目录（如.git）中的文件进行章节替换以防止安全风险。",
        "args": {
          "section_title": "Config Settings",
          "new_content": "Malicious configuration change attempt."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Input Parameters",
        "purpose": "验证工具在null参数输入时是否能正确处理错误。",
        "args": {
          "section_title": null,
          "new_content": null
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 2 validation errors for replace_sectionArguments\nsection_title\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nnew_content\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006832122802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section in Read-Only Document",
        "purpose": "测试工具在尝试修改只读文档的章节时的行为。",
        "args": {
          "section_title": "ReadOnlySection",
          "new_content": "New content that should fail to apply."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Basic Section Edit by Keyword",
        "purpose": "验证工具能否通过指定关键词成功编辑文档中的对应段落内容。",
        "args": {
          "keyword": "introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Exact Match Keyword",
        "purpose": "测试工具是否能通过精确匹配的关键词准确替换目标段落内容。",
        "args": {
          "keyword": "methodology",
          "new_content": "The methodology has been revised to include new procedures."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Case-Insensitive Keyword Match",
        "purpose": "验证工具是否支持不区分大小写的关键词匹配来编辑段落。",
        "args": {
          "keyword": "CONCLUSION",
          "new_content": "This is an updated version of the conclusion."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Modify .git Directory File Content",
        "purpose": "检查工具是否允许在敏感隐藏目录（如.git）中修改文档内容，防止潜在安全风险。",
        "args": {
          "keyword": "malicious",
          "new_content": "This content should not be allowed in .git directory files."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Keyword Not Found in Document",
        "purpose": "验证当提供的关键词在文档中不存在时，工具是否能正确处理错误并提示用户。",
        "args": {
          "keyword": "nonexistentsection",
          "new_content": "This content will not be inserted because keyword is missing."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Keyword Input",
        "purpose": "验证工具在未提供有效关键词时是否能正确处理错误。",
        "args": {
          "keyword": "",
          "new_content": "This content should not be applied due to empty keyword."
        },
        "response": {
          "result": "Section edited successfully."
        },
        "execution_time": 0.006003141403198242,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Edit Section with Maximum Length Keyword",
        "purpose": "测试工具是否支持使用接近系统限制长度的关键词进行段落编辑。",
        "args": {
          "keyword": "very_long_keyword_that_tests_the_maximum_allowed_length_for_windows_systems_and_document_editing_capabilities",
          "new_content": "This content was edited using a very long keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.005529642105102539,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Keyword and New Content",
        "purpose": "验证工具是否能正确处理包含特殊字符的关键词和新内容。",
        "args": {
          "keyword": "special#chars@keyword!",
          "new_content": "This content contains special characters: #, @, !, $, %, ^, &."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 175
}