{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_opencv_image_processing_cv",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_opencv_image_processing_cv/refined/server.py",
  "timestamp": "2025-07-13T00:56:49.428419",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    保存图片文件。\n\n    Args:\n        image_path: 源图像的文件路径 (必填)。\n        output_path: 目标保存路径 (必填)。\n\n    Returns:\n        包含成功或失败消息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果输出路径无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        save_image_tool(image_path=\"input.jpg\", output_path=\"output.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    调整图片尺寸。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        width: 新宽度，必须为正整数 (必填)。\n        height: 新高度，必须为正整数 (必填)。\n\n    Returns:\n        包含调整后的尺寸和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果宽度或高度不是正整数。\n        Exception: 对于其他意外错误。\n\n    示例:\n        resize_image_tool(image_path=\"input.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    裁剪图片区域。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        x: 裁剪区域左上角 x 坐标 (必填)。\n        y: 裁剪区域左上角 y 坐标 (必填)。\n        width: 裁剪区域宽度，必须为正整数 (必填)。\n        height: 裁剪区域高度，必须为正整数 (必填)。\n\n    Returns:\n        包含裁剪区域信息和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果坐标或尺寸无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        crop_image_tool(image_path=\"input.jpg\", x=100, y=100, width=400, height=300)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    获取图片统计信息。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n\n    Returns:\n        包含图像尺寸、颜色空间和像素值范围等信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        Exception: 对于其他意外错误。\n\n    示例:\n        get_image_stats_tool(image_path=\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    应用图像滤镜。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        filter_type: 滤镜类型（例如 \"gaussian\", \"median\"） (必填)。\n        kernel_size: 核大小，必须为正奇数 (必填)。\n\n    Returns:\n        包含应用的滤镜类型和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_filter_tool(image_path=\"input.jpg\", filter_type=\"gaussian\", kernel_size=5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    检测图像边缘。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        method: 边缘检测方法（例如 \"canny\"） (必填)。\n        threshold1: 第一个阈值，必须为非负整数 (必填)。\n        threshold2: 第二个阈值，必须为非负整数且大于第一个阈值 (必填)。\n\n    Returns:\n        包含检测到的边缘数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_edges_tool(image_path=\"input.jpg\", method=\"canny\", threshold1=100, threshold2=200)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "integer"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "method",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    进行阈值分割。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        threshold_value: 阈值，必须为非负整数 (必填)。\n        max_value: 最大值，必须为正整数且大于阈值 (必填)。\n\n    Returns:\n        包含应用的阈值和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_threshold_tool(image_path=\"input.jpg\", threshold_value=127, max_value=255)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "integer"
          },
          "max_value": {
            "title": "Max Value",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    检测图像轮廓。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        mode: 轮廓检索模式（例如 \"external\", \"tree\"） (必填)。\n        method: 轮廓近似方法（例如 \"simple\", \"chain_approx_none\"） (必填)。\n\n    Returns:\n        包含检测到的轮廓数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_contours_tool(image_path=\"input.jpg\", mode=\"external\", method=\"simple\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "mode",
          "method"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    查找图像形状。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        shape_type: 形状类型（例如 \"circle\", \"rectangle\"） (必填)。\n\n    Returns:\n        包含找到的形状数量和位置信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        find_shapes_tool(image_path=\"input.jpg\", shape_type=\"circle\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Stats Retrieval",
        "purpose": "验证工具能够正确获取一个有效图片文件的基本统计信息（如尺寸、颜色空间、像素范围）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.006093025207519531,
        "is_functional_test": true
      },
      {
        "case_name": "JPEG Image Stats Retrieval",
        "purpose": "验证工具能够正确处理常见的JPEG图像格式并返回统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.11484861373901367,
        "is_functional_test": true
      },
      {
        "case_name": "Image With Special Characters In Filename",
        "purpose": "验证工具能正确处理包含特殊字符的文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@copy!.docx\"}"
        },
        "execution_time": 0.004181385040283203,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Existent File Path",
        "purpose": "验证工具在指定路径的文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.005238771438598633,
        "is_functional_test": false
      },
      {
        "case_name": "Directory Instead Of File",
        "purpose": "验证当提供的是目录而非文件时，工具是否能正确处理或抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Path is not a file: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\"}"
        },
        "execution_time": 0.0060825347900390625,
        "is_functional_test": false
      },
      {
        "case_name": "Hidden File In Git Directory",
        "purpose": "验证工具是否能处理隐藏在.git目录中的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 1}, \"color_space\": \"Grayscale\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 8620288, \"memory_usage_kb\": 8418.25}}"
        },
        "execution_time": 0.02384805679321289,
        "is_functional_test": true
      },
      {
        "case_name": "Readonly Directory File",
        "purpose": "验证工具是否能处理位于只读目录中的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_shape_output.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.09383440017700195,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Image File Input",
        "purpose": "验证工具是否能正确识别非图像文件并抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.0049703121185302734,
        "is_functional_test": false
      }
    ],
    "save_image_tool": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具能够成功将一个有效图片文件保存到指定路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.08350729942321777,
        "is_functional_test": true
      },
      {
        "case_name": "Save Grayscale Image From Git Directory",
        "purpose": "验证工具能正确处理并保存位于.git目录中的灰度图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_thresholded_image.png"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_thresholded_image.png\"}"
        },
        "execution_time": 0.0490260124206543,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image To Readonly Directory",
        "purpose": "验证工具是否能将图像保存到只读目录中（应失败）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.08103275299072266,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Source File",
        "purpose": "验证当源文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_nonexistent.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path Characters",
        "purpose": "验证输出路径包含非法字符时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid<name>.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to save image to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid<name>.jpg\"}"
        },
        "execution_time": 0.056029319763183594,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Save With Special Characters In Output Path",
        "purpose": "验证工具是否能正确处理包含特殊字符的输出路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved#hit@copy!.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Directory Provided As Output Path",
        "purpose": "验证当提供的是目录而非完整文件路径时是否抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005013704299926758,
        "is_functional_test": false
      },
      {
        "case_name": "Long Path And Filename Boundary Test",
        "purpose": "验证工具对超长路径和文件名的处理能力（边界测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_directory_name_that_might_exceed_windows_max_path_length_limitations\\very_very_long_filename_that_tests_the_maximum_allowed_length_for_file_saves_in_windows_systems.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_directory_name_that_might_exceed_windows_max_path_length_limitations\\\\very_very_long_filename_that_tests_the_maximum_allowed_length_for_file_saves_in_windows_systems.jpg\"}"
        },
        "execution_time": 0.08315300941467285,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具能够正确调整一个有效图片文件的尺寸并保存",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 800x600 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.052620887756347656,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Grayscale Image From Git Directory",
        "purpose": "验证工具能正确处理并调整位于.git目录中的灰度图像尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 1024x768 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_resized.png\"}"
        },
        "execution_time": 0.02379775047302246,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Readonly File In Readonly Directory",
        "purpose": "验证工具是否能调整位于只读目录中的图像尺寸（应成功但写入新文件）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_shape_output.jpg",
          "width": 640,
          "height": 480
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 640x480 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unwritable_shape_output_resized.jpg\"}"
        },
        "execution_time": 0.0583651065826416,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Existent Source File For Resize",
        "purpose": "验证当源文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Width Value Test",
        "purpose": "验证宽度为零或负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": -100,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Width must be a positive integer, got -100\"}"
        },
        "execution_time": 0.006043195724487305,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Height Value Test",
        "purpose": "验证高度为零或负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Height must be a positive integer, got 0\"}"
        },
        "execution_time": 0.0035059452056884766,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Image Path",
        "purpose": "验证工具是否能正确处理包含特殊字符的输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.docx",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@copy!.docx\"}"
        },
        "execution_time": 0.003073453903198242,
        "is_functional_test": true
      },
      {
        "case_name": "Resize With Maximum Allowed Dimensions",
        "purpose": "验证工具对最大允许尺寸的处理能力（边界测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 32767,
          "height": 32767
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 32767x32767 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 2.6764161586761475,
        "is_functional_test": true
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop Operation",
        "purpose": "验证工具能够正确裁剪指定区域的图像并返回成功结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 100,
          "y": 100,
          "width": 400,
          "height": 300
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 400x300 at position (100, 100) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.06346535682678223,
        "is_functional_test": true
      },
      {
        "case_name": "Crop At Origin With Full Size",
        "purpose": "验证使用 x=0, y=0 和图像完整尺寸进行裁剪时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "x": 0,
          "y": 0,
          "width": 3568,
          "height": 2416
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 3568x2416 at position (0, 0) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_cropped.png\"}"
        },
        "execution_time": 0.04867815971374512,
        "is_functional_test": true
      },
      {
        "case_name": "Crop In Readonly Directory File",
        "purpose": "验证对只读目录中的图像文件执行裁剪操作是否成功",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_shape_output.jpg",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 200x150 at position (50, 50) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unwritable_shape_output_cropped.jpg\"}"
        },
        "execution_time": 0.05535292625427246,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Coordinates Test",
        "purpose": "验证负数坐标值输入时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "x": -10,
          "y": 20,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"X coordinate must be non-negative integer, got -10\"}"
        },
        "execution_time": 0.00652766227722168,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Or Negative Dimensions Test",
        "purpose": "验证宽度或高度为零或负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_test.png",
          "x": 0,
          "y": 0,
          "width": 0,
          "height": -50
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Width must be a positive integer, got 0\"}"
        },
        "execution_time": 0.003995418548583984,
        "is_functional_test": false
      },
      {
        "case_name": "Out Of Bounds Crop Area",
        "purpose": "验证裁剪区域超出原始图像尺寸时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\high_res_screenshot.png",
          "x": 10000,
          "y": 10000,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Crop area (10000, 10000, 500, 500) exceeds image dimensions (2560, 1440)\"}"
        },
        "execution_time": 0.031027555465698242,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Image Path",
        "purpose": "验证包含特殊字符的图像路径是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_!@#$.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 100x100 at position (10, 10) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot_!@#$_cropped.png\"}"
        },
        "execution_time": 0.030359745025634766,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Long Path Boundary Test",
        "purpose": "验证超长路径和文件名的处理能力（边界测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_that_might_cause_issues\\screenshot_test.png",
          "x": 0,
          "y": 0,
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 800x600 at position (0, 0) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_that_might_cause_issues\\\\screenshot_test_cropped.png\"}"
        },
        "execution_time": 0.032033681869506836,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Filter Application",
        "purpose": "验证工具能够正确应用高斯滤镜到有效图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_gaussian_filtered.jpg\"}"
        },
        "execution_time": 0.08320736885070801,
        "is_functional_test": true
      },
      {
        "case_name": "Median Filter Application",
        "purpose": "验证工具能够正确应用中值滤镜到有效图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004097461700439453,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Kernel Size - Even Number",
        "purpose": "验证当提供偶数核大小时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got 4\"}"
        },
        "execution_time": 0.003001689910888672,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Image File",
        "purpose": "验证当指定路径的图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.003429412841796875,
        "is_functional_test": false
      },
      {
        "case_name": "Kernel Size Zero",
        "purpose": "验证当核大小为0时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got 0\"}"
        },
        "execution_time": 0.006512880325317383,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Filter Type",
        "purpose": "验证工具是否能正确处理包含特殊字符的滤镜类型参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "custom@filter!",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid filter type: custom@filter!. Supported types are ['gaussian', 'median', 'blur', 'bilateral']\"}"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": false
      },
      {
        "case_name": "Large Kernel Size Boundary Test",
        "purpose": "验证工具对最大允许核大小的处理能力（边界测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 31
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 31 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_gaussian_filtered.jpg\"}"
        },
        "execution_time": 0.08833718299865723,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Kernel Size",
        "purpose": "验证当核大小为负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": -3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got -3\"}"
        },
        "execution_time": 0.003489971160888672,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection With Valid Image",
        "purpose": "验证工具能够使用有效图像文件和标准Canny方法正确检测边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1043927 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.jpg\"}"
        },
        "execution_time": 0.10820722579956055,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection On Grayscale Image From Git Directory",
        "purpose": "验证工具能够处理位于.git目录中的灰度图像并正确检测边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "method": "canny",
          "threshold1": 50,
          "threshold2": 150
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 374750 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_edges_canny.png\"}"
        },
        "execution_time": 0.06096220016479492,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Existent Image File",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.0045855045318603516,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Method Name",
        "purpose": "验证当提供无效的边缘检测方法时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "invalid_method",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Unsupported edge detection method: invalid_method. Supported methods are ['canny']\"}"
        },
        "execution_time": 0.00402069091796875,
        "is_functional_test": false
      },
      {
        "case_name": "Threshold2 Less Than Threshold1",
        "purpose": "验证当threshold2小于threshold1时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 200,
          "threshold2": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold2 must be an integer greater than threshold1, got 100\"}"
        },
        "execution_time": 0.007363557815551758,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value",
        "purpose": "验证当提供负阈值时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": -50,
          "threshold2": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold1 must be a non-negative integer, got -50\"}"
        },
        "execution_time": 0.007036924362182617,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Image Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@copy!.png\"}"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": true
      },
      {
        "case_name": "Directory Instead Of Image File",
        "purpose": "验证当提供的是目录而非图像文件时，工具是否能正确处理或抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Path is not a file: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Threshold Application",
        "purpose": "验证工具能够成功对一个有效图片文件应用阈值分割并保存结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.08658814430236816,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold With Grayscale Image",
        "purpose": "验证工具能正确处理位于.git目录中的灰度图像并应用阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 100 with max value 200 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_thresholded.png\"}"
        },
        "execution_time": 0.04582953453063965,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "验证当指定路径的文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "threshold_value": 50,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value",
        "purpose": "验证当阈值为负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": -10,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold value must be a non-negative integer, got -10\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Max Value Less Than Threshold",
        "purpose": "验证当max_value小于threshold_value时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 200,
          "max_value": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Max value must be an integer greater than threshold value, got 150\"}"
        },
        "execution_time": 0.0070056915283203125,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode Path Handling",
        "purpose": "验证工具是否能正确处理包含Unicode字符的文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@copy!.docx",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@copy!.docx\"}"
        },
        "execution_time": 0.0072383880615234375,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Threshold Value",
        "purpose": "验证工具在阈值等于最大像素值（255）时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 255,
          "max_value": 256
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 255 with max value 256 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.07036304473876953,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Valid Values",
        "purpose": "验证最小有效参数组合（阈值=0，max_value=1）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 0,
          "max_value": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 0 with max value 1 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.07010364532470703,
        "is_functional_test": true
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具能够使用默认推荐参数检测一个有效图像的轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_external_simple.jpg\"}"
        },
        "execution_time": 0.07479500770568848,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection With Tree Mode",
        "purpose": "验证工具在使用tree模式时能正确检测图像轮廓并返回结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "mode": "tree",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 17959 contours using mode 'tree' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_contours_tree_simple.png\"}"
        },
        "execution_time": 0.1604020595550537,
        "is_functional_test": true
      },
      {
        "case_name": "Full Resolution Contour Detection",
        "purpose": "验证工具使用chain_approx_none方法以保留所有轮廓点进行检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "mode": "external",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004475593566894531,
        "is_functional_test": true
      },
      {
        "case_name": "Hidden File Contour Detection",
        "purpose": "验证工具是否能处理位于.git目录中的图像文件并检测其轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image_contours_external_simple.png\"}"
        },
        "execution_time": 0.05062699317932129,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Existent Image Path",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.0070116519927978516,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Mode Parameter",
        "purpose": "验证当提供无效的mode参数时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "invalid_mode",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour retrieval mode: invalid_mode. Supported modes are ['external', 'tree']\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Method Parameter",
        "purpose": "验证当提供无效的method参数时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "invalid_method"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour approximation method: invalid_method. Supported methods are ['simple', 'chain_approx_none']\"}"
        },
        "execution_time": 0.0050106048583984375,
        "is_functional_test": false
      },
      {
        "case_name": "Directory Instead Of Image File",
        "purpose": "验证当提供的路径是一个目录而非图像文件时，工具是否能正确处理或抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Path is not a file: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\"}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Circle Shape Detection",
        "purpose": "验证工具能够正确检测图像中的圆形形状并返回数量及位置信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      },
      {
        "case_name": "Rectangle Shape Detection In Grayscale Image",
        "purpose": "验证工具能够在.git目录下的灰度图像中正确识别矩形形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgproc\\\\src\\\\color.simd_helpers.hpp:92: error: (-15:Bad number of channels) in function '__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x31bd3f7f::Set<1,-1,-1>,struct cv::impl::A0x31bd3f7f::Set<0,2,5>,4>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)'\\n> Invalid number of channels in input image:\\n>     'VScn::contains(scn)'\\n> where\\n>     'scn' is 1\\n\"}"
        },
        "execution_time": 0.026999711990356445,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Existent File Path For Shape Detection",
        "purpose": "验证当提供的图像文件路径不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.008028745651245117,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Shape Type Input",
        "purpose": "验证当提供无效的形状类型（如非预定义形状）时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "shape_type": "triangle"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Found 0 triangle shapes\", \"shapes\": []}"
        },
        "execution_time": 0.1242361068725586,
        "is_functional_test": false
      },
      {
        "case_name": "Directory Instead Of Image File",
        "purpose": "验证当提供的路径是目录而非图像文件时是否能正确处理或抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Path is not a file: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\"}"
        },
        "execution_time": 0.00441431999206543,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Image Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_!@#$_cropped.png",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot_!@#$_cropped.png\"}"
        },
        "execution_time": 0.00746464729309082,
        "is_functional_test": true
      },
      {
        "case_name": "Long Path And Filename Boundary Test",
        "purpose": "验证工具对超长路径和文件名的处理能力（边界测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk.docx",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_that_exceeds_normal_limit_and_may_cause_issues_when_saving_document_to_disk.docx\"}"
        },
        "execution_time": 0.009002447128295898,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt To Traverse Directory With .. In Path",
        "purpose": "验证工具是否允许通过'..'进行目录遍历攻击",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\testFiles\\hit.png",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}