{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-13T00:42:08.935750",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document and sets metadata such as title, author, and subject.\n\n    Args:\n        title (str): The title of the document.\n        author (str): The author of the document.\n        subject (str): The subject of the document.\n\n    Returns:\n        str: A success message with the document's file path.\n\n    Example:\n        create_document(title=\"My Document\", author=\"John Doe\", subject=\"Sample Subject\")\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "author": {
            "title": "Author",
            "type": "string"
          },
          "subject": {
            "title": "Subject",
            "type": "string"
          }
        },
        "required": [
          "title",
          "author",
          "subject"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_text",
      "description": "\n    Extracts all text content from an existing Word document.\n\n    Args:\n        file_path (str): The path to the document file.\n\n    Returns:\n        str: A string containing the full text of the document.\n\n    Example:\n        get_document_text(file_path=\"example.docx\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "get_document_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph of text to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The paragraph text to add.\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_paragraph(file_path=\"example.docx\", text=\"This is a new paragraph.\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading of a specified level to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The heading text.\n        level (int): The heading level (1-6).\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_heading(file_path=\"example.docx\", text=\"Chapter 1\", level=1)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "\n    Creates a custom text style for the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        style_name (str): The name of the custom style.\n        font_name (str): The font name for the style.\n        font_size (int): The font size.\n        bold (bool): Whether the text is bold.\n        italic (bool): Whether the text is italicized.\n\n    Returns:\n        str: A success message confirming the style creation.\n\n    Example:\n        create_custom_style(file_path=\"example.docx\", style_name=\"CustomStyle\", font_name=\"Arial\", font_size=12, bold=True, italic=False)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "font_name": {
            "title": "Font Name",
            "type": "string"
          },
          "font_size": {
            "title": "Font Size",
            "type": "integer"
          },
          "bold": {
            "title": "Bold",
            "type": "boolean"
          },
          "italic": {
            "title": "Italic",
            "type": "boolean"
          }
        },
        "required": [
          "file_path",
          "style_name",
          "font_name",
          "font_size",
          "bold",
          "italic"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "\n    Formats a specific range of text in the document with a custom style.\n\n    Args:\n        file_path (str): The path to the document file.\n        start (int): The start index of the text range.\n        end (int): The end index of the text range.\n        style_name (str): The name of the custom style to apply.\n\n    Returns:\n        str: A success message confirming the formatting.\n\n    Example:\n        format_text(file_path=\"example.docx\", start=0, end=10, style_name=\"CustomStyle\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start": {
            "title": "Start",
            "type": "integer"
          },
          "end": {
            "title": "End",
            "type": "integer"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start",
          "end",
          "style_name"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "\n    Adds password protection to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        password (str): The password to protect the document.\n\n    Returns:\n        str: A success message confirming the protection.\n\n    Example:\n        protect_document(file_path=\"example.docx\", password=\"securepassword\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "\n    Adds a footnote to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The footnote text.\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_footnote_to_document(file_path=\"example.docx\", text=\"This is a footnote.\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_paragraph_text_from_document",
      "description": "\n    Retrieves the text of a specific paragraph by index.\n\n    Args:\n        file_path (str): The path to the document file.\n        paragraph_index (int): The index of the paragraph.\n\n    Returns:\n        str: A string containing the text of the specified paragraph.\n\n    Example:\n        get_paragraph_text_from_document(file_path=\"example.docx\", paragraph_index=0)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "paragraph_index"
        ],
        "title": "get_paragraph_text_from_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "find_text_in_document",
      "description": "\n    Searches for a specific text in the document and returns its occurrences.\n\n    Args:\n        file_path (str): The path to the document file.\n        search_text (str): The text to search for.\n\n    Returns:\n        str: A list of indices where the text occurs.\n\n    Example:\n        find_text_in_document(file_path=\"example.docx\", search_text=\"sample\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "search_text": {
            "title": "Search Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "search_text"
        ],
        "title": "find_text_in_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证使用有效参数创建Word文档的基本功能是否正常工作。",
        "args": {
          "title": "Test Document",
          "author": "Test Author",
          "subject": "Test Subject"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"Test_Document.docx\"}"
        },
        "execution_time": 0.025521039962768555,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation With Empty Strings",
        "purpose": "验证当所有参数为空字符串时工具的处理行为。",
        "args": {
          "title": "",
          "author": "",
          "subject": ""
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \".docx\"}"
        },
        "execution_time": 0.021997451782226562,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation With Special Characters",
        "purpose": "测试包含特殊字符的元数据能否正确写入文档。",
        "args": {
          "title": "Title@#$_Special",
          "author": "Author!@#$%^&*()",
          "subject": "Subject<>?/\\\"':;|,"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"Title@#$_Special.docx\"}"
        },
        "execution_time": 0.022001981735229492,
        "is_functional_test": true
      },
      {
        "case_name": "Missing Title Parameter",
        "purpose": "测试缺少必填参数title时的错误处理机制。",
        "args": {
          "author": "John Doe",
          "subject": "Sample Subject"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\ntitle\n  Field required [type=missing, input_value={'author': 'John Doe', 's...ject': 'Sample Subject'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.02654409408569336,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Author Parameter",
        "purpose": "测试缺少必填参数author时的错误处理机制。",
        "args": {
          "title": "My Document",
          "subject": "Sample Subject"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nauthor\n  Field required [type=missing, input_value={'title': 'My Document', ...ject': 'Sample Subject'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.01351308822631836,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Subject Parameter",
        "purpose": "测试缺少必填参数subject时的错误处理机制。",
        "args": {
          "title": "My Document",
          "author": "John Doe"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nsubject\n  Field required [type=missing, input_value={'title': 'My Document', 'author': 'John Doe'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.014162778854370117,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "测试是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "title": "../../../etc/passwd",
          "author": "John Doe",
          "subject": "Sample Subject"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.021541118621826172,
        "is_functional_test": false
      }
    ],
    "get_document_text": [
      {
        "case_name": "Basic Document Text Extraction",
        "purpose": "验证从有效Word文档中提取文本的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc'\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Text Extraction From Empty Document",
        "purpose": "测试工具能否正确处理内容为空的Word文档并返回空字符串。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_list_output.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_list_output.pdf'\"}"
        },
        "execution_time": 0.004332542419433594,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.004505157470703125,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Type",
        "purpose": "测试工具在尝试提取非Word文档（如PDF）文本时的错误处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf'\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long File Path",
        "purpose": "验证工具是否能正确处理包含超长路径名的文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt'\"}"
        },
        "execution_time": 0.009003162384033203,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In File Name",
        "purpose": "测试工具是否能正确处理包含特殊字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf'\"}"
        },
        "execution_time": 0.004507541656494141,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Special Content Extraction",
        "purpose": "验证工具能否正确提取包含Unicode和特殊字符的文档内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_char_content.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_char_content.txt'\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": true
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证向现有文档添加段落的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\recom.doc",
          "text": "This is a new paragraph added for testing purposes."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.09951186180114746,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Empty Text",
        "purpose": "测试当提供空字符串作为段落文本时，工具是否能正确处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\recom.doc",
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.04973149299621582,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph To Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This paragraph should not be added."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.07024168968200684,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt In File Path",
        "purpose": "验证是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "Malicious paragraph content."
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.05700516700744629,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Type",
        "purpose": "测试工具在尝试向非Word文档（如PDF）添加段落时的错误处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "text": "This paragraph should not be added to a PDF file."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf'\"}"
        },
        "execution_time": 0.02790045738220215,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long Text",
        "purpose": "验证工具是否能正确处理包含超长段落文本的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\recom.doc",
          "text": "A very long paragraph consisting of repeated characters: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.02900385856628418,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In Paragraph Text",
        "purpose": "测试工具是否能正确处理包含特殊字符的段落文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\recom.doc",
          "text": "This paragraph contains special characters: !@#$%^&*()_+=<>?/{}[]|,./;'\""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.03999733924865723,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Special Content Handling",
        "purpose": "验证工具能否正确处理包含Unicode和特殊语言字符的段落内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\recom.doc",
          "text": "This paragraph includes Unicode and special language characters: 中文、にほんご、한국어、русский язык、العربية"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.023017168045043945,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证使用有效参数向文档中添加一级标题的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.030004501342773438,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Level 6",
        "purpose": "测试添加最大允许级别（6级）的标题是否能正确处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "Section 6.5",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.04439115524291992,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "Malicious Heading",
          "level": 1
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "New Chapter",
          "level": 2
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Empty Text",
        "purpose": "验证当提供空文本作为标题内容时工具的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.03495907783508301,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Special Characters In Text",
        "purpose": "测试包含特殊字符的标题文本能否正确写入文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "Title@#$_Special!<>?|,.",
          "level": 4
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.035707712173461914,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test With Very Long Heading Text",
        "purpose": "验证工具是否能正确处理超长标题文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "ThisIsAVeryLongHeadingTextThatExceedsNormalLengthLimitsAndMayCauseIssuesWhenProcessingItInWordDocumentOrOtherViewers",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.03524017333984375,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Heading Level Below Minimum",
        "purpose": "测试当提供的标题级别小于最小值1时的错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "Too Low Level",
          "level": 0
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.033004045486450195,
        "is_functional_test": false
      }
    ],
    "create_custom_style": [
      {
        "case_name": "Basic Custom Style Creation",
        "purpose": "验证使用有效参数创建自定义文本样式的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "style_name": "CustomStyle",
          "font_name": "Arial",
          "font_size": 12,
          "bold": true,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.04239487648010254,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "测试是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "style_name": "EvilStyle",
          "font_name": "Times New Roman",
          "font_size": 14,
          "bold": false,
          "italic": true
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.007997512817382812,
        "is_functional_test": false
      },
      {
        "case_name": "Missing File Path Parameter",
        "purpose": "测试缺少必填参数file_path时的错误处理机制。",
        "args": {
          "style_name": "NoFilePathStyle",
          "font_name": "Verdana",
          "font_size": 10,
          "bold": true,
          "italic": true
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\nfile_path\n  Field required [type=missing, input_value={'style_name': 'NoFilePat...': True, 'italic': True}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0035223960876464844,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Style Name Parameter",
        "purpose": "测试缺少必填参数style_name时的错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "font_name": "Courier New",
          "font_size": 16,
          "bold": false,
          "italic": false
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\nstyle_name\n  Field required [type=missing, input_value={'file_path': 'D:\\\\devWor... False, 'italic': False}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Font Size Value",
        "purpose": "测试边界值（最小字体大小）对工具的影响。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "style_name": "TinyFontSize",
          "font_name": "Calibri",
          "font_size": 1,
          "bold": true,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.023186922073364258,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Style Name",
        "purpose": "测试工具是否能正确处理包含特殊字符的样式名称。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "style_name": "Style@#$_Special",
          "font_name": "Georgia",
          "font_size": 18,
          "bold": false,
          "italic": true
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.018303871154785156,
        "is_functional_test": true
      },
      {
        "case_name": "Use Default Parameters For Optional Fields",
        "purpose": "验证工具在可选布尔字段使用默认值时是否仍能成功创建样式。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "style_name": "DefaultParamsStyle",
          "font_name": "Tahoma",
          "font_size": 12
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 2 validation errors for create_custom_styleArguments\nbold\n  Field required [type=missing, input_value={'file_path': 'D:\\\\devWor...ahoma', 'font_size': 12}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nitalic\n  Field required [type=missing, input_value={'file_path': 'D:\\\\devWor...ahoma', 'font_size': 12}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005003929138183594,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "style_name": "NonExistentFileStyle",
          "font_name": "Arial",
          "font_size": 12,
          "bold": true,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": false
      }
    ],
    "format_text": [
      {
        "case_name": "Basic Text Formatting",
        "purpose": "验证使用有效参数对文档中指定范围文本应用自定义样式的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"\\\"no style with name 'CustomStyle'\\\"\"}"
        },
        "execution_time": 0.020520925521850586,
        "is_functional_test": true
      },
      {
        "case_name": "Format Entire Document Text",
        "purpose": "测试对整个文档内容应用自定义样式的功能，确保边界值处理正确。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "start": 0,
          "end": 1000,
          "style_name": "Heading1"
        },
        "response": {
          "result": "{\"message\": \"Text formatted successfully\"}"
        },
        "execution_time": 0.06480908393859863,
        "is_functional_test": true
      },
      {
        "case_name": "Format With Start Equal To End Index",
        "purpose": "验证当起始索引等于结束索引时工具的处理行为，应不应用格式但不报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "start": 50,
          "end": 50,
          "style_name": "Emphasis"
        },
        "response": {
          "result": "{\"message\": \"Text formatted successfully\"}"
        },
        "execution_time": 0.034034013748168945,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.025623083114624023,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.00499415397644043,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Type",
        "purpose": "测试工具在尝试对非Word文档（如PDF）进行格式化操作时的错误处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf'\"}"
        },
        "execution_time": 0.005518913269042969,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long File Path",
        "purpose": "验证工具是否能正确处理包含超长路径名的文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"\\\"no style with name 'CustomStyle'\\\"\"}"
        },
        "execution_time": 0.02050638198852539,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In Style Name",
        "purpose": "测试工具是否能正确处理包含特殊字符的样式名称。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "start": 0,
          "end": 10,
          "style_name": "Style@#$_!Custom"
        },
        "response": {
          "result": "{\"error\": \"\\\"no style with name 'Style@#$_!Custom'\\\"\"}"
        },
        "execution_time": 0.022019386291503906,
        "is_functional_test": true
      }
    ],
    "protect_document": [
      {
        "case_name": "Basic Document Protection",
        "purpose": "验证使用有效文件路径和密码对文档进行基础保护功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_document.docx",
          "password": "securepassword"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      },
      {
        "case_name": "Protect With Empty Password",
        "purpose": "测试当提供空密码时工具是否能正确应用无密码保护（或按设计处理）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx",
          "password": ""
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试通过特殊字符访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "password": "hackme"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "password": "password123"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.007005214691162109,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Type",
        "purpose": "测试工具在尝试对非Word文档（如PDF）进行保护时的错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "password": "password123"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.007011890411376953,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long File Path",
        "purpose": "验证工具是否能正确处理包含超长路径名的文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.docx",
          "password": "longpathpass"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.0036401748657226562,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In File Name",
        "purpose": "测试工具是否能正确处理包含特殊字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#￥%——&×.docx",
          "password": "specialpass"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.007005214691162109,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Special Character Password",
        "purpose": "验证工具能否正确处理包含Unicode和特殊字符的密码。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_document.docx",
          "password": "p@ssw0rd!中文密码"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      }
    ],
    "add_footnote_to_document": [
      {
        "case_name": "Basic Footnote Addition",
        "purpose": "验证使用有效参数向文档添加脚注的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_document.docx",
          "text": "This is a basic footnote."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Footnote Addition With Empty Text",
        "purpose": "测试当提供空字符串作为脚注文本时工具的处理行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx",
          "text": ""
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt In File Path",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "This is a test footnote."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent Document",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This is a test footnote."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Type",
        "purpose": "测试工具在尝试向非Word文档（如PDF）添加脚注时的错误处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "text": "This is a test footnote."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.006005048751831055,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long File Path",
        "purpose": "验证工具是否能正确处理包含超长路径名的文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.docx",
          "text": "This is a test footnote."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In File Name And Footnote Text",
        "purpose": "测试工具是否能正确处理包含特殊字符的文件名和脚注文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#￥%——&×.docx",
          "text": "This is a special character footnote: !@#$%^&*()."
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Special Content Footnote",
        "purpose": "验证工具能否正确处理包含Unicode和特殊字符的脚注内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_metadata.docx",
          "text": "这是一个包含中文和特殊字符的脚注：《》【】『』"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": true
      }
    ],
    "get_paragraph_text_from_document": [
      {
        "case_name": "Basic Paragraph Text Extraction",
        "purpose": "验证从有效Word文档中提取指定段落文本的基本功能是否正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"text\": \"This is a test paragraph.\"}"
        },
        "execution_time": 0.021375417709350586,
        "is_functional_test": true
      },
      {
        "case_name": "Extract From Empty Document",
        "purpose": "测试工具能否正确处理内容为空的Word文档并返回空字符串。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"text\": \"This is a new paragraph added to the empty document.\"}"
        },
        "execution_time": 0.016511201858520508,
        "is_functional_test": true
      },
      {
        "case_name": "Paragraph Index Out Of Bounds",
        "purpose": "测试当提供的段落索引超出文档实际段落数量时的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "paragraph_index": 100
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.05096626281738281,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Paragraph Index",
        "purpose": "验证工具在接收到负数段落索引时的行为是否符合预期（应报错）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"text\": \"Too Low Level\"}"
        },
        "execution_time": 0.04114341735839844,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否存在路径遍历漏洞，防止恶意用户尝试访问受限目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Nonexistent File",
        "purpose": "测试当提供的文件路径不存在时工具的错误处理能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx'\"}"
        },
        "execution_time": 0.00900411605834961,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Max Index",
        "purpose": "验证工具是否能正确处理文档最后一个段落的索引请求。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "paragraph_index": 4
        },
        "response": {
          "result": "{\"text\": \"<script>alert('malicious');</script>\"}"
        },
        "execution_time": 0.02499866485595703,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode And Special Content Extraction",
        "purpose": "验证工具能否正确提取包含Unicode和特殊字符的段落内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_metadata.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"text\": \"<script>alert('malicious');</script>\"}"
        },
        "execution_time": 0.01699995994567871,
        "is_functional_test": true
      }
    ],
    "find_text_in_document": [
      {
        "case_name": "Basic Text Search in Document",
        "purpose": "验证在包含目标文本的有效Word文档中能否正确搜索并返回出现位置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "search_text": "Test"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.015064716339111328,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Nonexistent Text",
        "purpose": "测试工具在文档中搜索不存在的文本时是否能正确返回空结果。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata.docx",
          "search_text": "NonExistentText"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.014007806777954102,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Text",
        "purpose": "验证当搜索文本为空字符串时工具的行为是否符合预期（返回所有字符位置或空）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_document.docx",
          "search_text": ""
        },
        "response": {
          "result": "{\"occurrences\": [0]}"
        },
        "execution_time": 0.013000249862670898,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否能够防止路径遍历攻击尝试。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "search_text": "password"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.03292965888977051,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Invalid File Path",
        "purpose": "测试工具在提供无效文件路径时的错误处理能力。",
        "args": {
          "file_path": "invalid/path/to/document.docx",
          "search_text": "Sample"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'invalid/path/to/document.docx'\"}"
        },
        "execution_time": 0.006525993347167969,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling For Missing Parameters",
        "purpose": "验证缺少必填参数时的错误处理机制。",
        "args": {
          "file_path": "",
          "search_text": "Test"
        },
        "response": {
          "result": "{\"error\": \"Package not found at ''\"}"
        },
        "execution_time": 0.003995418548583984,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test With Very Long Search Text",
        "purpose": "验证工具是否能正确处理超长搜索文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "search_text": "a_very_long_search_string_that_exceeds_normal_length_and_tests_the_limits_of_the_underlying_search_mechanism"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.016004562377929688,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In Search Text",
        "purpose": "测试工具是否能正确搜索包含特殊字符的文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_metadata.docx",
          "search_text": "!@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.010999441146850586,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 79
}