{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_financialdatasets_api_hand",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_financialdatasets_api_hand/refined/server.py",
  "timestamp": "2025-07-13T00:46:09.677935",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "Retrieves the income statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of income statement records, sorted from most recent to oldest.\n    \n    Example:\n        get_income_statements(ticker='AAPL', period='annual', limit=2)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "Retrieves the balance sheets for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'MSFT').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of balance sheet records, sorted from most recent to oldest.\n\n    Example:\n        get_balance_sheets(ticker='MSFT', period='quarterly', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "Retrieves the cash flow statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'GOOGL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of cash flow statement records, sorted from most recent to oldest.\n\n    Example:\n        get_cash_flows(ticker='GOOGL', period='annual', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "Retrieves historical OHLC (Open, High, Low, Close) stock price data for a specified ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'TSLA').\n        start_date (str): The start date for the data in 'YYYY-MM-DD' format.\n        end_date (str): The end date for the data in 'YYYY-MM-DD' format.\n\n    Returns:\n        str: A JSON string representing a list of daily price records.\n\n    Example:\n        get_stock_prices(ticker='TSLA', start_date='2023-01-01', end_date='2023-01-31')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "ticker",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "Retrieves recent news articles related to a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NVDA').\n\n    Returns:\n        str: A JSON string representing a list of news articles.\n\n    Example:\n        get_market_news(ticker='NVDA')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "Retrieves the summary profile for a company, including sector, industry, employee count, and business summary.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AMZN').\n\n    Returns:\n        str: A JSON string representing a dictionary of the company's profile information.\n\n    Example:\n        get_company_profile(ticker='AMZN')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "Retrieves analyst recommendations and ratings for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NFLX').\n\n    Returns:\n        str: A JSON string representing a list of analyst recommendation records over time.\n\n    Example:\n        get_analyst_estimates(ticker='NFLX')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "Retrieves the historical dividend payment data for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'KO').\n\n    Returns:\n        str: A JSON string representing a list of dividend payments, with date and amount for each.\n\n    Example:\n        get_dividend_history(ticker='KO')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "Retrieves the historical stock split data for a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string representing a list of stock splits, with date and ratio for each.\n\n    Example:\n        get_splits_history(ticker='AAPL')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "Retrieves the company's historical earnings data, including reported and estimated EPS.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'META').\n\n    Returns:\n        str: A JSON string representing a list of historical earnings events.\n\n    Example:\n        get_earnings_history(ticker='META')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "Retrieves key financial ratios for a company, such as P/E ratio, forward P/E, and price-to-book ratio.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'JPM').\n\n    Returns:\n        str: A JSON string representing a dictionary of selected financial ratios.\n\n    Example:\n        get_financial_ratios(ticker='JPM')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "Retrieves the company's ownership structure, including major and institutional holders.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'BRK-A').\n\n    Returns:\n        str: A JSON string containing lists for 'major_holders' and 'institutional_holders'.\n\n    Example:\n        get_ownership_data(ticker='BRK-A')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具能够成功获取知名公司的基本资料信息（正向测试）。",
        "args": {
          "ticker": "AMZN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 1.5907363891601562,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司信息。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 2.2842206954956055,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当错误。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.0523357391357422,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证工具在空 ticker 参数下是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否正确处理包含特殊字符的 ticker 输入。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 2.716017246246338,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 0.9373209476470947,
        "is_functional_test": false
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 1.239548683166504,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地处理带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE companies;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE companies;--'\"}"
        },
        "execution_time": 1.0335400104522705,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具能够成功获取知名公司的年度财务损益表数据（正向测试）。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 2.089818000793457,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement with Quarterly Period",
        "purpose": "验证工具能够正确处理季度周期参数并返回对应公司最近的损益表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.299863338470459,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Annual Statements",
        "purpose": "验证工具能根据指定的 limit 参数返回相应数量的年度损益表记录。",
        "args": {
          "ticker": "AAPL",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 6.519829988479614,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Quarterly Statements",
        "purpose": "验证工具在季度周期下是否能根据指定的 limit 参数返回相应数量的损益表记录。",
        "args": {
          "ticker": "AAPL",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 2.8319478034973145,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.2411694526672363,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0040051937103271484,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 1.3207547664642334,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE income_statements;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE income_statements;--'\"}"
        },
        "execution_time": 0.8820443153381348,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取知名公司的年度资产负债表数据（正向测试）。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 1.144958734512329,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet with Quarterly Period",
        "purpose": "验证工具能够正确处理季度周期参数并返回对应公司最近的资产负债表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 6.953888893127441,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Annual Reports",
        "purpose": "验证工具能根据指定的 limit 参数返回相应数量的年度资产负债表记录。",
        "args": {
          "ticker": "GOOG",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 1.0502240657806396,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Quarterly Reports",
        "purpose": "验证工具在季度周期下是否能根据指定的 limit 参数返回相应数量的资产负债表记录。",
        "args": {
          "ticker": "AMZN",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 0.9208219051361084,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.0890002250671387,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003004312515258789,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 1.0266447067260742,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE balance_sheets;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE balance_sheets;--'\"}"
        },
        "execution_time": 1.854780673980713,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval",
        "purpose": "验证工具能够成功获取知名公司的年度现金流量表数据（正向测试）。",
        "args": {
          "ticker": "GOOGL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
        },
        "execution_time": 6.891484975814819,
        "is_functional_test": true
      },
      {
        "case_name": "Quarterly Cash Flow Retrieval",
        "purpose": "验证工具能够正确处理季度周期参数并返回对应公司最近的现金流量表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 5.976336240768433,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Annual Statements",
        "purpose": "验证工具能根据指定的 limit 参数返回相应数量的年度现金流量表记录。",
        "args": {
          "ticker": "AMZN",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 0.8957488536834717,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Quarterly Statements",
        "purpose": "验证工具在季度周期下是否能根据指定的 limit 参数返回相应数量的现金流量表记录。",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 1.091977596282959,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 6.479238271713257,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004007816314697266,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 1.374532699584961,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE cash_flows;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE cash_flows;--'\"}"
        },
        "execution_time": 0.8477885723114014,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具能够成功获取知名公司的关键财务比率数据（正向测试）。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.3504536151885986,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应的财务比率信息。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.9249134063720703,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 5.902132749557495,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.005021333694458008,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 0.9072587490081787,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE financial_ratios;--'\"}"
        },
        "execution_time": 1.1136741638183594,
        "is_functional_test": false
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 1.2110280990600586,
        "is_functional_test": true
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 0.987473726272583,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Ownership Data Retrieval",
        "purpose": "验证工具能够成功获取知名公司的所有权结构数据（正向测试）。",
        "args": {
          "ticker": "BRK-A"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
        },
        "execution_time": 1.1507925987243652,
        "is_functional_test": true
      },
      {
        "case_name": "Ownership Data for Well-Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司的所有权结构信息。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.255316972732544,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003909111022949219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 0.9269967079162598,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 6.946152448654175,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE ownership_data;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE ownership_data;--'\"}"
        },
        "execution_time": 2.1219303607940674,
        "is_functional_test": false
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 1.9226791858673096,
        "is_functional_test": true
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 2.1967809200286865,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具能够成功获取知名股票的基本分析师估计数据（正向测试）。",
        "args": {
          "ticker": "NFLX"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
        },
        "execution_time": 1.1915268898010254,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司的分析师估计数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.0302205085754395,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.9436349868774414,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 7.407488822937012,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE analyst_estimates;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE analyst_estimates;--'\"}"
        },
        "execution_time": 1.1041851043701172,
        "is_functional_test": false
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "nflx"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'nflx'\"}"
        },
        "execution_time": 1.2925140857696533,
        "is_functional_test": true
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 1.160933494567871,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具能够成功获取知名公司的历史每股收益(EPS)数据（正向测试）。",
        "args": {
          "ticker": "META"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
        },
        "execution_time": 1.5597169399261475,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司历史 earnings 数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.2324066162109375,
        "is_functional_test": true
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 2.0173542499542236,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.216761827468872,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 1.9690461158752441,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE earnings;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE earnings;--'\"}"
        },
        "execution_time": 10.942427635192871,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 1.1950128078460693,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码在指定日期范围内的历史OHLC价格数据（正向测试）。",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.8724453449249268,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.1745154857635498,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0045092105865478516,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 1.7447295188903809,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE stock_prices;--",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE stock_prices;--'\"}"
        },
        "execution_time": 0.8424382209777832,
        "is_functional_test": false
      },
      {
        "case_name": "Start Date After End Date Handling",
        "purpose": "验证工具在开始日期晚于结束日期时是否能正确处理并返回错误信息。",
        "args": {
          "ticker": "AAPL",
          "start_date": "2023-12-31",
          "end_date": "2023-01-01"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 3.124802589416504,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Date Range Test",
        "purpose": "验证工具在最小时间跨度（同一天）下是否能正确处理请求。",
        "args": {
          "ticker": "MSFT",
          "start_date": "2023-01-01",
          "end_date": "2023-01-01"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 6.927996873855591,
        "is_functional_test": true
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 0.8935139179229736,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具能够成功获取知名公司的相关新闻文章（正向测试）。",
        "args": {
          "ticker": "NVDA"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
        },
        "execution_time": 12.628713130950928,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司的市场新闻。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.069429874420166,
        "is_functional_test": true
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 0.9178824424743652,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证工具在空 ticker 参数下是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004510641098022461,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当错误。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 0.8517224788665771,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否正确处理包含特殊字符的 ticker 输入。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 0.9727511405944824,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE news;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE news;--'\"}"
        },
        "execution_time": 0.8989076614379883,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 1.0454814434051514,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具能够成功获取知名公司的历史分红数据（正向测试）。",
        "args": {
          "ticker": "KO"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
        },
        "execution_time": 7.200074911117554,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应的历史分红数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 2.6542463302612305,
        "is_functional_test": true
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 7.248920679092407,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当错误。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.0575590133666992,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证工具在空 ticker 参数下是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.1429445743560791,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否正确处理包含特殊字符的 ticker 输入。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 0.9778423309326172,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地处理带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE dividends;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE dividends;--'\"}"
        },
        "execution_time": 1.65944242477417,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 2.7401535511016846,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具能够成功获取知名公司的股票拆分历史数据（正向测试）。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.1965880393981934,
        "is_functional_test": true
      },
      {
        "case_name": "Valid Ticker with Known Company",
        "purpose": "验证工具能正确处理一个有效的股票代码并返回对应公司的股票拆分历史。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 5.922636032104492,
        "is_functional_test": true
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否支持大小写不敏感的 ticker 处理。",
        "args": {
          "ticker": "aMzN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'aMzN'\"}"
        },
        "execution_time": 1.929861307144165,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format Handling",
        "purpose": "验证工具对无效的股票代码进行参数校验并返回适当的错误信息。",
        "args": {
          "ticker": "12345"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '12345'\"}"
        },
        "execution_time": 1.1316015720367432,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input Handling",
        "purpose": "验证工具在 ticker 参数为空时是否优雅地处理错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.005061149597167969,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker Handling",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入并返回适当错误。",
        "args": {
          "ticker": "T!CK#R$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T!CK#R$'\"}"
        },
        "execution_time": 0.8954803943634033,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Ticker",
        "purpose": "验证工具是否安全地拒绝带有潜在 SQL 注入攻击的 ticker 输入。",
        "args": {
          "ticker": "GOOG'; DROP TABLE splits;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'; DROP TABLE splits;--'\"}"
        },
        "execution_time": 1.2655787467956543,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker String Boundary Test",
        "purpose": "验证工具对超长 ticker 字符串的边界处理能力。",
        "args": {
          "ticker": "LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'LONGTICKERSTRINGEXCEEDINGNORMALCHARACTERLIMITS'\"}"
        },
        "execution_time": 1.031769037246704,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 96
}