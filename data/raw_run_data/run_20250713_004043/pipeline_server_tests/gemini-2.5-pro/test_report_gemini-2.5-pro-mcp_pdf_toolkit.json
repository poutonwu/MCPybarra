{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_pdf_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_pdf_toolkit/refined/server.py",
  "timestamp": "2025-07-13T00:46:03.211179",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merges multiple specified PDF files into a single PDF file.\n\n    Args:\n        pdf_paths (list[str]): A list containing the full paths to the PDF files to be merged.\n        output_path (str): The save path for the merged PDF file.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Files merged successfully into output.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "pdf_paths": {
            "items": {
              "type": "string"
            },
            "title": "Pdf Paths",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "pdf_paths",
          "output_path"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extracts specified pages from a PDF file and creates a new PDF file.\n\n    Args:\n        source_path (str): The full path to the source PDF file.\n        pages (list[int]): A list of page numbers to extract (0-indexed).\n        output_path (str): The save path for the new PDF file with the extracted pages.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Extracted 3 pages into new_file.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "pages": {
            "items": {
              "type": "integer"
            },
            "title": "Pages",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "pages",
          "output_path"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Searches for PDF files matching a glob pattern in a specified directory.\n\n    Args:\n        directory (str): The path to the directory to search in.\n        pattern (str): The glob pattern to match filenames (e.g., '*.pdf', 'report-*.pdf').\n\n    Returns:\n        list[str]: A list containing the full paths of all matching PDF files.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Finds and merges PDF files in a specified order from a directory based on a list of filename patterns.\n    Supports both exact and fuzzy matching modes.\n\n    Args:\n        directory (str): The path to the directory to search for PDF files.\n        order_patterns (list[str]): A list of filename patterns that defines the merge order.\n        output_path (str): The save path for the merged PDF file.\n        match_mode (str): The matching mode, either 'exact' or 'fuzzy'. Defaults to 'exact'.\n\n    Returns:\n        dict: A dictionary containing the operation status, a message, and a list of the actual files merged.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_patterns": {
            "items": {
              "type": "string"
            },
            "title": "Order Patterns",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "match_mode": {
            "default": "exact",
            "title": "Match Mode",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "order_patterns",
          "output_path"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Finds PDFs in a directory that are related to a target PDF based on content similarity.\n    It analyzes the text content of the target PDF and compares it against other PDFs\n    in the search directory to find the most similar ones.\n\n    Args:\n        target_pdf (str): The full path to the target PDF file used as the baseline for comparison.\n        search_directory (str): The path to the directory where related files will be searched.\n        top_n (int): The maximum number of related PDF files to return. Defaults to 5.\n\n    Returns:\n        list[dict]: A list of related PDF files, where each element is a dictionary\n                    containing the file path and a similarity score. Returns a list\n                    with an error dictionary if an issue occurs.\n    ",
      "args_schema": {
        "properties": {
          "target_pdf": {
            "title": "Target Pdf",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          },
          "top_n": {
            "default": 5,
            "title": "Top N",
            "type": "integer"
          }
        },
        "required": [
          "target_pdf",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证工具能够正确搜索指定目录中所有符合 '*.pdf' 模式的文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Specific Pattern Match",
        "purpose": "验证工具能识别特定前缀的PDF文件，如 'paper*.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "paper*.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "Exact File Match",
        "purpose": "验证工具是否支持完全匹配文件名的模式，例如 'rule1.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "rule1.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": true
      },
      {
        "case_name": "Wildcard in Middle of Filename",
        "purpose": "验证工具是否支持通配符在文件名中间的情况，例如 '*1.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*1.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.010004281997680664,
        "is_functional_test": true
      },
      {
        "case_name": "No Matching Files",
        "purpose": "验证工具在没有匹配项时返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "nonexistent*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.005506038665771484,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Subdirectory",
        "purpose": "验证工具能否在子目录中搜索PDF文件（如果工具支持递归搜索）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.006017446517944336,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Pattern",
        "purpose": "验证工具是否能处理包含特殊字符的模式，例如 '[a-z]*.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "[a-z]*.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Hidden Directory Search",
        "purpose": "验证工具是否能搜索隐藏目录中的PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证工具在提供无效目录路径时的行为",
        "args": {
          "directory": "D:\\invalid\\path\\to\\dir",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.006466388702392578,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Pattern Input",
        "purpose": "验证工具在模式为空时的错误处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ""
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\"
        },
        "execution_time": 0.004993438720703125,
        "is_functional_test": false
      },
      {
        "case_name": "Directory Does Not Exist",
        "purpose": "验证当指定目录不存在时工具是否能优雅地失败",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003909587860107422,
        "is_functional_test": false
      },
      {
        "case_name": "Pattern with Invalid Wildcard",
        "purpose": "验证工具是否能处理非法通配符模式，例如 '**.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "**.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.0059967041015625,
        "is_functional_test": false
      },
      {
        "case_name": "Long Pattern Input",
        "purpose": "验证工具对超长模式字符串的处理能力",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "a_very_long_pattern_name_that_exceeds_normal_lengths_and_may_cause_issues_if_not_handled_properly.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Root Directory Traversal",
        "purpose": "验证工具是否允许根目录遍历攻击（如使用 '..\\..'）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0030019283294677734,
        "is_functional_test": false
      }
    ],
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证工具能够将多个PDF文件合并为一个PDF文件",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_output.pdf\"\n}"
        },
        "execution_time": 0.08331608772277832,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证工具在仅提供一个PDF文件时仍能正确生成输出文件",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into single_merged_output.pdf\"\n}"
        },
        "execution_time": 0.06252121925354004,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Empty PDF List",
        "purpose": "验证当输入PDF路径列表为空时，工具是否能优雅地处理错误",
        "args": {
          "pdf_paths": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_list_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"The list of PDF paths cannot be empty.\"\n}"
        },
        "execution_time": 0.007003307342529297,
        "is_functional_test": false
      },
      {
        "case_name": "Merge to Existing Output Path",
        "purpose": "验证目标输出路径已存在文件时，工具是否能覆盖或正确处理",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into existing_output.pdf\"\n}"
        },
        "execution_time": 0.0665903091430664,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Invalid PDF Path",
        "purpose": "验证工具对无效的PDF路径的处理能力",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_input_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Input file not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"\n}"
        },
        "execution_time": 0.0065195560455322266,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Root Directory Traversal in Output Path",
        "purpose": "验证工具是否允许通过输出路径进行根目录遍历攻击（如使用 '..\\..'）",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\malicious_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into malicious_output.pdf\"\n}"
        },
        "execution_time": 0.06946730613708496,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Output Path",
        "purpose": "验证工具是否能处理包含特殊字符的输出路径",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$%^&*()_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 22] Invalid argument: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\merged_@#$%^&*()_output.pdf'\"\n}"
        },
        "execution_time": 0.05734872817993164,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证工具能够正确提取指定页面并生成新的PDF文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0,
            2,
            4
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_basic.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 3 pages into extracted_basic.pdf\"\n}"
        },
        "execution_time": 0.02914905548095703,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证工具能否正确提取单个页面生成新PDF",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            1
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_single.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into extracted_single.pdf\"\n}"
        },
        "execution_time": 0.01540231704711914,
        "is_functional_test": true
      },
      {
        "case_name": "Extract All Pages",
        "purpose": "验证提取所有页面是否成功，等同于复制原文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_all.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 6 pages into extracted_all.pdf\"\n}"
        },
        "execution_time": 0.04607057571411133,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing Output File",
        "purpose": "验证输出路径已有文件时是否能覆盖写入",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into existing_output.pdf\"\n}"
        },
        "execution_time": 0.022509098052978516,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Directory Traversal in Output Path",
        "purpose": "验证输出路径是否允许根目录遍历攻击（如使用 '..\\..'）",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\malicious_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into malicious_extracted.pdf\"\n}"
        },
        "execution_time": 0.08500432968139648,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Source Path",
        "purpose": "验证源文件路径不存在时工具是否能优雅处理错误",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\error_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"\n}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Pages List",
        "purpose": "验证页码列表为空时是否返回错误信息",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pages_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 0 pages into empty_pages_output.pdf\"\n}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$%^&*()_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 22] Invalid argument: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\extracted_@#$%^&*()_output.pdf'\"\n}"
        },
        "execution_time": 0.019005775451660156,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Similarity Search",
        "purpose": "验证工具能够基于内容相似性从指定目录中找到与目标PDF相关的文件（使用默认top_n=5）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\",\n  \"similarity_score\": 0.0031\n}"
        },
        "execution_time": 0.46895289421081543,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Top N Result Limit",
        "purpose": "验证工具能正确限制返回的最相关PDF数量，当设置top_n为3时只返回最多3个结果",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 3
        },
        "response": {
          "result": "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n  \"similarity_score\": 0.0031\n}"
        },
        "execution_time": 0.4887521266937256,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证在搜索目录为空时工具是否能优雅地处理并返回空列表",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.14588427543640137,
        "is_functional_test": true
      },
      {
        "case_name": "Nonexistent Target PDF",
        "purpose": "验证当目标PDF文件不存在时，工具是否能返回错误信息而不是崩溃",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"\n}"
        },
        "execution_time": 0.003511667251586914,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Search Directory",
        "purpose": "验证当提供的搜索目录无效或不可访问时工具的错误处理能力",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\invalid\\path\\to\\dir"
        },
        "response": {
          "result": "{\n  \"error\": \"Search directory not found: D:\\\\invalid\\\\path\\\\to\\\\dir\"\n}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Root Directory Traversal Attempt",
        "purpose": "验证工具是否阻止根目录遍历攻击尝试，例如使用'..\\..'作为路径部分",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\.."
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\MCPServer-Generator\\\\malicious_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\MCPServer-back\\\\testFiles\\\\2023.nlposs-1.24.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gpt-4o\\\\mcp_automated_pdf_tool\\\\refined\\\\output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\MCPServer-Generator\\\\malicious_extracted.pdf\",\n  \"similarity_score\": 0.6251\n}"
        ],
        "execution_time": 26.33030939102173,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Names",
        "purpose": "验证工具能否处理包含特殊字符的PDF文件名进行内容相似性搜索",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_all.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_all.pdf\"\n}"
        },
        "execution_time": 0.00429081916809082,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Top N Value",
        "purpose": "验证工具对最小允许的top_n值（0）的边界处理，应返回空列表或合理响应",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 0
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.5609424114227295,
        "is_functional_test": false
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic Ordered Merge with Exact Match",
        "purpose": "验证工具能够基于精确匹配模式按顺序合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_ordered_merge.pdf",
          "match_mode": "exact"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.08921122550964355,
        "is_functional_test": true
      },
      {
        "case_name": "Fuzzy Ordered Merge with Wildcard Pattern",
        "purpose": "验证模糊匹配模式下，工具能根据通配符模式按顺序合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "*1.pdf",
            "*2.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\fuzzy_ordered_merge.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_ordered_merge.pdf\"\n  ]\n}"
        },
        "execution_time": 0.11227536201477051,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with No Matching Files",
        "purpose": "验证当没有文件匹配给定模式时，工具是否返回空列表且不生成输出文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "nonexistent*.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_output.pdf",
          "match_mode": "exact"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.005071163177490234,
        "is_functional_test": false
      },
      {
        "case_name": "Merge with Partial Matches",
        "purpose": "验证部分匹配情况下工具能否正确识别并合并匹配的文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper*",
            "rule*"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\partial_match_merge.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.07407736778259277,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Directory Traversal in Output Path",
        "purpose": "验证工具是否允许通过输出路径进行目录遍历攻击",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_output.pdf",
          "match_mode": "exact"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.051656484603881836,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Patterns",
        "purpose": "验证工具是否能处理包含特殊字符的匹配模式",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "[a-z]*.pdf",
            "*.@#%&()"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_pattern_merge.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_ordered_merge.pdf\"\n  ]\n}"
        },
        "execution_time": 0.053508758544921875,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Directory",
        "purpose": "验证当指定目录不存在或无效时工具是否能优雅地失败",
        "args": {
          "directory": "D:\\invalid\\path\\to\\dir",
          "order_patterns": [
            "*.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_dir_output.pdf",
          "match_mode": "exact"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Directory not found: D:\\\\invalid\\\\path\\\\to\\\\dir\"\n}"
        },
        "execution_time": 0.0030031204223632812,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Order Patterns List",
        "purpose": "验证空模式列表是否导致错误并阻止合并操作",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_order_output.pdf",
          "match_mode": "exact"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.003007173538208008,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 45
}