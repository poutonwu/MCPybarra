{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-14T20:25:53.504012",
  "tools": [
    {
      "name": "create_document",
      "description": "Create a new Word document.\n\n    Returns:\n        A string indicating the successful creation of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Open an existing Word document.\n\n    Args:\n        file_path: (str) The path to the file to open.\n\n    Returns:\n        A string indicating the successful opening of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Save the current Word document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Save the current Word document with a new name or location.\n\n    Args:\n        file_path: (str) The new file path to save the document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Create a copy of the current Word document.\n\n    Args:\n        file_path: (str) The destination path for the document copy.\n\n    Returns:\n        A string indicating the successful creation of the document copy.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Add a paragraph of text to the document.\n\n    Args:\n        text: (str) The text content of the paragraph.\n\n    Returns:\n        A string indicating the successful addition of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Add a heading to the document.\n\n    Args:\n        text: (str) The text of the heading.\n        level: (int) The level of the heading (e.g., 1 for main heading).\n\n    Returns:\n        A string indicating the successful addition of the heading.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Add a table to the document.\n\n    Args:\n        rows: (int) Number of rows in the table.\n        cols: (int) Number of columns in the table.\n\n    Returns:\n        A string indicating the successful addition of the table.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Add a page break to the document.\n\n    Returns:\n        A string indicating the successful addition of the page break.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieve information about the current document.\n\n    Returns:\n        A dictionary containing various pieces of document information.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Search for specific text within the document.\n\n    Args:\n        search_string: (str) The text to search for.\n\n    Returns:\n        A list of positions where the text is found.\n    ",
      "args_schema": {
        "properties": {
          "search_string": {
            "title": "Search String",
            "type": "string"
          }
        },
        "required": [
          "search_string"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Find and replace specific text within the document.\n\n    Args:\n        find_string: (str) The text to find.\n        replace_string: (str) The text to replace it with.\n\n    Returns:\n        A string indicating the number of replacements made.\n    ",
      "args_schema": {
        "properties": {
          "find_string": {
            "title": "Find String",
            "type": "string"
          },
          "replace_string": {
            "title": "Replace String",
            "type": "string"
          }
        },
        "required": [
          "find_string",
          "replace_string"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Delete a specified paragraph from the document.\n\n    Args:\n        paragraph_index: (int) The index of the paragraph to delete.\n\n    Returns:\n        A string indicating the successful deletion of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Delete all instances of a specified text from the document.\n\n    Args:\n        text: (str) The text to delete.\n\n    Returns:\n        A string indicating the number of deletions made.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Add a row to a specified table in the document.\n\n    Args:\n        table_index: (int) The index of the table to add a row to.\n\n    Returns:\n        A string indicating the successful addition of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Delete a specified row from a table in the document.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row to delete.\n\n    Returns:\n        A string indicating the successful deletion of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edit the content of a specified cell in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row.\n        col_index: (int) The index of the column.\n        new_content: (str) The new content for the cell.\n\n    Returns:\n        A string indicating the successful editing of the cell.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merge specified cells in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        start_row: (int) The starting row index for the merge.\n        end_row: (int) The ending row index for the merge.\n        start_col: (int) The starting column index for the merge.\n        end_col: (int) The ending column index for the merge.\n\n    Returns:\n        A string indicating the successful merging of cells.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "end_row",
          "start_col",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Split a table into two tables at a specified row.\n\n    Args:\n        table_index: (int) The index of the table to split.\n        row_index: (int) The row index at which to split the table.\n\n    Returns:\n        A string indicating the successful splitting of the table.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Set the margins for the pages in the document.\n\n    Args:\n        top: (float) The top margin size in inches.\n        right: (float) The right margin size in inches.\n        bottom: (float) The bottom margin size in inches.\n        left: (float) The left margin size in inches.\n\n    Returns:\n        A string indicating the successful setting of page margins.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          }
        },
        "required": [
          "top",
          "right",
          "bottom",
          "left"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replace the content of a section based on the heading.\n\n    Args:\n        heading: (str) The heading of the section to replace.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful replacement of the section.\n    ",
      "args_schema": {
        "properties": {
          "heading": {
            "title": "Heading",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "heading",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edit the content of a section based on a keyword.\n\n    Args:\n        keyword: (str) The keyword to locate the section.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful editing of the section.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证是否可以成功创建一个新的Word文档（无参数情况下使用默认配置）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.02240586280822754,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Valid File Path",
        "purpose": "验证在提供有效文件路径时是否能正确创建文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.018993616104125977,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation in Restricted Directory",
        "purpose": "测试尝试在受限制目录中创建文档是否会失败或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.01900458335876465,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling",
        "purpose": "验证工具能否优雅处理无效或非法文件路径的情况。",
        "args": {
          "file_path": "/invalid/<path>with|invalid:chars"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.023554086685180664,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Arguments Handling",
        "purpose": "确认当传递空参数时，工具是否仍能正常工作并使用默认行为。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.019001007080078125,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证是否支持带有Unicode字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\文档_测试.docx"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.0189971923828125,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File Attempt",
        "purpose": "测试是否允许覆盖已存在的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.021010398864746094,
        "is_functional_test": true
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Valid Text",
        "purpose": "验证是否能成功将一段有效文本添加到文档中。",
        "args": {
          "text": "This is a valid paragraph of text that should be added to the document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "验证当传入空字符串作为段落内容时，工具是否能正常处理。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.0070037841796875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "测试包含特殊字符的段落是否可以被正确添加。",
        "args": {
          "text": "This paragraph contains special characters: !@#$%^&*()_+{}[]|\\:\";'<>,.?/~`"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004996061325073242,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Unicode Text",
        "purpose": "验证是否支持添加包含Unicode字符（如中文、日文等）的段落。",
        "args": {
          "text": "这是一个包含Unicode字符的段落，例如：日本語や中国語が含まれる。"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Null Value",
        "purpose": "测试传入null值作为段落内容时，工具是否能优雅处理错误。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.009002447128295898,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Non-String Input",
        "purpose": "验证工具能否处理非字符串类型的输入，例如数字或布尔值。",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0049970149993896484,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Read-Only Document",
        "purpose": "测试尝试向只读文档中添加段落是否会失败或抛出异常。",
        "args": {
          "text": "Attempting to add text to a read-only document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Default Level",
        "purpose": "验证在未指定level参数时是否能使用默认值成功添加标题。",
        "args": {
          "text": "Main Document Title"
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\nlevel\n  Field required [type=missing, input_value={'text': 'Main Document Title'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Valid Level",
        "purpose": "验证可以成功添加指定层级的标题（如level=2）。",
        "args": {
          "text": "Section 1",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.00600433349609375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Supported Level",
        "purpose": "测试工具是否支持Word文档中允许的最大标题层级（例如level=9）。",
        "args": {
          "text": "Deep Subsection",
          "level": 9
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.015996932983398438,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading to Existing Document",
        "purpose": "验证在已有文档中添加标题是否能正常工作。",
        "args": {
          "text": "Existing Document Heading",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Heading Text",
        "purpose": "测试当传入空字符串作为标题文本时，工具是否能处理。",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Special Characters",
        "purpose": "验证包含特殊字符的标题文本是否能被正确添加。",
        "args": {
          "text": "Heading with !@#$%^&*()_+{}[]|\\:;'<>,.?/~`",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.009000062942504883,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Unicode Text",
        "purpose": "验证是否支持添加包含Unicode字符的标题，如中文、日文等。",
        "args": {
          "text": "这是一个带Unicode字符的标题 日本語や中国語が含まれる。",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Invalid Level",
        "purpose": "测试当传入无效level值（如负数或非整数）时是否抛出错误。",
        "args": {
          "text": "Invalid Level Heading",
          "level": -1
        },
        "response": {
          "result": "{\"error\": \"Heading level must be between 1 and 9.\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Basic Table Addition",
        "purpose": "验证是否可以使用默认行和列数成功添加一个表格。",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Rows",
        "purpose": "测试工具是否能处理最大允许的行数情况。",
        "args": {
          "rows": 1000,
          "cols": 5
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.02191305160522461,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Rows",
        "purpose": "验证当设置为最小有效行数（1）时，表格能否正确添加。",
        "args": {
          "rows": 1,
          "cols": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.01212000846862793,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "测试传入零作为行数时是否返回错误或进行参数校验。",
        "args": {
          "rows": 0,
          "cols": 4
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Negative Columns",
        "purpose": "验证负值作为列数时是否被正确拒绝。",
        "args": {
          "rows": 3,
          "cols": -1
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.014000654220581055,
        "is_functional_test": false
      },
      {
        "case_name": "Add Very Large Table",
        "purpose": "测试添加极大尺寸表格是否会引发性能问题或资源异常。",
        "args": {
          "rows": 100,
          "cols": 50
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.027510881423950195,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table to Read-Only Document",
        "purpose": "测试向只读文档中添加表格是否会失败或抛出安全异常。",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table After Paragraphs and Other Content",
        "purpose": "验证在已包含段落内容的文档中添加表格是否正常工作。",
        "args": {
          "rows": 3,
          "cols": 4
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.009998559951782227,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break Successfully",
        "purpose": "验证是否可以在当前文档中成功添加分页符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.2774162292480469,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks Sequentially",
        "purpose": "测试连续多次调用add_page_break工具是否会正常插入多个分页符而不报错。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.24538707733154297,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Read-Only Document",
        "purpose": "验证尝试在只读文档中添加分页符时是否失败或抛出异常。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.3677191734313965,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break Without Open Document",
        "purpose": "测试在没有打开或创建文档的情况下调用add_page_break是否能优雅处理错误。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.25963282585144043,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Document with Complex Content",
        "purpose": "验证在包含段落、表格等内容的复杂文档中添加分页符是否仍能成功。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.336529016494751,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Document in Restricted Directory",
        "purpose": "测试在受限制目录中的文档添加分页符是否会触发安全限制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.2515072822570801,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break with Special Characters in Document",
        "purpose": "验证在包含特殊字符或Unicode内容的文档中添加分页符是否仍然有效。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.5010251998901367,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Large Document",
        "purpose": "测试在大型文档（例如包含大量段落和图像）中添加分页符的性能与稳定性。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.2599925994873047,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证在未指定额外参数的情况下，能否成功保存当前文档（使用默认行为）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.35459041595458984,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Valid Path",
        "purpose": "验证在提供有效文件路径时是否能正确保存文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.2937774658203125,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Unicode File Name",
        "purpose": "验证是否支持保存带有Unicode字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\文档_测试.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.3050851821899414,
        "is_functional_test": false
      },
      {
        "case_name": "Save to Restricted Directory",
        "purpose": "测试尝试在受限制目录中保存文档是否会失败或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.3574233055114746,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Invalid File Path",
        "purpose": "验证工具能否优雅处理无效或非法文件路径的情况。",
        "args": {
          "file_path": "/invalid/<path>with|invalid:chars"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.5955109596252441,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing Document",
        "purpose": "测试是否允许覆盖已存在的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.43970417976379395,
        "is_functional_test": true
      },
      {
        "case_name": "Save Empty Document",
        "purpose": "验证空文档（如没有任何段落内容）是否可以被成功保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.18999457359313965,
        "is_functional_test": true
      },
      {
        "case_name": "Save Read-Only Document",
        "purpose": "测试尝试保存只读文档是否会失败或抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.48543548583984375,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Basic Document Opening",
        "purpose": "验证是否可以成功打开一个已存在的Word文档，使用默认路径或最简参数。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc'\"}"
        },
        "execution_time": 0.34777164459228516,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document with Valid File Path",
        "purpose": "验证在提供有效文件路径时是否能正确打开Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\sample1.pdf'\"}"
        },
        "execution_time": 0.26187825202941895,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证是否支持带有Unicode字符的文件名并能正常打开。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\文档_测试.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u6587\\u6863_\\u6d4b\\u8bd5.docx\"}"
        },
        "execution_time": 0.8431191444396973,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling",
        "purpose": "验证工具能否优雅处理无效或非法文件路径的情况。",
        "args": {
          "file_path": "/invalid/<path>with|invalid:chars"
        },
        "response": {
          "result": "{\"error\": \"File not found: /invalid/<path>with|invalid:chars\"}"
        },
        "execution_time": 0.33066725730895996,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Open Non-Existent File",
        "purpose": "测试尝试打开一个不存在的文件是否会失败或抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx\"}"
        },
        "execution_time": 0.4393298625946045,
        "is_functional_test": false
      },
      {
        "case_name": "Open Read-Only Document",
        "purpose": "测试是否能够成功打开一个只读权限的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml'\"}"
        },
        "execution_time": 0.4991722106933594,
        "is_functional_test": false
      },
      {
        "case_name": "Open File in Restricted Directory",
        "purpose": "测试尝试在受限制目录中打开文档是否会失败或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_document.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: C:\\\\Windows\\\\Temp\\\\restricted_document.docx\"}"
        },
        "execution_time": 0.47071075439453125,
        "is_functional_test": false
      },
      {
        "case_name": "Open Empty File",
        "purpose": "验证是否能够成功打开一个空的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt'\"}"
        },
        "execution_time": 0.2296006679534912,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证在文档已创建后是否能成功获取基础文档信息（默认行为）。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.4254782199859619,
        "is_functional_test": true
      },
      {
        "case_name": "Retrieve Document Info After Creation",
        "purpose": "验证在创建文档后能否通过get_document_info获取其基本信息，确保文档状态同步正常。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.2787806987762451,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info with Unicode File Name",
        "purpose": "测试使用包含Unicode字符的文件名创建文档后，是否仍能正确获取文档信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 1.088287591934204,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Restricted Directory Access",
        "purpose": "验证尝试访问受限制目录中的文档时，get_document_info是否会拒绝访问或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_document.docx"
        },
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.5574526786804199,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid or Null Document",
        "purpose": "测试当没有文档被创建或当前文档无效时，get_document_info是否能优雅处理错误并返回明确提示。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 1.0285437107086182,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long File Path Handling",
        "purpose": "验证工具是否能正确处理超长文件路径下的文档信息检索。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_might_exceed_the_system_limit_or_cause_issues_when_saving_the_downloaded_image.jpg"
        },
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.3544435501098633,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Path",
        "purpose": "测试当文件路径中包含特殊字符时，是否仍能正确获取文档信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\file@with#special$chars!.txt"
        },
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.439408540725708,
        "is_functional_test": false
      },
      {
        "case_name": "Read-only Document Info Retrieval",
        "purpose": "验证是否可以从只读文档中成功获取信息而不引发异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 1.267622709274292,
        "is_functional_test": false
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search in Document",
        "purpose": "验证是否能在文档中成功搜索到指定的文本（基本功能）。",
        "args": {
          "search_string": "valid paragraph"
        },
        "response": {
          "result": "{\"positions\": [0]}"
        },
        "execution_time": 0.31421756744384766,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-Existent Text",
        "purpose": "测试搜索不存在的文本时是否返回空列表。",
        "args": {
          "search_string": "nonexistent text"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.1883683204650879,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty String",
        "purpose": "验证使用空字符串作为搜索内容时的行为是否符合预期（如返回所有位置或抛出错误）。",
        "args": {
          "search_string": ""
        },
        "response": {
          "result": "{\"positions\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]}"
        },
        "execution_time": 0.35558581352233887,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Special Characters",
        "purpose": "测试包含特殊字符的搜索字符串是否能被正确处理。",
        "args": {
          "search_string": "!@#$%^&*()_+{}[]|\\:\";'<>,.?/~`"
        },
        "response": {
          "result": "{\"positions\": [2]}"
        },
        "execution_time": 0.43726539611816406,
        "is_functional_test": true
      },
      {
        "case_name": "Search Unicode Text",
        "purpose": "验证是否支持搜索包含Unicode字符的文本，例如中文、日文等。",
        "args": {
          "search_string": "日本語や中国語が含まれる。"
        },
        "response": {
          "result": "{\"positions\": [3, 10]}"
        },
        "execution_time": 0.46117186546325684,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Read-Only Document",
        "purpose": "测试尝试在只读文档中搜索文本是否会失败或抛出异常。",
        "args": {
          "search_string": "read-only document"
        },
        "response": {
          "result": "{\"positions\": [4]}"
        },
        "execution_time": 0.45045995712280273,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Null Value",
        "purpose": "测试传入null值作为搜索字符串时工具是否能优雅处理错误。",
        "args": {
          "search_string": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nsearch_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.3320958614349365,
        "is_functional_test": false
      },
      {
        "case_name": "Search Using Very Long String",
        "purpose": "验证工具是否能处理非常长的搜索字符串（边界条件测试）。",
        "args": {
          "search_string": "aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnoooooooooodddddddddd"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.4977397918701172,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace",
        "purpose": "验证在文档中查找并替换指定字符串的基本功能是否正常工作。",
        "args": {
          "find_string": "old_text",
          "replace_string": "new_text"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.7491929531097412,
        "is_functional_test": true
      },
      {
        "case_name": "Replace All Occurrences in Document",
        "purpose": "测试工具是否能够正确替换文档中所有出现的匹配字符串。",
        "args": {
          "find_string": "repeat_text",
          "replace_string": "replaced_text"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.5841424465179443,
        "is_functional_test": true
      },
      {
        "case_name": "No Match Replacement",
        "purpose": "验证当未找到匹配文本时，工具是否返回0替换并保持文档不变。",
        "args": {
          "find_string": "nonexistent_text",
          "replace_string": "replacement"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.694359302520752,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Replace String",
        "purpose": "测试使用空字符串作为替换内容时是否能正确删除所有匹配项。",
        "args": {
          "find_string": "to_remove",
          "replace_string": ""
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.3588747978210449,
        "is_functional_test": true
      },
      {
        "case_name": "Find with Special Characters",
        "purpose": "验证是否可以正确查找并替换包含特殊字符的字符串。",
        "args": {
          "find_string": "!@#$%^&*()_+{}[]|\\:\";'<>,.?/~`",
          "replace_string": "[SPECIAL_CHARS_REPLACED]"
        },
        "response": {
          "result": "{\"replacements\": 1}"
        },
        "execution_time": 0.3506166934967041,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode Text Replacement",
        "purpose": "测试是否支持查找和替换包含Unicode字符（如中文、日文）的文本。",
        "args": {
          "find_string": "日本語や中国語が含まれる。",
          "replace_string": "Unicode text replaced."
        },
        "response": {
          "result": "{\"replacements\": 2}"
        },
        "execution_time": 0.3865673542022705,
        "is_functional_test": true
      },
      {
        "case_name": "Null Find or Replace Input",
        "purpose": "验证当传入null值作为查找或替换参数时，工具是否抛出适当的错误。",
        "args": {
          "find_string": null,
          "replace_string": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 2 validation errors for find_and_replaceArguments\nfind_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nreplace_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.5822103023529053,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Input Handling",
        "purpose": "测试工具是否能优雅处理非字符串类型的输入（例如数字、布尔值）。",
        "args": {
          "find_string": 123456,
          "replace_string": true
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 2 validation errors for find_and_replaceArguments\nfind_string\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nreplace_string\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.6583046913146973,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Valid Paragraph at Index 0",
        "purpose": "验证是否可以成功删除文档中索引为0的有效段落。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.5612363815307617,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Last Index",
        "purpose": "验证是否可以成功删除文档中最后一个段落（边界条件测试）。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 1.0794684886932373,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Out of Bounds Index (Negative)",
        "purpose": "测试当传入负数作为段落索引时，工具是否能优雅处理错误。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.9250950813293457,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Non-Integer Index",
        "purpose": "验证工具能否处理非整数类型的段落索引输入。",
        "args": {
          "paragraph_index": "two"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.5833673477172852,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Empty Document",
        "purpose": "测试尝试从一个没有段落的空文档中删除段落是否会失败或抛出异常。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.3784677982330322,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph in Read-Only Document",
        "purpose": "测试尝试从只读文档中删除段落是否会失败或抛出异常。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.6334271430969238,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Maximum Allowed Index",
        "purpose": "验证工具是否能正确处理最大允许段落索引值的情况。",
        "args": {
          "paragraph_index": 9999
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.22647476196289062,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Zero-Based Indexing",
        "purpose": "验证段落索引是否遵循零基索引机制，确保基本功能正常。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.41046738624572754,
        "is_functional_test": true
      }
    ],
    "delete_text": [
      {
        "case_name": "Basic Text Deletion",
        "purpose": "验证是否可以成功删除文档中指定的文本内容。",
        "args": {
          "text": "This is a valid paragraph of text that should be added to the document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.003996610641479492,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "测试尝试删除文档中不存在的文本是否会返回0次删除，但不报错。",
        "args": {
          "text": "Nonexistent text for deletion"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.004781961441040039,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Special Characters",
        "purpose": "验证工具是否能正确删除包含特殊字符的文本。",
        "args": {
          "text": "This paragraph contains special characters: !@#$%^&*()_+{}[]|\\:\";'<>,.?/~`"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Unicode Text",
        "purpose": "验证是否支持删除包含Unicode字符（如中文、日文等）的文本。",
        "args": {
          "text": "这是一个包含Unicode字符的段落，例如：日本語や中国語が含まれる。"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.004404783248901367,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty String",
        "purpose": "测试当传入空字符串作为要删除的文本时，工具是否能优雅处理。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"deletions\": 14}"
        },
        "execution_time": 0.005977630615234375,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text from Read-Only Document",
        "purpose": "测试尝试从只读文档中删除文本是否会失败或抛出异常。",
        "args": {
          "text": "Attempting to delete text from a read-only document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.007188320159912109,
        "is_functional_test": false
      },
      {
        "case_name": "Delete with Null Value",
        "purpose": "测试传入null值作为要删除的文本时，工具是否能优雅处理错误。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text with Overlapping Instances",
        "purpose": "验证工具是否能够正确删除文档中重叠出现的文本实例。",
        "args": {
          "text": "ababa"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.007003068923950195,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table at Index 0",
        "purpose": "验证是否可以成功向索引为0的表格添加新行。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Maximum Index",
        "purpose": "测试在文档中存在多个表格的情况下，是否能正确向最大索引值的表格添加行。",
        "args": {
          "table_index": 5
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.007302522659301758,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Negative Index",
        "purpose": "验证工具是否能优雅处理负数索引的情况，并返回错误或合理提示。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.00699615478515625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "测试尝试向不存在的表格索引添加行是否会失败并返回合理错误。",
        "args": {
          "table_index": 100
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Null Table Index",
        "purpose": "验证传入null作为表格索引时，工具是否能进行参数验证并返回错误。",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.008992910385131836,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Read-Only Document Table",
        "purpose": "测试尝试向只读文档中的表格添加行是否会失败或抛出安全异常。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Table in Restricted Directory",
        "purpose": "验证在受限目录下的文档表格中添加行是否受到限制或抛出异常。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Rows Sequentially",
        "purpose": "确认连续多次调用add_table_row工具能否正常工作，每次添加一行到同一表格。",
        "args": {
          "table_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.004963397979736328,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Row from Table with Valid Indices",
        "purpose": "验证在提供有效table_index和row_index时是否能正确删除表格中的指定行。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.007140398025512695,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Non-Existent Table Index",
        "purpose": "测试当提供的table_index超出文档中实际表格数量时，工具是否能优雅处理错误。",
        "args": {
          "table_index": 999,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.003884553909301758,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Invalid Row Index",
        "purpose": "验证当提供的row_index超出目标表格行数范围时，工具是否抛出错误或进行异常处理。",
        "args": {
          "table_index": 0,
          "row_index": 999
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0066585540771484375,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row Using Negative Indices",
        "purpose": "测试使用负数索引（如-1）作为table_index或row_index时，工具是否会拒绝并抛出参数验证错误。",
        "args": {
          "table_index": -1,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.008254289627075195,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Row of Multi-Table Document",
        "purpose": "验证在一个包含多个表格的文档中，能否正确删除第一个表格的第一行。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.006026744842529297,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row of a Table",
        "purpose": "测试是否能够成功删除表格的最后一行数据。",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Delete on Read-Only Document",
        "purpose": "尝试在只读文档中删除表格行，验证工具是否阻止该操作或抛出安全异常。",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.003584146499633789,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Null Arguments",
        "purpose": "验证传入空参数或null值时，工具是否能正确拒绝请求并提示参数缺失。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 2 validation errors for delete_table_rowArguments\ntable_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nrow_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006035327911376953,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Basic Table Cell Edit",
        "purpose": "验证是否可以成功编辑文档中表格的指定单元格内容（使用默认文档）。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell in Specific Table",
        "purpose": "验证是否可以编辑指定索引的表格中的单元格内容。",
        "args": {
          "table_index": 1,
          "row_index": 2,
          "col_index": 1,
          "new_content": "New Value"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.06802773475646973,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Unicode Content",
        "purpose": "验证是否可以将包含Unicode字符的内容写入单元格。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 2,
          "new_content": "日本語や中国語の内容"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.009998321533203125,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Edit Cell in Restricted Table",
        "purpose": "测试尝试编辑受保护或只读表格中的单元格是否会失败或抛出安全异常。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Malicious Content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.010107755661010742,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Table Index Handling",
        "purpose": "验证工具是否能优雅处理无效的表格索引。",
        "args": {
          "table_index": -1,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Test Content"
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0039937496185302734,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Row or Column Index",
        "purpose": "验证工具是否能处理无效的行或列索引（负数或超出范围）。",
        "args": {
          "table_index": 0,
          "row_index": 100,
          "col_index": 50,
          "new_content": "Out of Bounds Content"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.007013797760009766,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Special Characters",
        "purpose": "验证是否可以将包含特殊字符的内容写入单元格。",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "col_index": 2,
          "new_content": "Special!@#$%^&*Chars"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.0049953460693359375,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Empty Content",
        "purpose": "验证是否可以将单元格内容设置为空字符串。",
        "args": {
          "table_index": 1,
          "row_index": 1,
          "col_index": 1,
          "new_content": ""
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.07609295845031738,
        "is_functional_test": true
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证是否可以成功合并指定范围的表格单元格（使用默认参数）。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "测试合并单个单元格的情况，即起始和结束行列相同。",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "end_row": 2,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row",
        "purpose": "验证是否能正确合并整行的所有列。",
        "args": {
          "table_index": 1,
          "start_row": 3,
          "end_row": 3,
          "start_col": 0,
          "end_col": 4
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.17793822288513184,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column",
        "purpose": "验证是否能正确合并整列的所有行。",
        "args": {
          "table_index": 1,
          "start_row": 0,
          "end_row": 5,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"no `tc` element at grid_offset=2\"}"
        },
        "execution_time": 0.14084100723266602,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Rows and Columns",
        "purpose": "测试跨多行和多列的复杂合并操作。",
        "args": {
          "table_index": 2,
          "start_row": 1,
          "end_row": 4,
          "start_col": 1,
          "end_col": 3
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.006997108459472656,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Invalid Table Index",
        "purpose": "验证当提供的 table_index 超出文档中表格数量时是否能优雅处理错误。",
        "args": {
          "table_index": 99,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Merge with Negative Indices",
        "purpose": "测试使用负数作为行或列索引时是否能正确抛出异常。",
        "args": {
          "table_index": 0,
          "start_row": -1,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.010001659393310547,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells in Read-Only Table",
        "purpose": "测试尝试在只读表格中合并单元格是否会失败或抛出安全异常。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Basic Table Split",
        "purpose": "验证在指定行索引处成功分割表格的基本功能。",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004875659942626953,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "测试在第一行（索引为0）处分割表格是否能正常工作。",
        "args": {
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.002220153808594,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "验证在表格最后一行处分割是否能正确处理边界情况。",
        "args": {
          "table_index": 2,
          "row_index": 4
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.00839853286743,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Table Index",
        "purpose": "测试传入无效表格索引时工具是否能优雅处理错误。",
        "args": {
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.015389919281006,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Row Index",
        "purpose": "验证当行索引超出表格范围时，工具是否能抛出错误或异常。",
        "args": {
          "table_index": 3,
          "row_index": 10
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.01593089103699,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Special Characters in Indices",
        "purpose": "测试包含特殊字符的表格和行索引是否被拒绝以防止注入攻击。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.009756565093994,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Zero Rows",
        "purpose": "验证当表格没有行时尝试分割是否会正确失败。",
        "args": {
          "table_index": 4,
          "row_index": 0
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.015127658843994,
        "is_functional_test": true
      },
      {
        "case_name": "Functional Test with Large Table",
        "purpose": "测试对具有大量行的大表格进行分割时的功能完整性。",
        "args": {
          "table_index": 5,
          "row_index": 100
        },
        "response": {
          "error": "Tool call 'split_table' was cancelled."
        },
        "execution_time": 50.00113868713379,
        "is_functional_test": true
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证使用默认标准页边距（1英寸）时是否能成功设置文档页边距。",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "error": "Tool call 'set_page_margins' was cancelled."
        },
        "execution_time": 50.01248645782471,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Page Margins",
        "purpose": "验证能否成功设置自定义的页面边距值。",
        "args": {
          "top": 0.5,
          "right": 0.75,
          "bottom": 1.25,
          "left": 0.8
        },
        "response": {
          "error": "Tool call 'set_page_margins' was cancelled."
        },
        "execution_time": 50.003302812576294,
        "is_functional_test": true
      },
      {
        "case_name": "Zero Margin Setting",
        "purpose": "测试将所有边距设为0时，工具是否支持并正确处理。",
        "args": {
          "top": 0.0,
          "right": 0.0,
          "bottom": 0.0,
          "left": 0.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 38.4748649597168,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Margin Input Handling",
        "purpose": "验证当传入负数作为边距值时，工具是否能优雅地处理错误。",
        "args": {
          "top": -0.5,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Large Margin Values",
        "purpose": "测试设置非常大的边距值（如超过页面尺寸）是否会引发错误或警告。",
        "args": {
          "top": 100.0,
          "right": 100.0,
          "bottom": 100.0,
          "left": 100.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Numeric Margin Input",
        "purpose": "验证传入非数字类型作为边距值时，工具是否能抛出参数验证错误。",
        "args": {
          "top": "one",
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Margin Parameters",
        "purpose": "验证当缺少必要参数时，工具是否能拒绝请求并返回参数验证失败。",
        "args": {
          "top": 1.0,
          "right": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 2 validation errors for set_page_marginsArguments\nbottom\n  Field required [type=missing, input_value={'top': 1.0, 'right': 1.0}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nleft\n  Field required [type=missing, input_value={'top': 1.0, 'right': 1.0}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0069980621337890625,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins on Restricted Document",
        "purpose": "测试尝试在只读或受限制文档上设置边距是否会失败或抛出异常。",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Document",
        "purpose": "验证是否可以将当前文档另存为新的默认路径，使用基本功能。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_saveas_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_saveas_document.docx.\"}"
        },
        "execution_time": 0.02399897575378418,
        "is_functional_test": true
      },
      {
        "case_name": "Save As to Existing File Path",
        "purpose": "测试是否可以覆盖已存在的文件进行保存。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc.\"}"
        },
        "execution_time": 0.022998809814453125,
        "is_functional_test": true
      },
      {
        "case_name": "Save With Unicode File Name",
        "purpose": "验证是否支持带有Unicode字符的文件名进行保存。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\文档_另存为测试.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u6587\\u6863_\\u53e6\\u5b58\\u4e3a\\u6d4b\\u8bd5.docx.\"}"
        },
        "execution_time": 0.028999805450439453,
        "is_functional_test": false
      },
      {
        "case_name": "Save As with Invalid File Path",
        "purpose": "测试工具是否能优雅处理非法或无效的文件路径。",
        "args": {
          "file_path": "/invalid/<path>with|invalid:chars"
        },
        "response": {
          "result": "{\"error\": \"[Errno 22] Invalid argument: '/invalid/<path>with|invalid:chars'\"}"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": false
      },
      {
        "case_name": "Save As in Restricted Directory",
        "purpose": "测试尝试在受限制目录中保存文档是否会失败或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_saveas.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to C:\\\\Windows\\\\Temp\\\\restricted_saveas.docx.\"}"
        },
        "execution_time": 0.028998374938964844,
        "is_functional_test": false
      },
      {
        "case_name": "Save As Without File Extension",
        "purpose": "验证是否可以在未指定扩展名的情况下成功保存文档（系统应自动补全）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\save_without_extension"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\save_without_extension.\"}"
        },
        "execution_time": 0.029000520706176758,
        "is_functional_test": true
      },
      {
        "case_name": "Save As with Empty File Path",
        "purpose": "验证传递空字符串作为文件路径时是否能正确处理错误。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证是否可以在不指定文件路径的情况下创建文档副本（使用默认行为）。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\nfile_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Valid File Path",
        "purpose": "验证在提供有效文件路径时是否能正确创建文档副本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_copy_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_copy_document.docx.\"}"
        },
        "execution_time": 0.03499889373779297,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Restricted Directory",
        "purpose": "测试尝试在受限制目录中创建文档副本是否会失败或抛出安全异常。",
        "args": {
          "file_path": "C:\\Windows\\Temp\\restricted_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at C:\\\\Windows\\\\Temp\\\\restricted_copy.docx.\"}"
        },
        "execution_time": 0.03400158882141113,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling for Copy",
        "purpose": "验证工具能否优雅处理无效或非法文件路径的情况。",
        "args": {
          "file_path": "/invalid/<path>with|invalid:chars"
        },
        "response": {
          "result": "{\"error\": \"[Errno 22] Invalid argument: '/invalid/<path>with|invalid:chars'\"}"
        },
        "execution_time": 0.00900411605834961,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode File Name Handling for Copy",
        "purpose": "验证是否支持带有Unicode字符的文件名用于复制文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\文档_复制测试.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u6587\\u6863_\\u590d\\u5236\\u6d4b\\u8bd5.docx.\"}"
        },
        "execution_time": 0.041510581970214844,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File with Copy",
        "purpose": "测试是否允许覆盖已存在的Word文档副本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc.\"}"
        },
        "execution_time": 0.03807973861694336,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Arguments Handling for Copy",
        "purpose": "确认当传递空参数时，工具是否仍能正常工作并使用默认行为。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\nfile_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.023009777069091797,
        "is_functional_test": true
      }
    ],
    "replace_section": [
      {
        "case_name": "Replace Section with Valid Heading and Content",
        "purpose": "验证是否能使用有效的标题和新内容成功替换文档中的某个章节。",
        "args": {
          "heading": "Introduction",
          "new_content": "This is the updated content for the Introduction section."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.007004737854003906,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Empty New Content",
        "purpose": "测试当新内容为空字符串时，工具是否能正常处理并替换原章节内容为空。",
        "args": {
          "heading": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.00952768325805664,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Non-Existent Heading",
        "purpose": "验证当指定的标题不存在时，工具是否能优雅处理错误。",
        "args": {
          "heading": "NonExistentSection",
          "new_content": "This content should not be added."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.010009288787841797,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Special Characters in Heading",
        "purpose": "测试包含特殊字符的标题是否能被正确识别并替换内容。",
        "args": {
          "heading": "Section@With#Special!Chars",
          "new_content": "This is the new content for a section with special characters in the heading."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.008461236953735352,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Unicode Heading and Content",
        "purpose": "验证是否支持使用包含Unicode字符的标题和内容进行替换。",
        "args": {
          "heading": "概要",
          "new_content": "これは新しい概要の内容です。"
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.008996963500976562,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Null Heading",
        "purpose": "测试当传入null作为标题时，工具是否能正确处理参数验证错误。",
        "args": {
          "heading": null,
          "new_content": "This content should not be processed."
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nheading\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.010121583938598633,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section in Read-Only Document",
        "purpose": "测试尝试在只读文档中替换章节内容是否会失败或抛出异常。",
        "args": {
          "heading": "Executive Summary",
          "new_content": "Updated executive summary content."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.00952005386352539,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Long Heading and Content",
        "purpose": "验证工具是否能处理非常长的标题和内容替换。",
        "args": {
          "heading": "A_very_very_long_heading_that_exceeds_normal_length_requirements_and_tests_boundary_conditions",
          "new_content": "This is a very long content string that is intended to test the boundary conditions of the replace_section tool. It should be able to handle long strings without any issues."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.01200723648071289,
        "is_functional_test": true
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Edit Section with Valid Keyword and Content",
        "purpose": "验证是否可以通过关键字成功编辑文档中的指定段落内容。",
        "args": {
          "keyword": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.005006074905395508,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Empty Keyword",
        "purpose": "测试使用空字符串作为关键字时工具是否能正确处理错误。",
        "args": {
          "keyword": "",
          "new_content": "New content for empty keyword test."
        },
        "response": {
          "result": "{\"message\": \"Section edited successfully.\"}"
        },
        "execution_time": 0.009457826614379883,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Non-Existent Keyword",
        "purpose": "验证当提供的关键字在文档中不存在时，工具是否能优雅地处理这种情况。",
        "args": {
          "keyword": "NonExistentSection",
          "new_content": "Content for a non-existent section."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.006010293960571289,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Special Characters in Keyword",
        "purpose": "测试使用包含特殊字符的关键字是否能被正确识别并编辑对应段落。",
        "args": {
          "keyword": "Special@Keyword!123",
          "new_content": "Updated content for special character keyword."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.007996559143066406,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Unicode Keyword",
        "purpose": "验证工具是否支持使用Unicode字符作为关键字进行段落编辑。",
        "args": {
          "keyword": "简介",
          "new_content": "这是更新后的中文简介部分。"
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.005003452301025391,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Null Keyword",
        "purpose": "测试传入null值作为关键字时工具的异常处理能力。",
        "args": {
          "keyword": null,
          "new_content": "This content should not be applied due to null keyword."
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 1 validation error for edit_section_by_keywordArguments\nkeyword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.009010791778564453,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Long Keyword",
        "purpose": "验证工具对超长关键字的处理能力，确保不会导致性能问题或崩溃。",
        "args": {
          "keyword": "A_very_long_keyword_that_exceeds_normal_length_requirements_and_tests_boundary_handling_capabilities_of_the_tool",
          "new_content": "Content updated using a long keyword."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.005995512008666992,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section in Read-Only Document",
        "purpose": "测试尝试在只读文档中编辑段落是否会失败或抛出安全异常。",
        "args": {
          "keyword": "ReadOnlyTest",
          "new_content": "Attempting to modify a read-only document."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.00952601432800293,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 172
}