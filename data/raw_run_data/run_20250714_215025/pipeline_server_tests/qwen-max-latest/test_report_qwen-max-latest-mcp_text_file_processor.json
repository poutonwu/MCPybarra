{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_text_file_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_text_file_processor/refined/server.py",
  "timestamp": "2025-07-14T21:53:37.912593",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    Reads the contents of multiple text files, optionally by line range, and returns the file's hash value for concurrency control.\n\n    Args:\n        file_paths: List of paths to the text files.\n        start_line: (Optional) The starting line number for partial content retrieval.\n        end_line: (Optional) The ending line number for partial content retrieval.\n\n    Returns:\n        A dictionary containing the list of lines read from the file(s) and the hash value as a string.\n    ",
      "args_schema": {
        "properties": {
          "file_paths": {
            "items": {
              "type": "string"
            },
            "title": "File Paths",
            "type": "array"
          },
          "start_line": {
            "default": null,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_paths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    Creates a new text file and writes initial content to it. Automatically creates any required parent directories.\n\n    Args:\n        file_path: The path where the new file will be created.\n        content: The initial content to write into the new file.\n\n    Returns:\n        A message indicating the success or failure of the operation.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    Appends additional content to an existing text file.\n\n    Args:\n        file_path: The path to the existing text file.\n        content: The content to append to the file.\n\n    Returns:\n        A message indicating the success or failure of the operation.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    Deletes a specific range of content from a text file.\n\n    Args:\n        file_path: The path to the text file.\n        start_line: The starting line number of the content range to delete.\n        end_line: The ending line number of the content range to delete.\n\n    Returns:\n        A message indicating the success or failure of the operation.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    Inserts content into a specified position within a text file.\n\n    Args:\n        file_path: The path to the text file.\n        content: The content to insert into the file.\n        position: The line number before which the content will be inserted.\n\n    Returns:\n        A message indicating the success or failure of the operation.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "position": {
            "title": "Position",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "content",
          "position"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    Applies precise modifications to a text file with hash verification to prevent conflicts.\n\n    Args:\n        file_path: The path to the text file.\n        content_patches: A list of dictionaries each containing 'position' (int) and 'new_content' (str).\n        expected_hash: The expected hash value of the file for concurrency control.\n\n    Returns:\n        A message indicating the success or failure of the operation, including whether the hash matched and changes were applied.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content_patches": {
            "items": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "object"
            },
            "title": "Content Patches",
            "type": "array"
          },
          "expected_hash": {
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content_patches",
          "expected_hash"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "Basic File Creation with Default Content",
        "purpose": "验证工具在指定路径创建文本文件并写入默认内容的基本功能",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": "This is the default content for testing."
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": true
      },
      {
        "case_name": "File Creation in Nonexistent Directory",
        "purpose": "验证工具是否能自动创建所需父目录并成功生成文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir\\auto_created_file.txt",
          "content": "Testing automatic directory creation."
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir\\auto_created_file.txt"
        },
        "execution_time": 0.0039958953857421875,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Content File Creation",
        "purpose": "验证空内容是否也能被正确写入新创建的文件中",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in File Path and Content",
        "purpose": "验证包含特殊字符的文件路径和内容是否能正确处理",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt",
          "content": "Content with special characters: !@#$%^&*()"
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Write to Read-Only Directory",
        "purpose": "测试尝试在只读目录中创建文件时工具能否优雅处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\attempted_new_file.txt",
          "content": "Trying to write to a read-only directory."
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\attempted_new_file.txt"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling",
        "purpose": "验证非法或无效路径是否被正确检测并返回错误信息",
        "args": {
          "file_path": "<invalid>:\\path|with?illegal*chars",
          "content": "Test invalid path handling"
        },
        "response": {
          "result": "Failed to create file: [WinError 123] 文件名、目录名或卷标语法不正确。: '<invalid>:'"
        },
        "execution_time": 0.010193347930908203,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt to Create File Outside Working Directory",
        "purpose": "验证工具是否阻止了可能的路径穿越攻击（如使用../）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt",
          "content": "Attempting to write outside test directory."
        },
        "response": {
          "result": "File created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt"
        },
        "execution_time": 0.004473447799682617,
        "is_functional_test": false
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "Basic File Content Reading",
        "purpose": "验证工具能够正确读取单个文本文件的全部内容并返回有效哈希值",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"lines\": [\n      \"This is the default content for testing.\"\n    ],\n    \"hash\": \"67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0\"\n  }\n}"
        },
        "execution_time": 0.004008054733276367,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple File Content Reading",
        "purpose": "验证工具能够同时读取多个文本文件的内容并分别返回各自内容和哈希值",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"lines\": [\n      \"This is the default content for testing.\"\n    ],\n    \"hash\": \"67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\": {\n    \"lines\": [],\n    \"hash\": \"f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5\"\n  }\n}"
        },
        "execution_time": 0.008999347686767578,
        "is_functional_test": true
      },
      {
        "case_name": "Partial Content Reading by Line Range",
        "purpose": "验证工具能够根据指定的起始和结束行号读取文件的部分内容",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt"
          ],
          "start_line": 1,
          "end_line": 3
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#%&()_file.txt\": {\n    \"lines\": [],\n    \"hash\": \"2187f731b435b1259545d399eddd6a8bd4dfc5cf7c788e17360b5e5db8845d5c\"\n  }\n}"
        },
        "execution_time": 0.008523941040039062,
        "is_functional_test": true
      },
      {
        "case_name": "Empty File Reading",
        "purpose": "验证工具能够正确处理空文件的读取，返回空内容列表和哈希值",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\": {\n    \"lines\": [],\n    \"hash\": \"f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5\"\n  }\n}"
        },
        "execution_time": 0.004500627517700195,
        "is_functional_test": true
      },
      {
        "case_name": "Read Non-Existent File",
        "purpose": "验证工具在尝试读取不存在的文件时是否能优雅处理错误",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.txt\"\n}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Read File with Invalid Path",
        "purpose": "验证工具是否能检测非法路径并返回错误信息",
        "args": {
          "file_paths": [
            "<invalid>:\\path|with?illegal*chars"
          ]
        },
        "response": {
          "result": "{\n  \"error\": \"File not found: <invalid>:\\\\path|with?illegal*chars\"\n}"
        },
        "execution_time": 0.008005142211914062,
        "is_functional_test": false
      },
      {
        "case_name": "Read File with Out-of-Bounds Line Numbers",
        "purpose": "验证工具在指定超出文件实际行数的行范围时是否能正确处理边界情况",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ],
          "start_line": 100,
          "end_line": 200
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"lines\": [],\n    \"hash\": \"67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0\"\n  }\n}"
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Read Outside Working Directory",
        "purpose": "验证工具是否阻止了可能的路径穿越尝试，防止非法访问",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\outside_directory\\\\forbidden_file.txt\": {\n    \"lines\": [\n      \"Attempting to write outside test directory.\"\n    ],\n    \"hash\": \"bf682914e5ebacc7a5a05398888083dd7c8464e1703080639eafea0d72ab613a\"\n  }\n}"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": false
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "Basic Text Append to Existing File",
        "purpose": "验证工具能够成功将指定内容追加到现有文本文件中",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": "Appended content for testing."
        },
        "response": {
          "result": "Content appended successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Append Empty Content to File",
        "purpose": "验证空内容是否能被正确追加到现有文件中而不引发错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "Content appended successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "execution_time": 0.007004737854003906,
        "is_functional_test": true
      },
      {
        "case_name": "Append to File in Nonexistent Directory",
        "purpose": "验证工具在目标文件所在目录不存在时是否能自动创建目录并追加内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_dir\\auto_created_append_file.txt",
          "content": "Appending to a file in a new directory."
        },
        "response": {
          "result": "Failed to append content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_dir\\\\auto_created_append_file.txt'"
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": true
      },
      {
        "case_name": "Append with Special Characters in Content",
        "purpose": "验证包含特殊字符的内容是否能被正确追加到文件中",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt",
          "content": "Appending special characters: !@#$%^&*()"
        },
        "response": {
          "result": "Content appended successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      },
      {
        "case_name": "Append to Read-Only File",
        "purpose": "测试尝试向只读文件追加内容时是否能优雅处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_file.docx",
          "content": "Trying to append to a read-only file."
        },
        "response": {
          "result": "Failed to append content: [Errno 13] Permission denied: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_file.docx'"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Append to File Outside Working Directory",
        "purpose": "验证工具是否阻止了可能的路径穿越攻击（如使用../）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_append_file.txt",
          "content": "Attempting to append outside test directory."
        },
        "response": {
          "result": "Content appended successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_append_file.txt"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling for Append",
        "purpose": "验证非法或无效路径是否被正确检测并返回错误信息",
        "args": {
          "file_path": "<invalid>:\\path|with?illegal*chars",
          "content": "Test invalid path handling for append"
        },
        "response": {
          "result": "Failed to append content: [Errno 22] Invalid argument: '<invalid>:\\\\path|with?illegal*chars'"
        },
        "execution_time": 0.007126331329345703,
        "is_functional_test": false
      },
      {
        "case_name": "Append to Non-Existent File",
        "purpose": "验证工具在目标文件不存在时是否能自动创建文件并追加内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file_for_append.txt",
          "content": "Content for a new file created via append."
        },
        "response": {
          "result": "Content appended successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file_for_append.txt"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": true
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "Basic Text Insertion at Line 1",
        "purpose": "验证工具在指定文本文件的特定行前插入内容的基本功能",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": "This is the inserted content.",
          "position": 1
        },
        "response": {
          "result": "Content inserted successfully at line 1 in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Content into Empty File",
        "purpose": "验证工具能否在空文件中正确插入内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": "Inserted into empty file.",
          "position": 1
        },
        "response": {
          "result": "Content inserted successfully at line 1 in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "execution_time": 0.007816553115844727,
        "is_functional_test": true
      },
      {
        "case_name": "Insert at Position Beyond File Length",
        "purpose": "验证当插入位置大于文件总行数时，内容是否被正确追加到文件末尾",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\new_test_file.txt",
          "content": "Appended due to out-of-bound position.",
          "position": 100
        },
        "response": {
          "result": "Failed to insert content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\new_test_file.txt'"
        },
        "execution_time": 0.0059833526611328125,
        "is_functional_test": true
      },
      {
        "case_name": "Insert with Special Characters in Content",
        "purpose": "验证插入内容包含特殊字符时能否正确处理",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\new_test_file.txt",
          "content": "Special chars: !@#$%^&*()_+{}|:\"<>?",
          "position": 2
        },
        "response": {
          "result": "Failed to insert content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\new_test_file.txt'"
        },
        "execution_time": 0.0037970542907714844,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Insert into File Outside Working Directory",
        "purpose": "验证工具是否阻止对工作目录外文件的插入操作以防止路径穿越攻击",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt",
          "content": "Attempting to insert outside test directory.",
          "position": 1
        },
        "response": {
          "result": "Failed to insert content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\..\\\\outside_directory\\\\forbidden_file.txt'"
        },
        "execution_time": 0.003117799758911133,
        "is_functional_test": false
      },
      {
        "case_name": "Insert into Read-Only File",
        "purpose": "验证工具是否能优雅处理尝试向只读文件插入内容的情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\readonly_dir\\locked_file.docx",
          "content": "Trying to modify a read-only file.",
          "position": 1
        },
        "response": {
          "result": "Failed to insert content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_file.docx'"
        },
        "execution_time": 0.0045013427734375,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling",
        "purpose": "验证非法或无效路径是否被正确检测并返回错误信息",
        "args": {
          "file_path": "<invalid>:\\path|with?illegal*chars",
          "content": "Test invalid path handling",
          "position": 1
        },
        "response": {
          "result": "Failed to insert content: [Errno 22] Invalid argument: '<invalid>:\\\\path|with?illegal*chars'"
        },
        "execution_time": 0.006511688232421875,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Position Value Handling",
        "purpose": "验证负数位置参数是否被正确检测并返回错误信息",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\new_test_file.txt",
          "content": "Negative position should fail.",
          "position": -1
        },
        "response": {
          "result": "Failed to insert content: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\new_test_file.txt'"
        },
        "execution_time": 0.004203081130981445,
        "is_functional_test": false
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "Basic Content Deletion from File",
        "purpose": "验证工具能够成功删除指定文本文件中指定行范围的内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "Lines 1-1 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Content from Empty File",
        "purpose": "验证在空文件中尝试删除内容时工具能否正确处理",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "start_line": 1,
          "end_line": 3
        },
        "response": {
          "result": "Lines 1-3 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Content with Out-of-Bounds Line Numbers",
        "purpose": "验证使用超出文件实际行数的行号范围时，工具是否能正确处理边界情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "start_line": 100,
          "end_line": 200
        },
        "response": {
          "result": "Lines 100-200 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Content in Read-Only File",
        "purpose": "测试尝试在只读文件中删除内容时工具是否能优雅处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_file.docx",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "Failed to delete content: [Errno 13] Permission denied: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_file.docx'"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Content with Invalid File Path",
        "purpose": "验证非法路径是否被正确检测并返回错误信息",
        "args": {
          "file_path": "<invalid>:\\path|with?illegal*chars",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "Failed to delete content: [Errno 22] Invalid argument: '<invalid>:\\\\path|with?illegal*chars'"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt to Delete Outside Working Directory",
        "purpose": "验证工具是否阻止了可能的路径穿越尝试，防止非法操作",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "Lines 1-1 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Content with Start Line Greater than End Line",
        "purpose": "验证起始行号大于结束行号时工具是否能正确处理无效输入",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "start_line": 5,
          "end_line": 2
        },
        "response": {
          "result": "Lines 5-2 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Content with Special Characters in File Path",
        "purpose": "验证包含特殊字符的文件路径是否能被正确处理",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "Lines 1-1 deleted successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt"
        },
        "execution_time": 0.006993532180786133,
        "is_functional_test": true
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "Basic Text File Patching with Single Change",
        "purpose": "验证工具能否在文件指定位置应用单个修改，并正确校验哈希以确保一致性",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content_patches": [
            {
              "position": 0,
              "new_content": "This is the updated content for testing."
            }
          ],
          "expected_hash": "67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0"
        },
        "response": {
          "result": "Hash mismatch: Current hash fbb0090452cc2bed209023de5d5b1bc7319a47f790eddbdae13994f72f53a114 does not match expected hash 67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0. Changes not applied."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Patches Applied in Sequence",
        "purpose": "验证工具是否能按顺序正确应用多个补丁到文本文件的不同位置",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content_patches": [
            {
              "position": 0,
              "new_content": "Line 1\n"
            },
            {
              "position": 6,
              "new_content": "Line 2\n"
            },
            {
              "position": 12,
              "new_content": "Line 3"
            }
          ],
          "expected_hash": "f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5"
        },
        "response": {
          "result": "Hash mismatch: Current hash 16bfdaf112a92a78a71aba9a4c5dfce15fb3626dfd2db395dbba4f0a0d30d5fb does not match expected hash f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5. Changes not applied."
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Hash Mismatch Prevents Patch Application",
        "purpose": "验证当提供的哈希值与实际文件不匹配时，工具是否会拒绝应用任何更改以防止冲突",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content_patches": [
            {
              "position": 0,
              "new_content": "Conflict attempt - should not be applied"
            }
          ],
          "expected_hash": "invalid_hash_1234567890abcdef"
        },
        "response": {
          "result": "Hash mismatch: Current hash fbb0090452cc2bed209023de5d5b1bc7319a47f790eddbdae13994f72f53a114 does not match expected hash invalid_hash_1234567890abcdef. Changes not applied."
        },
        "execution_time": 0.00799870491027832,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Path Traversal Attempt Blocked",
        "purpose": "验证工具是否阻止了路径穿越尝试，防止非法访问系统其他目录中的文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt",
          "content_patches": [
            {
              "position": 0,
              "new_content": "Attempting to patch a file outside working directory."
            }
          ],
          "expected_hash": "bf682914e5ebacc7a5a05398888083dd7c8464e1703080639eafea0d72ab613a"
        },
        "response": {
          "result": "Patches applied successfully to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\outside_directory\\forbidden_file.txt"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid File Path Handling",
        "purpose": "验证工具是否能够检测非法或无效的文件路径并返回适当的错误信息",
        "args": {
          "file_path": "<invalid>:\\path|with?illegal*chars",
          "content_patches": [
            {
              "position": 0,
              "new_content": "Testing invalid path handling during patch operation."
            }
          ],
          "expected_hash": "any_hash"
        },
        "response": {
          "result": "Failed to apply patches: Error reading file <invalid>:\\path|with?illegal*chars: [Errno 22] Invalid argument: '<invalid>:\\\\path|with?illegal*chars'"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Content Patches List",
        "purpose": "验证当提供空的补丁列表时工具是否能安全处理而不引发异常",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content_patches": [],
          "expected_hash": "f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5"
        },
        "response": {
          "result": "Hash mismatch: Current hash 16bfdaf112a92a78a71aba9a4c5dfce15fb3626dfd2db395dbba4f0a0d30d5fb does not match expected hash f1945cd6c19e56b3c1c78943ef5ec18116907a4ca1efc40a57d48ab1db7adfc5. Changes not applied."
        },
        "execution_time": 0.00799560546875,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Position Value Handling",
        "purpose": "验证工具是否能正确处理负数位置参数（边界条件）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content_patches": [
            {
              "position": -1,
              "new_content": "Insert at negative position - should fail or handle gracefully"
            }
          ],
          "expected_hash": "67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0"
        },
        "response": {
          "result": "Hash mismatch: Current hash fbb0090452cc2bed209023de5d5b1bc7319a47f790eddbdae13994f72f53a114 does not match expected hash 67c7adb2d82e1f9486e7362f21171fc99484e757b9dfa9f93192c600c3d5c0b0. Changes not applied."
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Path and Content",
        "purpose": "验证包含特殊字符的文件路径和内容是否能被正确处理",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_file.txt",
          "content_patches": [
            {
              "position": 0,
              "new_content": "Updated content with special characters: !@#$%^&*()"
            }
          ],
          "expected_hash": "2187f731b435b1259545d399eddd6a8bd4dfc5cf7c788e17360b5e5db8845d5c"
        },
        "response": {
          "result": "Hash mismatch: Current hash 23e4f4e1c847ffb05729f3da0b0a51f88dad886f2a14bcd8f2a11d67eda7ebbb does not match expected hash 2187f731b435b1259545d399eddd6a8bd4dfc5cf7c788e17360b5e5db8845d5c. Changes not applied."
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 47
}