{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-14T21:50:28.669319",
  "tools": [
    {
      "name": "create_document",
      "description": "Create a new Word document.\n\n    Returns:\n        A string indicating the successful creation of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Open an existing Word document.\n\n    Args:\n        file_path: (str) The path to the file to open.\n\n    Returns:\n        A string indicating the successful opening of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Save the current Word document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Save the current Word document with a new name or location.\n\n    Args:\n        file_path: (str) The new file path to save the document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Create a copy of the current Word document.\n\n    Args:\n        file_path: (str) The destination path for the document copy.\n\n    Returns:\n        A string indicating the successful creation of the document copy.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Add a paragraph of text to the document.\n\n    Args:\n        text: (str) The text content of the paragraph.\n\n    Returns:\n        A string indicating the successful addition of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Add a heading to the document.\n\n    Args:\n        text: (str) The text of the heading.\n        level: (int) The level of the heading (e.g., 1 for main heading).\n\n    Returns:\n        A string indicating the successful addition of the heading.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Add a table to the document.\n\n    Args:\n        rows: (int) Number of rows in the table.\n        cols: (int) Number of columns in the table.\n\n    Returns:\n        A string indicating the successful addition of the table.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Add a page break to the document.\n\n    Returns:\n        A string indicating the successful addition of the page break.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieve information about the current document.\n\n    Returns:\n        A dictionary containing various pieces of document information.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Search for specific text within the document.\n\n    Args:\n        search_string: (str) The text to search for.\n\n    Returns:\n        A list of positions where the text is found.\n    ",
      "args_schema": {
        "properties": {
          "search_string": {
            "title": "Search String",
            "type": "string"
          }
        },
        "required": [
          "search_string"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Find and replace specific text within the document.\n\n    Args:\n        find_string: (str) The text to find.\n        replace_string: (str) The text to replace it with.\n\n    Returns:\n        A string indicating the number of replacements made.\n    ",
      "args_schema": {
        "properties": {
          "find_string": {
            "title": "Find String",
            "type": "string"
          },
          "replace_string": {
            "title": "Replace String",
            "type": "string"
          }
        },
        "required": [
          "find_string",
          "replace_string"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Delete a specified paragraph from the document.\n\n    Args:\n        paragraph_index: (int) The index of the paragraph to delete.\n\n    Returns:\n        A string indicating the successful deletion of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Delete all instances of a specified text from the document.\n\n    Args:\n        text: (str) The text to delete.\n\n    Returns:\n        A string indicating the number of deletions made.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Add a row to a specified table in the document.\n\n    Args:\n        table_index: (int) The index of the table to add a row to.\n\n    Returns:\n        A string indicating the successful addition of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Delete a specified row from a table in the document.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row to delete.\n\n    Returns:\n        A string indicating the successful deletion of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edit the content of a specified cell in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row.\n        col_index: (int) The index of the column.\n        new_content: (str) The new content for the cell.\n\n    Returns:\n        A string indicating the successful editing of the cell.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merge specified cells in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        start_row: (int) The starting row index for the merge.\n        end_row: (int) The ending row index for the merge.\n        start_col: (int) The starting column index for the merge.\n        end_col: (int) The ending column index for the merge.\n\n    Returns:\n        A string indicating the successful merging of cells.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "end_row",
          "start_col",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Split a table into two tables at a specified row.\n\n    Args:\n        table_index: (int) The index of the table to split.\n        row_index: (int) The row index at which to split the table.\n\n    Returns:\n        A string indicating the successful splitting of the table.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Set the margins for the pages in the document.\n\n    Args:\n        top: (float) The top margin size in inches.\n        right: (float) The right margin size in inches.\n        bottom: (float) The bottom margin size in inches.\n        left: (float) The left margin size in inches.\n\n    Returns:\n        A string indicating the successful setting of page margins.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          }
        },
        "required": [
          "top",
          "right",
          "bottom",
          "left"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replace the content of a section based on the heading.\n\n    Args:\n        heading: (str) The heading of the section to replace.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful replacement of the section.\n    ",
      "args_schema": {
        "properties": {
          "heading": {
            "title": "Heading",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "heading",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edit the content of a section based on a keyword.\n\n    Args:\n        keyword: (str) The keyword to locate the section.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful editing of the section.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证create_document工具可以成功创建一个新的Word文档，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.012918472290039062,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document in Test Directory",
        "purpose": "验证新创建的文档是否可以保存在指定的测试目录中（路径为现有文件所在目录）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.01479959487915039,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation with Empty Parameters",
        "purpose": "验证当传入空参数时，工具是否仍能正确创建文档。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014998197555541992,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Write Attempt to Read-Only Directory",
        "purpose": "尝试将文档写入只读目录以验证权限控制和错误处理机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.02300286293029785,
        "is_functional_test": false
      },
      {
        "case_name": "Document Creation Under High Load (Simulated)",
        "purpose": "模拟高负载情况下调用create_document，验证其稳定性。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.011993885040283203,
        "is_functional_test": false
      },
      {
        "case_name": "Document Creation with Invalid Arguments",
        "purpose": "验证工具是否能够检测并拒绝非法或格式错误的输入参数。",
        "args": {
          "invalid_param": 123
        },
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014697074890136719,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document When Storage is Full (Simulated)",
        "purpose": "模拟磁盘空间不足的情况下调用create_document，验证错误处理能力。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014000415802001953,
        "is_functional_test": false
      },
      {
        "case_name": "Document Creation with Special Characters in Filename",
        "purpose": "验证文档在包含特殊字符的文件名下能否被正确创建。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014994621276855469,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证add_paragraph工具可以成功向文档中添加一个段落，使用常规文本内容。",
        "args": {
          "text": "This is a basic paragraph added to the document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "验证当传入空字符串作为文本内容时，工具是否仍能正确添加段落。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的文本内容并成功添加到文档中。",
        "args": {
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-{}[]|\\:\"<>?/~`"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.01900172233581543,
        "is_functional_test": true
      },
      {
        "case_name": "Add Long Paragraph",
        "purpose": "验证工具在处理长文本段落时的行为，确保不会因长度限制而失败。",
        "args": {
          "text": "This is a very long paragraph consisting of repeated text to test the upper limits of the add_paragraph function. This is only a test and should not be considered real content. This is a very long paragraph consisting of repeated text to test the upper limits of the add_paragraph function. This is only a test and should not be considered real content."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Newlines",
        "purpose": "验证工具是否能够正确处理包含换行符的文本内容。",
        "args": {
          "text": "This is a paragraph\nwith multiple lines\nand line breaks."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Null Input",
        "purpose": "验证当输入为null或None时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Non-String Input",
        "purpose": "验证工具是否能够检测并拒绝非字符串类型的输入参数。",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Read-Only Document",
        "purpose": "尝试向只读文档中添加段落以验证权限控制和错误处理机制。",
        "args": {
          "text": "This paragraph should not be added to a read-only document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证add_heading工具可以成功向文档中添加一个主标题，使用默认级别1。",
        "args": {
          "text": "Main Document Heading",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Level 2",
        "purpose": "验证工具能够添加二级标题，确保支持不同级别的标题。",
        "args": {
          "text": "Sub Heading Level 2",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.008000850677490234,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "验证当传入空字符串作为标题文本时，工具是否仍能正确添加标题。",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.008012771606445312,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的标题文本并成功添加到文档中。",
        "args": {
          "text": "Heading with special chars: !@#$%^&*()_+=-{}[]|\\:\"<>?/~`",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.008997917175292969,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Allowed Level",
        "purpose": "测试工具对最大允许标题级别的支持（例如6级）。",
        "args": {
          "text": "Maximum Level Heading",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.005544424057006836,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading to Read-Only Document",
        "purpose": "尝试向只读文档中添加标题以验证权限控制和错误处理机制。",
        "args": {
          "text": "This heading should not be added.",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level (Zero)",
        "purpose": "验证工具是否能够检测并拒绝无效的标题级别（如0）。",
        "args": {
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "{\"error\": \"Heading level must be between 1 and 9.\"}"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Negative Level",
        "purpose": "验证工具是否能够检测并拒绝负数的标题级别。",
        "args": {
          "text": "Negative Level Heading",
          "level": -1
        },
        "response": {
          "result": "{\"error\": \"Heading level must be between 1 and 9.\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Basic Table Addition with Default Dimensions",
        "purpose": "验证add_table工具可以使用默认参数（例如3行3列）成功向文档中添加表格。",
        "args": {
          "rows": 3,
          "cols": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Custom Row and Column Count",
        "purpose": "验证工具能够正确添加指定行数和列数的表格，确保基本功能支持自定义尺寸。",
        "args": {
          "rows": 5,
          "cols": 4
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.003002166748046875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table to Read-Only Document",
        "purpose": "尝试向只读文档中添加表格以验证权限控制和错误处理机制。",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "验证当行数为0时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "rows": 0,
          "cols": 3
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Columns",
        "purpose": "验证当列数为0时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "rows": 4,
          "cols": 0
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Add Large Table with Maximum Supported Dimensions",
        "purpose": "测试工具在处理最大合理尺寸的表格时的行为，确保不会因限制而失败。",
        "args": {
          "rows": 100,
          "cols": 10
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Negative Rows",
        "purpose": "验证当传入负数作为行数时，工具能否检测并拒绝非法输入。",
        "args": {
          "rows": -2,
          "cols": 3
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.008002281188964844,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Negative Columns",
        "purpose": "验证当传入负数作为列数时，工具能否检测并拒绝非法输入。",
        "args": {
          "rows": 4,
          "cols": -1
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.0036029815673828125,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Basic Page Break Addition",
        "purpose": "验证add_page_break工具可以成功向文档中添加一个分页符，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Read-Only Document",
        "purpose": "尝试向只读文档中添加分页符以验证权限控制和错误处理机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break Under High Load (Simulated)",
        "purpose": "模拟高负载情况下调用add_page_break，验证其稳定性。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.006005287170410156,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break When Storage is Full (Simulated)",
        "purpose": "模拟磁盘空间不足的情况下调用add_page_break，验证错误处理能力。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break with Unauthorized Permissions",
        "purpose": "验证当用户没有足够权限时，是否能正确拒绝添加分页符并返回错误信息。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Empty Document",
        "purpose": "验证在空文档中添加分页符的行为是否符合预期。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Followed by Paragraph",
        "purpose": "验证添加分页符后仍可正常继续添加段落内容。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks Consecutively",
        "purpose": "验证连续多次调用add_page_break是否会正确插入多个分页符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证save_document工具可以成功保存当前创建的Word文档，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.013266563415527344,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Adding Content",
        "purpose": "验证在向文档中添加段落之后，save_document能够正确保存修改内容。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.01851344108581543,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Read-Only Directory",
        "purpose": "尝试将文档保存到只读目录以验证权限控制和错误处理机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.01972341537475586,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Under High Load (Simulated)",
        "purpose": "模拟高负载情况下调用save_document，验证其稳定性。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.015531301498413086,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special Characters in Filename",
        "purpose": "验证文档在包含特殊字符的文件名下能否被正确保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.015611886978149414,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document When Storage is Full (Simulated)",
        "purpose": "模拟磁盘空间不足的情况下调用save_document，验证错误处理能力。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.015005111694335938,
        "is_functional_test": false
      },
      {
        "case_name": "Save a Read-Only Document",
        "purpose": "尝试保存一个只读文档以验证权限控制和错误处理机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.01600193977355957,
        "is_functional_test": false
      },
      {
        "case_name": "Save Empty Document",
        "purpose": "验证空文档（仅包含空白内容）是否能被成功保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.01600027084350586,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证get_document_info工具可以成功检索当前文档的基本信息，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info Retrieval After Paragraph Addition",
        "purpose": "验证在添加段落之后调用get_document_info是否能正确反映文档状态。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info Retrieval with Read-Only Document",
        "purpose": "验证尝试从只读文档中获取信息时是否能正确处理权限限制并返回适当错误信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.013003826141357422,
        "is_functional_test": false
      },
      {
        "case_name": "Document Info Retrieval Without Open Document",
        "purpose": "验证在没有打开文档的情况下调用get_document_info是否能正确返回错误提示。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": false
      },
      {
        "case_name": "Document Info Retrieval with Special Characters in Filename",
        "purpose": "验证当文档文件名包含特殊字符时，get_document_info能否正常获取信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info Retrieval Under High Load (Simulated)",
        "purpose": "模拟高负载情况下调用get_document_info，验证其稳定性和响应能力。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check: Unauthorized Access to Document Metadata",
        "purpose": "验证非授权用户或会话是否无法访问受保护文档的元信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Document Info Retrieval with Corrupted Document",
        "purpose": "验证工具能否检测到文档损坏并给出适当的错误处理信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Basic Document Opening",
        "purpose": "验证open_document工具可以成功打开一个已存在的Word文档，使用默认路径参数。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document_copy.docx.\"}"
        },
        "execution_time": 0.029345273971557617,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document from Read-Only Directory",
        "purpose": "尝试从只读目录中打开文档以验证权限控制和错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_file.docx.\"}"
        },
        "execution_time": 0.033008575439453125,
        "is_functional_test": false
      },
      {
        "case_name": "Open Non-Existent File",
        "purpose": "验证当指定的文件不存在时，工具是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent.docx\"}"
        },
        "execution_time": 0.004435062408447266,
        "is_functional_test": false
      },
      {
        "case_name": "Open File with Invalid Extension",
        "purpose": "验证工具是否能够检测并拒绝非Word文档（如PDF或CSV）的打开请求。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\sample1.pdf'\"}"
        },
        "execution_time": 0.004006624221801758,
        "is_functional_test": false
      },
      {
        "case_name": "Open File with Special Characters in Path",
        "purpose": "验证工具能否正确处理包含特殊字符的文件路径并成功打开文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\~$w_document_copy.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\~$w_document_copy.docx'\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Open Empty File Path",
        "purpose": "验证当传入空字符串作为文件路径时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined\\\\\\\\[Content_Types].xml'\"}"
        },
        "execution_time": 0.007002830505371094,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document Under High Load (Simulated)",
        "purpose": "模拟高负载情况下调用open_document，验证其稳定性。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document_copy.docx.\"}"
        },
        "execution_time": 0.0319974422454834,
        "is_functional_test": false
      },
      {
        "case_name": "Open Corrupted Word File",
        "purpose": "验证工具在尝试打开损坏的Word文件时是否能正确处理异常情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\corrupted.docx\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search",
        "purpose": "验证search_text工具可以成功在文档中搜索指定的文本内容，并返回正确的位置信息。",
        "args": {
          "search_string": "basic paragraph"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.004335165023803711,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-Existent Text",
        "purpose": "验证当搜索的文本在文档中不存在时，工具是否返回空列表。",
        "args": {
          "search_string": "nonexistent text"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty String",
        "purpose": "验证当搜索字符串为空时，工具是否能正确处理并返回空列表或所有位置。",
        "args": {
          "search_string": ""
        },
        "response": {
          "result": "{\"positions\": [0, 1, 2, 3, 4, 5, 6, 7]}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的搜索字符串。",
        "args": {
          "search_string": "!@#$%^&*()_+=-"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Case-Sensitive Text",
        "purpose": "验证工具是否区分大小写进行文本搜索。",
        "args": {
          "search_string": "Basic Paragraph"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Read-Only Document",
        "purpose": "验证在只读文档中搜索文本时，工具是否仍能正常工作。",
        "args": {
          "search_string": "paragraph"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Null Input",
        "purpose": "验证当搜索字符串为null时，工具是否能检测并返回错误信息。",
        "args": {
          "search_string": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nsearch_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Non-String Input",
        "purpose": "验证工具是否能够检测并拒绝非字符串类型的搜索输入。",
        "args": {
          "search_string": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nsearch_string\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace",
        "purpose": "验证find_and_replace工具可以成功在文档中查找并替换指定文本，使用常规参数。",
        "args": {
          "find_string": "basic",
          "replace_string": "replaced"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "Replace All Occurrences in Document",
        "purpose": "验证工具能够替换文档中所有匹配的字符串实例。",
        "args": {
          "find_string": "test",
          "replace_string": "success"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Find Non-Existent String",
        "purpose": "验证当查找的字符串不存在时，工具返回0次替换且不报错。",
        "args": {
          "find_string": "nonexistent",
          "replace_string": "replacement"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Replace with Empty String",
        "purpose": "验证将匹配字符串替换为空字符串的功能是否正常。",
        "args": {
          "find_string": "remove",
          "replace_string": ""
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Find with Special Characters",
        "purpose": "验证工具能否正确查找包含特殊字符的字符串。",
        "args": {
          "find_string": "!@#$%^&*()",
          "replace_string": "special_chars_replaced"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0069963932037353516,
        "is_functional_test": true
      },
      {
        "case_name": "Replace with Special Characters",
        "purpose": "验证工具能否正确将文本替换为包含特殊字符的字符串。",
        "args": {
          "find_string": "plain",
          "replace_string": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Find Null Input",
        "purpose": "验证当输入查找字符串为null时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "find_string": null,
          "replace_string": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Null Input",
        "purpose": "验证当输入替换字符串为null时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "find_string": "search",
          "replace_string": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nreplace_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Basic Paragraph Deletion",
        "purpose": "验证delete_paragraph工具可以成功删除文档中指定索引的段落，使用有效索引。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0036530494689941406,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Out-of-Bounds Index (High)",
        "purpose": "验证当传入超出文档段落数量的索引时，工具是否能正确处理并返回错误信息。",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.003006458282470703,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Negative Index",
        "purpose": "验证工具是否能够检测并拒绝负数段落索引值。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Read-Only Document",
        "purpose": "尝试从只读文档中删除段落以验证权限控制和错误处理机制。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0029973983764648438,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Non-Integer Index",
        "purpose": "验证工具是否能够检测并拒绝非整数类型的段落索引。",
        "args": {
          "paragraph_index": "first"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='first', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Last Paragraph",
        "purpose": "验证delete_paragraph工具可以正确删除文档中最后一个段落。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Middle Paragraph",
        "purpose": "验证delete_paragraph工具可以正确删除文档中间位置的段落。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.02304220199584961,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph in High Load Scenario",
        "purpose": "模拟高负载情况下调用delete_paragraph，验证其稳定性和性能。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Basic Text Deletion",
        "purpose": "验证delete_text工具可以成功删除文档中指定的文本内容。",
        "args": {
          "text": "This is a basic paragraph added to the document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证当传入空字符串作为要删除的文本时，工具是否能正确处理并返回0次删除。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"deletions\": 3}"
        },
        "execution_time": 0.0070040225982666016,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Special Characters",
        "purpose": "验证工具能否正确删除包含特殊字符的文本内容。",
        "args": {
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-{}[]|\\:\"<>?/~`"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.0037026405334472656,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Long Text",
        "purpose": "验证工具在处理长文本删除时的行为，确保不会因长度限制而失败。",
        "args": {
          "text": "This is a very long paragraph consisting of repeated text to test the upper limits of the delete_text function. This is only a test and should not be considered real content. This is a very long paragraph consisting of repeated text to test the upper limits of the delete_text function. This is only a test and should not be considered real content."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.00700688362121582,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "验证当指定的文本不存在于文档中时，工具是否能正确返回0次删除而不报错。",
        "args": {
          "text": "This text does not exist in the document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.005995035171508789,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text with Newlines",
        "purpose": "验证工具是否能够正确识别并删除包含换行符的文本内容。",
        "args": {
          "text": "This is a paragraph\nwith multiple lines\nand line breaks."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text from Read-Only Document",
        "purpose": "尝试从只读文档中删除文本以验证权限控制和错误处理机制。",
        "args": {
          "text": "This paragraph should not be deleted from a read-only document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.009002923965454102,
        "is_functional_test": false
      }
    ],
    "add_table_row": [
      {
        "case_name": "Basic Table Row Addition",
        "purpose": "验证add_table_row工具可以成功向指定表格添加一行，使用默认有效索引。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.004881143569946289,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "验证当传入无效的表格索引时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.005830526351928711,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Negative Table Index",
        "purpose": "验证工具能否正确处理负数表格索引输入，并进行参数校验。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0077724456787109375,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Maximum Integer Value",
        "purpose": "验证工具在表格索引为最大整数值时的行为，确保不会因边界值导致异常。",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0072171688079833984,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Locked Document",
        "purpose": "尝试向只读文档中的表格添加行以验证权限控制和错误处理机制。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.004994869232177734,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Null Table Index",
        "purpose": "验证当输入为null或None时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Non-Integer Input",
        "purpose": "验证工具是否能够检测并拒绝非整数类型的表格索引输入。",
        "args": {
          "table_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.008527278900146484,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row in High Load Scenario",
        "purpose": "模拟高负载情况下调用add_table_row，验证其稳定性。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Basic Table Row Deletion",
        "purpose": "验证delete_table_row工具可以成功删除指定表格中的指定行，使用有效索引。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Delete First Row of Table",
        "purpose": "验证工具可以正确删除表格的第一行（边界条件测试）。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row of Table",
        "purpose": "验证工具可以正确删除表格的最后一行（边界条件测试）。",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Invalid Table Index",
        "purpose": "验证当提供的table_index超出文档中实际表格数量时，工具是否能拒绝请求并返回错误。",
        "args": {
          "table_index": 99,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Negative Index",
        "purpose": "验证工具是否能正确处理负数行索引（边界与错误处理测试）。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Read-Only Document",
        "purpose": "尝试从只读文档中删除表格行以验证权限控制和错误处理机制。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Non-Existent Row Index",
        "purpose": "验证当提供的row_index超出表格行数范围时，工具是否能拒绝请求并返回错误。",
        "args": {
          "table_index": 0,
          "row_index": 10
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with High Load Simulation",
        "purpose": "模拟高负载情况下调用delete_table_row，验证其稳定性。",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0059969425201416016,
        "is_functional_test": true
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Basic Table Cell Editing",
        "purpose": "验证edit_table_cell工具可以成功修改表格中指定单元格的内容，使用基本有效参数。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.004991054534912109,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell in Nonexistent Table",
        "purpose": "验证当指定的table_index超出文档中实际表格数量时，工具是否能正确返回错误。",
        "args": {
          "table_index": 999,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Invalid Table Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.007006645202636719,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Negative Indices",
        "purpose": "验证当传入负数作为行或列索引时，工具是否能够检测并拒绝无效索引。",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "col_index": -1,
          "new_content": "Negative Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Exceeding Row and Column Indices",
        "purpose": "验证当行或列索引超出目标表格维度时，工具是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "row_index": 999,
          "col_index": 999,
          "new_content": "Out of Bounds Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.003995180130004883,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Empty Content",
        "purpose": "验证当new_content为空字符串时，工具是否仍能成功更新单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 1,
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.0050084590911865234,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的新内容并更新单元格。",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "col_index": 2,
          "new_content": "Special!@#$%^&*()_+=-{}[]|\\:\"<>?/~`Chars"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell in Read-Only Document",
        "purpose": "尝试在只读文档中编辑表格单元格以验证权限控制和错误处理机制。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Should Not Be Editable"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Edit First and Last Cells in a Table",
        "purpose": "验证工具能够正确编辑表格中的第一个和最后一个单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "First Cell Updated"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.00450897216796875,
        "is_functional_test": true
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证merge_table_cells工具可以成功合并指定范围的表格单元格，使用常规参数。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "验证当起始行和结束行为同一行、起始列和结束列为同一列时，工具是否能正确处理单个单元格合并请求。",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "end_row": 2,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.007825374603271484,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row",
        "purpose": "验证工具是否能够正确合并整行的所有单元格。",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "end_row": 3,
          "start_col": 0,
          "end_col": 4
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column",
        "purpose": "验证工具是否能够正确合并整列的所有单元格。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 5,
          "start_col": 3,
          "end_col": 3
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.00800180435180664,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Rows and Columns",
        "purpose": "验证工具是否能够正确合并跨越多行多列的大范围单元格。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "end_row": 4,
          "start_col": 1,
          "end_col": 3
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.009997367858886719,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Start Greater Than End",
        "purpose": "验证当起始行或列大于结束行或列时，工具是否能自动纠正顺序并正确执行合并。",
        "args": {
          "table_index": 0,
          "start_row": 4,
          "end_row": 2,
          "start_col": 3,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.009996891021728516,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Non-Existent Table Index",
        "purpose": "验证当指定的表格索引超出文档实际表格数量时，工具是否能正确返回错误信息。",
        "args": {
          "table_index": 99,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells in Read-Only Table",
        "purpose": "尝试在只读表格中合并单元格以验证权限控制和错误处理机制。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.007992267608642578,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Basic Table Split at Valid Row",
        "purpose": "验证split_table工具可以成功在指定行分割表格，使用合法参数。",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "验证工具可以在第一行分割表格，测试边界值处理。",
        "args": {
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "验证工具可以在最后一行分割表格，测试边界条件。",
        "args": {
          "table_index": 2,
          "row_index": 5
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.007002115249633789,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Split Non-Existent Table",
        "purpose": "验证当尝试分割不存在的表格时，工具是否能正确返回错误信息。",
        "args": {
          "table_index": 99,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Negative Row Index",
        "purpose": "验证工具是否能够检测并拒绝负数行索引输入。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0029973983764648438,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Row Index Exceeding Table Size",
        "purpose": "验证当提供的行索引超过表格行数时，工具是否能优雅地处理该错误。",
        "args": {
          "table_index": 1,
          "row_index": 10
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": false
      },
      {
        "case_name": "Split Multiple Tables in Sequence",
        "purpose": "验证连续调用split_table工具对多个表格进行分割操作的稳定性。",
        "args": {
          "table_index": 0,
          "row_index": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check: Attempt Split on Protected Table",
        "purpose": "模拟尝试对只读或受保护表格执行分割操作，验证权限控制和安全性机制。",
        "args": {
          "table_index": 3,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Table split successfully.\"}"
        },
        "execution_time": 2.3154802322387695,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证set_page_margins工具可以使用默认参数成功设置页面边距。",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Page Margins",
        "purpose": "验证set_page_margins工具可以接受自定义的边距值并成功应用。",
        "args": {
          "top": 0.5,
          "right": 1.2,
          "bottom": 0.8,
          "left": 1.5
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.006012916564941406,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins",
        "purpose": "验证工具是否能正确处理所有边距设为0的情况。",
        "args": {
          "top": 0.0,
          "right": 0.0,
          "bottom": 0.0,
          "left": 0.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0099945068359375,
        "is_functional_test": true
      },
      {
        "case_name": "Set Negative Margins",
        "purpose": "验证工具是否拒绝负数作为边距值，确保输入合法性。",
        "args": {
          "top": -0.5,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.015384435653686523,
        "is_functional_test": false
      },
      {
        "case_name": "Set Very Large Margins",
        "purpose": "验证工具是否能够处理非常大的边距值（如超过纸张尺寸）。",
        "args": {
          "top": 100.0,
          "right": 100.0,
          "bottom": 100.0,
          "left": 100.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0063593387603759766,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Non-Number Input",
        "purpose": "验证工具是否能够检测并拒绝非数字类型的输入参数。",
        "args": {
          "top": "one",
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins on Read-Only Document",
        "purpose": "尝试在只读文档上设置页边距以验证权限控制和错误处理机制。",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.003331422805786133,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins Without All Required Parameters",
        "purpose": "验证当缺少必要参数时，工具是否能正确报错。",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nleft\n  Field required [type=missing, input_value={'top': 1.0, 'right': 1.0, 'bottom': 1.0}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      }
    ],
    "replace_section": [
      {
        "case_name": "Basic Section Replacement",
        "purpose": "验证replace_section工具可以成功替换文档中指定标题的章节内容。",
        "args": {
          "heading": "Introduction",
          "new_content": "This is the updated content for the Introduction section."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.009010553359985352,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Empty Content",
        "purpose": "验证当新内容为空字符串时，工具是否仍能正确替换指定章节内容。",
        "args": {
          "heading": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.010997772216796875,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section in Read-Only Document",
        "purpose": "尝试在只读文档中替换章节内容以验证权限控制和错误处理机制。",
        "args": {
          "heading": "Executive Summary",
          "new_content": "This should not be allowed in a read-only document."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.006998300552368164,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Special Characters in Heading",
        "purpose": "验证工具是否能够正确处理包含特殊字符的章节标题并成功替换内容。",
        "args": {
          "heading": "Section: !@#$%^&*()",
          "new_content": "This section has a special heading."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.007988929748535156,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Non-Existent Section",
        "purpose": "验证当尝试替换不存在的章节时，工具是否能正确处理并返回错误信息。",
        "args": {
          "heading": "NonExistentSection123",
          "new_content": "This content should not be applied as the section does not exist."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.003996133804321289,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Long Content",
        "purpose": "验证工具在处理长文本内容替换时的行为，确保不会因长度限制而失败。",
        "args": {
          "heading": "Detailed Analysis",
          "new_content": "This is a very long replacement content consisting of repeated text to test the upper limits of the replace_section function. This is only a test and should not be considered real content. This is a very long replacement content consisting of repeated text to test the upper limits of the replace_section function. This is only a test and should not be considered real content."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Null Heading",
        "purpose": "验证当传入空标题时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "heading": null,
          "new_content": "This replacement should fail due to null heading."
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nheading\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Null Content",
        "purpose": "验证当传入空内容时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "heading": "Overview",
          "new_content": null
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nnew_content\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.009987115859985352,
        "is_functional_test": false
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Basic Section Edit by Keyword",
        "purpose": "验证edit_section_by_keyword工具可以成功根据关键词定位并编辑文档中的段落内容。",
        "args": {
          "keyword": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Empty New Content",
        "purpose": "验证当new_content参数为空字符串时，工具是否仍能成功执行段落替换操作。",
        "args": {
          "keyword": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.002997159957885742,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Special Characters in Keyword",
        "purpose": "验证工具能否正确处理包含特殊字符的关键词，并完成段落替换。",
        "args": {
          "keyword": "Summary!@#",
          "new_content": "This section contains a keyword with special characters."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Long Keyword and Content",
        "purpose": "验证工具在处理长关键词和新内容时的行为，确保不会因长度限制而失败。",
        "args": {
          "keyword": "A_very_long_keyword_that_exceeds_normal_length_limit_and_tests_boundaries",
          "new_content": "This is an extremely long new content string used to test the upper limits of the edit_section_by_keyword function. It should be handled properly without any errors or truncation."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.006007671356201172,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Nonexistent Section by Keyword",
        "purpose": "验证当提供的关键词不存在于文档中时，工具是否能够优雅地处理错误情况。",
        "args": {
          "keyword": "NonExistentSection",
          "new_content": "This content should not be added because the keyword does not exist."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.007525205612182617,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section in Read-Only Document",
        "purpose": "尝试在一个只读文档中使用edit_section_by_keyword工具以验证权限控制和错误处理机制。",
        "args": {
          "keyword": "ReadOnlySection",
          "new_content": "This content should not be written to a read-only document."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.007002115249633789,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Null Input",
        "purpose": "验证当输入为null或None时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "keyword": null,
          "new_content": null
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 2 validation errors for edit_section_by_keywordArguments\nkeyword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nnew_content\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Invalid Argument Types",
        "purpose": "验证工具是否能够检测并拒绝非字符串类型的输入参数。",
        "args": {
          "keyword": 12345,
          "new_content": 67890
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 2 validation errors for edit_section_by_keywordArguments\nkeyword\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nnew_content\n  Input should be a valid string [type=string_type, input_value=67890, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Operation",
        "purpose": "验证save_as_document工具可以将当前文档保存到新路径，使用基本文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_saved.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document_saved.docx.\"}"
        },
        "execution_time": 0.022744178771972656,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Nonexistent Directory",
        "purpose": "验证当目标目录不存在时，工具是否能正确处理并创建路径或返回错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir\\auto_created_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_dir\\\\auto_created_file.docx.\"}"
        },
        "execution_time": 0.025003433227539062,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special Characters in File Name",
        "purpose": "验证文件路径中包含特殊字符时是否能够成功保存文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%&()_saved.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#%&()_saved.docx.\"}"
        },
        "execution_time": 0.026995182037353516,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Save to Read-Only Directory",
        "purpose": "尝试将文档保存到只读目录以验证权限控制和错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\attempted_new_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\attempted_new_file.docx.\"}"
        },
        "execution_time": 0.030001401901245117,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Long File Path",
        "purpose": "验证当文件路径长度接近系统限制时是否仍能成功保存文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_destination_path_this_is_an_extremely_long_file_name_that_exceeds_windows_max_path_length_limit_and_should_trigger_an_error_or_be_handled_properly.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_destination_path_this_is_an_extremely_long_file_name_that_exceeds_windows_max_path_length_limit_and_should_trigger_an_error_or_be_handled_properly.docx.\"}"
        },
        "execution_time": 0.029009103775024414,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Using Existing File Path",
        "purpose": "验证工具是否允许覆盖现有文件或将文件另存为已有文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_copy.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_document_copy.docx'\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Null File Path",
        "purpose": "验证当传入空或null的file_path参数时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Invalid Parameter Type",
        "purpose": "验证工具是否能够检测并拒绝非字符串类型的file_path参数。",
        "args": {
          "file_path": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证create_document_copy工具可以成功复制当前文档到指定路径，使用标准文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_copy.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_document_copy.docx'\"}"
        },
        "execution_time": 0.005051612854003906,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Read-Only Directory",
        "purpose": "尝试将文档复制到只读目录以验证权限控制和错误处理机制。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\attempted_new_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\attempted_new_file.docx.\"}"
        },
        "execution_time": 0.031003952026367188,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Special Characters in File Path",
        "purpose": "验证create_document_copy能否正确处理包含特殊字符的文件路径并成功复制文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_special!@#%&()_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\copied_special!@#%&()_file.docx.\"}"
        },
        "execution_time": 0.028993606567382812,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Nonexistent Directory",
        "purpose": "验证当目标路径中的目录不存在时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir\\auto_created_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_dir\\\\auto_created_file.docx.\"}"
        },
        "execution_time": 0.032514095306396484,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Invalid File Extension",
        "purpose": "验证工具是否能够检测并拒绝非法或不支持的文件扩展名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document_copy.txt"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document_copy.txt.\"}"
        },
        "execution_time": 0.0290067195892334,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Empty File Path",
        "purpose": "验证当传入空字符串作为文件路径时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.00454258918762207,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Null File Path",
        "purpose": "验证当传入null或None作为文件路径时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Path with Maximum Length",
        "purpose": "验证工具是否能够处理超过系统最大路径长度限制的文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_destination_path_this_is_an_extremely_long_file_name_that_exceeds_windows_max_path_length_limit_and_should_trigger_an_error_or_be_handled_properly.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_destination_path_this_is_an_extremely_long_file_name_that_exceeds_windows_max_path_length_limit_and_should_trigger_an_error_or_be_handled_properly.docx.\"}"
        },
        "execution_time": 0.029001474380493164,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 175
}