{
  "server_name": "text_file_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-text_file_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\text_file_mcp_server.py",
  "timestamp": "2025-07-13T23:10:46.827522",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    读取多个文本文件内容，支持按行范围读取并返回文件哈希值。\n\n    Args:\n        file_paths: 要读取的文件路径列表。\n        start_line: 开始行号（可选）。如果指定，则必须同时指定 end_line。\n        end_line: 结束行号（可选）。如果指定，则必须同时指定 start_line。\n\n    Returns:\n        一个包含文件内容和哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或行号范围无效。\n        RuntimeError: 如果读取文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_paths": {
            "items": {},
            "title": "File Paths",
            "type": "array"
          },
          "start_line": {
            "default": null,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_paths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    创建新文本文件并写入内容。\n\n    Args:\n        file_path: 要创建的文件路径。\n        content: 要写入的内容。\n\n    Returns:\n        一个包含操作结果和文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件已经存在。\n        RuntimeError: 如果创建文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    向现有文本文件追加内容。\n\n    Args:\n        file_path: 要追加内容的文件路径。\n        content: 要追加的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或哈希验证失败。\n        RuntimeError: 如果追加内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    删除文本文件中特定范围的内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        start_line: 开始行号（包括）。\n        end_line: 结束行号（包括）。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号范围无效或哈希验证失败。\n        RuntimeError: 如果删除内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    在文本文件的指定位置插入内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        line_number: 插入位置的行号（从1开始计数）。\n        content: 要插入的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号无效或哈希验证失败。\n        RuntimeError: 如果插入内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "line_number",
          "content"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    应用精确修改到文本文件，并支持哈希验证。\n\n    Args:\n        file_path: 要修改的文件路径。\n        old_content: 需要被替换的旧内容。\n        new_content: 替换的新内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、旧内容不匹配或哈希验证失败。\n        RuntimeError: 如果修改文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "old_content": {
            "title": "Old Content",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "old_content",
          "new_content"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "创建新文本文件并写入默认内容",
        "purpose": "验证工具可以成功创建一个新文本文件并写入指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": "This is a test file content."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt 创建成功\",\n  \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n}"
        },
        "execution_time": 0.005508899688720703,
        "is_functional_test": true
      },
      {
        "case_name": "尝试覆盖已存在的文件触发ValueError",
        "purpose": "验证当目标文件已存在时，工具是否正确抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "content": "This should not be written."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg 已经存在"
        },
        "execution_time": 0.007512569427490234,
        "is_functional_test": false
      },
      {
        "case_name": "使用空内容创建文件测试",
        "purpose": "验证工具是否允许写入空内容，并成功创建文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 创建成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "写入包含特殊字符的内容",
        "purpose": "验证工具是否能处理带有特殊字符的文本内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt",
          "content": "!@#$%^&*()_+{}|:\"<>?[];',./`~"
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_content.txt 创建成功\",\n  \"hash\": \"73c596905aa5df7e5c163dc3d60a551fc3d300b7f144c2339fbbc92abdead92d\"\n}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "在隐藏目录中创建文件",
        "purpose": "验证工具是否可以在隐藏目录中创建文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt",
          "content": "Hidden directory file content."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt 创建成功\",\n  \"hash\": \"71d558f8f3c92ec38702a69c138cf012786a9c7ea402c23a421d49ee7d513b67\"\n}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "尝试写入受保护的.git目录中的文件",
        "purpose": "验证工具是否能在受保护的版本控制目录中创建文件（安全边界测试）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt",
          "content": "This should not be allowed."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt 创建成功\",\n  \"hash\": \"f435e2ffc7e6e27b2421908d552382eda1858b0547f0e9243513a4cdcac8e5cb\"\n}"
        },
        "execution_time": 0.006006717681884766,
        "is_functional_test": false
      },
      {
        "case_name": "尝试写入非法路径触发错误处理",
        "purpose": "验证工具是否对无效或非法路径进行正确校验并抛出异常。",
        "args": {
          "file_path": "invalid/<path>:\\for_testing",
          "content": "Invalid path test content."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: [Errno 22] Invalid argument: 'invalid/<path>:\\\\for_testing'"
        },
        "execution_time": 0.006989240646362305,
        "is_functional_test": false
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "读取单个文件的全部内容",
        "purpose": "验证工具可以正确读取一个存在的文本文件的全部内容并返回其哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.004510164260864258,
        "is_functional_test": true
      },
      {
        "case_name": "读取多个文件的全部内容",
        "purpose": "验证工具支持同时读取多个文件的内容和哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_content.txt\": {\n    \"content\": \"!@#$%^&*()_+{}|:\\\"<>?[];',./`~\",\n    \"hash\": \"73c596905aa5df7e5c163dc3d60a551fc3d300b7f144c2339fbbc92abdead92d\"\n  }\n}"
        },
        "execution_time": 0.008997917175292969,
        "is_functional_test": true
      },
      {
        "case_name": "按行范围读取文件内容",
        "purpose": "验证工具能正确读取指定行范围内的内容（例如第1到第3行）。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ],
          "start_line": 1,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt 的行号范围无效"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "读取空文件内容",
        "purpose": "验证工具在读取一个空文件时的行为是否符合预期，包括返回空字符串和对应哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "尝试读取隐藏目录中的文件",
        "purpose": "验证工具能否访问隐藏目录下的文件并正常读取内容。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt\": {\n    \"content\": \"Hidden directory file content.\",\n    \"hash\": \"71d558f8f3c92ec38702a69c138cf012786a9c7ea402c23a421d49ee7d513b67\"\n  }\n}"
        },
        "execution_time": 0.010000228881835938,
        "is_functional_test": true
      },
      {
        "case_name": "尝试读取非文本文件触发错误",
        "purpose": "验证工具在尝试读取非文本文件（如图片）时是否会抛出异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "读取受保护.git目录中的文件",
        "purpose": "验证工具是否能访问版本控制相关的敏感目录中的文件内容。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt\": {\n    \"content\": \"This should not be allowed.\",\n    \"hash\": \"f435e2ffc7e6e27b2421908d552382eda1858b0547f0e9243513a4cdcac8e5cb\"\n  }\n}"
        },
        "execution_time": 0.006009101867675781,
        "is_functional_test": false
      },
      {
        "case_name": "指定无效行号范围触发ValueError",
        "purpose": "验证当提供的行号超出文件实际行数或为负数时，是否抛出ValueError。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ],
          "start_line": -1,
          "end_line": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt 的行号范围无效"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": false
      },
      {
        "case_name": "仅提供start_line而未提供end_line触发错误",
        "purpose": "验证工具是否强制要求start_line和end_line必须同时出现。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
          ],
          "start_line": 2
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.005002260208129883,
        "is_functional_test": false
      },
      {
        "case_name": "读取不存在的文件路径触发错误",
        "purpose": "验证工具在尝试读取不存在的文件路径时是否会抛出ValueError。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.007996559143066406,
        "is_functional_test": false
      },
      {
        "case_name": "读取带有特殊字符的文件名",
        "purpose": "验证工具是否能处理包含特殊字符的文件名。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.txt"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.txt 不存在"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "读取超大文件部分内容",
        "purpose": "验证工具在处理大型文本文件时是否能够按行范围高效读取部分数据。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_test_file.txt"
          ],
          "start_line": 99999,
          "end_line": 100001
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_test_file.txt 不存在"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": true
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "向现有文件追加文本内容",
        "purpose": "验证工具能够成功向一个存在的文本文件追加新内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": " This is appended content."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\",\n  \"hash\": \"11c563fad8dccfea152b73040c77fe637fe6f0a6b717b1a6c9247bb5881f7957\"\n}"
        },
        "execution_time": 0.004932880401611328,
        "is_functional_test": true
      },
      {
        "case_name": "追加空字符串到现有文件",
        "purpose": "验证工具是否允许追加空字符串而不影响文件原有内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.003844738006591797,
        "is_functional_test": true
      },
      {
        "case_name": "追加特殊字符内容到文件",
        "purpose": "验证工具是否能正确处理包含特殊字符的追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt",
          "content": " More special chars: !@#$%^&*"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_content.txt\",\n  \"hash\": \"a0d2bb10e314c2f7fdfb62dd0b0015938c261d8e195eea3504d39bd33e13c172\"\n}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "尝试追加内容到不存在的文件触发错误",
        "purpose": "验证当目标文件不存在时，工具是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "content": "This should not be written."
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.006997585296630859,
        "is_functional_test": false
      },
      {
        "case_name": "向隐藏目录中的文件追加内容",
        "purpose": "验证工具是否支持对隐藏目录下的文件进行内容追加操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt",
          "content": " Appended hidden file content."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt\",\n  \"hash\": \"68048e1ca302d29f5f2535bfe39831d35b33d097d5f61f5da763aea59f111338\"\n}"
        },
        "execution_time": 0.003994941711425781,
        "is_functional_test": true
      },
      {
        "case_name": "向受保护的.git目录文件追加内容",
        "purpose": "验证工具是否允许在版本控制敏感目录中追加内容（安全边界测试）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt",
          "content": " This is a security test append."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt\",\n  \"hash\": \"bc91fce886b65ec6621e94f9aec209f189ce8a59c6cba3565f41b4100cf430a9\"\n}"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": false
      },
      {
        "case_name": "使用预期哈希值验证追加后文件内容",
        "purpose": "验证工具在提供expected_hash参数时是否能正确校验文件内容一致性。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "content": " Additional line of text.",
          "expected_hash": "6d1f50249b3e7a485e534bfa5e735a6001065a45752c8627045567035956f73e"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: 11c563fad8dccfea152b73040c77fe637fe6f0a6b717b1a6c9247bb5881f7957, 预期哈希: 6d1f50249b3e7a485e534bfa5e735a6001065a45752c8627045567035956f73e"
        },
        "execution_time": 0.0062847137451171875,
        "is_functional_test": true
      },
      {
        "case_name": "尝试追加内容到非文本文件触发错误",
        "purpose": "验证工具是否能识别并阻止向非文本文件追加内容的操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "content": "Binary files should not accept text appending."
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": false
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "在指定行号插入内容并验证哈希",
        "purpose": "验证工具可以在文件的指定行号成功插入内容，并返回正确的操作结果和新文件哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": 1,
          "content": "Inserted line at the beginning.",
          "expected_hash": "73e8f256a9c0d4bfa7d7c6d6e8f1b5a4d3c2b1e0a9f8e7d6c5b4a3"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 哈希验证失败。当前文件哈希: 11c563fad8dccfea152b73040c77fe637fe6f0a6b717b1a6c9247bb5881f7957, 预期哈希: 73e8f256a9c0d4bfa7d7c6d6e8f1b5a4d3c2b1e0a9f8e7d6c5b4a3"
        },
        "execution_time": 0.004030942916870117,
        "is_functional_test": true
      },
      {
        "case_name": "尝试插入到超出文件行数的位置",
        "purpose": "验证当提供的行号大于文件总行数时，是否仍然能正确插入内容至文件末尾。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": 100,
          "content": "This should be appended to the end."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt 的行号无效"
        },
        "execution_time": 0.004008054733276367,
        "is_functional_test": true
      },
      {
        "case_name": "插入空内容",
        "purpose": "验证工具是否允许插入空字符串内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": 1,
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\",\n  \"hash\": \"48aa9b8910ea0aef0fadcbd0a59523adf41e7187744157cf4c0e795fe7c5ffe7\"\n}"
        },
        "execution_time": 0.007003307342529297,
        "is_functional_test": true
      },
      {
        "case_name": "插入包含特殊字符的内容",
        "purpose": "验证工具能否处理插入内容中包含特殊字符的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": 2,
          "content": "!@#$%^&*()_+{}|:\"<>?[];',./`~"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt\",\n  \"hash\": \"eabe2763e17456622dd9b4529636fe8401941baf3503413938212619b34ff09b\"\n}"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": true
      },
      {
        "case_name": "插入内容到隐藏目录下的文件",
        "purpose": "验证工具是否支持在隐藏目录中的文本文件内插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt",
          "line_number": 1,
          "content": "Hidden directory insertion test."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt\",\n  \"hash\": \"3be6a49a857186566953c2f4754058029f62f7423b03693b0527f75dc30aa9f4\"\n}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "尝试写入受保护的.git目录中的文件",
        "purpose": "验证工具是否能在受保护的版本控制目录中插入内容（安全边界测试）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt",
          "line_number": 1,
          "content": "This should not be allowed."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt\",\n  \"hash\": \"75e71f7cca717c3b0e6592b66312bd58181a5dd5bdb515c517827e32fe8096bc\"\n}"
        },
        "execution_time": 0.0070037841796875,
        "is_functional_test": false
      },
      {
        "case_name": "提供错误的文件路径触发异常",
        "purpose": "验证工具在目标文件路径不存在或无效时是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "line_number": 1,
          "content": "This should fail due to missing file."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.004561662673950195,
        "is_functional_test": false
      },
      {
        "case_name": "提供无效的行号（小于1）",
        "purpose": "验证工具是否对非法行号进行校验并抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": -1,
          "content": "Invalid line number test."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt 的行号无效"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "插入内容后验证预期哈希不匹配",
        "purpose": "验证当提供的expected_hash与实际文件哈希不符时是否抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "line_number": 1,
          "content": "Content with incorrect hash check.",
          "expected_hash": "invalid_hash_value"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 哈希验证失败。当前文件哈希: eabe2763e17456622dd9b4529636fe8401941baf3503413938212619b34ff09b, 预期哈希: invalid_hash_value"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": false
      },
      {
        "case_name": "插入内容到多行文本文件中间",
        "purpose": "验证工具可以准确地将内容插入到现有文本文件的中间位置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt",
          "line_number": 2,
          "content": "Inserted in the middle of special chars file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_content.txt\",\n  \"hash\": \"fee82ff663b3aed5c79154a7cb42850ac26f05ec0dcfdc3ff1c7cef079a77fc3\"\n}"
        },
        "execution_time": 0.005142927169799805,
        "is_functional_test": true
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "成功替换文件中的内容并验证哈希值",
        "purpose": "验证工具能够成功替换文件中指定的旧内容为新内容，并返回正确的哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "old_content": "This is a test file content.",
          "new_content": "This is the modified test file content.",
          "expected_hash": "dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 哈希验证失败。当前文件哈希: eabe2763e17456622dd9b4529636fe8401941baf3503413938212619b34ff09b, 预期哈希: dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "尝试替换不存在的文件内容触发ValueError",
        "purpose": "验证工具在尝试修改不存在的文件时是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "old_content": "This content does not exist.",
          "new_content": "New content."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "替换内容时旧内容不匹配触发ValueError",
        "purpose": "验证工具在提供的旧内容与文件实际内容不匹配时是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "old_content": "This content does not exist.",
          "new_content": "New content."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 未找到需要替换的旧内容: This content does not exist."
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": false
      },
      {
        "case_name": "使用空内容替换文件内容",
        "purpose": "验证工具是否支持将文件内容替换为空字符串。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "old_content": "",
          "new_content": "This file was previously empty."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 内容修改成功\",\n  \"hash\": \"5abae79932759bbc57ade639a2b9bea3b8167ec35b59e1a0dd0a6ec29236ec1d\"\n}"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": true
      },
      {
        "case_name": "替换包含特殊字符的文件内容",
        "purpose": "验证工具是否能处理包含特殊字符的文本内容替换。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt",
          "old_content": "!@#$%^&*()_+{}|:\"<>?[];',./`~",
          "new_content": "New special characters: ~!@#$%^&*()_+=-`"
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_content.txt 内容修改成功\",\n  \"hash\": \"c6651c2b5314ffb2297a0029ada2b5cbc68270be52769af404ed8a0cdf76b307\"\n}"
        },
        "execution_time": 0.007936954498291016,
        "is_functional_test": true
      },
      {
        "case_name": "尝试在受保护的.git目录中修改文件内容",
        "purpose": "验证工具是否能修改版本控制敏感目录中的文件内容（安全边界测试）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt",
          "old_content": "This should not be allowed.",
          "new_content": "Modified content in .git directory."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt 内容修改成功\",\n  \"hash\": \"b3d3fe7bff585ae50cb414334a4a450cdd54cebc2bbfd4bacc00cf027243e116\"\n}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "替换隐藏目录中的文件内容",
        "purpose": "验证工具是否能修改隐藏目录中的文件内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt",
          "old_content": "Hidden directory file content.",
          "new_content": "Updated hidden file content."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt 内容修改成功\",\n  \"hash\": \"d80622e1125d975c98fcef371439e10d9bd215cc51b861d97e8ef0a1b0fa3e6f\"\n}"
        },
        "execution_time": 0.006997346878051758,
        "is_functional_test": true
      },
      {
        "case_name": "哈希验证失败时抛出ValueError",
        "purpose": "验证工具在提供的expected_hash与实际哈希不匹配时是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "old_content": "This is a test file content.",
          "new_content": "This is the modified test file content.",
          "expected_hash": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 哈希验证失败。当前文件哈希: eabe2763e17456622dd9b4529636fe8401941baf3503413938212619b34ff09b, 预期哈希: 0000000000000000000000000000000000000000000000000000000000000000"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "删除单个文本文件的指定行内容",
        "purpose": "验证工具可以成功删除指定文本文件中特定范围的行内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt 的内容删除成功\",\n  \"hash\": \"211ee26764034f5dcc7199241c4868a22d5d908f10f4cd7a22bb84090c071e15\"\n}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "删除多行内容并验证哈希值",
        "purpose": "验证删除多个行内容后，文件的哈希值与预期一致。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_content.txt",
          "start_line": 1,
          "end_line": 1,
          "expected_hash": "73c596905aa5df7e5c163dc3d60a551fc3d300b7f144c2339fbbc92abdead92d"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 哈希验证失败。当前文件哈希: c6651c2b5314ffb2297a0029ada2b5cbc68270be52769af404ed8a0cdf76b307, 预期哈希: 73c596905aa5df7e5c163dc3d60a551fc3d300b7f144c2339fbbc92abdead92d"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除空文件内容",
        "purpose": "验证工具在尝试删除空文件内容时是否抛出错误或正确处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 的内容删除成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.007995843887329102,
        "is_functional_test": true
      },
      {
        "case_name": "删除隐藏目录中的文件内容",
        "purpose": "验证工具是否可以访问隐藏目录下的文件并删除指定行内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_output.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_output.txt 的内容删除成功\",\n  \"hash\": \"eab3ddec07541f9587e2a070013b42bd65614e74b7f57a6ba29f976313608a87\"\n}"
        },
        "execution_time": 0.0050601959228515625,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除受保护.git目录中的文件内容",
        "purpose": "验证工具是否能访问版本控制相关的敏感目录中的文件并删除内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious_file.txt 的内容删除成功\",\n  \"hash\": \"bc91fce886b65ec6621e94f9aec209f189ce8a59c6cba3565f41b4100cf430a9\"\n}"
        },
        "execution_time": 0.002997159957885742,
        "is_functional_test": false
      },
      {
        "case_name": "提供无效的行号范围触发错误",
        "purpose": "验证当提供的行号超出文件实际行数或为负数时，是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt",
          "start_line": -1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt 的行号范围无效"
        },
        "execution_time": 0.006022930145263672,
        "is_functional_test": false
      },
      {
        "case_name": "提供无效文件路径触发错误",
        "purpose": "验证工具在尝试操作不存在的文件路径时是否会抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "删除带有特殊字符的文件内容",
        "purpose": "验证工具是否能处理包含特殊字符的文件名并删除指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.txt 不存在"
        },
        "execution_time": 0.002997159957885742,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 53
}