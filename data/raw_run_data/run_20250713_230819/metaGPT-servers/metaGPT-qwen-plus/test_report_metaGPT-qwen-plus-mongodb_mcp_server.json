{
  "server_name": "mongodb_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-mongodb_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\mongodb_mcp_server.py",
  "timestamp": "2025-07-13T23:08:26.756792",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON字符串。\n    \n    Raises:\n        OperationFailure: 如果获取数据库列表时发生错误。\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 要列出集合的数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON字符串。\n    \n    Raises:\n        ValueError: 如果数据库名称为空或空白字符。\n        OperationFailure: 如果获取集合列表时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 要插入文档的数据库名称 (必填)。\n        collection_name: 要插入文档的集合名称 (必填)。\n        document: 要插入的文档数据 (必填)，以字典形式提供。\n\n    Returns:\n        一个字符串，表示插入成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称为空，或者文档不是字典类型。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 要查询的数据库名称 (必填)。\n        collection_name: 要查询的集合名称 (必填)。\n        query: 查询条件 (必填)，以字典形式提供。\n        projection: 投影参数 (可选)，指定要返回的字段。\n        limit: 限制返回结果数量 (可选)，0表示无限制。\n\n    Returns:\n        一个包含查询结果的JSON字符串。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要更新文档的数据库名称 (必填)。\n        collection_name: 要更新文档的集合名称 (必填)。\n        query: 更新条件 (必填)，以字典形式提供。\n        update: 更新内容 (必填)，以字典形式提供。\n        multi: 是否更新多个文档 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示更新成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称、查询条件或更新内容无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要删除文档的数据库名称 (必填)。\n        collection_name: 要删除文档的集合名称 (必填)。\n        query: 删除条件 (必填)，以字典形式提供。\n        multi: 是否批量删除模式 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示删除成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "Basic List Databases Success",
        "purpose": "验证在MongoDB服务器正常运行时，能够成功列出所有数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0040073394775390625,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases With No Database Present",
        "purpose": "验证当MongoDB中没有任何用户创建的数据库时，返回为空列表。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0060117244720458984,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases When Server Not Running",
        "purpose": "验证当MongoDB服务器未启动时，工具是否抛出OperationFailure异常。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.008509397506713867,
        "is_functional_test": false
      },
      {
        "case_name": "List Databases With Invalid Permissions",
        "purpose": "验证当前连接用户没有权限访问数据库列表时，是否能正确处理错误。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "List Databases From Secure Connection",
        "purpose": "验证使用安全连接（如TLS/SSL）配置的MongoDB实例能否正常获取数据库列表。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases With Special Characters in Names",
        "purpose": "验证数据库名称包含特殊字符时能否被正确列出。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.006939888000488281,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases With Maximum Number of DBs",
        "purpose": "验证当数据库数量达到极限时能否正常处理并返回完整列表。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases With Hidden System DBs",
        "purpose": "验证是否仅列出用户数据库，排除系统数据库（如admin、local等）。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.005082368850708008,
        "is_functional_test": true
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "Basic List Collections Success",
        "purpose": "验证在指定数据库存在时，能够成功列出该数据库中的所有集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections From Database With No Collections",
        "purpose": "验证当指定数据库中没有任何集合时，返回空列表。",
        "args": {
          "database_name": "empty_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.003741741180419922,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections With Invalid Database Name",
        "purpose": "验证当提供空白或空字符串作为数据库名称时，是否抛出ValueError。",
        "args": {
          "database_name": ""
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections From Nonexistent Database",
        "purpose": "验证当尝试列出不存在的数据库中的集合时，是否返回空列表或抛出OperationFailure。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections With Special Characters in DB Name",
        "purpose": "验证数据库名称包含特殊字符时能否正确列出其集合。",
        "args": {
          "database_name": "db_with@#$_specialchars"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections When Server Not Running",
        "purpose": "验证当MongoDB服务器未启动时，工具是否抛出OperationFailure异常。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0060024261474609375,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections With Maximum Length DB Name",
        "purpose": "验证当数据库名称达到最大长度限制时，是否能正常列出集合。",
        "args": {
          "database_name": "this_is_a_very_long_database_name_that_tests_the_boundary_conditions_of_the_tool"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0033791065216064453,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections With Hidden System Database",
        "purpose": "验证是否不能列出系统隐藏数据库（如admin、local）中的集合。",
        "args": {
          "database_name": "admin"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": false
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "Basic Insert Document Success",
        "purpose": "验证在数据库和集合存在的情况下，能够成功插入一个合法文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Alice",
            "age": 30,
            "city": "New York"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document With Empty Database Name",
        "purpose": "验证当提供空字符串作为数据库名称时，是否抛出ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "name": "Bob",
            "age": 25
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.008002519607543945,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document With Empty Collection Name",
        "purpose": "验证当提供空字符串作为集合名称时，是否抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "title": "Empty Collection Test"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.007423877716064453,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Non-Dictionary Document",
        "purpose": "验证当提供的文档不是字典类型时，是否抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": "[1, 2, 3]"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value=[1, 2, 3], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document Into Nonexistent Database",
        "purpose": "验证当目标数据库不存在时，是否能自动创建并插入文档（取决于MongoDB配置）。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "new_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document With Special Characters In DB And Collection Name",
        "purpose": "验证数据库名和集合名包含特殊字符时能否正确插入文档。",
        "args": {
          "database_name": "db_with@#$_specialchars",
          "collection_name": "col_with@#$_specialchars",
          "document": {
            "data": "special_chars_content"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document When Server Not Running",
        "purpose": "验证当MongoDB服务器未启动时，是否能正确处理连接失败的情况。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "status": "offline_test"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": false
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "Basic Find Documents Success",
        "purpose": "验证在指定数据库和集合中能成功查询符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Projection",
        "purpose": "验证使用投影参数时可以正确筛选返回字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "projection": {
            "_id": 0,
            "name": 1
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Limit",
        "purpose": "验证限制返回结果数量功能是否正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Empty Query",
        "purpose": "验证当查询条件为空字典时，是否返回集合中的所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Complex Query",
        "purpose": "验证复杂查询条件（如嵌套字段、比较操作符）能否正确执行。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "age": {
              "$gte": 25
            },
            "status": "active"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Invalid Database Name",
        "purpose": "验证当提供无效数据库名称时是否抛出ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'database_name' 不能为空。"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Find Documents From Nonexistent Collection",
        "purpose": "验证当集合不存在时是否返回空结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004003047943115234,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents With Special Characters in Names",
        "purpose": "验证数据库或集合名称包含特殊字符时能否正确查询文档。",
        "args": {
          "database_name": "db_with@#$_specialchars",
          "collection_name": "coll_with@#$_specialchars",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005855083465576172,
        "is_functional_test": true
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "Basic Update Document Success",
        "purpose": "验证在指定数据库和集合中，使用有效查询条件和更新内容成功更新单个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Update Multiple Documents Successfully",
        "purpose": "验证设置multi=True时，能够更新多个符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          },
          "update": {
            "$set": {
              "status": "inactive"
            }
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Update Document With Invalid Database Name",
        "purpose": "验证当提供无效数据库名称（如空字符串）时，是否抛出ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "name": "Bob"
          },
          "update": {
            "$set": {
              "age": 25
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.00900125503540039,
        "is_functional_test": false
      },
      {
        "case_name": "Update Document In Nonexistent Collection",
        "purpose": "验证尝试更新不存在集合中的文档时，是否返回失败消息或创建新集合并插入文档（根据MongoDB行为）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "name": "Charlie"
          },
          "update": {
            "$set": {
              "age": 40
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0039942264556884766,
        "is_functional_test": true
      },
      {
        "case_name": "Update Document With Special Characters in Field Names",
        "purpose": "验证字段名包含特殊字符时能否正确执行更新操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "user@domain.com": true
          },
          "update": {
            "$set": {
              "preferences#theme": "dark"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      },
      {
        "case_name": "Update Document Without Multi Flag Updates Only One",
        "purpose": "验证默认情况下（multi=False），仅更新第一个匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "department": "HR"
          },
          "update": {
            "$set": {
              "location": "HQ"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Update Document When Server Not Running",
        "purpose": "验证当MongoDB服务器未启动时，工具是否抛出连接异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Eve"
          },
          "update": {
            "$set": {
              "age": 50
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.007004976272583008,
        "is_functional_test": false
      },
      {
        "case_name": "Update Document With Maximum Length Fields",
        "purpose": "验证字段长度达到极限时能否正常执行更新。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "key_with_very_long_name_that_tests_boundary_conditions": "test_value"
          },
          "update": {
            "$set": {
              "another_long_key_name_with_max_length_allowed_by_mongodb": "updated_value"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "Basic Delete Document Success",
        "purpose": "验证在指定数据库和集合中存在符合条件的文档时，能够成功删除单个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Multiple Documents Success",
        "purpose": "验证在启用 multi 模式时，能够批量删除符合条件的所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "temp"
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Document With Empty Query",
        "purpose": "验证使用空查询条件时是否抛出 ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.009014606475830078,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Document From Nonexistent Collection",
        "purpose": "验证尝试从不存在的集合中删除文档时是否返回失败信息。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004227161407470703,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Document With Special Characters in DB Name",
        "purpose": "验证数据库名称包含特殊字符时能否正确执行删除操作。",
        "args": {
          "database_name": "db_with@#$_specialchars",
          "collection_name": "test_collection",
          "query": {
            "name": "special_char_doc"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Document When Server Not Running",
        "purpose": "验证当MongoDB服务器未启动时，工具是否能正确处理连接失败情况。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.008223295211791992,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Document With Maximum Length DB and Collection Name",
        "purpose": "验证当数据库名和集合名达到最大长度限制时，能否正常删除文档。",
        "args": {
          "database_name": "this_is_a_very_long_database_name_that_tests_the_boundary_conditions_of_the_tool",
          "collection_name": "this_is_a_very_long_collection_name_that_tests_the_boundary_conditions",
          "query": {
            "key": "value"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029942989349365234,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Document From System Database",
        "purpose": "验证是否不能对系统隐藏数据库（如 admin）中的集合执行删除操作。",
        "args": {
          "database_name": "admin",
          "collection_name": "system.users",
          "query": {
            "user": "test_user"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 47
}