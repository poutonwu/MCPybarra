{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_mongodb_manager",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_mongodb_manager/refined/server.py",
  "timestamp": "2025-07-16T12:04:02.660961",
  "tools": [
    {
      "name": "mcp_health_check",
      "description": "\n    Checks if the MongoDB server is reachable and responsive.\n\n    Returns:\n        A string indicating the health status of the MongoDB connection.\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_health_checkArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_databases",
      "description": "\n    Lists all available databases in the MongoDB instance.\n\n    Returns:\n        A list of strings, where each string represents a database name.\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    Lists all collections in a specified MongoDB database.\n\n    Args:\n        database_name: The name of the database to query.\n\n    Returns:\n        A list of strings, where each string represents a collection name in the specified database.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    Inserts a new document into a specified MongoDB collection.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        document: The document to insert.\n\n    Returns:\n        A string indicating the success or failure of the insertion, including the inserted document's ID if successful.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    Queries documents in a specified MongoDB collection, with support for projection and result limiting.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria. Defaults to {} (all documents).\n        projection: The fields to include/exclude in the results. Defaults to None (all fields).\n        limit: The maximum number of documents to return. Defaults to 0 (no limit).\n\n    Returns:\n        A list of dictionaries, where each dictionary represents a matching document.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Query"
          },
          "projection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Projection"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    Updates documents in a specified MongoDB collection, supporting single or multiple updates.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria to select documents to update.\n        update: The update operations to apply.\n        multi: Whether to update multiple documents. Defaults to False.\n\n    Returns:\n        A string indicating the success or failure of the update, including the number of documents modified.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    Deletes documents from a specified MongoDB collection, supporting single or batch deletion.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria to select documents to delete.\n        multi: Whether to delete multiple documents. Defaults to False.\n\n    Returns:\n        A string indicating the success or failure of the deletion, including the number of documents deleted.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_drop_database",
      "description": "\n    Drops (deletes) an entire database.\n\n    Args:\n        database_name: The name of the database to drop.\n\n    Returns:\n        A string indicating whether the database was successfully dropped.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_drop_databaseArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_drop_collection",
      "description": "\n    Drops (deletes) a specific collection from a database.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection to drop.\n\n    Returns:\n        A string indicating whether the collection was successfully dropped.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_drop_collectionArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_health_check": [
      {
        "case_name": "MongoDB服务正常运行时健康检查",
        "purpose": "验证当MongoDB服务器可访问且响应正常时，工具返回正确的健康状态信息。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.007020473480224609,
        "is_functional_test": true
      },
      {
        "case_name": "MongoDB服务不可达时错误处理",
        "purpose": "测试当MongoDB服务器无法连接时，工具是否能正确识别并返回相应的错误信息。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.003131866455078125,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB响应超时时的健壮性测试",
        "purpose": "模拟MongoDB响应延迟或网络不稳定情况，验证工具是否具备合理的超时处理机制。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB认证失败时的安全反馈",
        "purpose": "测试在MongoDB需要认证但未提供凭证的情况下，工具是否会安全地拒绝连接并返回明确错误。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.00553131103515625,
        "is_functional_test": false
      },
      {
        "case_name": "长时间运行下的稳定性测试",
        "purpose": "验证mcp_health_check在持续运行过程中是否会出现内存泄漏或性能下降问题。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.00446772575378418,
        "is_functional_test": false
      },
      {
        "case_name": "高并发请求下健康检查的可靠性",
        "purpose": "测试在多个线程/进程同时调用该工具时，是否仍能准确反映MongoDB服务状态。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.004906415939331055,
        "is_functional_test": false
      },
      {
        "case_name": "无任何参数输入时的默认行为验证",
        "purpose": "确认工具在没有任何参数传入时是否使用默认配置进行健康检查。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.006536722183227539,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径文件是否存在干扰测试",
        "purpose": "验证系统中存在长文件名、特殊字符文件名等情况下，是否会影响MongoDB健康检查功能。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      }
    ],
    "mcp_list_databases": [
      {
        "case_name": "列出所有可用数据库的基本功能测试",
        "purpose": "验证在MongoDB服务正常运行时，mcp_list_databases能够正确列出所有可用数据库。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.0035314559936523438,
        "is_functional_test": true
      },
      {
        "case_name": "MongoDB服务不可达时的错误处理",
        "purpose": "验证当MongoDB服务不可达时，mcp_list_databases能够正确处理错误并返回适当的错误信息。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.0025031566619873047,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB连接超时情况下的错误响应",
        "purpose": "模拟MongoDB连接超时的情况，验证工具是否具备合理的超时处理机制。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.004525423049926758,
        "is_functional_test": false
      },
      {
        "case_name": "认证失败时的安全反馈",
        "purpose": "测试在MongoDB需要认证但未提供凭证的情况下，工具是否会安全地拒绝连接并返回明确错误。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.003508329391479492,
        "is_functional_test": false
      },
      {
        "case_name": "长时间运行下的稳定性测试",
        "purpose": "验证mcp_list_databases在持续运行过程中是否会出现内存泄漏或性能下降问题。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.007187366485595703,
        "is_functional_test": false
      },
      {
        "case_name": "高并发请求下数据库列表获取的可靠性",
        "purpose": "测试在多个线程/进程同时调用该工具时，是否仍能准确返回数据库列表。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.005347728729248047,
        "is_functional_test": false
      },
      {
        "case_name": "无任何参数输入时的默认行为验证",
        "purpose": "确认工具在没有任何参数传入时是否使用默认配置进行数据库列表获取。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.006512641906738281,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径文件是否存在干扰测试",
        "purpose": "验证系统中存在长文件名、特殊字符文件名等情况下，是否会影响MongoDB数据库列表获取功能。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_db_name",
          "local"
        ],
        "execution_time": 0.003047943115234375,
        "is_functional_test": false
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "列出指定数据库中的集合的基本功能测试",
        "purpose": "验证在MongoDB服务正常运行且指定数据库存在时，mcp_list_collections能够正确列出该数据库中的所有集合。",
        "args": {
          "database_name": "admin"
        },
        "response": [
          "system.users",
          "system.version",
          "system_logs"
        ],
        "execution_time": 0.003793001174926758,
        "is_functional_test": true
      },
      {
        "case_name": "数据库名称为空时的错误处理",
        "purpose": "验证当提供空数据库名称时，工具是否能正确处理并返回错误信息。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的数据库名称输入测试",
        "purpose": "验证当指定的数据库名称不存在时，工具是否能正确返回空列表或适当的错误信息。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "Database 'nonexistent_db' does not exist"
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称的兼容性测试",
        "purpose": "测试工具是否能够处理包含特殊字符的数据库名称并正确返回集合列表或错误信息。",
        "args": {
          "database_name": "invalid@db#name"
        },
        "response": {
          "result": "Database 'invalid@db#name' does not exist"
        },
        "execution_time": 0.00997018814086914,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB服务不可达时的错误处理",
        "purpose": "验证当MongoDB服务不可达时，mcp_list_collections是否能够正确处理连接失败并返回适当的错误信息。",
        "args": {
          "database_name": "admin"
        },
        "response": [
          "system.users",
          "system.version",
          "system_logs"
        ],
        "execution_time": 0.0050051212310791016,
        "is_functional_test": false
      },
      {
        "case_name": "认证失败时的安全反馈",
        "purpose": "测试在MongoDB需要认证但未提供凭证的情况下，工具是否会安全地拒绝访问并返回明确错误。",
        "args": {
          "database_name": "admin"
        },
        "response": [
          "system.users",
          "system.version",
          "system_logs"
        ],
        "execution_time": 0.006028175354003906,
        "is_functional_test": false
      },
      {
        "case_name": "长时间运行下的稳定性测试",
        "purpose": "验证mcp_list_collections在持续运行过程中是否会出现内存泄漏或性能下降问题。",
        "args": {
          "database_name": "admin"
        },
        "response": [
          "system.users",
          "system.version",
          "system_logs"
        ],
        "execution_time": 0.0050923824310302734,
        "is_functional_test": false
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "基本文档插入功能测试",
        "purpose": "验证使用有效数据库名、集合名和文档时，mcp_insert_document能够成功插入文档并返回插入ID。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Test Document",
            "content": "This is a test document."
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 687724f407621992d843828c"
        },
        "execution_time": 0.016496896743774414,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符数据库名称插入测试",
        "purpose": "验证当数据库名称包含特殊字符时，工具是否能正确处理或抛出适当错误。",
        "args": {
          "database_name": "db_with_@special#chars",
          "collection_name": "test_collection",
          "document": {
            "name": "Special DB Test"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 687724f407621992d843828d"
        },
        "execution_time": 0.024925947189331055,
        "is_functional_test": false
      },
      {
        "case_name": "无效数据库名称插入失败测试",
        "purpose": "验证当数据库名称非法（如空字符串）时，工具是否能拒绝插入并返回错误信息。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "name": "Empty DB Name Test"
          }
        },
        "response": {
          "result": "Error inserting document: database name cannot be the empty string"
        },
        "execution_time": 0.007207632064819336,
        "is_functional_test": false
      },
      {
        "case_name": "无效集合名称插入失败测试",
        "purpose": "验证当集合名称非法（如空字符串）时，工具是否能拒绝插入并返回错误信息。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "name": "Empty Collection Name Test"
          }
        },
        "response": {
          "result": "Error inserting document: collection names cannot be empty"
        },
        "execution_time": 0.004020214080810547,
        "is_functional_test": false
      },
      {
        "case_name": "重复插入相同文档测试",
        "purpose": "验证重复插入完全相同的文档对象是否会生成不同ID且均成功插入。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Duplicate Document",
            "timestamp": "2025-05-09T15:00:00Z"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 687724f407621992d843828e"
        },
        "execution_time": 0.004565000534057617,
        "is_functional_test": true
      },
      {
        "case_name": "无权限写入时的安全反馈测试",
        "purpose": "验证在MongoDB用户没有写入权限的情况下，工具是否安全地拒绝插入操作并返回明确错误。",
        "args": {
          "database_name": "read_only_db",
          "collection_name": "locked_collection",
          "document": {
            "name": "Unauthorized Insert Attempt"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 687724f407621992d843828f"
        },
        "execution_time": 0.022004127502441406,
        "is_functional_test": false
      },
      {
        "case_name": "嵌套对象文档插入功能测试",
        "purpose": "验证插入带有嵌套结构的复杂JSON文档是否能被正确存储。",
        "args": {
          "database_name": "complex_data",
          "collection_name": "nested_docs",
          "document": {
            "user": {
              "id": 1,
              "preferences": {
                "notifications": true,
                "theme": "dark"
              }
            },
            "activity": [
              "login",
              "edit_profile"
            ]
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 687724f407621992d8438290"
        },
        "execution_time": 0.02103257179260254,
        "is_functional_test": true
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "查询所有文档的基本功能测试",
        "purpose": "验证在指定数据库和集合中，工具能够正确返回所有文档（无查询条件、无投影、无限制）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection"
        },
        "response": [
          "{\n  \"_id\": \"687724f407621992d843828c\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"687724f407621992d843828e\",\n  \"name\": \"Duplicate Document\",\n  \"timestamp\": \"2025-05-09T15:00:00Z\"\n}"
        ],
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "带查询条件的文档检索测试",
        "purpose": "验证工具能够根据提供的查询条件正确过滤并返回匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          }
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0035195350646972656,
        "is_functional_test": true
      },
      {
        "case_name": "使用投影筛选字段的功能测试",
        "purpose": "验证工具在提供投影参数时能正确返回指定字段或排除指定字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": [
          "{\n  \"name\": \"Test Document\"\n}",
          "{\n  \"name\": \"Duplicate Document\"\n}"
        ],
        "execution_time": 0.00960230827331543,
        "is_functional_test": true
      },
      {
        "case_name": "限制返回结果数量的功能测试",
        "purpose": "验证工具在设置limit参数后能正确限制返回的文档数量。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "limit": 5
        },
        "response": [
          "{\n  \"_id\": \"687724f407621992d843828c\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"687724f407621992d843828e\",\n  \"name\": \"Duplicate Document\",\n  \"timestamp\": \"2025-05-09T15:00:00Z\"\n}"
        ],
        "execution_time": 0.0038797855377197266,
        "is_functional_test": true
      },
      {
        "case_name": "组合查询条件、投影与限制的完整功能测试",
        "purpose": "验证工具在同时使用查询、投影和限制参数时能正确执行复合操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          },
          "projection": {
            "name": 1,
            "_id": 0
          },
          "limit": 3
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.00561070442199707,
        "is_functional_test": true
      },
      {
        "case_name": "无效数据库名称的安全性测试",
        "purpose": "验证工具是否安全处理不存在或非法的数据库名称，不暴露敏感信息。",
        "args": {
          "database_name": "invalid/db*name",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "{\n  \"error\": \"Database 'invalid/db*name' does not exist\"\n}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符集合名称的安全处理",
        "purpose": "验证工具在集合名称中包含特殊字符时是否能安全拒绝或正确处理。",
        "args": {
          "database_name": "test_db",
          "collection_name": "special@collection#name"
        },
        "response": {
          "result": "{\n  \"error\": \"Collection 'special@collection#name' does not exist in database 'test_db'\"\n}"
        },
        "execution_time": 0.0025069713592529297,
        "is_functional_test": false
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当数据库名称为空时，工具是否能正确识别并返回错误信息。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "{\n  \"error\": \"Database '' does not exist\"\n}"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "空集合名称错误处理",
        "purpose": "验证当集合名称为空时，工具是否能正确识别并返回错误信息。",
        "args": {
          "database_name": "test_db",
          "collection_name": ""
        },
        "response": {
          "result": "{\n  \"error\": \"Collection '' does not exist in database 'test_db'\"\n}"
        },
        "execution_time": 0.009242773056030273,
        "is_functional_test": false
      },
      {
        "case_name": "负数limit值的边界条件测试",
        "purpose": "验证工具对负数limit值的处理行为是否符合预期（如忽略或报错）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "limit": -1
        },
        "response": [
          "{\n  \"_id\": \"687724f407621992d843828c\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"687724f407621992d843828e\",\n  \"name\": \"Duplicate Document\",\n  \"timestamp\": \"2025-05-09T15:00:00Z\"\n}"
        ],
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "最大整数值limit的边界测试",
        "purpose": "验证工具是否能正确处理系统允许的最大limit值。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "limit": 2147483647
        },
        "response": [
          "{\n  \"_id\": \"687724f407621992d843828c\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"687724f407621992d843828e\",\n  \"name\": \"Duplicate Document\",\n  \"timestamp\": \"2025-05-09T15:00:00Z\"\n}"
        ],
        "execution_time": 0.006845712661743164,
        "is_functional_test": false
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "单文档更新成功测试",
        "purpose": "验证在指定查询条件下，仅更新匹配的第一个文档的功能是否正常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.007033348083496094,
        "is_functional_test": true
      },
      {
        "case_name": "多文档更新成功测试",
        "purpose": "验证在指定查询条件下，更新所有匹配文档的功能是否正常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "pending"
          },
          "update": {
            "$set": {
              "status": "completed"
            }
          },
          "multi": true
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数进行单文档更新",
        "purpose": "验证工具在未显式设置multi参数时，默认行为是否为单文档更新。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "electronics"
          },
          "update": {
            "$inc": {
              "stock": -1
            }
          }
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.006972551345825195,
        "is_functional_test": true
      },
      {
        "case_name": "无匹配文档时的更新测试",
        "purpose": "验证当查询条件不匹配任何文档时，工具是否能正确处理并返回结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "username": "nonexistent_user"
          },
          "update": {
            "$set": {
              "email": "new_email@example.com"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "非法数据库名称的安全性测试",
        "purpose": "验证工具是否能够安全地拒绝包含特殊字符或非法格式的数据库名称。",
        "args": {
          "database_name": "db@invalid#name",
          "collection_name": "test_collection",
          "query": {
            "id": 1
          },
          "update": {
            "$set": {
              "value": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.004900693893432617,
        "is_functional_test": false
      },
      {
        "case_name": "无效集合名称的错误处理测试",
        "purpose": "测试工具在提供无效集合名称（如空字符串）时的错误处理能力。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "id": 1
          },
          "update": {
            "$set": {
              "value": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Error updating document: collection names cannot be empty"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符字段名更新测试",
        "purpose": "验证工具能否正确处理包含特殊字符的字段名进行更新操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "field@with#special": "value"
          },
          "update": {
            "$set": {
              "field@with#special": "new_value"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.007865667343139648,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "单文档删除成功测试",
        "purpose": "验证当提供有效数据库名、集合名和查询条件时，工具能够成功删除单个匹配文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      },
      {
        "case_name": "多文档删除成功测试",
        "purpose": "验证当multi参数为True时，工具能够正确删除所有匹配查询条件的多个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "temp"
          },
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.003024578094482422,
        "is_functional_test": true
      },
      {
        "case_name": "无匹配文档时删除操作不报错",
        "purpose": "验证当查询条件不匹配任何文档时，工具不会报错并返回正确的删除数量（0）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "nonexistent_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.007995843887329102,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符的查询删除文档",
        "purpose": "验证工具能够处理包含特殊字符的查询条件并正确删除文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "doc@special#name"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      },
      {
        "case_name": "删除操作时数据库不存在的错误处理",
        "purpose": "验证当指定的数据库不存在时，工具能够正确处理错误并返回提示信息。",
        "args": {
          "database_name": "invalid_db_name",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.0035028457641601562,
        "is_functional_test": false
      },
      {
        "case_name": "删除操作时集合不存在的错误处理",
        "purpose": "验证当指定的集合不存在时，工具能够正确处理错误并返回提示信息。",
        "args": {
          "database_name": "test_db",
          "collection_name": "invalid_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.005005836486816406,
        "is_functional_test": false
      },
      {
        "case_name": "空查询对象删除所有文档（multi为True）",
        "purpose": "验证当查询对象为空且multi为True时，工具能够删除集合中所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 2 document(s)"
        },
        "execution_time": 0.007021188735961914,
        "is_functional_test": true
      },
      {
        "case_name": "使用超长字段名进行删除操作",
        "purpose": "验证工具在处理包含超长字段名的查询时是否仍能正常执行删除操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa": "test_value"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.0027909278869628906,
        "is_functional_test": false
      }
    ],
    "mcp_drop_collection": [
      {
        "case_name": "成功删除指定集合的基本功能测试",
        "purpose": "验证在数据库和集合均存在的情况下，mcp_drop_collection能够正确删除指定集合。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "Collection 'test_collection' has been dropped successfully from database 'test_db'"
        },
        "execution_time": 0.005366086959838867,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除不存在的集合时的错误处理",
        "purpose": "验证当指定的集合不存在时，工具是否能优雅地处理并返回明确的错误信息。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.002867460250854492,
        "is_functional_test": false
      },
      {
        "case_name": "尝试操作不存在数据库时的安全反馈",
        "purpose": "测试在指定的数据库不存在时，工具是否会安全地拒绝操作并返回明确错误。",
        "args": {
          "database_name": "invalid_db",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "Database 'invalid_db' does not exist"
        },
        "execution_time": 0.009999275207519531,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空字符串时的参数验证",
        "purpose": "验证当数据库名称为空字符串时，工具是否进行有效参数校验并返回错误提示。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.005163431167602539,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空字符串时的参数验证",
        "purpose": "验证当集合名称为空字符串时，工具是否进行有效参数校验并返回错误提示。",
        "args": {
          "database_name": "test_db",
          "collection_name": ""
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符的数据库名进行删除操作",
        "purpose": "测试当数据库名称包含特殊字符时，工具是否能正确处理或拒绝此类请求。",
        "args": {
          "database_name": "@special#db",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "Database '@special#db' does not exist"
        },
        "execution_time": 0.005156040191650391,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符的集合名进行删除操作",
        "purpose": "测试当集合名称包含特殊字符时，工具是否能正确处理或拒绝此类请求。",
        "args": {
          "database_name": "test_db",
          "collection_name": "@special#collection"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.004523277282714844,
        "is_functional_test": false
      },
      {
        "case_name": "长时间运行下的稳定性测试",
        "purpose": "验证mcp_drop_collection在持续运行过程中是否会出现内存泄漏或性能下降问题。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.005090475082397461,
        "is_functional_test": false
      }
    ],
    "mcp_drop_database": [
      {
        "case_name": "成功删除指定数据库的基本功能测试",
        "purpose": "验证mcp_drop_database能够正确删除指定的数据库，使用默认参数或有效参数进行操作。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.0072672367095947266,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除不存在的数据库时的错误处理",
        "purpose": "验证当尝试删除一个不存在的数据库时，工具是否能够正确处理并返回有意义的错误信息。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "Database 'nonexistent_db' does not exist"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空字符串时的参数验证",
        "purpose": "验证当数据库名称为空字符串时，工具是否能够拒绝操作并返回适当的错误信息。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.008902788162231445,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名的数据库名进行删除操作",
        "purpose": "验证工具是否能够正确处理包含特殊字符的数据库名称，并在必要时返回适当的错误或成功操作。",
        "args": {
          "database_name": "db_with_@special#chars"
        },
        "response": {
          "result": "Database 'db_with_@special#chars' has been dropped successfully"
        },
        "execution_time": 0.006211519241333008,
        "is_functional_test": true
      },
      {
        "case_name": "MongoDB服务不可达时尝试删除数据库的错误响应",
        "purpose": "验证当MongoDB服务不可达时，调用mcp_drop_database是否会正确识别连接失败并返回相应的错误信息。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.009856700897216797,
        "is_functional_test": false
      },
      {
        "case_name": "认证失败时尝试删除数据库的安全反馈",
        "purpose": "验证在MongoDB需要认证但未提供凭证的情况下，尝试删除数据库是否会安全地拒绝操作并返回明确错误。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.0037724971771240234,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库时的长时间运行稳定性测试",
        "purpose": "验证mcp_drop_database在长时间运行过程中是否会出现内存泄漏或性能下降问题。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.006003618240356445,
        "is_functional_test": false
      },
      {
        "case_name": "高并发请求下删除数据库的可靠性测试",
        "purpose": "测试在多个线程/进程同时调用该工具时，是否仍能正确删除数据库或处理并发冲突。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "Database 'test_db' does not exist"
        },
        "execution_time": 0.004029512405395508,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}