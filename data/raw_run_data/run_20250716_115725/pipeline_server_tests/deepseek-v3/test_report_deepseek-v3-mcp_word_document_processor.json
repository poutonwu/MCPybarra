{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-16T11:58:41.652089",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        A string indicating the document ID or file path of the newly created document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        document_path: Path to the document file.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          }
        },
        "required": [
          "document_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently open document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently open document with a new name or path.\n\n    Args:\n        new_path: New file path for the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "new_path": {
            "title": "New Path",
            "type": "string"
          }
        },
        "required": [
          "new_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently open document.\n\n    Args:\n        copy_path: Path for the new copy.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "copy_path": {
            "title": "Copy Path",
            "type": "string"
          }
        },
        "required": [
          "copy_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text: The text content of the paragraph.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text: The text content of the heading.\n        level: Heading level (e.g., 1 for top-level).\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows: Number of rows.\n        columns: Number of columns.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    Retrieves metadata about the document (e.g., word count, author).\n\n    Returns:\n        A JSON object containing document metadata.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    Searches for text in the document.\n\n    Args:\n        query: The text to search for.\n\n    Returns:\n        A list of matches with their positions.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    Finds and replaces text in the document.\n\n    Args:\n        find_text: The text to find.\n        replace_text: The replacement text.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "find_text": {
            "title": "Find Text",
            "type": "string"
          },
          "replace_text": {
            "title": "Replace Text",
            "type": "string"
          }
        },
        "required": [
          "find_text",
          "replace_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    Deletes a paragraph from the document.\n\n    Args:\n        paragraph_index: Index of the paragraph to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    Deletes specified text from the document.\n\n    Args:\n        text: The text to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    Adds a row to an existing table.\n\n    Args:\n        table_index: Index of the table.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    Deletes a row from an existing table.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Index of the row to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    Edits the content of a table cell.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Row index of the cell.\n        column_index: Column index of the cell.\n        new_text: New content for the cell.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "column_index": {
            "title": "Column Index",
            "type": "integer"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "column_index",
          "new_text"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    Merges specified cells in a table.\n\n    Args:\n        table_index: Index of the table.\n        start_row: Starting row index.\n        start_column: Starting column index.\n        end_row: Ending row index.\n        end_column: Ending column index.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_column": {
            "title": "Start Column",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_column": {
            "title": "End Column",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_column",
          "end_row",
          "end_column"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    Sets the page margins for the document.\n\n    Args:\n        left: Left margin in inches.\n        right: Right margin in inches.\n        top: Top margin in inches.\n        bottom: Bottom margin in inches.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          }
        },
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create New Document Successfully",
        "purpose": "验证工具能够成功创建一个新的Word文档并返回有效ID或路径",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.015750408172607422,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document With Default Parameters",
        "purpose": "验证在无参数输入情况下，工具使用默认配置创建文档的能力",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01734304428100586,
        "is_functional_test": true
      },
      {
        "case_name": "Verify Document Creation Without Template",
        "purpose": "验证不依赖任何模板文件时能否独立创建空白文档",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01744222640991211,
        "is_functional_test": true
      },
      {
        "case_name": "Create Multiple Documents Sequentially",
        "purpose": "验证连续多次调用create_document是否都能正确生成新文档",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.019229650497436523,
        "is_functional_test": true
      },
      {
        "case_name": "Check Document ID Uniqueness",
        "purpose": "验证每次创建的文档都具有唯一标识符或文件路径",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01670217514038086,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation Under High System Load",
        "purpose": "验证系统高负载下仍能稳定创建文档",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.016034364700317383,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized File Path Access Attempt",
        "purpose": "尝试创建文档到受限制目录以检测访问控制机制",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01542353630065918,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document With Invalid Permissions",
        "purpose": "验证工具在缺少写入权限时能否妥善处理错误",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.015581130981445312,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Dependencies Gracefully",
        "purpose": "验证在缺少必要库或组件时工具是否返回清晰错误信息",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01697254180908203,
        "is_functional_test": false
      },
      {
        "case_name": "Test Maximum Document Name Length",
        "purpose": "验证文档名长度极限情况下的处理能力",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.03143715858459473,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph With Valid Text",
        "purpose": "验证工具能够将有效文本添加为段落到当前文档",
        "args": {
          "text": "This is a test paragraph."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005007266998291016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "验证工具是否允许添加空段落（边界条件）",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005618572235107422,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph With Special Characters",
        "purpose": "验证工具是否支持在段落中使用特殊字符",
        "args": {
          "text": "!@#$%^&*()_+{}|:\"<>?~`1234567890-=\\';/.,[]\\,./"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.006060600280761719,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Null Text",
        "purpose": "验证工具是否能正确处理传入null值的情况（错误处理）",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008001565933227539,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph With Non-String Input",
        "purpose": "测试工具对非字符串类型参数的处理能力（错误处理）",
        "args": {
          "text": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0050029754638671875,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph To Uninitialized Document",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理（错误处理）",
        "args": {
          "text": "Test paragraph for invalid document context."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Paragraphs Sequentially",
        "purpose": "验证连续多次调用add_paragraph是否都能正确添加段落到文档",
        "args": {
          "text": "First paragraph."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0080108642578125,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading With Valid Text and Default Level",
        "purpose": "验证使用默认级别时，工具能够将有效文本添加为标题",
        "args": {
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.009878396987915039,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Custom Level",
        "purpose": "验证工具能够正确处理指定级别的标题添加操作",
        "args": {
          "text": "Chapter 1",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.006213665008544922,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Empty Text",
        "purpose": "验证工具是否允许添加空文本的标题（边界条件）",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.013662099838256836,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Null Text",
        "purpose": "测试工具对null值作为文本输入的处理能力（错误处理）",
        "args": {
          "text": null,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.01212453842163086,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Invalid Level",
        "purpose": "验证工具对无效标题级别的处理能力（错误处理）",
        "args": {
          "text": "Invalid Level Test",
          "level": 0
        },
        "response": {
          "result": "Invalid heading level (must be between 1 and 9)."
        },
        "execution_time": 0.007987737655639648,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Maximum Level",
        "purpose": "测试支持的最大标题级别是否能被正确处理（边界条件）",
        "args": {
          "text": "Maximum Level Heading",
          "level": 9
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.008606433868408203,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Special Characters",
        "purpose": "验证标题中是否可以包含特殊字符",
        "args": {
          "text": "!@#$%^&*()_+{}|:\"<>?~`-=\\';/.,[]\\,./",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.010018587112426758,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading Without Document Context",
        "purpose": "验证在未创建文档的情况下调用add_heading时能否妥善处理（错误处理）",
        "args": {
          "text": "Heading without document",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.007961273193359375,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table With Default Rows And Columns",
        "purpose": "验证工具在使用默认参数（例如1行1列）时能否成功添加表格到文档",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Valid Rows And Columns",
        "purpose": "验证工具能够正确添加指定行数和列数的表格到当前文档",
        "args": {
          "rows": 3,
          "columns": 4
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.006010532379150391,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Minimum Allowed Dimensions",
        "purpose": "测试工具是否允许添加最小尺寸的表格（如1x1）",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Maximum Allowed Dimensions",
        "purpose": "验证工具对最大支持行列数的处理能力（如100x100）",
        "args": {
          "rows": 100,
          "columns": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.023357629776000977,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Zero Rows",
        "purpose": "测试工具对无效值（0行）的参数验证能力",
        "args": {
          "rows": 0,
          "columns": 5
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0077667236328125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table With Zero Columns",
        "purpose": "测试工具对无效值（0列）的参数验证能力",
        "args": {
          "rows": 5,
          "columns": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.00417327880859375,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table To Uninitialized Document",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理错误",
        "args": {
          "rows": 2,
          "columns": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0070497989654541016,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Tables Sequentially",
        "purpose": "验证连续多次调用add_table是否都能正确添加表格到文档",
        "args": {
          "rows": 2,
          "columns": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.006517648696899414,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break Successfully",
        "purpose": "验证工具能够在当前文档中成功添加分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005407094955444336,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks Sequentially",
        "purpose": "验证连续多次调用add_page_break是否都能正确插入分页符到文档中",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0035080909729003906,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Active Document",
        "purpose": "验证在未创建或打开文档的情况下调用该功能时能否妥善处理错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0052642822265625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break Under High System Load",
        "purpose": "验证系统高负载下仍能稳定添加分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.01053929328918457,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Dependencies When Adding Page Break",
        "purpose": "验证在缺少必要库或组件时工具是否返回清晰错误信息",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.003588438034057617,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break In Protected Document",
        "purpose": "尝试在受保护或只读文档中添加分页符以检测访问控制机制",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break With Invalid Permissions",
        "purpose": "验证在没有写入权限的文档中能否妥善处理错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0075304508209228516,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break To Large Document",
        "purpose": "验证在非常大的文档中添加分页符时性能和稳定性",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008021831512451172,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document Successfully",
        "purpose": "验证工具能够成功保存当前打开的文档",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.029076099395751953,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Adding Content",
        "purpose": "验证在添加段落内容后保存文档是否仍能成功",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.026648998260498047,
        "is_functional_test": true
      },
      {
        "case_name": "Save Uninitialized Document",
        "purpose": "验证在未创建或打开任何文档时调用保存功能是否会妥善处理错误",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.028380393981933594,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Invalid Permissions",
        "purpose": "验证在目标路径无写入权限时能否正确返回错误信息",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02924823760986328,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Under High System Load",
        "purpose": "验证系统高负载下仍能稳定保存文档",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02385234832763672,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document To Unauthorized Path",
        "purpose": "尝试将文档保存到受限制目录以检测访问控制机制",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02816915512084961,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Missing Dependencies",
        "purpose": "验证在缺少必要库或组件时工具是否返回清晰错误信息",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.026533842086791992,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Maximum File Size",
        "purpose": "验证超大文档保存时的处理能力（边界条件）",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.023334264755249023,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document With Valid New Path",
        "purpose": "验证工具能够将当前打开的文档保存到一个新的有效路径",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.02390265464782715,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document With Empty New Path",
        "purpose": "验证工具在新路径参数为空时能否妥善处理错误（参数验证失败）",
        "args": {
          "new_path": ""
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.005011796951293945,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Null New Path",
        "purpose": "验证工具在新路径参数为null时能否妥善处理错误（参数验证失败）",
        "args": {
          "new_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document To Restricted Directory",
        "purpose": "尝试将文档保存到受限制的系统目录以检测访问控制机制（如Windows系统目录）",
        "args": {
          "new_path": "C:\\Windows\\system32\\test_restricted.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\test_restricted.docx'"
        },
        "execution_time": 0.007112026214599609,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Special Characters In Path",
        "purpose": "验证包含特殊字符的新路径是否能被正确处理",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\!@#$%^&*()_+test.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\!@#$%^&*()_+test.docx'"
        },
        "execution_time": 0.005840301513671875,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document With Very Long Path",
        "purpose": "验证最大路径长度边界情况下的文件保存能力（极限值测试）",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx."
        },
        "execution_time": 0.028944730758666992,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Without Active Document Open",
        "purpose": "验证在没有打开任何文档的情况下调用save_as_document时能否妥善处理错误",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx."
        },
        "execution_time": 0.028006315231323242,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document To Read-Only Directory",
        "purpose": "验证将文档保存到只读目录时工具是否能正确返回权限错误",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly\\test_save.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly\\\\test_save.docx'"
        },
        "execution_time": 0.006003379821777344,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Open Valid Word Document",
        "purpose": "验证工具能够成功打开一个有效的Word文档并返回成功状态",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.0278012752532959,
        "is_functional_test": true
      },
      {
        "case_name": "Open Nonexistent Document",
        "purpose": "验证工具在尝试打开不存在的文档时能否妥善处理错误",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.007191181182861328,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Invalid File Extension",
        "purpose": "验证工具是否能正确拒绝非.docx扩展名的文件（如.pdf）",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf'"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": false
      },
      {
        "case_name": "Open Empty File Path",
        "purpose": "验证工具在空路径输入下是否能正确返回错误信息",
        "args": {
          "document_path": ""
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.005518436431884766,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Null Path",
        "purpose": "测试工具对null值作为路径参数的处理能力（错误处理）",
        "args": {
          "document_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool open_document: 1 validation error for open_documentArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006938934326171875,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document From Restricted Directory",
        "purpose": "验证工具是否阻止访问受限或系统目录中的文件（安全性测试）",
        "args": {
          "document_path": "C:\\Windows\\System32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'C:\\Windows\\System32\\drivers\\etc\\hosts'"
        },
        "execution_time": 0.004329681396484375,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Special Characters In Path",
        "purpose": "验证工具是否支持包含特殊字符的文件路径",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx."
        },
        "execution_time": 0.029979467391967773,
        "is_functional_test": true
      },
      {
        "case_name": "Open Read-Only Document",
        "purpose": "验证工具是否能正常打开只读属性的Word文档",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx."
        },
        "execution_time": 0.03022933006286621,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info With Valid Document",
        "purpose": "验证工具能够成功获取有效文档的元数据信息",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.0076830387115478516,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info Without Created Document",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理错误",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.00500798225402832,
        "is_functional_test": false
      },
      {
        "case_name": "Get Document Info From Empty File",
        "purpose": "验证工具是否能正确处理空文件的元数据读取",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info With Special Characters In Metadata",
        "purpose": "验证文档元数据中包含特殊字符时能否正常读取",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.008014440536499023,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info From Corrupted File",
        "purpose": "验证工具在尝试读取损坏文档元数据时是否能妥善处理错误",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.02103400230407715,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Access To Document Metadata",
        "purpose": "尝试访问受限制目录中的文档元数据以检测访问控制机制",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": false
      },
      {
        "case_name": "Get Document Info Under High System Load",
        "purpose": "验证系统高负载下仍能稳定获取文档元数据",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.008058309555053711,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Dependencies When Reading Metadata",
        "purpose": "验证在缺少必要库或组件时工具是否返回清晰错误信息",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 24}"
        },
        "execution_time": 0.007005214691162109,
        "is_functional_test": false
      }
    ],
    "search_text": [
      {
        "case_name": "Search Text Successfully",
        "purpose": "验证工具能够成功在文档中搜索到指定文本并返回匹配结果",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a test paragraph.'}]"
        },
        "execution_time": 0.006803989410400391,
        "is_functional_test": true
      },
      {
        "case_name": "Search Text Case Sensitivity",
        "purpose": "验证工具是否区分大小写进行文本搜索",
        "args": {
          "query": "Test"
        },
        "response": {
          "result": "[{'paragraph_index': 3, 'text': 'Test paragraph for invalid document context.'}]"
        },
        "execution_time": 0.008461952209472656,
        "is_functional_test": true
      },
      {
        "case_name": "Search Non-Existent Text",
        "purpose": "验证工具在未找到匹配文本时是否返回空列表或适当响应",
        "args": {
          "query": "nonexistenttext"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.01203298568725586,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的搜索查询",
        "args": {
          "query": "!@#$%^&*()"
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': '!@#$%^&*()_+{}|:\"<>?~`1234567890-=\\\\\\';/.,[]\\\\,./'}, {'paragraph_index': 9, 'text': '!@#$%^&*()_+{}|:\"<>?~`-=\\\\\\';/.,[]\\\\,./'}]"
        },
        "execution_time": 0.008016824722290039,
        "is_functional_test": true
      },
      {
        "case_name": "Search Empty Query",
        "purpose": "验证工具对空搜索查询的处理能力（错误处理）",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a test paragraph.'}, {'paragraph_index': 1, 'text': ''}, {'paragraph_index': 2, 'text': '!@#$%^&*()_+{}|:\"<>?~`1234567890-=\\\\\\';/.,[]\\\\,./'}, {'paragraph_index': 3, 'text': 'Test paragraph for invalid document context.'}, {'paragraph_index': 4, 'text': 'First paragraph.'}, {'paragraph_index': 5, 'text': 'Introduction'}, {'paragraph_index': 6, 'text': 'Chapter 1'}, {'paragraph_index': 7, 'text': ''}, {'paragraph_index': 8, 'text': 'Maximum Level Heading'}, {'paragraph_index': 9, 'text': '!@#$%^&*()_+{}|:\"<>?~`-=\\\\\\';/.,[]\\\\,./'}, {'paragraph_index': 10, 'text': 'Heading without document'}, {'paragraph_index': 11, 'text': ''}, {'paragraph_index': 12, 'text': ''}, {'paragraph_index': 13, 'text': ''}, {'paragraph_index': 14, 'text': ''}, {'paragraph_index': 15, 'text': ''}, {'paragraph_index': 16, 'text': ''}, {'paragraph_index': 17, 'text': ''}, {'paragraph_index': 18, 'text': ''}]"
        },
        "execution_time": 0.011090517044067383,
        "is_functional_test": false
      },
      {
        "case_name": "Search Null Query",
        "purpose": "验证工具是否能正确处理传入null值的搜索查询（错误处理）",
        "args": {
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007527351379394531,
        "is_functional_test": false
      },
      {
        "case_name": "Search Binary File Content",
        "purpose": "验证工具尝试搜索非文本文件内容时能否安全处理（安全性测试）",
        "args": {
          "query": "binarysearch",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.gif"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.009623289108276367,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace Success",
        "purpose": "验证工具能够成功执行基本的查找和替换操作",
        "args": {
          "find_text": "old_text",
          "replace_text": "new_text"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.004532337188720703,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Text Not Found",
        "purpose": "验证当查找文本不存在时工具是否能正确处理",
        "args": {
          "find_text": "nonexistent_text",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Find Text",
        "purpose": "测试空查找文本是否被允许（边界条件）",
        "args": {
          "find_text": "",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.009511947631835938,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Find and Replace",
        "purpose": "验证包含特殊字符的查找和替换文本是否正常工作",
        "args": {
          "find_text": "!@#$%^&*()",
          "replace_text": "[specialchars_replaced]"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0060100555419921875,
        "is_functional_test": true
      },
      {
        "case_name": "Null Input Handling",
        "purpose": "验证工具对null输入的处理能力（错误处理）",
        "args": {
          "find_text": null,
          "replace_text": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.00606846809387207,
        "is_functional_test": false
      },
      {
        "case_name": "Long Text Replacement",
        "purpose": "测试长文本的查找和替换功能（边界条件）",
        "args": {
          "find_text": "a_very_long_string_that_might_push_the_limits_of_the_underlying_system_for_testing_purposes_only",
          "replace_text": "short_replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Path Traversal Attempt",
        "purpose": "尝试路径穿越注入以检测安全漏洞（安全性测试）",
        "args": {
          "find_text": "../../../etc/passwd",
          "replace_text": "SECURITY_BLOCKED"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.00903463363647461,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Input Handling",
        "purpose": "验证工具对非字符串类型参数的处理能力（错误处理）",
        "args": {
          "find_text": 12345,
          "replace_text": true
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 2 validation errors for find_and_replaceArguments\nfind_text\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nreplace_text\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004038810729980469,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Paragraph At Valid Index",
        "purpose": "验证工具能够成功删除文档中指定索引位置的有效段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.00783395767211914,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph With Out Of Bounds Index",
        "purpose": "验证当传入超出文档段落数量范围的索引时，工具能否正确处理错误",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.008825540542602539,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph From Empty Document",
        "purpose": "验证在没有段落的空白文档中尝试删除段落时的错误处理能力",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.010063886642456055,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Paragraph Successfully",
        "purpose": "验证删除第一个段落是否正常工作（边界条件）",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.008550882339477539,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph Successfully",
        "purpose": "验证删除最后一个段落是否正常工作（边界条件）",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.010536432266235352,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph With Negative Index",
        "purpose": "验证工具对负数索引值的参数验证能力（错误处理）",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.004172325134277344,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph Under High System Load",
        "purpose": "验证系统高负载下删除段落功能的稳定性",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.008002519607543945,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph With Unauthorized Access",
        "purpose": "尝试删除受保护文档中的段落以检测访问控制机制",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.010058403015136719,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Existing Text Successfully",
        "purpose": "验证工具能够成功删除文档中已存在的指定文本",
        "args": {
          "text": "This is a test paragraph."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005337953567504883,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Nonexistent Text",
        "purpose": "验证当尝试删除文档中不存在的文本时，工具能否优雅地处理并返回失败信息",
        "args": {
          "text": "Nonexistent text for deletion"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005997180938720703,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty String",
        "purpose": "验证工具是否能正确处理空字符串作为待删除内容的情况（边界条件）",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.01001596450805664,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text With Special Characters",
        "purpose": "验证工具是否支持删除包含特殊字符的文本",
        "args": {
          "text": "!@#$%^&*()_+{}|:\"<>?~`1234567890-=\\';/.,[]\\,./"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.008007526397705078,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text From Uninitialized Document",
        "purpose": "验证在未创建或加载文档的情况下调用delete_text是否能妥善处理错误",
        "args": {
          "text": "Sample text to delete from invalid context"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005512237548828125,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text With Null Input",
        "purpose": "测试工具对传入null值作为待删除文本的处理能力（错误处理）",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007030487060546875,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text With Non-String Input",
        "purpose": "测试工具对非字符串类型参数作为待删除文本的处理能力（错误处理）",
        "args": {
          "text": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007496833801269531,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Very Long Text",
        "purpose": "验证工具在尝试删除超长文本时的行为（性能与边界测试）",
        "args": {
          "text": "A very long string that exceeds normal length limits and may impact performance......................................."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.006505012512207031,
        "is_functional_test": false
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Valid Table Index",
        "purpose": "验证工具能够成功向指定的现有表格添加新行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.00830221176147461,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "验证工具在尝试向不存在的表格索引添加行时能否正确返回错误信息",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Negative Table Index",
        "purpose": "测试工具对负数表格索引的处理能力（错误处理）",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008439064025878906,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Maximum Integer Table Index",
        "purpose": "验证工具是否能正确处理最大整数值作为表格索引",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006612062454223633,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table Without Document Context",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理（错误处理）",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Rows Sequentially to Same Table",
        "purpose": "验证连续多次调用add_table_row是否都能正确添加行到指定表格",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.008458375930786133,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row with Special Characters in Table Index",
        "purpose": "验证表格索引字段是否接受特殊字符（边界条件）",
        "args": {
          "table_index": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='!@#$%^&*()', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004539012908935547,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row Using Null Table Index",
        "purpose": "验证工具是否能正确处理传入null值的情况（错误处理）",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.006670951843261719,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Table Cell With Valid Parameters",
        "purpose": "验证工具能够使用有效参数成功编辑表格单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Updated Content"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.008542299270629883,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell In Non-Existent Document Context",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理错误（错误处理）",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Invalid Context Edit"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.011032819747924805,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell With Invalid Table Index",
        "purpose": "测试工具对无效表格索引的处理能力（错误处理）",
        "args": {
          "table_index": -1,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Negative Table Index"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.007035493850708008,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell With Invalid Row Index",
        "purpose": "测试工具对无效行索引的处理能力（错误处理）",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "column_index": 0,
          "new_text": "Negative Row Index"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.013095617294311523,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell With Invalid Column Index",
        "purpose": "测试工具对无效列索引的处理能力（错误处理）",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": -1,
          "new_text": "Negative Column Index"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.012580394744873047,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell With Special Characters",
        "purpose": "验证工具是否支持在单元格中使用特殊字符",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": "!@#$%^&*()_+{}|:\"<>?~`1234567890-=\\';/.,[]\\,./"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.014795064926147461,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell With Empty Text",
        "purpose": "验证工具是否允许将单元格内容设置为空字符串（边界条件）",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "column_index": 2,
          "new_text": ""
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.008567333221435547,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell With Null Text",
        "purpose": "验证工具是否能正确处理传入null值的情况（错误处理）",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool edit_table_cell: 1 validation error for edit_table_cellArguments\nnew_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.012569427490234375,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Cells in Single Table Successfully",
        "purpose": "验证工具能够成功合并指定表格中的单元格（基本功能测试）",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_column": 1,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004381656646728516,
        "is_functional_test": true
      },
      {
        "case_name": "Merge All Cells in a Single Row",
        "purpose": "验证工具是否能正确合并单行内的多个列单元格",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_column": 1,
          "end_row": 1,
          "end_column": 3
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004519462585449219,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells Across Multiple Rows",
        "purpose": "验证跨多行的单元格合并功能是否正常",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_column": 1,
          "end_row": 3,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.009341955184936523,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells with Same Start and End Coordinates",
        "purpose": "验证当起始和结束坐标相同的情况下的处理能力（边界条件）",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 2,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Merge Cells in Non-Existent Table",
        "purpose": "验证在无效表格索引下能否妥善处理错误",
        "args": {
          "table_index": 999,
          "start_row": 1,
          "start_column": 1,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006105184555053711,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Negative Indices",
        "purpose": "验证负数行列索引是否被正确拒绝",
        "args": {
          "table_index": 0,
          "start_row": -1,
          "start_column": -1,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with End Before Start",
        "purpose": "验证结束行列小于起始行列时是否返回错误",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_column": 3,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.006685733795166016,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Large Index Values",
        "purpose": "验证极限值输入是否导致异常或崩溃",
        "args": {
          "table_index": 0,
          "start_row": 1000,
          "start_column": 1000,
          "end_row": 1005,
          "end_column": 1005
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.008069038391113281,
        "is_functional_test": false
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Valid Row From Table",
        "purpose": "验证工具能够成功从现有表格中删除指定行",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.007160186767578125,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row With Invalid Table Index",
        "purpose": "测试工具在提供无效 table_index 时是否能正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.007542848587036133,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row With Invalid Row Index",
        "purpose": "测试工具在提供无效 row_index 时是否能正确处理错误",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.01071929931640625,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row From Nonexistent Table",
        "purpose": "验证工具在尝试操作不存在的表格时能否妥善处理错误",
        "args": {
          "table_index": 999,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0043027400970458984,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Row From Table",
        "purpose": "验证工具能够成功删除表格的第一行",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row From Table",
        "purpose": "验证工具能够成功删除表格的最后一行",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.006559848785400391,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row Under High System Load",
        "purpose": "验证系统高负载下仍能稳定删除表格行",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.003503084182739258,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row With Null Parameters",
        "purpose": "验证工具对 null 参数输入的处理能力（错误处理）",
        "args": {
          "table_index": null,
          "row_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 2 validation errors for delete_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type\nrow_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.010030508041381836,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Page Margins With Valid Values",
        "purpose": "验证工具能够成功设置有效的页面边距值（正向测试）",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": true
      },
      {
        "case_name": "Set Page Margins Using Default Margin Values",
        "purpose": "验证工具是否能使用默认边距值（如1英寸）进行设置",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.011591196060180664,
        "is_functional_test": true
      },
      {
        "case_name": "Set Asymmetric Margins Successfully",
        "purpose": "验证工具能否正确处理非对称边距设置（左、右、上、下各不相同）",
        "args": {
          "left": 0.5,
          "right": 1.5,
          "top": 2,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.009006738662719727,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins Safely",
        "purpose": "验证工具是否能处理零边距设置，确保文档仍可正常显示",
        "args": {
          "left": 0,
          "right": 0,
          "top": 0,
          "bottom": 0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.007025003433227539,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Invalid Negative Margin Values",
        "purpose": "验证工具是否能正确拒绝负数边距参数并返回错误信息",
        "args": {
          "left": -1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Failed to set page margins: value must be in range 0 to 18446744073709551615 inclusive, got -914400"
        },
        "execution_time": 0.00811457633972168,
        "is_functional_test": false
      },
      {
        "case_name": "Reject Non-Numeric Input For Margins",
        "purpose": "验证工具是否能拒绝非数字类型的边距输入（例如字符串）",
        "args": {
          "left": "one",
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.008129596710205078,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Maximum Allowed Margins",
        "purpose": "验证工具是否能处理最大允许的边距值（边界条件测试）",
        "args": {
          "left": 10,
          "right": 10,
          "top": 10,
          "bottom": 10
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004497051239013672,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins Without Document Context",
        "purpose": "验证在未创建文档的情况下调用该功能时能否妥善处理错误",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Create Document Copy Successfully",
        "purpose": "验证工具能够成功复制当前打开的文档到指定路径",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_of_saved_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_of_saved_document.docx."
        },
        "execution_time": 0.03414750099182129,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document To Unauthorized Directory",
        "purpose": "验证工具在尝试复制文档到受限制目录时能否正确处理权限问题",
        "args": {
          "copy_path": "C:\\Windows\\copy_of_saved_document.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 13] Permission denied: 'C:\\\\Windows\\\\copy_of_saved_document.docx'"
        },
        "execution_time": 0.005892038345336914,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Invalid Path",
        "purpose": "验证工具在提供无效路径时是否能正确返回错误信息",
        "args": {
          "copy_path": "invalid/path/with/invalid_chars/<>|"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: 'invalid/path/with/invalid_chars/<>|'"
        },
        "execution_time": 0.011060237884521484,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Empty Path",
        "purpose": "验证工具在未提供复制路径时是否能正确处理错误",
        "args": {
          "copy_path": ""
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.007014036178588867,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Null Path",
        "purpose": "验证工具在传入空值路径时是否能正确处理错误",
        "args": {
          "copy_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Long Path",
        "purpose": "验证工具在复制文档时是否能处理长路径边界条件",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_copy.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_copy.docx."
        },
        "execution_time": 0.027979612350463867,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document With Special Characters In Path",
        "purpose": "验证工具是否支持在复制路径中使用特殊字符",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_@special#name.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_@special#name.docx."
        },
        "execution_time": 0.02970409393310547,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document Without Existing Document",
        "purpose": "验证在没有打开文档的情况下调用复制功能时是否能妥善处理错误",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_of_nonexistent_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_of_nonexistent_document.docx."
        },
        "execution_time": 0.026819705963134766,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 152
}