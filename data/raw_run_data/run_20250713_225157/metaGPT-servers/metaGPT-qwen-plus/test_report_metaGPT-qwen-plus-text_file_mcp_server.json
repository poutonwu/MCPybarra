{
  "server_name": "text_file_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-text_file_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\text_file_mcp_server.py",
  "timestamp": "2025-07-13T22:54:12.480208",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    读取多个文本文件内容，支持按行范围读取并返回文件哈希值。\n\n    Args:\n        file_paths: 要读取的文件路径列表。\n        start_line: 开始行号（可选）。如果指定，则必须同时指定 end_line。\n        end_line: 结束行号（可选）。如果指定，则必须同时指定 start_line。\n\n    Returns:\n        一个包含文件内容和哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或行号范围无效。\n        RuntimeError: 如果读取文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_paths": {
            "items": {},
            "title": "File Paths",
            "type": "array"
          },
          "start_line": {
            "default": null,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_paths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    创建新文本文件并写入内容。\n\n    Args:\n        file_path: 要创建的文件路径。\n        content: 要写入的内容。\n\n    Returns:\n        一个包含操作结果和文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件已经存在。\n        RuntimeError: 如果创建文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    向现有文本文件追加内容。\n\n    Args:\n        file_path: 要追加内容的文件路径。\n        content: 要追加的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或哈希验证失败。\n        RuntimeError: 如果追加内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    删除文本文件中特定范围的内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        start_line: 开始行号（包括）。\n        end_line: 结束行号（包括）。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号范围无效或哈希验证失败。\n        RuntimeError: 如果删除内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    在文本文件的指定位置插入内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        line_number: 插入位置的行号（从1开始计数）。\n        content: 要插入的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号无效或哈希验证失败。\n        RuntimeError: 如果插入内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "line_number",
          "content"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    应用精确修改到文本文件，并支持哈希验证。\n\n    Args:\n        file_path: 要修改的文件路径。\n        old_content: 需要被替换的旧内容。\n        new_content: 替换的新内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、旧内容不匹配或哈希验证失败。\n        RuntimeError: 如果修改文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "old_content": {
            "title": "Old Content",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "old_content",
          "new_content"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "创建新文本文件并写入默认内容",
        "purpose": "验证工具能够成功创建一个新文本文件并写入指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "content": "This is a test file content."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt 创建成功\",\n  \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n}"
        },
        "execution_time": 0.0055084228515625,
        "is_functional_test": true
      },
      {
        "case_name": "尝试覆盖已存在的文件",
        "purpose": "验证当目标文件已存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "content": "This should not overwrite the existing file."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml 已经存在"
        },
        "execution_time": 0.004025697708129883,
        "is_functional_test": false
      },
      {
        "case_name": "使用空内容创建文件",
        "purpose": "验证工具是否允许使用空字符串作为内容创建文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\empty_content_file.txt 创建成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.008156299591064453,
        "is_functional_test": true
      },
      {
        "case_name": "文件路径包含特殊字符",
        "purpose": "验证工具是否能处理包含特殊字符的文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\test_@#$.txt",
          "content": "File path contains special characters."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\test_@#$.txt 创建成功\",\n  \"hash\": \"4bd15b2bc3eb50d859995c82af3ea8b721955ad548bc1340210436bc0a39d2c9\"\n}"
        },
        "execution_time": 0.007562398910522461,
        "is_functional_test": true
      },
      {
        "case_name": "尝试写入只读目录下的文件",
        "purpose": "验证工具在尝试写入只读目录时是否抛出RuntimeError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt",
          "content": "Trying to write into readonly directory."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_output\\\\new_readonly_file.txt 创建成功\",\n  \"hash\": \"ae978ea4ed96330faffb366f0602e5546b8a398559b59518d998dbe8b9f0c2ef\"\n}"
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": false
      },
      {
        "case_name": "文件路径为空",
        "purpose": "验证工具是否对空文件路径进行参数校验并抛出错误。",
        "args": {
          "file_path": "",
          "content": "Empty file path should fail."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.00575566291809082,
        "is_functional_test": false
      },
      {
        "case_name": "写入隐藏文件",
        "purpose": "验证工具是否支持创建隐藏文件（以.开头）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_file.txt",
          "content": "This is a hidden file."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_file.txt 创建成功\",\n  \"hash\": \"8800c9badea051ed118c86707d58ec3f8d664e1df42a5c7a7fb2812e7920cb58\"\n}"
        },
        "execution_time": 0.004812002182006836,
        "is_functional_test": true
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "读取单个文本文件的全部内容",
        "purpose": "验证工具能够正确读取一个存在的文本文件的全部内容并返回哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.022002696990966797,
        "is_functional_test": true
      },
      {
        "case_name": "读取多个文本文件的全部内容",
        "purpose": "验证工具支持同时读取多个文本文件的内容，并分别返回每个文件的内容和哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\empty_content_file.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.007241725921630859,
        "is_functional_test": true
      },
      {
        "case_name": "按行范围读取文本文件内容",
        "purpose": "验证工具可以按指定行号范围读取文件内容，确保只读取该范围内行。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt"
          ],
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": true
      },
      {
        "case_name": "读取空文件内容",
        "purpose": "验证工具能正确处理空文件的情况，返回空字符串内容和对应哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\empty_content_file.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "尝试读取不存在的文件",
        "purpose": "验证当文件路径无效或文件不存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "行号范围超出实际文件行数",
        "purpose": "验证当指定的行号范围超过文件实际行数时，工具是否抛出ValueError异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt"
          ],
          "start_line": 2,
          "end_line": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 的行号范围无效"
        },
        "execution_time": 0.005995988845825195,
        "is_functional_test": false
      },
      {
        "case_name": "仅提供start_line但不提供end_line",
        "purpose": "验证当仅提供start_line而未提供end_line时，工具是否进行参数校验并抛出错误。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt"
          ],
          "start_line": 1
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\": {\n    \"content\": \"This is a test file content.\",\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      },
      {
        "case_name": "读取隐藏文件内容",
        "purpose": "验证工具是否支持读取以.开头的隐藏文本文件内容。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_file.txt\": {\n    \"content\": \"This is a hidden file.\",\n    \"hash\": \"8800c9badea051ed118c86707d58ec3f8d664e1df42a5c7a7fb2812e7920cb58\"\n  }\n}"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "向现有文件追加内容并验证结果",
        "purpose": "验证工具能够成功向一个存在的文本文件追加内容，并返回新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "content": " This is appended content.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "追加空字符串到已有文件",
        "purpose": "验证工具是否允许追加空字符串内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt",
          "content": "",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "尝试向不存在的文件追加内容",
        "purpose": "验证当目标文件不存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt",
          "content": "This should fail because file does not exist.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "向只读目录中的文件追加内容",
        "purpose": "验证工具在尝试向只读目录下的文件追加内容时是否抛出RuntimeError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt",
          "content": "Appending to readonly directory file should fail.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符路径进行追加操作",
        "purpose": "验证工具是否能处理包含特殊字符的文件路径进行追加操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\test_@#$.txt",
          "content": " More appended text with special chars.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004008054733276367,
        "is_functional_test": true
      },
      {
        "case_name": "向隐藏文件追加内容",
        "purpose": "验证工具是否支持对以.开头的隐藏文件进行追加操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_file.txt",
          "content": "\nThis line is appended to a hidden file.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008000612258911133,
        "is_functional_test": true
      },
      {
        "case_name": "提供错误预期哈希值导致验证失败",
        "purpose": "验证当提供错误的expected_hash时，工具是否抛出ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "content": "Additional content for hash mismatch test.",
          "expected_hash": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a, 预期哈希: 0000000000000000000000000000000000000000000000000000000000000000"
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "在文件中间插入内容并验证哈希值",
        "purpose": "验证工具能够在指定行号正确插入内容，并返回正确的操作结果和新文件的哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "line_number": 1,
          "content": "Inserted content at line 1.",
          "expected_hash": "3a7d4e1f9c45b86d0a2e7f1c8d3a9b5e2f0c7d1e"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 哈希验证失败。当前文件哈希: dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a, 预期哈希: 3a7d4e1f9c45b86d0a2e7f1c8d3a9b5e2f0c7d1e"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": true
      },
      {
        "case_name": "插入内容到空文件中",
        "purpose": "验证工具能够向一个空文件中插入内容，并正确更新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt",
          "line_number": 1,
          "content": "Content inserted into empty file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\empty_content_file.txt\",\n  \"hash\": \"4f80caac10f1d33ec8b0d384b9c1a17e0f3ec45dade5a7548fdf8d65c4e29d11\"\n}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": true
      },
      {
        "case_name": "插入内容到文件末尾",
        "purpose": "验证工具支持在文件最后一行之后插入内容，确保插入位置合法。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "line_number": 2,
          "content": "Inserted at the end of the file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\",\n  \"hash\": \"7a4b949a32110ae04022a39eb206443e6642d8e4dac77ad86da2176c8f9a1b5b\"\n}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "尝试插入到负行号",
        "purpose": "验证工具是否对无效的负行号进行参数校验并抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "line_number": -1,
          "content": "Invalid line number test."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 的行号无效"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "插入内容时文件不存在",
        "purpose": "验证当目标文件不存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt",
          "line_number": 1,
          "content": "Trying to insert into a non-existent file."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.0030014514923095703,
        "is_functional_test": false
      },
      {
        "case_name": "插入内容到只读目录下的文件",
        "purpose": "验证工具是否能处理写入只读目录的情况，并抛出RuntimeError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt",
          "line_number": 1,
          "content": "Inserting into readonly directory file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_output\\\\new_readonly_file.txt\",\n  \"hash\": \"8d5aa91a2f03b73cb097bb60cd257d0e178fb7a426f116c74d1f1438c5d27e25\"\n}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": false
      },
      {
        "case_name": "插入带有特殊字符的内容",
        "purpose": "验证工具是否支持插入包含特殊字符（如换行符、引号等）的内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "line_number": 1,
          "content": "Special characters: \n, \", \\, \t"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\",\n  \"hash\": \"120e1729abdbc4683363cd4e2f7dd177b24cad0dee516eb1ffe7fd37f9bcc82f\"\n}"
        },
        "execution_time": 0.01000070571899414,
        "is_functional_test": true
      },
      {
        "case_name": "插入内容后验证文件内容一致性",
        "purpose": "插入内容后通过get_text_file_contents工具验证文件内容是否与预期一致。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "line_number": 1,
          "content": "Consistency check after insertion."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\new_test_file.txt\",\n  \"hash\": \"df855c570e7b119667b473953905e756ae0ae0dc868b4ec38679f08d5320890d\"\n}"
        },
        "execution_time": 0.010000228881835938,
        "is_functional_test": true
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "基本功能测试 - 替换文件中的内容并验证",
        "purpose": "验证工具能够成功替换文本文件中的指定内容，并返回操作结果和新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "old_content": "This is a test file content.",
          "new_content": "This is the updated test file content."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.006505727767944336,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用哈希验证确保内容正确性",
        "purpose": "验证工具在提供expected_hash时，能正确校验文件当前内容是否与预期哈希匹配后再进行修改。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "old_content": "This is the updated test file content.",
          "new_content": "Final version of the test file content.",
          "expected_hash": "10465398f721e895bfa2a6d52809209819910c6948609f14122974981f3f5e9c"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.005990743637084961,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径无效或文件不存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt",
          "old_content": "Non-existent file cannot be patched.",
          "new_content": "This should not happen."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.006512880325317383,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 原内容不匹配",
        "purpose": "验证当文件中不存在指定的old_content时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "old_content": "This content does not exist in the file.",
          "new_content": "Should fail due to old content mismatch."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.006007194519042969,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 哈希验证失败",
        "purpose": "验证当提供的expected_hash与实际文件哈希不一致时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "old_content": "Final version of the test file content.",
          "new_content": "Another update attempt.",
          "expected_hash": "invalid_hash_value_1234567890"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.008502721786499023,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空字符串作为旧内容和新内容",
        "purpose": "验证工具是否允许用空字符串替换空字符串（即对空文件内容的操作）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt",
          "old_content": "",
          "new_content": "New empty-based content."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_file.txt 不存在"
        },
        "execution_time": 0.006004810333251953,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符处理",
        "purpose": "验证工具能否正确处理包含特殊字符的内容替换。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\test_@#$.txt",
          "old_content": "File path contains special characters.",
          "new_content": "Special chars are handled correctly: @ # $ % & * ."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\test_@#$.txt 不存在"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改只读目录下的文件",
        "purpose": "验证工具是否无法修改只读目录下的文件，防止非法写入敏感区域。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt",
          "old_content": "Trying to write into readonly directory.",
          "new_content": "Modification should be denied."
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt 不存在"
        },
        "execution_time": 0.006646156311035156,
        "is_functional_test": false
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "删除文本文件中的指定行范围内容",
        "purpose": "验证工具能够成功删除文本文件中指定的行范围内容，并返回操作结果和新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.003995656967163086,
        "is_functional_test": true
      },
      {
        "case_name": "使用预期哈希值验证删除后的内容",
        "purpose": "验证在提供expected_hash参数的情况下，工具是否能正确校验删除后文件内容与预期哈希匹配。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1,
          "expected_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.0045130252838134766,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除不存在的文件内容",
        "purpose": "验证当提供的文件路径无效或文件不存在时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.004517078399658203,
        "is_functional_test": false
      },
      {
        "case_name": "删除超出实际行数的范围内容",
        "purpose": "验证当提供的start_line和end_line超出文件实际行数时，工具是否抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 5,
          "end_line": 10
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.006943464279174805,
        "is_functional_test": false
      },
      {
        "case_name": "删除第一行内容",
        "purpose": "验证工具能否正确删除文件的第一行内容并保留其余内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.004506349563598633,
        "is_functional_test": true
      },
      {
        "case_name": "删除最后一行内容",
        "purpose": "验证工具能否正确删除文件的最后一行内容并确保其他内容未受影响。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.006997346878051758,
        "is_functional_test": true
      },
      {
        "case_name": "删除整个文件内容",
        "purpose": "验证工具能否正确删除文件中所有内容（即从第一行到最后一行）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\new_test_file.txt 不存在"
        },
        "execution_time": 0.003518819808959961,
        "is_functional_test": true
      },
      {
        "case_name": "尝试删除只读目录下的文件内容",
        "purpose": "验证当目标文件位于只读目录下时，工具是否抛出RuntimeError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_output\\new_readonly_file.txt 不存在"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 46
}