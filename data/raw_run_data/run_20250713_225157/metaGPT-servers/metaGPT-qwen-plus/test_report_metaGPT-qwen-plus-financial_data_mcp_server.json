{
  "server_name": "financial_data_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-financial_data_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\financial_data_mcp_server.py",
  "timestamp": "2025-07-13T22:51:59.992044",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    获取指定公司的财务报表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含收入报表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度收入报表:\n        get_income_statements(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    获取指定公司的资产负债表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含资产负债表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度资产负债表:\n        get_balance_sheets(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    获取指定公司的现金流量表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含现金流量表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度现金流量表:\n        get_cash_flows(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    获取指定股票的历史价格数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        start_date: 开始日期，格式为 'YYYY-MM-DD'（可选）。\n        end_date: 结束日期，格式为 'YYYY-MM-DD'（可选）。如果未提供，默认为当前日期。\n\n    Returns:\n        包含历史价格数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司从2023-01-01到2023-12-31的历史股价:\n        get_stock_prices(symbol=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "default": null,
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "default": null,
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    获取与公司或市场相关的最新金融新闻。\n    \n    Args:\n        ticker: 股票代码 (例如, 'AAPL' 代表苹果公司)（可选）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含金融新闻数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的最新5条新闻:\n        get_market_news(ticker=\"AAPL\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "default": null,
            "title": "Ticker",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    获取公司简介信息，包括行业、所在地等。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含公司简介信息的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的公司简介:\n        get_company_profile(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    获取分析师预测数据，如目标价格和收益预测。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含分析师预测数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的分析师预测数据:\n        get_analyst_estimates(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    获取公司股息历史记录。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股息历史记录的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股息历史记录:\n        get_dividend_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    查询股票分割历史。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股票分割历史的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股票分割历史:\n        get_splits_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    获取公司历史财报数据，如每股收益。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含历史财报数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的历史财报数据:\n        get_earnings_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    获取公司财务比率，如市盈率和负债权益比。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含财务比率数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的财务比率:\n        get_financial_ratios(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    获取公司股权结构数据，如机构持股比例。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股权结构数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股权结构数据:\n        get_ownership_data(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "获取有效股票代码的公司简介",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的公司简介信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.6965129375457764,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取公司简介",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 2.12664532661438,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004506111145019531,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.539623737335205,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.9636139869689941,
        "is_functional_test": false
      },
      {
        "case_name": "获取另一个主流公司的简介信息",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取公司简介，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5707712173461914,
        "is_functional_test": true
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.562537670135498,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "获取有效股票代码的年度收入报表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的最近5年年度收入报表信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.9334473609924316,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的季度收入报表",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取季度收入报表，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5684864521026611,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取收入报表",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5336689949035645,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 1 validation error for get_income_statementsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 1 validation error for get_income_statementsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5660970211029053,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.729884147644043,
        "is_functional_test": false
      },
      {
        "case_name": "使用最大限制值获取TTM数据",
        "purpose": "测试工具是否能正确处理最大允许的limit值（20），并获取最近十二个月的财务数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5825166702270508,
        "is_functional_test": true
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "获取有效股票代码的年度资产负债表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的最近5年年度资产负债表信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.66219162940979,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的季度资产负债表",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取季度资产负债表，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6032707691192627,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取资产负债表",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5991992950439453,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 1 validation error for get_balance_sheetsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 1 validation error for get_balance_sheetsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.017000436782836914,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.602891206741333,
        "is_functional_test": false
      },
      {
        "case_name": "使用最大限制值获取TTM资产负债表",
        "purpose": "测试工具是否能正确处理最大允许的limit值（20），并获取最近十二个月的财务数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.553992748260498,
        "is_functional_test": true
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.598116159439087,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "获取有效股票代码的年度现金流量表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的最近5年年度现金流量表信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5304346084594727,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的季度现金流量表",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取季度现金流量表，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.9247119426727295,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大限制值获取TTM现金流量表",
        "purpose": "测试工具是否能正确处理最大允许的limit值（20），并获取最近十二个月的现金流量表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5479178428649902,
        "is_functional_test": true
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5775904655456543,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效股票代码获取现金流量表",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5863215923309326,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 1 validation error for get_cash_flowsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 1 validation error for get_cash_flowsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008517265319824219,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.520984411239624,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "获取有效股票代码的财务比率",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的财务比率信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5360608100891113,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取财务比率",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.576960563659668,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007221221923828125,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.7877037525177002,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5557358264923096,
        "is_functional_test": false
      },
      {
        "case_name": "获取另一个主流公司的财务比率信息",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取财务比率，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.529463291168213,
        "is_functional_test": true
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.565368890762329,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "获取有效股票代码的历史财报数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的历史财报数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 2.1959664821624756,
        "is_functional_test": true
      },
      {
        "case_name": "使用另一个主流股票代码获取历史财报数据",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取历史财报数据，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5494182109832764,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取历史财报数据",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5600743293762207,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004117727279663086,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.6223957538604736,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5929765701293945,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "获取有效股票代码的分析师预测数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的分析师预测数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5636518001556396,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的分析师预测数据",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取分析师预测数据，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5788424015045166,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取分析师预测数据",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5689990520477295,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.01125478744506836,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007512331008911133,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5404553413391113,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.541147232055664,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.9475932121276855,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "获取有效股票代码的默认历史价格数据",
        "purpose": "验证工具可以成功获取一个有效股票代码在默认时间范围内的历史股价数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5932326316833496,
        "is_functional_test": true
      },
      {
        "case_name": "指定日期范围内获取主流股票的历史价格",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取指定日期范围内的历史价格，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5739209651947021,
        "is_functional_test": true
      },
      {
        "case_name": "未提供必填参数'symbol'",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nsymbol\n  Field required [type=missing, input_value={'start_date': '2023-01-0...end_date': '2023-12-31'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效股票代码获取历史价格",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.515000581741333,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5437474250793457,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的股票代码参数",
        "purpose": "测试工具是否对潜在的恶意输入（如SQL注入脚本）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE stocks;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5681304931640625,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.8992218971252441,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "获取市场新闻默认参数测试",
        "purpose": "验证工具在不指定ticker的情况下，使用默认参数成功获取市场相关新闻。",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.563082218170166,
        "is_functional_test": true
      },
      {
        "case_name": "获取特定公司股票新闻",
        "purpose": "验证工具能成功获取指定股票代码（如AAPL）的最新金融新闻。",
        "args": {
          "ticker": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5577044486999512,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大限制值获取新闻",
        "purpose": "验证工具在最大允许的limit值（20）时能正常返回结果。",
        "args": {
          "ticker": "AAPL",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5375819206237793,
        "is_functional_test": true
      },
      {
        "case_name": "未提供ticker和limit默认值测试",
        "purpose": "验证当不提供ticker且不显式设置limit时，工具是否能使用默认limit值正确获取市场新闻。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5128638744354248,
        "is_functional_test": true
      },
      {
        "case_name": "尝试注入恶意构造的ticker参数",
        "purpose": "测试工具是否对潜在的恶意输入（如SQL注入、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "ticker": "'; DROP TABLE news;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.7081477642059326,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的ticker",
        "purpose": "测试当传入非字符串类型的ticker（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 1 validation error for get_market_newsArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0040318965911865234,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的ticker",
        "purpose": "验证工具是否能正确处理包含特殊字符的ticker输入，并抛出相应的参数验证错误。",
        "args": {
          "ticker": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5588490962982178,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "ticker": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.693225383758545,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "获取有效股票代码的股息历史记录",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的股息历史记录。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.9283952713012695,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取股息历史记录",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5304980278015137,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0073277950286865234,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.563183307647705,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5258054733276367,
        "is_functional_test": false
      },
      {
        "case_name": "获取另一个主流公司的股息历史记录",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取股息历史记录，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6263728141784668,
        "is_functional_test": true
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.579559326171875,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "获取有效股票代码的股票分割历史",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的股票分割历史信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5866053104400635,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的股票分割历史",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取股票分割历史，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.7824971675872803,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取股票分割历史",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5831468105316162,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004698991775512695,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5388767719268799,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意构造的参数",
        "purpose": "测试工具是否对潜在的恶意输入（如超长字符串、脚本片段）进行有效过滤和安全处理。",
        "args": {
          "symbol": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.8035171031951904,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5572290420532227,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "获取有效股票代码的股权结构数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的公司股权结构数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.566619873046875,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个主流公司的股权结构数据",
        "purpose": "测试另一个有效但不同的股票代码是否也能正常获取股权结构数据，确保基本功能在不同合法参数下稳定工作。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.7096729278564453,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取股权结构数据",
        "purpose": "测试当提供一个不存在或无效的股票代码时，工具是否能正确处理错误并返回适当的异常信息。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5435576438903809,
        "is_functional_test": false
      },
      {
        "case_name": "未提供股票代码参数",
        "purpose": "验证当不提供必填参数'symbol'时，工具是否能抛出ValueError异常。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": false
      },
      {
        "case_name": "输入非字符串类型的股票代码",
        "purpose": "测试当传入非字符串类型的股票代码（如数字）时，工具是否能正确抛出ValueError。",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含特殊字符的股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并抛出相应的参数验证错误。",
        "args": {
          "symbol": "A@PL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5366365909576416,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败情况处理",
        "purpose": "模拟外部API不可用的情况，验证工具是否能正确捕获httpx.HTTPStatusError并进行错误处理。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5509729385375977,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 94
}