{
  "server_name": "mongodb_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-mongodb_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\mongodb_mcp_server.py",
  "timestamp": "2025-07-13T22:52:04.190487",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON字符串。\n    \n    Raises:\n        OperationFailure: 如果获取数据库列表时发生错误。\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 要列出集合的数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON字符串。\n    \n    Raises:\n        ValueError: 如果数据库名称为空或空白字符。\n        OperationFailure: 如果获取集合列表时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 要插入文档的数据库名称 (必填)。\n        collection_name: 要插入文档的集合名称 (必填)。\n        document: 要插入的文档数据 (必填)，以字典形式提供。\n\n    Returns:\n        一个字符串，表示插入成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称为空，或者文档不是字典类型。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 要查询的数据库名称 (必填)。\n        collection_name: 要查询的集合名称 (必填)。\n        query: 查询条件 (必填)，以字典形式提供。\n        projection: 投影参数 (可选)，指定要返回的字段。\n        limit: 限制返回结果数量 (可选)，0表示无限制。\n\n    Returns:\n        一个包含查询结果的JSON字符串。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要更新文档的数据库名称 (必填)。\n        collection_name: 要更新文档的集合名称 (必填)。\n        query: 更新条件 (必填)，以字典形式提供。\n        update: 更新内容 (必填)，以字典形式提供。\n        multi: 是否更新多个文档 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示更新成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称、查询条件或更新内容无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要删除文档的数据库名称 (必填)。\n        collection_name: 要删除文档的集合名称 (必填)。\n        query: 删除条件 (必填)，以字典形式提供。\n        multi: 是否批量删除模式 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示删除成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "列出所有数据库的基本功能测试",
        "purpose": "验证mcp_list_databases工具在默认参数下可以成功列出MongoDB服务器上的所有数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.003022909164428711,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问数据库列表的安全性测试",
        "purpose": "验证当用户没有足够权限时，mcp_list_databases是否能安全地拒绝请求并抛出OperationFailure异常。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.001998424530029297,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB服务不可用时的错误处理测试",
        "purpose": "验证当MongoDB服务未运行时，mcp_list_databases是否能正确捕获异常并抛出OperationFailure。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称包含特殊字符的边界条件测试",
        "purpose": "验证当数据库名称中包含特殊字符时，mcp_list_databases能否正确返回这些名称而不引发异常。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "列出指定数据库中的集合的基本功能测试",
        "purpose": "验证mcp_list_collections工具在指定有效数据库名称时，可以成功列出该数据库下的所有集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.00451207160949707,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问集合列表的安全性测试",
        "purpose": "验证当用户没有足够权限访问指定数据库的集合列表时，mcp_list_collections是否能安全地拒绝请求并抛出OperationFailure异常。",
        "args": {
          "database_name": "restricted_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当数据库名称参数为空字符串时，mcp_list_collections是否能正确抛出ValueError异常。",
        "args": {
          "database_name": ""
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.002997875213623047,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为纯空白字符的错误处理测试",
        "purpose": "验证当数据库名称参数仅为空白字符（如空格、制表符等）时，mcp_list_collections是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "   "
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.00551915168762207,
        "is_functional_test": false
      },
      {
        "case_name": "指定数据库不存在时的错误处理测试",
        "purpose": "验证当指定的数据库不存在时，mcp_list_collections是否能正确捕获异常并抛出OperationFailure。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.006017923355102539,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称包含特殊字符的边界条件测试",
        "purpose": "验证当数据库名称中包含特殊字符时，mcp_list_collections能否正确识别该数据库并返回其集合列表。",
        "args": {
          "database_name": "db_with_!@#$_chars"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.004994392395019531,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB服务不可用时的错误处理测试",
        "purpose": "验证当MongoDB服务未运行时，mcp_list_collections是否能正确捕获连接失败异常并抛出OperationFailure。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.003509998321533203,
        "is_functional_test": false
      },
      {
        "case_name": "数据库存在但无集合时的空结果测试",
        "purpose": "验证当指定数据库存在但没有任何集合时，mcp_list_collections是否能返回一个空数组而不引发错误。",
        "args": {
          "database_name": "empty_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0050048828125,
        "is_functional_test": true
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "向指定数据库和集合插入文档的基本功能测试",
        "purpose": "验证mcp_insert_document工具在提供有效数据库名称、集合名称和文档数据时，能够成功插入文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Alice",
            "age": 30,
            "city": "Beijing"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003501415252685547,
        "is_functional_test": true
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当数据库名称参数为空字符串时，mcp_insert_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "name": "Bob",
            "age": 25
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.010004997253417969,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的错误处理测试",
        "purpose": "验证当集合名称参数为空字符串时，mcp_insert_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "name": "Charlie",
            "age": 40
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.008990287780761719,
        "is_functional_test": false
      },
      {
        "case_name": "文档参数不是字典类型的错误处理测试",
        "purpose": "验证当文档参数不是字典类型时，mcp_insert_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": "This is not a dictionary"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value='This is not a dictionary', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": false
      },
      {
        "case_name": "数据库不存在时的错误处理测试",
        "purpose": "验证当指定的数据库不存在时，mcp_insert_document是否能正确捕获异常并抛出OperationFailure。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "test_collection",
          "document": {
            "name": "David",
            "age": 35
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": false
      },
      {
        "case_name": "集合不存在时的自动创建测试",
        "purpose": "验证当指定的集合不存在时，mcp_insert_document是否能自动创建该集合并成功插入文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "new_collection",
          "document": {
            "name": "Eve",
            "age": 28
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": true
      },
      {
        "case_name": "数据库名称包含特殊字符的边界条件测试",
        "purpose": "验证当数据库名称中包含特殊字符时，mcp_insert_document能否正确识别该数据库并插入文档。",
        "args": {
          "database_name": "db_with_!@#$_chars",
          "collection_name": "test_collection",
          "document": {
            "name": "Frank",
            "age": 45
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB服务不可用时的错误处理测试",
        "purpose": "验证当MongoDB服务未运行时，mcp_insert_document是否能正确捕获连接失败异常并抛出OperationFailure。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Grace",
            "age": 50
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006998300552368164,
        "is_functional_test": false
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "基本查询功能测试",
        "purpose": "验证mcp_find_documents工具在指定有效数据库和集合中，使用基本查询条件能正确返回结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "带投影参数的查询测试",
        "purpose": "验证当提供projection参数时，mcp_find_documents能否仅返回指定字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "projection": {
            "_id": 0,
            "name": 1
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": true
      },
      {
        "case_name": "限制结果数量的查询测试",
        "purpose": "验证当提供limit参数时，mcp_find_documents能否正确限制返回文档的数量。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006990909576416016,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问集合的安全性测试",
        "purpose": "验证当用户没有权限访问指定集合时，mcp_find_documents是否能安全地拒绝请求并抛出异常。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "secure_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当database_name参数为空字符串时，mcp_find_documents是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'database_name' 不能为空。"
        },
        "execution_time": 0.014002084732055664,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的错误处理测试",
        "purpose": "验证当collection_name参数为空字符串时，mcp_find_documents是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'collection_name' 不能为空。"
        },
        "execution_time": 0.003995656967163086,
        "is_functional_test": false
      },
      {
        "case_name": "查询条件为None的错误处理测试",
        "purpose": "验证当query参数为None时，mcp_find_documents是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nquery\n  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": false
      },
      {
        "case_name": "数据库和集合名称包含特殊字符的边界条件测试",
        "purpose": "验证当数据库和集合名称包含特殊字符时，mcp_find_documents能否正确识别这些名称并执行查询。",
        "args": {
          "database_name": "db_with_!@#$_chars",
          "collection_name": "coll_with_!@#$_chars",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "更新单个文档的基本功能测试",
        "purpose": "验证mcp_update_document工具在指定数据库、集合和查询条件下，能够成功更新一个匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "更新多个文档的多更新模式测试",
        "purpose": "验证当multi参数为True时，mcp_update_document工具可以更新所有符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "test"
          },
          "update": {
            "$set": {
              "updated_by": "admin"
            }
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": true
      },
      {
        "case_name": "无权限更新文档的安全性测试",
        "purpose": "验证当用户没有足够权限更新文档时，mcp_update_document是否能安全地拒绝请求并抛出OperationFailure异常。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.007010459899902344,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当数据库名称参数为空字符串时，mcp_update_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.005002260208129883,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为纯空白字符的错误处理测试",
        "purpose": "验证当集合名称参数仅为空白字符时，mcp_update_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "   ",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.0075261592864990234,
        "is_functional_test": false
      },
      {
        "case_name": "查询条件为空对象的边界条件测试",
        "purpose": "验证当查询条件为空字典时，mcp_update_document是否更新所有文档（取决于multi参数）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "update": {
            "$set": {
              "all_updated": true
            }
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "数据库不存在时的错误处理测试",
        "purpose": "验证当指定的数据库不存在时，mcp_update_document是否能正确捕获异常并抛出OperationFailure。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "test_collection",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "更新内容包含特殊字符的边界条件测试",
        "purpose": "验证当更新内容中包含特殊字符时，mcp_update_document能否正确处理这些字段值而不引发异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "_id": 1
          },
          "update": {
            "$set": {
              "description": "This is a !@#$%^&*() test."
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "删除文档的基本功能测试",
        "purpose": "验证mcp_delete_document工具在提供有效数据库名称、集合名称和查询条件时可以成功删除文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "批量删除文档的功能测试",
        "purpose": "验证当multi参数为True时，mcp_delete_document工具可以批量删除符合条件的所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "type": "test"
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006011247634887695,
        "is_functional_test": true
      },
      {
        "case_name": "无权限删除文档的安全性测试",
        "purpose": "验证当用户没有足够权限删除指定集合中的文档时，mcp_delete_document是否能安全地拒绝请求并抛出OperationFailure异常。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "query": {
            "name": "sensitive_data"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005994081497192383,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当数据库名称参数为空字符串时，mcp_delete_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的错误处理测试",
        "purpose": "验证当集合名称参数为空字符串时，mcp_delete_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "查询条件为空的错误处理测试",
        "purpose": "验证当查询条件参数为空字典时，mcp_delete_document是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.00600123405456543,
        "is_functional_test": false
      },
      {
        "case_name": "数据库或集合不存在时的错误处理测试",
        "purpose": "验证当指定的数据库或集合不存在时，mcp_delete_document是否能正确捕获异常并返回失败消息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006004810333251953,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库和集合名称的边界条件测试",
        "purpose": "验证当数据库名称和集合名称包含特殊字符时，mcp_delete_document能否正确识别并执行删除操作。",
        "args": {
          "database_name": "db_with_!@#$_chars",
          "collection_name": "col_with_!@#$_chars",
          "query": {
            "key": "value_with_!@#$"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 44
}