{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_mongodb_manager",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_mongodb_manager/refined/server.py",
  "timestamp": "2025-07-16T10:38:48.870921",
  "tools": [
    {
      "name": "mcp_health_check",
      "description": "\n    Checks if the MongoDB server is reachable and responsive.\n\n    Returns:\n        A string indicating the health status of the MongoDB connection.\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_health_checkArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_databases",
      "description": "\n    Lists all available databases in the MongoDB instance.\n\n    Returns:\n        A list of strings, where each string represents a database name.\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    Lists all collections in a specified MongoDB database.\n\n    Args:\n        database_name: The name of the database to query.\n\n    Returns:\n        A list of strings, where each string represents a collection name in the specified database.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    Inserts a new document into a specified MongoDB collection.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        document: The document to insert.\n\n    Returns:\n        A string indicating the success or failure of the insertion, including the inserted document's ID if successful.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    Queries documents in a specified MongoDB collection, with support for projection and result limiting.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria. Defaults to {} (all documents).\n        projection: The fields to include/exclude in the results. Defaults to None (all fields).\n        limit: The maximum number of documents to return. Defaults to 0 (no limit).\n\n    Returns:\n        A list of dictionaries, where each dictionary represents a matching document.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Query"
          },
          "projection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Projection"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    Updates documents in a specified MongoDB collection, supporting single or multiple updates.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria to select documents to update.\n        update: The update operations to apply.\n        multi: Whether to update multiple documents. Defaults to False.\n\n    Returns:\n        A string indicating the success or failure of the update, including the number of documents modified.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    Deletes documents from a specified MongoDB collection, supporting single or batch deletion.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection.\n        query: The query criteria to select documents to delete.\n        multi: Whether to delete multiple documents. Defaults to False.\n\n    Returns:\n        A string indicating the success or failure of the deletion, including the number of documents deleted.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_drop_database",
      "description": "\n    Drops (deletes) an entire database.\n\n    Args:\n        database_name: The name of the database to drop.\n\n    Returns:\n        A string indicating whether the database was successfully dropped.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_drop_databaseArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_drop_collection",
      "description": "\n    Drops (deletes) a specific collection from a database.\n\n    Args:\n        database_name: The name of the database.\n        collection_name: The name of the collection to drop.\n\n    Returns:\n        A string indicating whether the collection was successfully dropped.\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_drop_collectionArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_health_check": [
      {
        "case_name": "MongoDB健康检查-基本功能验证",
        "purpose": "验证mcp_health_check工具能够正确检测MongoDB服务器的健康状态，使用默认参数进行测试。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.0028162002563476562,
        "is_functional_test": true
      },
      {
        "case_name": "MongoDB健康检查-无网络连接",
        "purpose": "验证当MongoDB服务器无法访问时，工具是否能正确返回错误信息或超时处理。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.005010128021240234,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-认证失败模拟",
        "purpose": "模拟MongoDB连接时因凭证错误导致连接失败的情况，验证工具能否安全处理并返回适当提示。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.004137754440307617,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-长时间延迟响应",
        "purpose": "验证在MongoDB服务器响应延迟的情况下，工具是否具备合理的超时机制，避免无限等待。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.002004384994506836,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-高负载下并发测试",
        "purpose": "验证在多个并发请求同时执行健康检查时，工具是否仍能稳定运行并返回正确结果。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.0022962093353271484,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-安全漏洞扫描",
        "purpose": "验证该工具在执行健康检查过程中是否存在潜在的安全漏洞（如注入攻击、敏感信息泄露等）。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.004518747329711914,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-无效配置文件输入",
        "purpose": "验证当存在错误或损坏的配置文件时，工具是否能正确识别并给出错误提示而非崩溃。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.004507303237915039,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB健康检查-边界条件测试（空参数）",
        "purpose": "验证工具在接收到空参数或未定义参数时是否能正常处理，确保其鲁棒性。",
        "args": {},
        "response": {
          "result": "MongoDB connection is healthy"
        },
        "execution_time": 0.0033774375915527344,
        "is_functional_test": false
      }
    ],
    "mcp_list_databases": [
      {
        "case_name": "列出所有数据库-基本功能验证",
        "purpose": "验证mcp_list_databases工具能够正确列出MongoDB实例中的所有数据库，使用默认参数进行测试。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.005165815353393555,
        "is_functional_test": true
      },
      {
        "case_name": "列出所有数据库-无网络连接",
        "purpose": "验证当MongoDB服务器无法访问时，工具是否能正确返回错误信息或超时处理。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0025205612182617188,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-认证失败模拟",
        "purpose": "模拟MongoDB连接时因凭证错误导致连接失败的情况，验证工具能否安全处理并返回适当提示。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0026445388793945312,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-长时间延迟响应",
        "purpose": "验证在MongoDB服务器响应延迟的情况下，工具是否具备合理的超时机制，避免无限等待。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0025162696838378906,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-高负载下并发测试",
        "purpose": "验证在多个并发请求同时执行数据库列表获取时，工具是否仍能稳定运行并返回正确结果。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0019989013671875,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-安全漏洞扫描",
        "purpose": "验证该工具在执行数据库列表获取过程中是否存在潜在的安全漏洞（如注入攻击、敏感信息泄露等）。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.002997875213623047,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-无效配置文件输入",
        "purpose": "验证当存在错误或损坏的配置文件时，工具是否能正确识别并给出错误提示而非崩溃。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0050203800201416016,
        "is_functional_test": false
      },
      {
        "case_name": "列出所有数据库-边界条件测试（空参数）",
        "purpose": "验证工具在接收到空参数或未定义参数时是否能正常处理，确保其鲁棒性。",
        "args": {},
        "response": [
          "admin",
          "config",
          "invalid_database",
          "local",
          "mcp-test",
          "users",
          "智能软件工"
        ],
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "列出指定数据库的集合-基本功能验证",
        "purpose": "验证mcp_list_collections工具能够正确列出指定MongoDB数据库中的所有集合。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "user_profiles",
          "集合_测试",
          "用户信息",
          "test"
        ],
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "列出指定数据库的集合-数据库不存在",
        "purpose": "验证当指定的数据库不存在时，工具是否能返回空列表或适当的错误信息。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "Database 'nonexistent_db' does not exist"
        },
        "execution_time": 0.0019998550415039062,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-认证失败模拟",
        "purpose": "模拟MongoDB连接时因凭证错误导致连接失败的情况，验证工具能否安全处理并返回适当提示。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "user_profiles",
          "集合_测试",
          "用户信息",
          "test"
        ],
        "execution_time": 0.006017208099365234,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-长时间延迟响应",
        "purpose": "验证在MongoDB服务器响应延迟的情况下，工具是否具备合理的超时机制，避免无限等待。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "user_profiles",
          "集合_测试",
          "用户信息",
          "test"
        ],
        "execution_time": 0.004055023193359375,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-边界条件测试（空参数）",
        "purpose": "验证工具在接收到空参数或未定义参数时是否能正常处理，确保其鲁棒性。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.004006147384643555,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-特殊字符数据库名",
        "purpose": "验证工具能否正确处理包含特殊字符的数据库名称，防止注入攻击或其他异常情况。",
        "args": {
          "database_name": "db_with_@special#chars"
        },
        "response": {
          "result": "Database 'db_with_@special#chars' does not exist"
        },
        "execution_time": 0.004003047943115234,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-高负载下并发测试",
        "purpose": "验证在多个并发请求同时执行集合列表获取时，工具是否仍能稳定运行并返回正确结果。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "user_profiles",
          "集合_测试",
          "用户信息",
          "test"
        ],
        "execution_time": 0.0050182342529296875,
        "is_functional_test": false
      },
      {
        "case_name": "列出指定数据库的集合-安全漏洞扫描",
        "purpose": "验证该工具在执行集合列表获取过程中是否存在潜在的安全漏洞（如注入攻击、敏感信息泄露等）。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "user_profiles",
          "集合_测试",
          "用户信息",
          "test"
        ],
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "插入文档-基本功能验证",
        "purpose": "验证mcp_insert_document工具能够正确将文档插入到指定的MongoDB集合中，使用默认参数进行测试。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "document": {
            "name": "Test Document",
            "content": "This is a test document for insertion."
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 68771115603cfd63fea657d1"
        },
        "execution_time": 0.018118619918823242,
        "is_functional_test": true
      },
      {
        "case_name": "插入文档-空数据库名称",
        "purpose": "验证当数据库名称为空时，工具是否能正确返回错误信息而非崩溃。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "name": "Empty DB Name Test"
          }
        },
        "response": {
          "result": "Error inserting document: database name cannot be the empty string"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "插入文档-空集合名称",
        "purpose": "验证当集合名称为空时，工具是否能正确处理并返回适当的错误提示。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "",
          "document": {
            "name": "Empty Collection Name Test"
          }
        },
        "response": {
          "result": "Error inserting document: collection names cannot be empty"
        },
        "execution_time": 0.002513408660888672,
        "is_functional_test": false
      },
      {
        "case_name": "插入文档-特殊字符字段名",
        "purpose": "验证工具是否支持包含特殊字符的文档字段名，确保MongoDB兼容性。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "document": {
            "field@name": "Special Char Field Value"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 68771115603cfd63fea657d2"
        },
        "execution_time": 0.0030062198638916016,
        "is_functional_test": true
      },
      {
        "case_name": "插入文档-认证失败模拟",
        "purpose": "模拟MongoDB连接凭证错误导致插入失败的情况，验证工具能否安全处理并返回适当提示。",
        "args": {
          "database_name": "invalid_database",
          "collection_name": "test_collection",
          "document": {
            "name": "Auth Failure Test"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 68771115603cfd63fea657d3"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "插入文档-无网络连接",
        "purpose": "验证当MongoDB服务器无法访问时，工具是否能正确返回错误信息或超时处理。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "document": {
            "name": "Network Failure Test"
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 68771115603cfd63fea657d4"
        },
        "execution_time": 0.002924203872680664,
        "is_functional_test": false
      },
      {
        "case_name": "插入文档-嵌套对象结构",
        "purpose": "验证工具是否能正确处理包含嵌套对象结构的文档插入。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "document": {
            "user": {
              "id": 1,
              "details": {
                "name": "John Doe",
                "email": "john.doe@example.com"
              }
            }
          }
        },
        "response": {
          "result": "Document inserted successfully with ID: 68771115603cfd63fea657d5"
        },
        "execution_time": 0.004008769989013672,
        "is_functional_test": true
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "查询文档-基本功能验证",
        "purpose": "验证mcp_find_documents工具能够正确从指定MongoDB集合中检索所有文档，使用默认参数进行测试。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection"
        },
        "response": [
          "{\n  \"_id\": \"68771115603cfd63fea657d1\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document for insertion.\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d2\",\n  \"field@name\": \"Special Char Field Value\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d4\",\n  \"name\": \"Network Failure Test\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d5\",\n  \"user\": {\n    \"id\": 1,\n    \"details\": {\n      \"name\": \"John Doe\",\n      \"email\": \"john.doe@example.com\"\n    }\n  }\n}"
        ],
        "execution_time": 0.007593631744384766,
        "is_functional_test": true
      },
      {
        "case_name": "查询文档-带过滤条件",
        "purpose": "验证工具能够根据提供的query参数正确筛选符合条件的文档。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          }
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": true
      },
      {
        "case_name": "查询文档-字段投影控制",
        "purpose": "验证工具支持projection参数，能选择性返回特定字段的数据。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": [
          "{\n  \"name\": \"Test Document\"\n}",
          "{}",
          "{\n  \"name\": \"Network Failure Test\"\n}",
          "{}"
        ],
        "execution_time": 0.0035037994384765625,
        "is_functional_test": true
      },
      {
        "case_name": "查询文档-限制结果数量",
        "purpose": "验证limit参数能有效限制返回的文档数量。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "limit": 5
        },
        "response": [
          "{\n  \"_id\": \"68771115603cfd63fea657d1\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document for insertion.\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d2\",\n  \"field@name\": \"Special Char Field Value\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d4\",\n  \"name\": \"Network Failure Test\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d5\",\n  \"user\": {\n    \"id\": 1,\n    \"details\": {\n      \"name\": \"John Doe\",\n      \"email\": \"john.doe@example.com\"\n    }\n  }\n}"
        ],
        "execution_time": 0.006564617156982422,
        "is_functional_test": true
      },
      {
        "case_name": "查询文档-组合查询与投影及限制",
        "purpose": "验证工具在同时使用query、projection和limit参数时是否正常工作。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "category": "technology"
          },
          "projection": {
            "title": 1,
            "author": 1,
            "_id": 0
          },
          "limit": 3
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.004935741424560547,
        "is_functional_test": true
      },
      {
        "case_name": "查询文档-无效数据库名称",
        "purpose": "验证当提供不存在或无效的数据库名称时，工具能否优雅处理错误并返回提示信息。",
        "args": {
          "database_name": "invalid_database",
          "collection_name": "test_collection"
        },
        "response": [
          "{\n  \"_id\": \"6872af6d9da8b940f807d36a\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"68771115603cfd63fea657d3\",\n  \"name\": \"Auth Failure Test\"\n}"
        ],
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "查询文档-无效集合名称",
        "purpose": "验证当提供不存在或无效的集合名称时，工具能否识别并安全地返回错误信息。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "invalid_collection"
        },
        "response": {
          "result": "{\n  \"error\": \"Collection 'invalid_collection' does not exist in database 'mcp-test'\"\n}"
        },
        "execution_time": 0.007756948471069336,
        "is_functional_test": false
      },
      {
        "case_name": "查询文档-特殊字符字段名",
        "purpose": "验证工具是否能正确处理包含特殊字符的字段名查询。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "field.with.dots": "test_value"
          }
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0035028457641601562,
        "is_functional_test": true
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "更新文档-基本功能验证",
        "purpose": "验证mcp_update_document工具能够正确更新指定数据库和集合中的单个文档。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.005554914474487305,
        "is_functional_test": true
      },
      {
        "case_name": "更新文档-多文档更新",
        "purpose": "验证当multi参数为True时，mcp_update_document工具是否能正确更新多个匹配的文档。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "category": "test"
          },
          "update": {
            "$set": {
              "updated_by": "automation"
            }
          },
          "multi": true
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.004005908966064453,
        "is_functional_test": true
      },
      {
        "case_name": "更新文档-使用默认multi值",
        "purpose": "验证当不提供multi参数时，默认行为是否为只更新一个文档。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "status": "pending"
          },
          "update": {
            "$set": {
              "status": "in_progress"
            }
          }
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.0040187835693359375,
        "is_functional_test": true
      },
      {
        "case_name": "更新文档-无效数据库名称",
        "purpose": "验证当提供的数据库名称不存在时，工具是否能安全处理并返回错误信息。",
        "args": {
          "database_name": "invalid_database",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.004075765609741211,
        "is_functional_test": false
      },
      {
        "case_name": "更新文档-无效集合名称",
        "purpose": "验证当提供的集合名称不存在时，工具是否能安全处理并提示错误。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "invalid_collection",
          "query": {
            "name": "test_document"
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.003506183624267578,
        "is_functional_test": false
      },
      {
        "case_name": "更新文档-非法查询条件",
        "purpose": "验证当提供的查询条件格式错误或无效时，工具是否能正确捕获异常并返回错误信息。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "$invalid_operator": "test"
          },
          "update": {
            "$set": {
              "status": "updated"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Error updating document: unknown top level operator: $invalid_operator. If you have a field name that starts with a '$' symbol, consider using $getField or $setField., full error: {'index': 0, 'code': 2, 'errmsg': \"unknown top level operator: $invalid_operator. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\"}"
        },
        "execution_time": 0.005972385406494141,
        "is_functional_test": false
      },
      {
        "case_name": "更新文档-特殊字符字段名",
        "purpose": "验证工具是否能正确处理包含特殊字符的字段名在查询和更新操作中。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "field@#%": "value_with_special_chars"
          },
          "update": {
            "$set": {
              "field@#%": "new_value"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.0050296783447265625,
        "is_functional_test": true
      },
      {
        "case_name": "更新文档-Unicode内容更新",
        "purpose": "验证工具是否支持使用Unicode字符进行文档更新操作。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "name": "测试文档"
          },
          "update": {
            "$set": {
              "description": "这是一个测试描述。"
            }
          },
          "multi": false
        },
        "response": {
          "result": "Successfully updated 0 document(s)"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "删除文档-基本功能验证",
        "purpose": "验证mcp_delete_document工具能够正确从指定MongoDB集合中删除符合条件的单个文档，使用默认参数进行测试。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.004020214080810547,
        "is_functional_test": true
      },
      {
        "case_name": "删除文档-批量删除功能验证",
        "purpose": "验证当multi参数设为True时，工具是否能正确删除所有匹配查询条件的多个文档。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "category": "batch_delete"
          },
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "删除文档-无效数据库名称",
        "purpose": "验证当提供一个不存在的数据库名称时，工具是否能优雅地处理错误并返回提示信息。",
        "args": {
          "database_name": "invalid_database",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.0030057430267333984,
        "is_functional_test": false
      },
      {
        "case_name": "删除文档-无效集合名称",
        "purpose": "验证当提供一个不存在的集合名称时，工具是否能正确识别并给出错误提示而非崩溃。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "invalid_collection",
          "query": {
            "name": "test_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.002515077590942383,
        "is_functional_test": false
      },
      {
        "case_name": "删除文档-无匹配文档",
        "purpose": "验证当查询条件不匹配任何文档时，工具是否能正确返回0条删除记录并给出适当提示。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "name": "non_existent_document"
          },
          "multi": false
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "删除文档-特殊字符查询条件",
        "purpose": "验证工具在查询字段中包含特殊字符（如正则表达式符号）时能否安全处理，防止意外删除。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "name": {
              "$regex": "^test.*"
            }
          },
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.004021406173706055,
        "is_functional_test": false
      },
      {
        "case_name": "删除文档-边界条件测试（空查询）",
        "purpose": "验证当查询参数为空对象时，工具是否能正确处理（如拒绝操作或按预期行为执行）。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {},
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 4 document(s)"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "删除文档-高负载下并发删除测试",
        "purpose": "验证在多个并发请求同时执行删除操作时，工具是否仍能稳定运行并返回正确结果。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_collection",
          "query": {
            "concurrent_delete_flag": true
          },
          "multi": true
        },
        "response": {
          "result": "Successfully deleted 0 document(s)"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      }
    ],
    "mcp_drop_collection": [
      {
        "case_name": "删除集合-基本功能验证",
        "purpose": "验证mcp_drop_collection工具能够正确删除指定数据库中的集合，使用有效参数进行测试。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_output"
        },
        "response": {
          "result": "Collection 'test_output' does not exist in database 'mcp-test'"
        },
        "execution_time": 0.005003452301025391,
        "is_functional_test": true
      },
      {
        "case_name": "删除集合-无效数据库名称",
        "purpose": "验证当提供不存在的数据库名称时，工具是否能返回错误提示或处理异常情况。",
        "args": {
          "database_name": "invalid_database",
          "collection_name": "test_output"
        },
        "response": {
          "result": "Collection 'test_output' does not exist in database 'invalid_database'"
        },
        "execution_time": 0.004939556121826172,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-无效集合名称",
        "purpose": "验证当提供不存在的集合名称时，工具是否能安全处理并返回适当提示。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "nonexistent_collection"
        },
        "response": {
          "result": "Collection 'nonexistent_collection' does not exist in database 'mcp-test'"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-空数据库名称",
        "purpose": "验证工具在接收到空数据库名称参数时是否能正常处理，确保其鲁棒性。",
        "args": {
          "database_name": "",
          "collection_name": "test_output"
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-空集合名称",
        "purpose": "验证工具在接收到空集合名称参数时是否能正常处理，确保其鲁棒性。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": ""
        },
        "response": {
          "result": "Collection '' does not exist in database 'mcp-test'"
        },
        "execution_time": 0.0025081634521484375,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-特殊字符数据库名称",
        "purpose": "验证工具能否处理包含特殊字符的数据库名称，并正确拒绝或处理非法输入。",
        "args": {
          "database_name": "db@name#with!special$chars",
          "collection_name": "test_output"
        },
        "response": {
          "result": "Database 'db@name#with!special$chars' does not exist"
        },
        "execution_time": 0.0019998550415039062,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-特殊字符集合名称",
        "purpose": "验证工具能否处理包含特殊字符的集合名称，并正确拒绝或处理非法输入。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "col@name#with!special$chars"
        },
        "response": {
          "result": "Collection 'col@name#with!special$chars' does not exist in database 'mcp-test'"
        },
        "execution_time": 0.005663156509399414,
        "is_functional_test": false
      },
      {
        "case_name": "删除集合-安全性测试（SQL注入模拟）",
        "purpose": "验证该工具在执行集合删除操作过程中是否存在潜在的安全漏洞（如SQL注入、命令注入等）。",
        "args": {
          "database_name": "mcp-test",
          "collection_name": "test_output'; DROP TABLE users; --"
        },
        "response": {
          "result": "Collection 'test_output'; DROP TABLE users; --' does not exist in database 'mcp-test'"
        },
        "execution_time": 0.02153325080871582,
        "is_functional_test": false
      }
    ],
    "mcp_drop_database": [
      {
        "case_name": "删除数据库-基本功能验证",
        "purpose": "验证mcp_drop_database工具能够正确删除指定的数据库，使用有效存在的数据库名进行测试。",
        "args": {
          "database_name": "invalid_database"
        },
        "response": {
          "result": "Database 'invalid_database' has been dropped successfully"
        },
        "execution_time": 0.004484653472900391,
        "is_functional_test": true
      },
      {
        "case_name": "删除数据库-尝试删除系统保留数据库",
        "purpose": "验证工具是否能安全处理试图删除MongoDB系统保留数据库（如admin）的情况，并返回适当错误提示。",
        "args": {
          "database_name": "admin"
        },
        "response": {
          "result": "Error dropping database: Dropping the 'admin' database is prohibited., full error: {'ok': 0.0, 'errmsg': \"Dropping the 'admin' database is prohibited.\", 'code': 20, 'codeName': 'IllegalOperation'}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-尝试删除不存在的数据库",
        "purpose": "验证当用户尝试删除一个不存在的数据库时，工具能否优雅地处理并返回错误信息而非崩溃。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "Database 'nonexistent_db' does not exist"
        },
        "execution_time": 0.002508878707885742,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-无网络连接",
        "purpose": "验证在与MongoDB服务器失去连接的情况下，工具是否能正确识别并返回连接失败提示。",
        "args": {
          "database_name": "users"
        },
        "response": {
          "result": "Database 'users' has been dropped successfully"
        },
        "execution_time": 0.003103494644165039,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-认证失败模拟",
        "purpose": "模拟因MongoDB连接凭证错误导致权限不足的情况，验证工具是否能安全处理并返回适当提示。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": {
          "result": "Database 'mcp-test' has been dropped successfully"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-特殊字符数据库名称",
        "purpose": "验证工具是否能正确处理包含特殊字符的数据库名称输入，防止注入或异常崩溃。",
        "args": {
          "database_name": "db_with_!@#$%^&*()"
        },
        "response": {
          "result": "Database 'db_with_!@#$%^&*()' does not exist"
        },
        "execution_time": 0.0019986629486083984,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-空参数输入",
        "purpose": "验证工具在接收到空字符串作为数据库名称时是否能正确报错并拒绝操作。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "Database '' does not exist"
        },
        "execution_time": 0.0033767223358154297,
        "is_functional_test": false
      },
      {
        "case_name": "删除数据库-边界条件测试（超长数据库名称）",
        "purpose": "验证工具在处理超长数据库名称时的行为，确保不会因长度限制导致崩溃或不可预期行为。",
        "args": {
          "database_name": "this_is_an_extremely_long_database_name_that_exceeds_normal_length_limits_and_may_cause_issues_during_deletion"
        },
        "response": {
          "result": "Database 'this_is_an_extremely_long_database_name_that_exceeds_normal_length_limits_and_may_cause_issues_during_deletion' does not exist"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 71
}