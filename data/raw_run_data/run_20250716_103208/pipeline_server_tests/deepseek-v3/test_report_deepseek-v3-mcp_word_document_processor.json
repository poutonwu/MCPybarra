{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-16T10:33:44.739875",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        A string indicating the document ID or file path of the newly created document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        document_path: Path to the document file.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          }
        },
        "required": [
          "document_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently open document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently open document with a new name or path.\n\n    Args:\n        new_path: New file path for the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "new_path": {
            "title": "New Path",
            "type": "string"
          }
        },
        "required": [
          "new_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently open document.\n\n    Args:\n        copy_path: Path for the new copy.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "copy_path": {
            "title": "Copy Path",
            "type": "string"
          }
        },
        "required": [
          "copy_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text: The text content of the paragraph.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text: The text content of the heading.\n        level: Heading level (e.g., 1 for top-level).\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows: Number of rows.\n        columns: Number of columns.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    Retrieves metadata about the document (e.g., word count, author).\n\n    Returns:\n        A JSON object containing document metadata.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    Searches for text in the document.\n\n    Args:\n        query: The text to search for.\n\n    Returns:\n        A list of matches with their positions.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    Finds and replaces text in the document.\n\n    Args:\n        find_text: The text to find.\n        replace_text: The replacement text.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "find_text": {
            "title": "Find Text",
            "type": "string"
          },
          "replace_text": {
            "title": "Replace Text",
            "type": "string"
          }
        },
        "required": [
          "find_text",
          "replace_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    Deletes a paragraph from the document.\n\n    Args:\n        paragraph_index: Index of the paragraph to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    Deletes specified text from the document.\n\n    Args:\n        text: The text to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    Adds a row to an existing table.\n\n    Args:\n        table_index: Index of the table.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    Deletes a row from an existing table.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Index of the row to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    Edits the content of a table cell.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Row index of the cell.\n        column_index: Column index of the cell.\n        new_text: New content for the cell.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "column_index": {
            "title": "Column Index",
            "type": "integer"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "column_index",
          "new_text"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    Merges specified cells in a table.\n\n    Args:\n        table_index: Index of the table.\n        start_row: Starting row index.\n        start_column: Starting column index.\n        end_row: Ending row index.\n        end_column: Ending column index.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_column": {
            "title": "Start Column",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_column": {
            "title": "End Column",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_column",
          "end_row",
          "end_column"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    Sets the page margins for the document.\n\n    Args:\n        left: Left margin in inches.\n        right: Right margin in inches.\n        top: Top margin in inches.\n        bottom: Bottom margin in inches.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          }
        },
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create New Document Successfully",
        "purpose": "验证工具能够成功创建一个新的Word文档并返回有效的文档ID或路径。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.013878822326660156,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document With Default Parameters",
        "purpose": "验证使用默认参数时，create_document 工具仍能正确创建文档。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.017446279525756836,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation Without Any Input Files",
        "purpose": "测试在没有提供任何文件的情况下是否仍然可以创建一个空的Word文档。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.013019323348999023,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Create Document in Protected Directory",
        "purpose": "验证系统是否阻止尝试在受保护目录中创建文档（如系统级路径）。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01403665542602539,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试当必须参数缺失时，工具是否能优雅地处理错误。由于该工具无参数，应返回成功。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.023090600967407227,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Create Document with Maximum Allowed Name Length",
        "purpose": "测试创建具有最大允许长度名称的文档是否会正常工作。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.014942646026611328,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Document Path",
        "purpose": "测试创建包含特殊字符路径的文档是否会正常工作。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.013736486434936523,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Disk Full Simulation",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能正确报告资源不可用错误。",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.015017509460449219,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Valid Text",
        "purpose": "验证工具能够成功将有效文本段落添加到文档中。",
        "args": {
          "text": "This is a valid paragraph added to the document."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "验证当提供空文本时，工具是否能正常处理并添加一个空段落。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.003014802932739258,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "测试工具是否能够正确处理包含特殊字符的文本段落。",
        "args": {
          "text": "This is a paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Malicious Content",
        "purpose": "验证工具是否能安全地处理潜在恶意内容（如脚本标签）而不执行。",
        "args": {
          "text": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.006214141845703125,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "测试当输入为 null 时，工具是否能优雅地处理错误。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003512144088745117,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Zero Length String",
        "purpose": "测试添加零长度字符串是否被正确处理。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0035016536712646484,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Non-String Input",
        "purpose": "测试当传入非字符串类型参数时，工具是否能正确拒绝请求。",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005366325378417969,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Default Level",
        "purpose": "验证使用默认级别（level=1）时，add_heading 工具能够成功将标题添加到文档中。",
        "args": {
          "text": "Introduction"
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00425410270690918,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Custom Level",
        "purpose": "验证使用自定义级别（如 level=3）时，工具仍能正确添加标题。",
        "args": {
          "text": "Installation Guide",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.011013507843017578,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "测试当提供空文本时，工具是否能正常处理并添加一个空标题。",
        "args": {
          "text": "",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005057573318481445,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Malformed Script in Heading",
        "purpose": "验证工具是否能安全地处理潜在恶意内容（如脚本标签）而不执行。",
        "args": {
          "text": "<script>alert('xss')</script>",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "测试当输入 text 为 null 时，工具是否能优雅地处理错误。",
        "args": {
          "text": null,
          "level": 2
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003050088882446289,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Level Type",
        "purpose": "测试当传入非整数类型 level 参数时，工具是否能正确拒绝请求。",
        "args": {
          "text": "Invalid Level Test",
          "level": "two"
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\nlevel\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Level Value",
        "purpose": "测试最大允许的 heading level 是否被正确支持（如 level=6）。",
        "args": {
          "text": "Lowest Subsection",
          "level": 6
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004008054733276367,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Special Characters in Heading Text",
        "purpose": "测试工具是否能够正确处理包含特殊字符的标题文本。",
        "args": {
          "text": "Section Title with Special Chars: !@#$%^&*()_+{}|:\"<>?~",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Rows and Columns",
        "purpose": "验证工具在使用默认参数（例如：1行1列）时是否能成功添加表格到文档中。",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004826068878173828,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Valid Rows and Columns",
        "purpose": "验证工具能够成功添加指定行列数的表格到文档中。",
        "args": {
          "rows": 5,
          "columns": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "测试当行数为0时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "rows": 0,
          "columns": 3
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Columns",
        "purpose": "测试当列数为0时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "rows": 5,
          "columns": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.004015922546386719,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Maximum Allowed Rows and Columns",
        "purpose": "测试添加最大允许行数和列数的表格是否会正常工作。",
        "args": {
          "rows": 1000,
          "columns": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.17840337753295898,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Table in Protected Document",
        "purpose": "验证系统是否阻止尝试在受保护或只读文档中添加表格。",
        "args": {
          "rows": 2,
          "columns": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0069963932037353516,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Negative Rows Value",
        "purpose": "测试当提供负值作为行数时，工具是否能优雅地处理错误。",
        "args": {
          "rows": -1,
          "columns": 3
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.003509998321533203,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Integer Rows Input",
        "purpose": "测试当传入非整型数值作为行数时，工具是否能正确拒绝请求。",
        "args": {
          "rows": "five",
          "columns": 3
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\nrows\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='five', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break Successfully",
        "purpose": "验证工具能够成功在当前文档中插入一个分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005324363708496094,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks Consecutively",
        "purpose": "测试连续多次调用add_page_break工具是否都能成功插入分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0070247650146484375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Before and After Paragraph",
        "purpose": "验证在添加段落前后插入分页符是否都能正常工作。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0059964656829833984,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Page Break in Protected Document",
        "purpose": "验证在尝试对受保护或只读文档添加分页符时，系统是否能安全处理或拒绝请求。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0056209564208984375,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Document Not Opened",
        "purpose": "测试在没有打开或创建文档的情况下调用add_page_break是否会正确返回错误。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.009046792984008789,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document Format",
        "purpose": "测试尝试在非Word文档（如PDF）中插入分页符时，工具是否能正确处理错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Page Break at Document Start",
        "purpose": "测试在文档起始位置插入分页符是否会正确处理（可能为空页）。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005036830902099609,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Add Page Break at Document End",
        "purpose": "测试在文档末尾插入分页符是否会正确处理（可能生成新空白页）。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0029976367950439453,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document Successfully",
        "purpose": "验证工具能够成功保存当前打开的文档。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.10120964050292969,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Any Changes",
        "purpose": "测试在未对文档进行任何修改的情况下是否仍能成功保存。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.1250321865081787,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Save Document in Protected Directory",
        "purpose": "验证系统是否阻止尝试将文档保存到受保护目录（如系统级路径）。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.0994119644165039,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - No Open Document",
        "purpose": "测试当没有打开任何文档时，调用 save_document 是否能正确返回错误信息。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.11509966850280762,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Save Large Document",
        "purpose": "测试保存一个包含大量内容的大文档是否会正常工作。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.11100220680236816,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Disk Full Simulation During Save",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能正确报告资源不可用错误。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.1179511547088623,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Content",
        "purpose": "测试文档中包含特殊字符时是否仍能成功保存。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.10402941703796387,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document With Default Parameters",
        "purpose": "验证使用默认参数时，save_document 工具是否能正确保存文档。",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.1029970645904541,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document With Valid New Path",
        "purpose": "验证工具能够成功将当前打开的文档另存为指定的有效新路径。",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.09857058525085449,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Changing Path",
        "purpose": "测试当提供的新路径与原路径相同时，是否能正常保存文档而不报错。",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc."
        },
        "execution_time": 0.09648275375366211,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Save in Protected System Directory",
        "purpose": "验证系统是否阻止尝试将文档保存到受保护的系统目录（如 C:\\Windows）。",
        "args": {
          "new_path": "C:\\Windows\\test_save.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 13] Permission denied: 'C:\\\\Windows\\\\test_save.docx'"
        },
        "execution_time": 0.0035126209259033203,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameter",
        "purpose": "测试当必须参数 new_path 缺失时，工具是否能优雅地处理错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null or Empty Path Input",
        "purpose": "测试当 new_path 参数为 null 或空字符串时，工具是否能正确拒绝请求。",
        "args": {
          "new_path": ""
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.004518747329711914,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in New File Path",
        "purpose": "测试保存文档到包含特殊字符的新路径时，是否能正确处理。",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\document_with_!@#$%^&*()_+.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\document_with_!@#$%^&*()_+.docx'"
        },
        "execution_time": 0.005506753921508789,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Disk Full Simulation During Save",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能正确报告资源不可用错误。",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_document_save_attempt.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_document_save_attempt.docx."
        },
        "execution_time": 0.10829710960388184,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Open Document Successfully",
        "purpose": "验证工具能够成功打开一个已存在的Word文档。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.1565413475036621,
        "is_functional_test": true
      },
      {
        "case_name": "Open Nonexistent Document",
        "purpose": "测试尝试打开不存在的文档时是否能正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.005018711090087891,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt to Open Protected System File",
        "purpose": "验证系统是否阻止尝试打开受保护的系统级文件（如Windows系统文件）。",
        "args": {
          "document_path": "C:\\Windows\\system32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'C:\\Windows\\system32\\drivers\\etc\\hosts'"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Document Path",
        "purpose": "测试当提供空路径参数时，工具是否能优雅地处理错误。",
        "args": {
          "document_path": ""
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.004362344741821289,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Document Path",
        "purpose": "测试当提供 null 路径参数时，工具是否能正确拒绝请求并返回错误。",
        "args": {
          "document_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool open_document: 1 validation error for open_documentArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Document Path",
        "purpose": "测试打开包含特殊字符路径的文档是否会正常工作。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc_with_!@#%&().docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.004532337188720703,
        "is_functional_test": true
      },
      {
        "case_name": "Open Large Document",
        "purpose": "验证工具能否成功打开大尺寸的Word文档。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_document_save_attempt.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_document_save_attempt.docx."
        },
        "execution_time": 0.14884185791015625,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info Successfully",
        "purpose": "验证工具能够成功检索文档的元数据信息，包括字数、作者等。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.05135846138000488,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Get Info of Protected Document",
        "purpose": "验证系统是否阻止尝试获取受保护文档的元数据（如系统级路径下的文档）。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.0050506591796875,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试当必须参数缺失时，工具是否能优雅地处理错误。由于该工具无参数，应返回有效元数据。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.005071163177490234,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Get Info of Large Document",
        "purpose": "测试工具能否正确获取包含大量内容的文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.0053958892822265625,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for File with Special Characters in Name",
        "purpose": "测试工具能否正确获取包含特殊字符文件名的文档的元数据。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.006759166717529297,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Document Locked by Another Process",
        "purpose": "模拟文档被其他进程锁定的情况，验证工具是否能正确报告资源不可用错误。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.005004405975341797,
        "is_functional_test": false
      },
      {
        "case_name": "Get Info of Saved Document",
        "purpose": "验证工具能否正确获取已保存文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.004573345184326172,
        "is_functional_test": true
      },
      {
        "case_name": "Get Info of Empty Document",
        "purpose": "验证工具在文档为空的情况下是否仍能返回有效的元数据（如字数为0）。",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 30}"
        },
        "execution_time": 0.00715947151184082,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Search Text Successfully in Document",
        "purpose": "验证工具能够成功在文档中搜索到指定文本并返回匹配结果。",
        "args": {
          "query": "valid paragraph"
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a valid paragraph added to the document.'}]"
        },
        "execution_time": 0.0054471492767333984,
        "is_functional_test": true
      },
      {
        "case_name": "Search Empty Query Returns No Results",
        "purpose": "验证当搜索空字符串时，工具是否能正确处理并返回空结果列表。",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a valid paragraph added to the document.'}, {'paragraph_index': 1, 'text': ''}, {'paragraph_index': 2, 'text': 'This is a paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~'}, {'paragraph_index': 3, 'text': \"<script>alert('xss')</script>\"}, {'paragraph_index': 4, 'text': ''}, {'paragraph_index': 5, 'text': 'Introduction'}, {'paragraph_index': 6, 'text': 'Installation Guide'}, {'paragraph_index': 7, 'text': ''}, {'paragraph_index': 8, 'text': \"<script>alert('xss')</script>\"}, {'paragraph_index': 9, 'text': 'Lowest Subsection'}, {'paragraph_index': 10, 'text': 'Section Title with Special Chars: !@#$%^&*()_+{}|:\"<>?~'}, {'paragraph_index': 11, 'text': ''}, {'paragraph_index': 12, 'text': ''}, {'paragraph_index': 13, 'text': ''}, {'paragraph_index': 14, 'text': ''}, {'paragraph_index': 15, 'text': ''}, {'paragraph_index': 16, 'text': ''}, {'paragraph_index': 17, 'text': ''}, {'paragraph_index': 18, 'text': ''}]"
        },
        "execution_time": 0.006505489349365234,
        "is_functional_test": true
      },
      {
        "case_name": "Search Nonexistent Text Returns Empty List",
        "purpose": "测试搜索不存在的文本时是否返回空列表而不是错误。",
        "args": {
          "query": "nonexistent text"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.00400853157043457,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Search Special Characters",
        "purpose": "验证工具是否安全地处理包含特殊字符的搜索查询。",
        "args": {
          "query": "!@#$%^&*()_+{}|:\"<>?~"
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': 'This is a paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~'}, {'paragraph_index': 10, 'text': 'Section Title with Special Chars: !@#$%^&*()_+{}|:\"<>?~'}]"
        },
        "execution_time": 0.0050241947174072266,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Query Input",
        "purpose": "测试当提供 null 查询时，工具是否能优雅地处理参数验证错误。",
        "args": {
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0064411163330078125,
        "is_functional_test": false
      },
      {
        "case_name": "Search Case Sensitivity Handling",
        "purpose": "验证搜索是否区分大小写（或按预期处理大小写）。",
        "args": {
          "query": "Valid Paragraph"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.006515979766845703,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Unicode and Multilingual Text",
        "purpose": "测试工具是否支持多语言和Unicode字符的搜索功能。",
        "args": {
          "query": "中文搜索测试"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.009541988372802734,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace Success",
        "purpose": "验证工具在找到匹配文本时能够正确替换内容。",
        "args": {
          "find_text": "old_text",
          "replace_text": "new_text"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.005350589752197266,
        "is_functional_test": true
      },
      {
        "case_name": "Find Text Not Present in Document",
        "purpose": "测试当未找到要查找的文本时，工具是否能正常处理且不修改文档。",
        "args": {
          "find_text": "nonexistent_text",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0075070858001708984,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Text with Empty String",
        "purpose": "验证工具是否允许将匹配文本替换为空字符串。",
        "args": {
          "find_text": "sample_text",
          "replace_text": ""
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.00902867317199707,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Inject Malicious Content",
        "purpose": "验证工具是否安全地处理潜在恶意内容（如脚本代码）而不执行。",
        "args": {
          "find_text": "alert('xss')",
          "replace_text": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.006005525588989258,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Find Text Input",
        "purpose": "测试当 find_text 参数为 null 时，工具是否能优雅地处理错误。",
        "args": {
          "find_text": null,
          "replace_text": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004074573516845703,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Replace Text Input",
        "purpose": "测试当 replace_text 参数为 null 时，工具是否能优雅地处理错误。",
        "args": {
          "find_text": "old_text",
          "replace_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nreplace_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003004312515258789,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Find and Replace Text",
        "purpose": "验证工具是否能够正确处理包含特殊字符的查找和替换文本。",
        "args": {
          "find_text": "!@#$%^&*()_+{}|:\"<>?~",
          "replace_text": "-special-replacement-"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.00512385368347168,
        "is_functional_test": true
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Paragraph at Valid Index",
        "purpose": "验证工具能够成功删除文档中指定索引的有效段落。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.010576963424682617,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Out of Bounds Index",
        "purpose": "测试当提供超出文档段落数量范围的索引时，工具是否能优雅地处理错误。",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.005529642105102539,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Delete Negative Index",
        "purpose": "验证系统是否阻止尝试使用负数索引进行删除操作（防止绕过边界检查）。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.010048866271972656,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Integer Paragraph Index",
        "purpose": "测试当传入非整数类型索引时，工具是否能正确拒绝请求。",
        "args": {
          "paragraph_index": "zero"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='zero', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0057830810546875,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete First Paragraph",
        "purpose": "验证删除第一个段落（索引为0）时是否正常工作。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.010192155838012695,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Last Paragraph",
        "purpose": "验证删除最后一个段落（索引为最大有效值）时是否正常工作。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Attempt to Delete Without Document",
        "purpose": "模拟在没有打开文档的情况下尝试删除段落，验证工具是否能正确报告错误。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.00802159309387207,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Delete Paragraph with Special Characters in Context",
        "purpose": "验证删除包含特殊字符段落的上下文时是否安全执行，不引发异常行为。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004019498825073242,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Specified Text Successfully",
        "purpose": "验证工具能够成功删除文档中指定的文本内容。",
        "args": {
          "text": "This is a valid paragraph added to the document."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证当指定删除的文本为空时，工具是否能正常处理。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.006293535232543945,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "测试当指定删除的文本在文档中不存在时，工具是否能正确处理。",
        "args": {
          "text": "This text does not exist in the document."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Delete Malicious Content",
        "purpose": "验证工具是否能安全地处理潜在恶意内容（如脚本标签）并成功删除。",
        "args": {
          "text": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004011631011962891,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "测试当输入为 null 时，工具是否能正确处理参数验证错误。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Delete Text From Empty Document",
        "purpose": "验证在空文档中尝试删除文本时，工具是否能优雅地处理错误。",
        "args": {
          "text": "Some text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004312992095947266,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete Text With Special Characters",
        "purpose": "测试删除包含特殊字符的文本是否被正确处理。",
        "args": {
          "text": "This is a paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Very Long Text",
        "purpose": "测试删除非常长的文本内容是否能正常工作。",
        "args": {
          "text": "A very long text string that exceeds typical length limits and is used to test the boundary conditions of the delete_text tool. This string should be long enough to stress test the parameter handling and deletion logic."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003504514694213867,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table with Valid Index",
        "purpose": "验证工具能够成功向指定索引的现有表格添加一行。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.004154682159423828,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Maximum Allowed Index",
        "purpose": "测试向具有最大允许索引值的表格添加行是否能正常工作。",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003001689910888672,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Row to Protected Table",
        "purpose": "验证系统是否阻止尝试向受保护或只读表格添加行。",
        "args": {
          "table_index": 1
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0035216808319091797,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index Type",
        "purpose": "测试当传入非整数类型参数作为表格索引时，工具是否能正确拒绝请求。",
        "args": {
          "table_index": "invalid"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003007173538208008,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Negative Table Index",
        "purpose": "测试使用负数表格索引时工具是否能优雅地处理错误。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003583669662475586,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Add Row to Table at Zero Index",
        "purpose": "测试向索引为0的表格添加行是否被正确处理。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0035953521728515625,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Add Row When Table Is Locked",
        "purpose": "模拟表格被锁定情况，验证工具是否能正确报告资源不可用错误。",
        "args": {
          "table_index": 2
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.010715007781982422,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row With Special Characters in Table Content",
        "purpose": "验证在表格已包含特殊字符的情况下仍能成功添加新行。",
        "args": {
          "table_index": 3
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0044782161712646484,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Valid Table Row Successfully",
        "purpose": "验证工具能够成功删除指定表格中的指定行。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.003809213638305664,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row From Non-Existent Table",
        "purpose": "测试当提供的 table_index 超出范围时，工具是否能正确处理错误。",
        "args": {
          "table_index": -1,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Non-Existent Row From Valid Table",
        "purpose": "测试当提供的 row_index 超出表格实际行数时，工具是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "row_index": 999
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0022335052490234375,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Delete Row with Invalid Access",
        "purpose": "验证工具在无权限或非法访问上下文中尝试删除表格行是否会拒绝操作。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.004259586334228516,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试当必须参数缺失时，工具是否能正确返回错误信息。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 2 validation errors for delete_table_rowArguments\ntable_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nrow_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0032949447631835938,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete First Row of Table",
        "purpose": "验证删除表格第一行（索引为0）时功能是否正常。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0035238265991210938,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Last Row of Table",
        "purpose": "验证删除表格最后一行时功能是否正常。",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0029973983764648438,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Negative Row Index",
        "purpose": "测试使用负的 row_index 参数时，工具是否能正确处理错误。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0035071372985839844,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Table Cell with Valid Parameters",
        "purpose": "验证使用有效参数时，工具能够成功修改指定表格单元格的内容。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": "Updated Content"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.007360219955444336,
        "is_functional_test": true
      },
      {
        "case_name": "Edit First Cell of First Table",
        "purpose": "测试编辑第一个表格的第一个单元格内容是否正常工作。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": "New Text"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.004700660705566406,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell in Non-Existent Table",
        "purpose": "测试尝试编辑不存在的表格（负索引）是否会返回错误。",
        "args": {
          "table_index": -1,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Invalid Table Index"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.00400543212890625,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Special Characters in New Text",
        "purpose": "测试新文本包含特殊字符时能否正确更新单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 2,
          "new_text": "!@#$%^&*()_+{}|:\"<>?~"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Empty String",
        "purpose": "测试将空字符串作为新内容是否能成功写入单元格。",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "column_index": 1,
          "new_text": ""
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.007473468780517578,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Inject Script via Cell Edit",
        "purpose": "验证系统是否能防止在单元格中插入潜在恶意脚本内容。",
        "args": {
          "table_index": 0,
          "row_index": 3,
          "column_index": 0,
          "new_text": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.00350189208984375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Edit Cell at Maximum Index",
        "purpose": "测试编辑处于最大允许索引位置的单元格是否能正常工作。",
        "args": {
          "table_index": 2147483647,
          "row_index": 2147483647,
          "column_index": 2147483647,
          "new_text": "Max Index Test"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.005516767501831055,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "测试当 new_text 参数为 null 时，工具是否能优雅地处理错误。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool edit_table_cell: 1 validation error for edit_table_cellArguments\nnew_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0063936710357666016,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Table Cells Within Single Row",
        "purpose": "验证工具能够成功合并表格中同一行内的多个单元格。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 0,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Table Cells Across Multiple Rows",
        "purpose": "验证工具能够跨多行合并表格中的单元格。",
        "args": {
          "table_index": 1,
          "start_row": 1,
          "start_column": 1,
          "end_row": 3,
          "end_column": 2
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.005873203277587891,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Table Cells",
        "purpose": "验证工具能够合并整个表格范围的单元格。",
        "args": {
          "table_index": 2,
          "start_row": 0,
          "start_column": 0,
          "end_row": 4,
          "end_column": 3
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 2.5469858646392822,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "测试当起始和结束行列都相同时是否能正确处理（即不实际合并）。",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 2,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004347562789916992,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Merge Protected Table Index",
        "purpose": "验证系统是否阻止尝试对无效或受保护索引的表格进行操作。",
        "args": {
          "table_index": -1,
          "start_row": 0,
          "start_column": 0,
          "end_row": 0,
          "end_column": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.004012346267700195,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "测试当提供的 table_index 超出文档中表格数量时，工具是否能优雅地处理错误。",
        "args": {
          "table_index": 999,
          "start_row": 0,
          "start_column": 0,
          "end_row": 0,
          "end_column": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.002607107162475586,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Start After End Coordinates",
        "purpose": "测试当起始坐标在结束坐标之后时，工具是否能正确拒绝请求。",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_column": 3,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.002347707748413086,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Merge With Max Allowed Indices",
        "purpose": "测试使用最大允许索引值进行合并是否会正常工作。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1000,
          "end_column": 1000
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.0020024776458740234,
        "is_functional_test": true
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Page Margins with Valid Values",
        "purpose": "验证工具能够成功设置文档的页面边距，使用合法的数值参数。",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.005048036575317383,
        "is_functional_test": true
      },
      {
        "case_name": "Set Page Margins with Default Values",
        "purpose": "验证在使用默认推荐值时，工具是否能正确设置页面边距。",
        "args": {
          "left": 1.25,
          "right": 1.25,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.006995439529418945,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins",
        "purpose": "测试工具是否允许设置所有边距为0英寸（边界条件）。",
        "args": {
          "left": 0,
          "right": 0,
          "top": 0,
          "bottom": 0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.003106832504272461,
        "is_functional_test": true
      },
      {
        "case_name": "Set Negative Margins",
        "purpose": "测试当传入负数边距值时，工具是否能拒绝请求并返回错误。",
        "args": {
          "left": -0.5,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Failed to set page margins: value must be in range 0 to 18446744073709551615 inclusive, got -457200"
        },
        "execution_time": 0.001997232437133789,
        "is_functional_test": false
      },
      {
        "case_name": "Set Large Margins Exceeding Page Size",
        "purpose": "测试当边距值大于标准页面尺寸时，工具是否能优雅处理或报错。",
        "args": {
          "left": 10.0,
          "right": 10.0,
          "top": 10.0,
          "bottom": 10.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Set Margins in Protected Context",
        "purpose": "验证在受保护或受限上下文中设置页面边距是否会受到安全策略限制。",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.00501704216003418,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试当缺少必须参数时，工具是否能正确抛出错误。",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nbottom\n  Field required [type=missing, input_value={'left': 1.0, 'right': 1.0, 'top': 1.0}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Float Precision Margin Values",
        "purpose": "测试工具是否能正确处理高精度浮点型边距值。",
        "args": {
          "left": 0.3333333333,
          "right": 0.6666666667,
          "top": 1.0,
          "bottom": 0.9999999999
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0027577877044677734,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Copy Document to Valid Path",
        "purpose": "验证工具能够将当前打开的文档复制到指定的有效路径。",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx."
        },
        "execution_time": 0.08965444564819336,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Copy to Protected System Directory",
        "purpose": "验证系统是否阻止尝试将文档复制到受保护的系统级目录（如 C:\\Windows\\system32）。",
        "args": {
          "copy_path": "C:\\Windows\\system32\\copied_document.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\copied_document.docx'"
        },
        "execution_time": 0.004015207290649414,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Copy Path",
        "purpose": "测试当必须参数 copy_path 缺失时，工具是否能正确返回错误信息。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Copy Path Format",
        "purpose": "测试提供非法格式的路径（如包含控制字符或空格开头）时，工具是否能优雅处理错误。",
        "args": {
          "copy_path": "\u0000invalid\\path"
        },
        "response": {
          "result": "Failed to create document copy: embedded null character"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Copy Path",
        "purpose": "测试复制路径中包含特殊字符（如 !@#$%^&*()）时是否能正常工作。",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy!@#$.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy!@#$.docx."
        },
        "execution_time": 0.09587597846984863,
        "is_functional_test": true
      },
      {
        "case_name": "Resource Unavailable - Disk Full Simulation During Copy",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能正确报告资源不可用错误。",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx."
        },
        "execution_time": 0.09019351005554199,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Existing File Path",
        "purpose": "测试复制路径已存在文件时，工具是否能覆盖或拒绝操作并返回明确提示。",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt."
        },
        "execution_time": 0.08665013313293457,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 146
}