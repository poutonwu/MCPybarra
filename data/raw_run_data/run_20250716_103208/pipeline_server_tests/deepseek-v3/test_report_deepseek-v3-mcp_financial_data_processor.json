{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_financial_data_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_financial_data_processor/refined/server.py",
  "timestamp": "2025-07-16T10:35:48.816530",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    Retrieves income statements for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol (e.g., \"AAPL\").\n        period: Reporting period (\"annual\", \"quarterly\", \"TTM\"). Default: \"annual\".\n        limit: Maximum number of results to return. Default: 5.\n\n    Returns:\n        JSON-structured income statement data (revenue, expenses, net income, etc.).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    Retrieves balance sheet data for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol.\n        period: Reporting period. Default: \"annual\".\n        limit: Maximum results to return. Default: 5.\n\n    Returns:\n        JSON-structured balance sheet data (assets, liabilities, equity).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    Retrieves cash flow statements for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol.\n        period: Reporting period. Default: \"annual\".\n        limit: Maximum results to return. Default: 5.\n\n    Returns:\n        JSON-structured cash flow data (operating, investing, financing activities).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    Retrieves historical stock price data.\n\n    Args:\n        symbol: Stock ticker symbol.\n        start_date: Start date in YYYY-MM-DD format.\n        end_date: End date in YYYY-MM-DD format.\n\n    Returns:\n        JSON-structured historical price data (date, open, high, low, close, volume).\n\n    Raises:\n        ValueError: If symbol, start_date, or end_date is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    Retrieves financial news related to a company or market.\n\n    Args:\n        symbol: Stock ticker symbol. If omitted, returns general market news.\n        limit: Maximum news items to return. Default: 10.\n\n    Returns:\n        JSON-structured news headlines, sources, and timestamps.\n\n    Raises:\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "default": null,
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    Retrieves company metadata (industry, location, etc.).\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured company profile data.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n        ConnectionError: If there's a network issue connecting to the API.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    Retrieves analyst estimates (target price, earnings forecasts).\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum estimates to return. Default: 5.\n\n    Returns:\n        JSON-structured analyst predictions.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    Retrieves dividend payment history.\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum dividends to return. Default: 10.\n\n    Returns:\n        JSON-structured dividend data (date, amount).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    Retrieves stock split history.\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured split data (date, ratio).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    Retrieves historical earnings reports (EPS, revenue surprises).\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum reports to return. Default: 5.\n\n    Returns:\n        JSON-structured earnings history.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    Retrieves financial ratios (P/E, debt-to-equity, etc.).\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured financial ratios.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    Retrieves institutional ownership data.\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured ownership data (institutional holders, shares held).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "基本功能测试 - 获取有效公司资料",
        "purpose": "验证工具可以使用有效的股票代码成功获取公司资料。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6485540866851807,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回公司资料。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.008502006530762,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的公司资料。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.670091152191162,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Symbol cannot be empty."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.014900207519531,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长符号输入",
        "purpose": "验证工具是否能够正确处理超长的股票代码输入。",
        "args": {
          "symbol": "THIS_IS_A_VERY_LONG_SYMBOL_THAT_SHOULD_NOT_EXIST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.2694787979125977,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符输入",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.018886566162109,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE companies;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.016287088394165,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "基本功能测试 - 获取有效公司的年度损益表",
        "purpose": "验证工具可以使用有效的股票代码和默认参数获取公司的年度损益表。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 5.012125015258789,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的季度损益表",
        "purpose": "验证工具可以使用有效的股票代码和周期参数为季度时，成功获取公司的季度损益表。",
        "args": {
          "symbol": "GOOGL",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.0087196826934814,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取T T M周期的损益表",
        "purpose": "验证工具可以使用TTM周期参数成功获取公司最近12个月的损益表数据。",
        "args": {
          "symbol": "MSFT",
          "period": "TTM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.010427474975586,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 限制返回结果数量",
        "purpose": "验证工具可以正确处理limit参数，并仅返回指定数量的结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.0098960399627686,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Symbol cannot be empty."
        },
        "execution_time": 0.003956794738769531,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的周期参数",
        "purpose": "验证当周期参数不是允许值时，工具是否抛出ValueError。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.0050051212310791016,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小返回结果数量",
        "purpose": "验证工具在limit参数设置为0时是否能正确处理（最小合法值）。",
        "args": {
          "symbol": "AAPL",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 5.010266304016113,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击输入（如SQL注入）。",
        "args": {
          "symbol": "; DROP TABLE financial_data;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 5.016514301300049,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "基本功能测试 - 获取有效公司的资产负债表",
        "purpose": "验证工具可以使用有效的股票代码和默认参数成功获取资产负债表数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6711530685424805,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效公司的年度资产负债表",
        "purpose": "验证工具可以使用另一个常见的股票代码和默认参数成功获取资产负债表数据。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.4091405868530273,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取季度资产负债表",
        "purpose": "验证工具可以使用有效的股票代码和周期参数为'quarterly'时，成功获取季度资产负债表数据。",
        "args": {
          "symbol": "MSFT",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.3727848529815674,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取TTM周期的资产负债表",
        "purpose": "验证工具可以使用TTM周期参数成功获取公司最近12个月的资产负债表数据。",
        "args": {
          "symbol": "AMZN",
          "period": "TTM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 5.024738788604736,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 限制返回结果数量",
        "purpose": "验证工具可以正确处理limit参数，并仅返回指定数量的资产负债表数据。",
        "args": {
          "symbol": "TSLA",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 5.015136003494263,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Symbol cannot be empty."
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的周期参数",
        "purpose": "验证当周期参数不是允许值时，工具是否抛出ValueError。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.006012439727783203,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击输入（如SQL注入）。",
        "args": {
          "symbol": "; DROP TABLE financial_data;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 5.020882606506348,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "基本功能测试 - 获取有效公司的年度现金流表",
        "purpose": "验证工具可以使用有效的股票代码和默认参数成功获取公司的年度现金流量数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.020633697509766,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的季度现金流表",
        "purpose": "验证工具可以使用有效的股票代码和周期参数为季度时，成功获取公司的季度现金流量数据。",
        "args": {
          "symbol": "GOOGL",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.018275260925293,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取TTM周期的现金流表",
        "purpose": "验证工具可以使用TTM周期参数成功获取公司最近12个月的现金流量数据。",
        "args": {
          "symbol": "MSFT",
          "period": "TTM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.0111658573150635,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 限制返回结果数量",
        "purpose": "验证工具可以正确处理limit参数，并仅返回指定数量的结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.027233362197876,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Symbol cannot be empty."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的周期参数",
        "purpose": "验证当周期参数不是允许值时，工具是否抛出ValueError。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.003710031509399414,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小返回结果数量",
        "purpose": "验证工具在limit参数设置为0时是否能正确处理（最小合法值）。",
        "args": {
          "symbol": "AAPL",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.020519971847534,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击输入（如SQL注入）。",
        "args": {
          "symbol": "; DROP TABLE financial_data;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.031257152557373,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的财务比率",
        "purpose": "验证工具可以使用有效的股票代码成功获取财务比率数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.9350061416625977,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取财务比率",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回财务比率。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5721728801727295,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取财务比率",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的财务比率。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.013768434524536,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Symbol cannot be empty."
        },
        "execution_time": 0.004231929779052734,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.4141767024993896,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长符号输入",
        "purpose": "验证工具是否能够正确处理超长的股票代码输入。",
        "args": {
          "symbol": "THIS_IS_A_VERY_LONG_SYMBOL_THAT_SHOULD_NOT_EXIST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.021710395812988,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符输入",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.012803792953491,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE financial_ratios;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7847447395324707,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的机构持股数据",
        "purpose": "验证工具可以使用有效的股票代码成功获取机构持股数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.0145018100738525,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取机构持股数据",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回机构持股数据。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.018352508544922,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取机构持股数据",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的机构持股数据。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.009438991546631,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: Symbol cannot be empty."
        },
        "execution_time": 0.0038444995880126953,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.013123989105225,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长符号输入",
        "purpose": "验证工具是否能够正确处理超长的股票代码输入。",
        "args": {
          "symbol": "THIS_IS_A_VERY_LONG_SYMBOL_THAT_SHOULD_NOT_EXIST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.018162488937378,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符输入",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.020265817642212,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE companies;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.586332082748413,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的分析师预测",
        "purpose": "验证工具可以使用有效的股票代码和默认limit参数成功获取分析师预测数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.2409021854400635,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取预测",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回分析师预测数据。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8880574703216553,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取预测",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的分析师预测数据。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.383054494857788,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 自定义limit参数获取更多预测",
        "purpose": "验证工具是否支持自定义limit参数，并返回指定数量的分析师预测结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.020997762680054,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Symbol cannot be empty."
        },
        "execution_time": 0.01586627960205078,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 4.999149799346924,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - limit参数为0",
        "purpose": "验证工具在limit参数为0时是否能正确处理（最小合法值）。",
        "args": {
          "symbol": "AAPL",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.784015417098999,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击输入（如SQL注入）。",
        "args": {
          "symbol": "; DROP TABLE analyst_data;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7205045223236084,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的收益历史",
        "purpose": "验证工具可以使用有效的股票代码和默认limit参数成功获取历史收益报告。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.1072888374328613,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取收益历史",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回历史收益数据。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.017617225646973,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取收益历史",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的历史收益数据。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.006912469863892,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 自定义limit参数获取指定数量的历史报告",
        "purpose": "验证工具是否能够正确处理非默认limit参数，返回指定数量的历史收益报告。",
        "args": {
          "symbol": "AMZN",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 4.831271648406982,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Symbol cannot be empty."
        },
        "execution_time": 0.004019737243652344,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理API错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 0.501288652420044,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大限制值测试",
        "purpose": "验证工具在limit参数设置为最大合理值时的行为（如limit=100）。",
        "args": {
          "symbol": "AAPL",
          "limit": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8303756713867188,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击输入（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE earnings;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.1042323112487793,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票的股息历史",
        "purpose": "验证工具可以使用有效的股票代码和默认limit参数成功获取股息历史。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.019624710083008,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取股息历史",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回股息历史。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.9076485633850098,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取股息历史",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的股息历史。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.0160605907440186,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 自定义limit参数获取股息历史",
        "purpose": "验证工具是否能正确处理limit参数，并返回指定数量的股息记录。",
        "args": {
          "symbol": "AMZN",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.007347822189331,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Symbol cannot be empty."
        },
        "execution_time": 0.0038254261016845703,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理API错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.010596752166748,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小limit参数",
        "purpose": "验证工具在limit参数设置为0时是否能正确处理（最小合法值）。",
        "args": {
          "symbol": "AAPL",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6739933490753174,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符股票代码",
        "purpose": "验证工具是否能安全地处理包含特殊字符的股票代码输入。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7592017650604248,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票的拆股历史",
        "purpose": "验证工具可以使用有效的股票代码成功获取拆股历史数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.022555828094482,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码获取拆股历史",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回拆股历史数据。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.017306566238403,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码获取拆股历史",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的拆股历史数据。",
        "args": {
          "symbol": "msft"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6051063537597656,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Symbol cannot be empty."
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6365039348602295,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长符号输入",
        "purpose": "验证工具是否能够正确处理超长的股票代码输入。",
        "args": {
          "symbol": "THIS_IS_A_VERY_LONG_SYMBOL_THAT_SHOULD_NOT_EXIST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.018839359283447,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符输入",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.014262437820435,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE splits;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7220613956451416,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "基本功能测试 - 获取有效股票的历史价格数据",
        "purpose": "验证工具可以使用有效的股票代码和日期范围获取历史股价数据。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.007761240005493,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用另一个常见股票代码",
        "purpose": "验证工具是否能正确处理另一个常见的股票代码并返回历史股价数据。",
        "args": {
          "symbol": "GOOGL",
          "start_date": "2023-02-01",
          "end_date": "2023-02-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.018146514892578,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写股票代码",
        "purpose": "验证工具是否接受小写的股票代码并返回正确的历史股价数据。",
        "args": {
          "symbol": "msft",
          "start_date": "2023-03-01",
          "end_date": "2023-03-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.012758016586304,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 空的股票代码",
        "purpose": "验证当股票代码为空时，工具是否抛出 ValueError。",
        "args": {
          "symbol": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Symbol cannot be empty."
        },
        "execution_time": 0.0035066604614257812,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效的股票代码",
        "purpose": "验证当提供一个不存在的股票代码时，工具是否能正确处理 API 错误。",
        "args": {
          "symbol": "XYZ123",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.013978958129883,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长符号输入",
        "purpose": "验证工具是否能够正确处理超长的股票代码输入。",
        "args": {
          "symbol": "THIS_IS_A_VERY_LONG_SYMBOL_THAT_SHOULD_NOT_EXIST",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.025459051132202,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符输入",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码。",
        "args": {
          "symbol": "!@#$%^&*()",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5668668746948242,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全地处理可能的注入攻击（如SQL注入、命令注入）。",
        "args": {
          "symbol": "; DROP TABLE stock_prices;",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.0329902172088623,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "基本功能测试 - 获取市场新闻默认参数",
        "purpose": "验证工具在未提供symbol且使用默认limit=10时，能成功获取市场新闻。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.682507038116455,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用股票代码获取相关新闻",
        "purpose": "验证工具能通过有效的股票代码（如AAPL）获取相关新闻数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.010754346847534,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 自定义返回新闻数量",
        "purpose": "验证工具能正确处理limit参数，仅返回指定数量的新闻条目。",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.019409894943237,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 网络连接失败模拟",
        "purpose": "验证当API不可用或网络异常时，工具是否抛出httpx.HTTPStatusError。",
        "args": {
          "symbol": "FAKE_SYMBOL_123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.9158687591552734,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小值限制为零",
        "purpose": "验证工具能否处理limit=0的情况并返回空结果。",
        "args": {
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.599261999130249,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超大数值限制",
        "purpose": "验证工具是否能处理非常大的limit值（如1000），并按最大允许值返回数据。",
        "args": {
          "limit": 1000
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.015991926193237,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否安全地处理包含SQL注入尝试的symbol输入。",
        "args": {
          "symbol": "'; DROP TABLE news; --"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.010293483734131,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符作为symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的symbol输入而不崩溃。",
        "args": {
          "symbol": "!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.006889343261719,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 96
}