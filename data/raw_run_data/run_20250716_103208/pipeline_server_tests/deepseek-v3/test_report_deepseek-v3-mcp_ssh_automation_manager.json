{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_ssh_automation_manager",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_ssh_automation_manager/refined/server.py",
  "timestamp": "2025-07-16T10:39:17.892015",
  "tools": [
    {
      "name": "connect",
      "description": "\n    Establishes an SSH connection to a remote server.\n\n    Args:\n        hostname: The remote server's hostname or IP address.\n        username: The username for authentication.\n        password: The password for authentication (required if private_key is not provided).\n        private_key: The path to the private key file for authentication (required if password is not provided).\n        port: The SSH port (default: 22).\n\n    Returns:\n        A unique session_id for the active SSH session.\n\n    Raises:\n        ValueError: If neither password nor private_key is provided.\n        paramiko.AuthenticationException: If the authentication fails.\n        paramiko.SSHException: If the SSH connection fails for other reasons.\n    ",
      "args_schema": {
        "properties": {
          "hostname": {
            "default": "10.70.5.21",
            "title": "Hostname",
            "type": "string"
          },
          "username": {
            "default": "pengbocheng",
            "title": "Username",
            "type": "string"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "123456",
            "title": "Password"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Private Key"
          },
          "port": {
            "default": 26002,
            "title": "Port",
            "type": "integer"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "\n    Disconnects the specified SSH session and releases resources.\n\n    Args:\n        session_id: The unique identifier of the SSH session to disconnect.\n\n    Returns:\n        A status message indicating the session termination.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "\n    Lists all currently active SSH sessions.\n\n    Returns:\n        A list of dictionaries, each containing session_id, hostname, username, and status.\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "\n    Executes a command on the specified SSH session.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        command: The command to execute.\n        stdin: Standard input to pass to the command (default: None).\n        timeout: Maximum execution time in seconds (default: None for no timeout).\n\n    Returns:\n        A dictionary containing stdout, stderr, and exit_status.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the command execution fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Stdin"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Timeout"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "\n    Uploads a local file to a specified path on the remote SSH server.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        local_path: The path to the local file.\n        remote_path: The destination path on the remote server.\n\n    Returns:\n        A status message indicating the upload result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        FileNotFoundError: If the local file doesn't exist.\n        paramiko.SSHException: If the file upload fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "\n    Downloads a file from the remote SSH server to a specified local path.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        remote_path: The path to the file on the remote server.\n        local_path: The destination path on the local machine.\n\n    Returns:\n        A status message indicating the download result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the file download fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "成功建立SSH连接使用默认参数",
        "purpose": "验证工具能够使用默认参数成功建立SSH连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "result": "session_1"
        },
        "execution_time": 0.25515198707580566,
        "is_functional_test": true
      },
      {
        "case_name": "使用私钥成功建立SSH连接",
        "purpose": "验证工具在提供私钥路径的情况下能够成功建立SSH连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "private_key": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: no lines in RSA private key file"
        },
        "execution_time": 0.007028102874755859,
        "is_functional_test": true
      },
      {
        "case_name": "未提供密码或私钥导致连接失败",
        "purpose": "验证工具在未提供密码或私钥时抛出ValueError",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": null,
          "private_key": null,
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: Either password or private_key must be provided."
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "错误密码导致认证失败",
        "purpose": "验证工具在提供错误密码时抛出AuthenticationException",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "wrong_password"
        },
        "response": {
          "result": "session_2"
        },
        "execution_time": 0.24802494049072266,
        "is_functional_test": false
      },
      {
        "case_name": "无效主机名导致连接失败",
        "purpose": "验证工具在提供无效主机名时抛出SSHException",
        "args": {
          "hostname": "invalid.hostname.example",
          "username": "pengbocheng",
          "password": "123456"
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno 11001] getaddrinfo failed"
        },
        "execution_time": 0.044379472732543945,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符主机名导致连接失败",
        "purpose": "验证工具在提供包含特殊字符的主机名时是否正确处理",
        "args": {
          "hostname": "10.70.5.21!@#$%",
          "username": "pengbocheng",
          "password": "123456"
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno 11003] getaddrinfo failed"
        },
        "execution_time": 0.006477832794189453,
        "is_functional_test": false
      },
      {
        "case_name": "使用边界端口号连接成功",
        "purpose": "验证工具在使用最小和最大端口号时的行为",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 65535
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno None] Unable to connect to port 65535 on 10.70.5.21"
        },
        "execution_time": 2.065838575363159,
        "is_functional_test": true
      },
      {
        "case_name": "使用空用户名连接失败",
        "purpose": "验证工具在提供空用户名时是否正确处理",
        "args": {
          "hostname": "10.70.5.21",
          "username": "",
          "password": "123456"
        },
        "response": {
          "error": "ToolException: Error executing tool connect: Authentication failed."
        },
        "execution_time": 3.6688084602355957,
        "is_functional_test": false
      }
    ],
    "list_sessions": [
      {
        "case_name": "列出所有活动的SSH会话",
        "purpose": "验证list_sessions工具能够成功返回当前所有活动的SSH会话列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "无活动SSH会话时返回空列表",
        "purpose": "验证当没有活动SSH会话时，list_sessions工具能正确返回空列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.00426173210144043,
        "is_functional_test": true
      },
      {
        "case_name": "并发多用户SSH会话列表准确性",
        "purpose": "验证list_sessions工具在多个用户同时建立SSH连接时能准确列出所有会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003759622573852539,
        "is_functional_test": true
      },
      {
        "case_name": "列出会话时包含异常终止的会话状态",
        "purpose": "验证list_sessions工具能识别并返回异常终止但仍保留在系统中的SSH会话状态",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      },
      {
        "case_name": "非授权用户尝试调用list_sessions失败",
        "purpose": "验证只有授权用户才能执行list_sessions操作，非授权用户调用该功能应被拒绝",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.005019664764404297,
        "is_functional_test": false
      },
      {
        "case_name": "系统资源不足时list_sessions调用失败处理",
        "purpose": "验证在系统资源（如内存或文件句柄）耗尽的情况下，list_sessions能优雅地处理错误并返回明确提示",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "超长SSH会话ID边界测试",
        "purpose": "验证list_sessions工具对超长会话ID字段的处理能力",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0035059452056884766,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符主机名的会话显示测试",
        "purpose": "验证当SSH会话的hostname字段包含特殊字符时，list_sessions是否能正确展示",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0042803287506103516,
        "is_functional_test": false
      }
    ],
    "execute": [
      {
        "case_name": "执行简单命令成功",
        "purpose": "验证execute工具能够使用有效的session_id和command执行一个简单的命令（如'echo Hello World'）并返回结果。",
        "args": {
          "session_id": "session_1",
          "command": "echo Hello World"
        },
        "response": {
          "result": "{\n  \"stdout\": \"Hello World\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.012349128723144531,
        "is_functional_test": true
      },
      {
        "case_name": "使用stdin参数传递输入执行命令",
        "purpose": "验证execute工具在提供stdin参数时，能正确将输入传递给远程命令。",
        "args": {
          "session_id": "session_1",
          "command": "cat",
          "stdin": "This is standard input."
        },
        "response": {
          "result": "{\n  \"stdout\": \"This is standard input.\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04765582084655762,
        "is_functional_test": true
      },
      {
        "case_name": "带超时限制的长时间命令执行",
        "purpose": "验证execute工具在指定timeout参数后，能够在规定时间内终止长时间运行的命令。",
        "args": {
          "session_id": "session_1",
          "command": "sleep 5 && echo Done",
          "timeout": 3
        },
        "response": {
          "error": "ToolException: Error executing tool execute: Command execution failed: "
        },
        "execution_time": 3.054537534713745,
        "is_functional_test": true
      },
      {
        "case_name": "尝试执行无效会话ID的命令失败",
        "purpose": "验证execute工具在提供的session_id不存在时抛出KeyError异常。",
        "args": {
          "session_id": "invalid_session",
          "command": "echo Test"
        },
        "response": {
          "error": "ToolException: Error executing tool execute: 'Session invalid_session not found.'"
        },
        "execution_time": 0.0040187835693359375,
        "is_functional_test": false
      },
      {
        "case_name": "执行非法或危险命令的安全性测试",
        "purpose": "验证execute工具对执行高风险命令（如rm -rf /）的行为是否被安全控制或拒绝。",
        "args": {
          "session_id": "session_1",
          "command": "rm -rf /tmp/test_dir"
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04385709762573242,
        "is_functional_test": false
      },
      {
        "case_name": "执行包含特殊字符的命令",
        "purpose": "验证execute工具是否能正确处理包含特殊字符（如空格、引号、符号等）的命令字符串。",
        "args": {
          "session_id": "session_1",
          "command": "echo \"Hello & World | grep test\""
        },
        "response": {
          "result": "{\n  \"stdout\": \"Hello & World | grep test\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04592466354370117,
        "is_functional_test": true
      },
      {
        "case_name": "执行超长命令导致缓冲区溢出边界测试",
        "purpose": "验证execute工具对超长命令长度的处理能力，防止潜在的缓冲区溢出问题。",
        "args": {
          "session_id": "session_1",
          "command": "echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA..."
        },
        "response": {
          "result": "{\n  \"stdout\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.050040483474731445,
        "is_functional_test": false
      },
      {
        "case_name": "执行命令时SSH连接异常中断",
        "purpose": "验证当底层SSH连接异常断开时，execute工具能否优雅地处理错误并返回明确提示。",
        "args": {
          "session_id": "session_1",
          "command": "echo Test"
        },
        "response": {
          "result": "{\n  \"stdout\": \"Test\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04314565658569336,
        "is_functional_test": false
      }
    ],
    "upload": [
      {
        "case_name": "使用有效会话ID成功上传文件",
        "purpose": "验证工具能够使用有效的session_id将本地文件上传到远程服务器",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/uploaded_test_output.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt uploaded to /home/pengbocheng/uploaded_test_output.txt successfully."
        },
        "execution_time": 0.019803285598754883,
        "is_functional_test": true
      },
      {
        "case_name": "尝试上传不存在的本地文件触发FileNotFoundError",
        "purpose": "验证工具在指定的本地文件不存在时抛出FileNotFoundError",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_nonexistent_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: Local file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
        },
        "execution_time": 0.004508018493652344,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效会话ID上传文件触发KeyError",
        "purpose": "验证工具在提供无效的session_id时抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/uploaded_test_output.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: 'Session invalid_session not found.'"
        },
        "execution_time": 0.003278493881225586,
        "is_functional_test": false
      },
      {
        "case_name": "上传文件到远程路径包含特殊字符",
        "purpose": "验证工具在远程路径包含特殊字符时是否能正确处理",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/uploaded_!@#$%^&*()_+.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt uploaded to /home/pengbocheng/uploaded_!@#$%^&*()_+.txt successfully."
        },
        "execution_time": 0.04368233680725098,
        "is_functional_test": true
      },
      {
        "case_name": "上传超大文件测试",
        "purpose": "验证工具是否能处理上传超大文件的情况",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_large_output.pdf",
          "remote_path": "/home/pengbocheng/uploaded_merged_large_output.pdf"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_large_output.pdf uploaded to /home/pengbocheng/uploaded_merged_large_output.pdf successfully."
        },
        "execution_time": 0.13360381126403809,
        "is_functional_test": true
      },
      {
        "case_name": "上传空文件测试",
        "purpose": "验证工具是否能正确处理上传空文件的情况",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\includeempty.csv",
          "remote_path": "/home/pengbocheng/uploaded_includeempty.csv"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\includeempty.csv uploaded to /home/pengbocheng/uploaded_includeempty.csv successfully."
        },
        "execution_time": 0.05350232124328613,
        "is_functional_test": true
      },
      {
        "case_name": "上传文件到不存在的远程路径",
        "purpose": "验证工具在远程路径不存在时是否能正确处理上传失败",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/nonexistent_dir/uploaded_test_output.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: File upload failed: [Errno 2] No such file"
        },
        "execution_time": 0.04996228218078613,
        "is_functional_test": false
      },
      {
        "case_name": "上传文件时远程服务器连接中断模拟",
        "purpose": "验证工具在上传过程中远程服务器连接中断时能否正确抛出SSHException",
        "args": {
          "session_id": "session_2",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/uploaded_test_output.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt uploaded to /home/pengbocheng/uploaded_test_output.txt successfully."
        },
        "execution_time": 0.01531982421875,
        "is_functional_test": false
      }
    ],
    "download": [
      {
        "case_name": "使用有效会话ID成功下载远程文件",
        "purpose": "验证download工具在提供有效session_id、remote_path和local_path时能够成功下载文件",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.029647111892700195,
        "is_functional_test": true
      },
      {
        "case_name": "尝试使用不存在的会话ID下载文件",
        "purpose": "验证download工具在提供无效session_id时抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 'Session invalid_session not found.'"
        },
        "execution_time": 0.01211404800415039,
        "is_functional_test": false
      },
      {
        "case_name": "远程文件路径不存在导致下载失败",
        "purpose": "验证download工具在remote_path不存在时抛出paramiko.SSHException",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/nonexistentfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.05084872245788574,
        "is_functional_test": false
      },
      {
        "case_name": "本地路径不可写导致下载失败",
        "purpose": "验证download工具在无法写入local_path时抛出paramiko.SSHException",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonwritable\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonwritable\\\\downloaded_testfile.txt'"
        },
        "execution_time": 0.04969429969787598,
        "is_functional_test": false
      },
      {
        "case_name": "下载大文件测试性能与稳定性",
        "purpose": "验证download工具在处理大文件时的性能和稳定性",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/largefile.iso",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_largefile.iso"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.0529484748840332,
        "is_functional_test": true
      },
      {
        "case_name": "远程路径包含特殊字符的文件下载",
        "purpose": "验证download工具在remote_path包含特殊字符时仍能正确下载文件",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/test@#%&().txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_specialchars.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.05533099174499512,
        "is_functional_test": true
      },
      {
        "case_name": "下载可执行文件并验证权限保留",
        "purpose": "验证download工具在下载远程可执行文件时是否保留其执行权限",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/script.sh",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_script.sh"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.05302858352661133,
        "is_functional_test": true
      },
      {
        "case_name": "使用空会话ID导致下载失败",
        "purpose": "验证download工具在session_id为空时是否正确处理",
        "args": {
          "session_id": "",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 'Session  not found.'"
        },
        "execution_time": 0.003511190414428711,
        "is_functional_test": false
      }
    ],
    "disconnect": [
      {
        "case_name": "成功断开有效SSH会话",
        "purpose": "验证工具能够使用有效的session_id成功断开指定的SSH会话",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "result": "Session session_1 disconnected successfully."
        },
        "execution_time": 0.004359245300292969,
        "is_functional_test": true
      },
      {
        "case_name": "尝试断开不存在的SSH会话引发KeyError",
        "purpose": "验证当提供的session_id不存在时，工具是否正确抛出KeyError",
        "args": {
          "session_id": "nonexistent_session"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session nonexistent_session not found.'"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为session_id导致错误处理",
        "purpose": "验证工具在提供空字符串作为session_id时是否能正确处理并返回错误信息",
        "args": {
          "session_id": ""
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session  not found.'"
        },
        "execution_time": 0.0040187835693359375,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为session_id引发安全防护机制",
        "purpose": "验证工具是否对包含特殊字符的session_id进行适当的安全检查或拒绝处理",
        "args": {
          "session_id": "session_!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_!@#$%^&*() not found.'"
        },
        "execution_time": 0.0030052661895751953,
        "is_functional_test": false
      },
      {
        "case_name": "尝试断开已终止的SSH会话",
        "purpose": "验证工具在尝试断开一个已经被终止的会话时是否仍能优雅地处理（如忽略或提示）",
        "args": {
          "session_id": "session_terminated"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_terminated not found.'"
        },
        "execution_time": 0.0035109519958496094,
        "is_functional_test": true
      },
      {
        "case_name": "同时断开多个有效SSH会话",
        "purpose": "验证工具能否并发处理多个disconnect请求，确保资源被正确释放",
        "args": {
          "session_id": "session_2"
        },
        "response": {
          "result": "Session session_2 disconnected successfully."
        },
        "execution_time": 0.00382232666015625,
        "is_functional_test": true
      },
      {
        "case_name": "系统资源不足时断开会话失败处理",
        "purpose": "验证在系统资源（如内存、文件句柄）耗尽的情况下，disconnect操作是否能优雅地失败并给出明确提示",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_1 not found.'"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "超长session_id边界测试",
        "purpose": "验证工具对超长session_id字段的处理能力，防止潜在缓冲区溢出或异常",
        "args": {
          "session_id": "a_very_long_session_id_that_exceeds_normal_length_limits_and_may_cause_issues_during_processing"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session a_very_long_session_id_that_exceeds_normal_length_limits_and_may_cause_issues_during_processing not found.'"
        },
        "execution_time": 0.003012418746948242,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 48
}