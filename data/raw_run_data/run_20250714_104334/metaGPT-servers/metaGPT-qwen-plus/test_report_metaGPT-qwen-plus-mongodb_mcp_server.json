{
  "server_name": "mongodb_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-mongodb_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\mongodb_mcp_server.py",
  "timestamp": "2025-07-14T10:45:09.660509",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON字符串。\n    \n    Raises:\n        OperationFailure: 如果获取数据库列表时发生错误。\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 要列出集合的数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON字符串。\n    \n    Raises:\n        ValueError: 如果数据库名称为空或空白字符。\n        OperationFailure: 如果获取集合列表时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 要插入文档的数据库名称 (必填)。\n        collection_name: 要插入文档的集合名称 (必填)。\n        document: 要插入的文档数据 (必填)，以字典形式提供。\n\n    Returns:\n        一个字符串，表示插入成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称为空，或者文档不是字典类型。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 要查询的数据库名称 (必填)。\n        collection_name: 要查询的集合名称 (必填)。\n        query: 查询条件 (必填)，以字典形式提供。\n        projection: 投影参数 (可选)，指定要返回的字段。\n        limit: 限制返回结果数量 (可选)，0表示无限制。\n\n    Returns:\n        一个包含查询结果的JSON字符串。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要更新文档的数据库名称 (必填)。\n        collection_name: 要更新文档的集合名称 (必填)。\n        query: 更新条件 (必填)，以字典形式提供。\n        update: 更新内容 (必填)，以字典形式提供。\n        multi: 是否更新多个文档 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示更新成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称、查询条件或更新内容无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要删除文档的数据库名称 (必填)。\n        collection_name: 要删除文档的集合名称 (必填)。\n        query: 删除条件 (必填)，以字典形式提供。\n        multi: 是否批量删除模式 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示删除成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "列出所有数据库-基本功能测试",
        "purpose": "验证mcp_list_databases工具能够成功列出MongoDB服务器上的所有数据库，确保基本功能正常。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": true
      },
      {
        "case_name": "无参数调用安全性测试",
        "purpose": "验证在不提供任何参数的情况下调用该工具时，不会引发安全问题或异常行为。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0030052661895751953,
        "is_functional_test": false
      },
      {
        "case_name": "权限不足导致的错误处理",
        "purpose": "模拟用户权限不足的情况，验证工具是否能正确抛出OperationFailure异常并进行错误处理。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "数据库连接失败时的错误处理",
        "purpose": "模拟无法连接到MongoDB服务器的情况，验证工具是否能优雅地处理连接失败的异常情况。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0025031566619873047,
        "is_functional_test": false
      },
      {
        "case_name": "空响应边界条件测试",
        "purpose": "验证当MongoDB返回空结果时，工具是否能正确处理空响应并返回有效的JSON结构。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0060045719146728516,
        "is_functional_test": true
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "列出集合-基本功能测试",
        "purpose": "验证mcp_list_collections工具能够成功列出指定数据库中的所有集合，确保基本功能正常。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.004007577896118164,
        "is_functional_test": true
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当提供空字符串作为数据库名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": ""
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "空白字符数据库名称错误处理",
        "purpose": "验证当提供仅包含空白字符的数据库名称时，工具是否能正确识别并抛出ValueError异常。",
        "args": {
          "database_name": "   "
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.008033037185668945,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的数据库错误处理",
        "purpose": "验证当提供一个不存在的数据库名称时，工具是否能正确抛出OperationFailure异常。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.007504701614379883,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称边界测试",
        "purpose": "验证当提供包含特殊字符的数据库名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test@db#123"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0045032501220703125,
        "is_functional_test": false
      },
      {
        "case_name": "权限不足导致的错误处理",
        "purpose": "模拟用户对目标数据库没有访问权限的情况，验证工具是否能正确捕获并抛出OperationFailure异常。",
        "args": {
          "database_name": "restricted_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.005046367645263672,
        "is_functional_test": false
      },
      {
        "case_name": "数据库连接失败时的错误处理",
        "purpose": "模拟无法连接到MongoDB服务器的情况，验证工具是否能优雅地处理连接失败的异常情况。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.007462501525878906,
        "is_functional_test": false
      },
      {
        "case_name": "空响应边界条件测试",
        "purpose": "验证当MongoDB返回空结果时，工具是否能正确处理空响应并返回有效的JSON结构。",
        "args": {
          "database_name": "empty_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.005508899688720703,
        "is_functional_test": true
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "插入文档-基本功能测试",
        "purpose": "验证mcp_insert_document工具能够成功向指定数据库和集合中插入新文档，确保基本功能正常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当提供空字符串作为数据库名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.006035327911376953,
        "is_functional_test": false
      },
      {
        "case_name": "空集合名称错误处理",
        "purpose": "验证当提供空字符串作为集合名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.003208160400390625,
        "is_functional_test": false
      },
      {
        "case_name": "非字典类型文档错误处理",
        "purpose": "验证当提供的文档不是字典类型时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": "not_a_dictionary"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value='not_a_dictionary', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.009016990661621094,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称边界测试",
        "purpose": "验证当提供包含特殊字符的数据库名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test@db#123",
          "collection_name": "test_collection",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004033327102661133,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符集合名称边界测试",
        "purpose": "验证当提供包含特殊字符的集合名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test@collection#123",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      },
      {
        "case_name": "权限不足导致的错误处理",
        "purpose": "模拟用户对目标数据库或集合没有写入权限的情况，验证工具是否能正确捕获并抛出OperationFailure异常。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005118846893310547,
        "is_functional_test": false
      },
      {
        "case_name": "数据库连接失败时的错误处理",
        "purpose": "模拟无法连接到MongoDB服务器的情况，验证工具是否能优雅地处理连接失败的异常情况。",
        "args": {
          "database_name": "unreachable_db",
          "collection_name": "unreachable_collection",
          "document": {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005990266799926758,
        "is_functional_test": false
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "基本查询功能测试",
        "purpose": "验证mcp_find_documents工具能够成功在指定数据库和集合中执行基本查询并返回结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004711151123046875,
        "is_functional_test": true
      },
      {
        "case_name": "带投影参数的查询测试",
        "purpose": "验证当提供projection参数时，工具是否能正确过滤返回字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "projection": {
            "field1": 1,
            "_id": 0
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.008538007736206055,
        "is_functional_test": true
      },
      {
        "case_name": "限制返回数量测试",
        "purpose": "验证limit参数能正确限制查询结果的返回条数。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当提供空字符串作为数据库名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'database_name' 不能为空。"
        },
        "execution_time": 0.005175352096557617,
        "is_functional_test": false
      },
      {
        "case_name": "空集合名称错误处理",
        "purpose": "验证当提供空字符串作为集合名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'collection_name' 不能为空。"
        },
        "execution_time": 0.007513523101806641,
        "is_functional_test": false
      },
      {
        "case_name": "无效查询条件错误处理",
        "purpose": "验证当提供非字典格式的查询条件时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": "invalid_query"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nquery\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_query', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称边界测试",
        "purpose": "验证当提供包含特殊字符的数据库名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test@db#123",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0025055408477783203,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符集合名称边界测试",
        "purpose": "验证当提供包含特殊字符的集合名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "collection!@#$%",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": false
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "更新文档-基本功能测试",
        "purpose": "验证mcp_update_document工具能够成功更新指定数据库和集合中的文档，确保基本功能正常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004246950149536133,
        "is_functional_test": true
      },
      {
        "case_name": "更新多个文档-多更新模式测试",
        "purpose": "验证当设置multi=True时，是否能正确更新多个匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          },
          "update": {
            "$set": {
              "status": "inactive"
            }
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": true
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当提供空字符串作为数据库名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.0054264068603515625,
        "is_functional_test": false
      },
      {
        "case_name": "空集合名称错误处理",
        "purpose": "验证当提供空字符串作为集合名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "无效查询条件错误处理",
        "purpose": "验证当提供非字典类型的查询条件时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": "invalid_query",
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nquery\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_query', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.008004426956176758,
        "is_functional_test": false
      },
      {
        "case_name": "无效更新内容错误处理",
        "purpose": "验证当提供非字典类型的更新内容时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": "invalid_update"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nupdate\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_update', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.0035064220428466797,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称边界测试",
        "purpose": "验证当提供包含特殊字符的数据库名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test@db#123",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0060045719146728516,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符集合名称边界测试",
        "purpose": "验证当提供包含特殊字符的集合名称时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test@collection#123",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0065152645111083984,
        "is_functional_test": false
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "基本删除功能测试",
        "purpose": "验证mcp_delete_document工具能够成功删除指定数据库和集合中符合查询条件的文档，确保基本功能正常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "批量删除模式测试",
        "purpose": "验证当multi参数设置为True时，工具是否能正确批量删除符合条件的所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "test"
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0035076141357421875,
        "is_functional_test": true
      },
      {
        "case_name": "空数据库名称错误处理",
        "purpose": "验证当提供空字符串作为数据库名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "空集合名称错误处理",
        "purpose": "验证当提供空字符串作为集合名称时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.007103443145751953,
        "is_functional_test": false
      },
      {
        "case_name": "无效查询条件错误处理",
        "purpose": "验证当提供None或空字典作为查询条件时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.008516550064086914,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符数据库名称测试",
        "purpose": "验证当数据库名称包含特殊字符时，工具是否能正确处理或抛出适当的异常。",
        "args": {
          "database_name": "test@db#123",
          "collection_name": "test_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的集合删除测试",
        "purpose": "验证当指定的集合不存在时，工具是否能优雅地处理该情况并返回适当的消息。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004513740539550781,
        "is_functional_test": false
      },
      {
        "case_name": "权限不足导致的删除失败测试",
        "purpose": "模拟用户对目标数据库/集合没有写权限的情况，验证工具是否能正确捕获并抛出异常。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "query": {
            "name": "test_document"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0060939788818359375,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 45
}