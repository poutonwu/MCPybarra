{
  "server_name": "financial_data_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-financial_data_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\financial_data_mcp_server.py",
  "timestamp": "2025-07-13T22:35:36.884541",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    获取指定公司的财务报表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含收入报表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度收入报表:\n        get_income_statements(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    获取指定公司的资产负债表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含资产负债表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度资产负债表:\n        get_balance_sheets(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    获取指定公司的现金流量表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含现金流量表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度现金流量表:\n        get_cash_flows(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    获取指定股票的历史价格数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        start_date: 开始日期，格式为 'YYYY-MM-DD'（可选）。\n        end_date: 结束日期，格式为 'YYYY-MM-DD'（可选）。如果未提供，默认为当前日期。\n\n    Returns:\n        包含历史价格数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司从2023-01-01到2023-12-31的历史股价:\n        get_stock_prices(symbol=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "default": null,
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "default": null,
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    获取与公司或市场相关的最新金融新闻。\n    \n    Args:\n        ticker: 股票代码 (例如, 'AAPL' 代表苹果公司)（可选）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含金融新闻数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的最新5条新闻:\n        get_market_news(ticker=\"AAPL\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "default": null,
            "title": "Ticker",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    获取公司简介信息，包括行业、所在地等。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含公司简介信息的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的公司简介:\n        get_company_profile(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    获取分析师预测数据，如目标价格和收益预测。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含分析师预测数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的分析师预测数据:\n        get_analyst_estimates(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    获取公司股息历史记录。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股息历史记录的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股息历史记录:\n        get_dividend_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    查询股票分割历史。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股票分割历史的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股票分割历史:\n        get_splits_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    获取公司历史财报数据，如每股收益。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含历史财报数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的历史财报数据:\n        get_earnings_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    获取公司财务比率，如市盈率和负债权益比。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含财务比率数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的财务比率:\n        get_financial_ratios(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    获取公司股权结构数据，如机构持股比例。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股权结构数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股权结构数据:\n        get_ownership_data(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "获取有效股票代码的公司简介",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的公司简介信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 2.0018372535705566,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取公司简介",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5969774723052979,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 股票代码不能为空"
        },
        "execution_time": 0.008999109268188477,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.6147985458374023,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0050048828125,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "获取有效股票代码的年度收入报表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的年度收入报表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.584251880645752,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取收入报表",
        "purpose": "验证工具在仅提供必填参数时，能使用默认值（period='annual', limit=5）正确获取数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.6929166316986084,
        "is_functional_test": true
      },
      {
        "case_name": "获取季度收入报表",
        "purpose": "验证工具支持周期参数为'quarterly'时，能正常返回季度收入报表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5683786869049072,
        "is_functional_test": true
      },
      {
        "case_name": "获取最近十二个月的收入报表",
        "purpose": "验证工具支持周期参数为'ttm'时，能正常返回最近十二个月的收入报表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 2.597905158996582,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大允许限制获取收入报表",
        "purpose": "测试工具在请求最大允许数量（limit=20）时是否能正确响应。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5856201648712158,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取收入报表",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.9513845443725586,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": "",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 股票代码不能为空"
        },
        "execution_time": 0.01455378532409668,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5773835182189941,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "获取有效股票代码的年度资产负债表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的年度资产负债表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5375800132751465,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取资产负债表",
        "purpose": "验证工具在仅提供必填参数时，能使用默认值（period='annual', limit=5）正确获取数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5839447975158691,
        "is_functional_test": true
      },
      {
        "case_name": "获取季度资产负债表",
        "purpose": "验证工具支持周期参数为'quarterly'时，能正常返回季度资产负债表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.859849214553833,
        "is_functional_test": true
      },
      {
        "case_name": "获取最近十二个月的资产负债表",
        "purpose": "验证工具支持周期参数为'ttm'时，能正常返回最近十二个月的资产负债表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5725936889648438,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大允许限制获取资产负债表",
        "purpose": "测试工具在请求最大允许数量（limit=20）时是否能正确响应。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.572037696838379,
        "is_functional_test": true
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6608870029449463,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": "",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 股票代码不能为空"
        },
        "execution_time": 0.008298635482788086,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效股票代码获取资产负债表",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5943739414215088,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "获取有效股票代码的年度现金流量表",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的年度现金流量表数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5375611782073975,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取现金流量表",
        "purpose": "验证工具在仅提供必填参数时，能使用默认值（period='annual', limit=5）正确获取数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5369555950164795,
        "is_functional_test": true
      },
      {
        "case_name": "获取季度现金流量表",
        "purpose": "验证工具支持周期参数为'quarterly'时，能正常返回季度现金流量表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5696508884429932,
        "is_functional_test": true
      },
      {
        "case_name": "获取最近十二个月的现金流量表",
        "purpose": "验证工具支持周期参数为'ttm'时，能正常返回最近十二个月的现金流量表数据。",
        "args": {
          "symbol": "AAPL",
          "period": "ttm"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5819215774536133,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大允许限制获取现金流量表",
        "purpose": "测试工具在请求最大允许数量（limit=20）时是否能正确响应。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5391745567321777,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取现金流量表",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5829572677612305,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": "",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 股票代码不能为空"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5684125423431396,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "获取有效股票代码的财务比率",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的财务比率数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5651652812957764,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取财务比率",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5397546291351318,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 股票代码不能为空"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.571631908416748,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005998373031616211,
        "is_functional_test": false
      },
      {
        "case_name": "并发请求多个有效股票代码的财务比率",
        "purpose": "验证工具在并发请求多个有效股票代码时能否稳定响应，确保服务具备基本的并发处理能力。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 2.0701301097869873,
        "is_functional_test": true
      },
      {
        "case_name": "测试API请求失败时的错误处理",
        "purpose": "验证工具在网络问题或API服务不可用时是否能正确捕获并抛出httpx.HTTPStatusError。",
        "args": {
          "symbol": "ERRORTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.6087267398834229,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "获取有效股票代码的历史财报数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的历史财报数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5668792724609375,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取历史财报数据",
        "purpose": "验证工具在仅提供必填参数时，能使用默认配置正确获取历史财报数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5451250076293945,
        "is_functional_test": true
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 股票代码不能为空"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效股票代码获取历史财报数据",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5335960388183594,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5645241737365723,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006006002426147461,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的错误处理",
        "purpose": "验证工具在网络问题或API服务不可用时能否正确抛出httpx.HTTPStatusError。",
        "args": {
          "symbol": "ERROR404"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5511014461517334,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "获取有效股票代码的分析师预测数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的分析师预测数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5574288368225098,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取分析师预测数据",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.838259220123291,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 股票代码不能为空"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5492479801177979,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00534510612487793,
        "is_functional_test": false
      },
      {
        "case_name": "使用大写和小混写股票代码获取分析师预测数据",
        "purpose": "验证工具是否支持大小写混合的股票代码格式（如 'aapl'）。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5514049530029297,
        "is_functional_test": true
      },
      {
        "case_name": "调用工具时网络连接失败模拟",
        "purpose": "验证工具在网络不可达或API服务不可用时能否优雅地抛出HTTPStatusError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5392510890960693,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "获取有效股票代码的默认历史价格",
        "purpose": "验证工具在仅提供必填参数时，能使用默认日期范围（从最早到当前日期）正确获取历史股价数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5919930934906006,
        "is_functional_test": true
      },
      {
        "case_name": "获取指定日期范围内股票的历史价格",
        "purpose": "验证工具可以成功获取一个有效股票代码在指定日期范围内的历史股价数据。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.6995408535003662,
        "is_functional_test": true
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 股票代码不能为空"
        },
        "execution_time": 0.0030052661895751953,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效股票代码获取历史价格",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5746338367462158,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5577545166015625,
        "is_functional_test": false
      },
      {
        "case_name": "使用未来日期作为开始日期",
        "purpose": "测试工具是否能优雅处理未来日期输入，期望返回无数据或明确错误信息。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2099-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.577815055847168,
        "is_functional_test": false
      },
      {
        "case_name": "结束日期早于开始日期",
        "purpose": "验证工具能否识别并处理逻辑上不合理的日期顺序，并返回适当的错误信息。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2024-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.55873703956604,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "获取有效股票代码的股息历史记录",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的股息历史记录数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5538582801818848,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取股息历史记录",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5723836421966553,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 股票代码不能为空"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.559471607208252,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "连续多次请求股息历史记录",
        "purpose": "验证工具在短时间内连续调用API时是否能稳定响应，防止超时或连接失败。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5354046821594238,
        "is_functional_test": true
      },
      {
        "case_name": "使用大写和小混写符号调用工具",
        "purpose": "验证工具是否支持大小写混合的股票代码（如aApL），并自动转换为标准格式或正常处理。",
        "args": {
          "symbol": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5495378971099854,
        "is_functional_test": true
      }
    ],
    "get_splits_history": [
      {
        "case_name": "获取有效股票代码的分割历史",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的股票分割历史数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.579749345779419,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取分割历史",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.576611042022705,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 股票代码不能为空"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.539764642715454,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "连续快速调用API以测试并发处理能力",
        "purpose": "验证工具在高并发请求下是否能保持稳定，不会导致系统崩溃或异常响应。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.536865234375,
        "is_functional_test": false
      },
      {
        "case_name": "模拟网络故障下的错误处理",
        "purpose": "测试工具在网络连接失败或超时时是否能正确捕获并处理httpx.HTTPStatusError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.732661247253418,
        "is_functional_test": false
      },
      {
        "case_name": "测试最大长度的股票代码输入",
        "purpose": "验证工具是否能正确处理超长股票代码输入，确保边界条件下不会引发异常或缓冲区溢出。",
        "args": {
          "symbol": "A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5504646301269531,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "获取默认数量的市场新闻",
        "purpose": "验证工具在不提供ticker参数的情况下，使用默认limit值成功获取市场相关新闻。",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5436656475067139,
        "is_functional_test": true
      },
      {
        "case_name": "获取特定公司最新新闻",
        "purpose": "验证工具可以成功获取指定股票代码（如AAPL）的最新金融新闻。",
        "args": {
          "ticker": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5474600791931152,
        "is_functional_test": true
      },
      {
        "case_name": "获取最大允许数量的新闻",
        "purpose": "测试工具在请求最大允许数量（limit=20）时是否能正确响应。",
        "args": {
          "ticker": "AAPL",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5746333599090576,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符作为ticker调用工具",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的ticker输入，防止注入攻击或其他异常。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.8775908946990967,
        "is_functional_test": false
      },
      {
        "case_name": "输入空字符串作为ticker",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.556499719619751,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效ticker获取新闻",
        "purpose": "测试工具在提供无效ticker时是否能正确抛出错误或返回空数据。",
        "args": {
          "ticker": "INVALIDTICKER"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5496888160705566,
        "is_functional_test": false
      },
      {
        "case_name": "设置超出上限的limit值",
        "purpose": "验证工具是否能正确处理超过最大限制的limit参数，并抛出错误。",
        "args": {
          "ticker": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.024491310119628906,
        "is_functional_test": false
      },
      {
        "case_name": "使用非正整数作为limit参数",
        "purpose": "测试工具是否能正确处理非法limit值（如负数、零、非整数），并进行参数校验。",
        "args": {
          "ticker": "AAPL",
          "limit": -5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: -5。有效范围是 1 到 20"
        },
        "execution_time": 0.008001089096069336,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "获取有效股票代码的股权结构数据",
        "purpose": "验证工具可以成功获取一个有效股票代码对应的股权结构数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.546724796295166,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效股票代码获取股权结构数据",
        "purpose": "测试工具在提供无效股票代码时是否能正确抛出错误或返回空数据。",
        "args": {
          "symbol": "INVALIDSYM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5653958320617676,
        "is_functional_test": false
      },
      {
        "case_name": "输入为空字符串作为股票代码",
        "purpose": "验证工具对空字符串参数的处理是否符合预期，应触发参数校验错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 股票代码不能为空"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "输入特殊字符作为股票代码",
        "purpose": "测试工具是否能够安全地处理包含特殊字符的股票代码输入，防止注入攻击或其他异常。",
        "args": {
          "symbol": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.6312410831451416,
        "is_functional_test": false
      },
      {
        "case_name": "不提供任何参数调用工具",
        "purpose": "验证工具在缺少必要参数时是否能正确抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": false
      },
      {
        "case_name": "输入包含空格的股票代码",
        "purpose": "验证工具是否能正确处理包含空格的股票代码输入，并返回合理的错误信息。",
        "args": {
          "symbol": " AAPL "
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.557835578918457,
        "is_functional_test": false
      },
      {
        "case_name": "输入数字作为股票代码",
        "purpose": "验证工具是否能处理非字母形式的股票代码输入，如纯数字输入，并返回合理的错误。",
        "args": {
          "symbol": "123456"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5549511909484863,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 88
}