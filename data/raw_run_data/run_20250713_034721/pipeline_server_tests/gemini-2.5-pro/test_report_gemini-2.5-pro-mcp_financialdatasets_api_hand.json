{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_financialdatasets_api_hand",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_financialdatasets_api_hand/refined/server.py",
  "timestamp": "2025-07-13T03:58:03.015822",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "Retrieves the income statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of income statement records, sorted from most recent to oldest.\n    \n    Example:\n        get_income_statements(ticker='AAPL', period='annual', limit=2)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "Retrieves the balance sheets for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'MSFT').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of balance sheet records, sorted from most recent to oldest.\n\n    Example:\n        get_balance_sheets(ticker='MSFT', period='quarterly', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "Retrieves the cash flow statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'GOOGL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of cash flow statement records, sorted from most recent to oldest.\n\n    Example:\n        get_cash_flows(ticker='GOOGL', period='annual', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "Retrieves historical OHLC (Open, High, Low, Close) stock price data for a specified ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'TSLA').\n        start_date (str): The start date for the data in 'YYYY-MM-DD' format.\n        end_date (str): The end date for the data in 'YYYY-MM-DD' format.\n\n    Returns:\n        str: A JSON string representing a list of daily price records.\n\n    Example:\n        get_stock_prices(ticker='TSLA', start_date='2023-01-01', end_date='2023-01-31')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "ticker",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "Retrieves recent news articles related to a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NVDA').\n\n    Returns:\n        str: A JSON string representing a list of news articles.\n\n    Example:\n        get_market_news(ticker='NVDA')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "Retrieves the summary profile for a company, including sector, industry, employee count, and business summary.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AMZN').\n\n    Returns:\n        str: A JSON string representing a dictionary of the company's profile information.\n\n    Example:\n        get_company_profile(ticker='AMZN')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "Retrieves analyst recommendations and ratings for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NFLX').\n\n    Returns:\n        str: A JSON string representing a list of analyst recommendation records over time.\n\n    Example:\n        get_analyst_estimates(ticker='NFLX')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "Retrieves the historical dividend payment data for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'KO').\n\n    Returns:\n        str: A JSON string representing a list of dividend payments, with date and amount for each.\n\n    Example:\n        get_dividend_history(ticker='KO')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "Retrieves the historical stock split data for a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string representing a list of stock splits, with date and ratio for each.\n\n    Example:\n        get_splits_history(ticker='AAPL')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "Retrieves the company's historical earnings data, including reported and estimated EPS.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'META').\n\n    Returns:\n        str: A JSON string representing a list of historical earnings events.\n\n    Example:\n        get_earnings_history(ticker='META')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "Retrieves key financial ratios for a company, such as P/E ratio, forward P/E, and price-to-book ratio.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'JPM').\n\n    Returns:\n        str: A JSON string representing a dictionary of selected financial ratios.\n\n    Example:\n        get_financial_ratios(ticker='JPM')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "Retrieves the company's ownership structure, including major and institutional holders.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'BRK-A').\n\n    Returns:\n        str: A JSON string containing lists for 'major_holders' and 'institutional_holders'.\n\n    Example:\n        get_ownership_data(ticker='BRK-A')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索公司概况信息。",
        "args": {
          "ticker": "AMZN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 1.2181594371795654,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@MN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN'\"}"
        },
        "execution_time": 0.6876931190490723,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6809978485107422,
        "is_functional_test": true
      },
      {
        "case_name": "Ticker with Special Characters in Boundary",
        "purpose": "测试边界条件下，特殊字符作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$AMZ)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$AMZ)'\"}"
        },
        "execution_time": 0.6856162548065186,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "测试超长 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.7096302509307861,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.6603496074676514,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Injection Attempt",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE companies;--'\"}"
        },
        "execution_time": 0.6960422992706299,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具可以使用有效的股票代码和日期范围检索历史OHLC数据。",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.7236242294311523,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "T#SL@",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T#SL@'\"}"
        },
        "execution_time": 0.6880488395690918,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.7447948455810547,
        "is_functional_test": true
      },
      {
        "case_name": "Start Date After End Date",
        "purpose": "测试开始日期晚于结束日期时的错误处理。",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-02-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.717754602432251,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Injection Attempt in Ticker",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE stock_data;--",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE stock_data;--'\"}"
        },
        "execution_time": 0.7045977115631104,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Minimal Date Range",
        "purpose": "测试最小可能的日期范围（同一天）是否能正常处理。",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-01",
          "end_date": "2023-01-01"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.7304139137268066,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6335737705230713,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索最近的年度收入报表。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7144820690155029,
        "is_functional_test": true
      },
      {
        "case_name": "Quarterly Income Statements Retrieval",
        "purpose": "测试工具在指定季度周期时是否能正确返回最近的4份季度收入报表。",
        "args": {
          "ticker": "GOOGL",
          "period": "quarterly",
          "limit": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
        },
        "execution_time": 0.7099158763885498,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit for Annual Reports",
        "purpose": "验证工具是否能正确处理自定义限制数量，例如获取2份最近的年度报告。",
        "args": {
          "ticker": "MSFT",
          "period": "annual",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.6952965259552002,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理机制。",
        "args": {
          "ticker": "",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@MN",
          "period": "annual",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN'\"}"
        },
        "execution_time": 0.9059786796569824,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC",
          "period": "quarterly",
          "limit": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6746680736541748,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890",
          "period": "annual",
          "limit": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6584405899047852,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Injection Attempt in Ticker",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE income_statements;--",
          "period": "annual",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE income_statements;--'\"}"
        },
        "execution_time": 0.7263889312744141,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval - Annual",
        "purpose": "验证工具可以使用默认参数检索指定股票代码的年度资产负债表。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.6891076564788818,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet Retrieval - Quarterly with Limit",
        "purpose": "测试工具是否能正确获取季度资产负债表并限制返回记录数量。",
        "args": {
          "ticker": "GOOGL",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
        },
        "execution_time": 0.7158775329589844,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "G@OGL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'G@OGL'\"}"
        },
        "execution_time": 0.6837902069091797,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.7443952560424805,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt in Ticker",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE balance_sheets;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE balance_sheets;--'\"}"
        },
        "execution_time": 0.7011904716491699,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6962137222290039,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Minimal Limit Value",
        "purpose": "测试最小 limit 值（1）是否能正常处理。",
        "args": {
          "ticker": "MSFT",
          "limit": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.72251296043396,
        "is_functional_test": true
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索现金流量表信息。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7069144248962402,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@PPLE"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@PPLE'\"}"
        },
        "execution_time": 0.6696727275848389,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6757769584655762,
        "is_functional_test": true
      },
      {
        "case_name": "Quarterly Period Cash Flow Retrieval",
        "purpose": "验证工具能够正确检索季度报告期的现金流量表数据。",
        "args": {
          "ticker": "GOOGL",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
        },
        "execution_time": 0.7252063751220703,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit Cash Flow Retrieval",
        "purpose": "验证工具支持自定义限制返回的现金流量表数量。",
        "args": {
          "ticker": "MSFT",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.7384846210479736,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt in Ticker",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE cash_flows;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE cash_flows;--'\"}"
        },
        "execution_time": 0.6743841171264648,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6981565952301025,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索关键财务比率数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.6980297565460205,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@MN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN'\"}"
        },
        "execution_time": 0.6691262722015381,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6979770660400391,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE financial_ratios;--'\"}"
        },
        "execution_time": 0.6901397705078125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6910955905914307,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7249093055725098,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character Ticker in Boundary",
        "purpose": "测试边界条件下，特殊字符作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$AAPL)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$AAPL)'\"}"
        },
        "execution_time": 0.6763591766357422,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索历史收益数据。",
        "args": {
          "ticker": "META"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
        },
        "execution_time": 0.6700711250305176,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.008239507675170898,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "M@TA"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'M@TA'\"}"
        },
        "execution_time": 0.6880712509155273,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.7100410461425781,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6882085800170898,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - SQL Injection Attempt",
        "purpose": "检查 ticker 参数是否存在 SQL 注入攻击风险。",
        "args": {
          "ticker": "'; DROP TABLE earnings;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE earnings;--'\"}"
        },
        "execution_time": 0.6508724689483643,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.6921913623809814,
        "is_functional_test": false
      },
      {
        "case_name": "Case Insensitive Ticker Handling",
        "purpose": "验证工具是否能够处理大小写混合的 ticker 符号，例如 'mEta'。",
        "args": {
          "ticker": "mEta"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'mEta'\"}"
        },
        "execution_time": 0.6994397640228271,
        "is_functional_test": true
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索分析师推荐和评级信息。",
        "args": {
          "ticker": "NFLX"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
        },
        "execution_time": 0.7113025188446045,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004093647003173828,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format with Special Characters",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "N@FLX"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'N@FLX'\"}"
        },
        "execution_time": 0.6475615501403809,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6593186855316162,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.666712760925293,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - SQL Injection Attempt",
        "purpose": "检查 ticker 参数是否存在 SQL 注入攻击风险。",
        "args": {
          "ticker": "'; DROP TABLE analyst_data;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE analyst_data;--'\"}"
        },
        "execution_time": 0.7124855518341064,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker Input",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7114286422729492,
        "is_functional_test": false
      },
      {
        "case_name": "Ticker with Mixed Special Characters",
        "purpose": "测试边界条件下，多个特殊字符组合作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$NFLX)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$NFLX)'\"}"
        },
        "execution_time": 0.6665847301483154,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索历史股息数据。",
        "args": {
          "ticker": "KO"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
        },
        "execution_time": 0.7246317863464355,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "K#O"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'K#O'\"}"
        },
        "execution_time": 0.6826705932617188,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6955101490020752,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE dividends;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE dividends;--'\"}"
        },
        "execution_time": 0.6812238693237305,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6857485771179199,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.6940858364105225,
        "is_functional_test": false
      },
      {
        "case_name": "Ticker with Special Characters in Boundary",
        "purpose": "测试边界条件下，特殊字符作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$KO)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$KO)'\"}"
        },
        "execution_time": 0.7280101776123047,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索历史拆股数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.6978452205657959,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003003835678100586,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@MN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN'\"}"
        },
        "execution_time": 0.7016379833221436,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.6752986907958984,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE splits;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE splits;--'\"}"
        },
        "execution_time": 0.7289166450500488,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6572616100311279,
        "is_functional_test": false
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7053709030151367,
        "is_functional_test": false
      },
      {
        "case_name": "Ticker with Special Characters in Boundary",
        "purpose": "测试边界条件下，特殊字符作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$AAPL)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$AAPL)'\"}"
        },
        "execution_time": 0.7171914577484131,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Ownership Data Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索公司的所有权结构数据。",
        "args": {
          "ticker": "BRK-A"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
        },
        "execution_time": 0.7435717582702637,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "A@MN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN'\"}"
        },
        "execution_time": 0.6898362636566162,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.7567071914672852,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE companies;--'\"}"
        },
        "execution_time": 0.6970503330230713,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6947348117828369,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 1.1610915660858154,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Ticker with Special Characters in Boundary",
        "purpose": "测试边界条件下，特殊字符作为 ticker 输入时的行为。",
        "args": {
          "ticker": "$AMZ)"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '$AMZ)'\"}"
        },
        "execution_time": 1.247647762298584,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具可以使用有效的股票代码检索相关新闻文章。",
        "args": {
          "ticker": "NVDA"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
        },
        "execution_time": 0.7096273899078369,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "测试当 ticker 参数为空字符串时的错误处理。",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "测试包含特殊字符的无效 ticker 是否被正确拒绝。",
        "args": {
          "ticker": "N@VD&"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'N@VD&'\"}"
        },
        "execution_time": 0.6447112560272217,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Ticker",
        "purpose": "验证工具在提供不存在的股票代码时的行为是否合理（如返回空或错误提示）。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZABC'\"}"
        },
        "execution_time": 0.9028656482696533,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Injection Attempt in Ticker",
        "purpose": "检查 ticker 参数是否存在注入攻击风险（例如 SQL 注入、命令注入）。",
        "args": {
          "ticker": "'; DROP TABLE news;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE news;--'\"}"
        },
        "execution_time": 0.6802923679351807,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Max Length Ticker",
        "purpose": "测试最大长度的 ticker 输入是否被正确拒绝。",
        "args": {
          "ticker": "VERYLONGTICKER1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890'\"}"
        },
        "execution_time": 0.6726863384246826,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Minimal Ticker Length",
        "purpose": "测试最小可能长度的 ticker（例如单个字母）是否能正常处理。",
        "args": {
          "ticker": "A"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A'\"}"
        },
        "execution_time": 0.7009453773498535,
        "is_functional_test": true
      },
      {
        "case_name": "Numeric Only Ticker",
        "purpose": "验证工具对纯数字 ticker 的处理是否符合预期。",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.6755409240722656,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 96
}