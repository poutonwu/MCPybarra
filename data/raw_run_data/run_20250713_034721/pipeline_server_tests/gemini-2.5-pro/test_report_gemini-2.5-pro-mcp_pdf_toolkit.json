{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_pdf_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_pdf_toolkit/refined/server.py",
  "timestamp": "2025-07-13T03:57:52.992133",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merges multiple specified PDF files into a single PDF file.\n\n    Args:\n        pdf_paths (list[str]): A list containing the full paths to the PDF files to be merged.\n        output_path (str): The save path for the merged PDF file.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Files merged successfully into output.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "pdf_paths": {
            "items": {
              "type": "string"
            },
            "title": "Pdf Paths",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "pdf_paths",
          "output_path"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extracts specified pages from a PDF file and creates a new PDF file.\n\n    Args:\n        source_path (str): The full path to the source PDF file.\n        pages (list[int]): A list of page numbers to extract (0-indexed).\n        output_path (str): The save path for the new PDF file with the extracted pages.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Extracted 3 pages into new_file.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "pages": {
            "items": {
              "type": "integer"
            },
            "title": "Pages",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "pages",
          "output_path"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Searches for PDF files matching a glob pattern in a specified directory.\n\n    Args:\n        directory (str): The path to the directory to search in.\n        pattern (str): The glob pattern to match filenames (e.g., '*.pdf', 'report-*.pdf').\n\n    Returns:\n        list[str]: A list containing the full paths of all matching PDF files.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Finds and merges PDF files in a specified order from a directory based on a list of filename patterns.\n    Supports both exact and fuzzy matching modes.\n\n    Args:\n        directory (str): The path to the directory to search for PDF files.\n        order_patterns (list[str]): A list of filename patterns that defines the merge order.\n        output_path (str): The save path for the merged PDF file.\n        match_mode (str): The matching mode, either 'exact' or 'fuzzy'. Defaults to 'exact'.\n\n    Returns:\n        dict: A dictionary containing the operation status, a message, and a list of the actual files merged.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_patterns": {
            "items": {
              "type": "string"
            },
            "title": "Order Patterns",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "match_mode": {
            "default": "exact",
            "title": "Match Mode",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "order_patterns",
          "output_path"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Finds PDFs in a directory that are related to a target PDF based on content similarity.\n    It analyzes the text content of the target PDF and compares it against other PDFs\n    in the search directory to find the most similar ones.\n\n    Args:\n        target_pdf (str): The full path to the target PDF file used as the baseline for comparison.\n        search_directory (str): The path to the directory where related files will be searched.\n        top_n (int): The maximum number of related PDF files to return. Defaults to 5.\n\n    Returns:\n        list[dict]: A list of related PDF files, where each element is a dictionary\n                    containing the file path and a similarity score. Returns a list\n                    with an error dictionary if an issue occurs.\n    ",
      "args_schema": {
        "properties": {
          "target_pdf": {
            "title": "Target Pdf",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          },
          "top_n": {
            "default": 5,
            "title": "Top N",
            "type": "integer"
          }
        },
        "required": [
          "target_pdf",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证工具能正确搜索指定目录中所有PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Specific Pattern Match",
        "purpose": "验证工具能根据特定命名模式匹配PDF文件（如'rule1.pdf'）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "rule*.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Directory Search",
        "purpose": "验证当目录为空时，工具返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.008000850677490234,
        "is_functional_test": true
      },
      {
        "case_name": "No Matching Files",
        "purpose": "验证没有匹配文件时返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "nonexistent_*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.005997180938720703,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Hidden Git Files",
        "purpose": "确保工具不会意外访问或返回隐藏的.git目录中的PDF文件（若存在）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\objects",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory",
        "purpose": "测试无效目录路径是否被正确处理",
        "args": {
          "directory": "D:\\invalid\\path\\to\\directory",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Pattern",
        "purpose": "测试无效glob模式是否被正确处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "["
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.007003068923950195,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Pattern",
        "purpose": "测试包含特殊字符的模式能否正常工作",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*@#$.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      }
    ],
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证工具能正确合并多个PDF文件为一个文件",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.05745553970336914,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证当仅提供一个PDF文件时，工具仍能正确生成输出文件（即复制原文件）",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into single_merged_output.pdf\"\n}"
        },
        "execution_time": 0.06090044975280762,
        "is_functional_test": true
      },
      {
        "case_name": "Empty PDF List Merge",
        "purpose": "验证当输入PDF路径列表为空时，工具返回错误信息而不是崩溃",
        "args": {
          "pdf_paths": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"The list of PDF paths cannot be empty.\"\n}"
        },
        "execution_time": 0.004995822906494141,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid PDF Path in List",
        "purpose": "测试包含无效PDF路径的列表是否被正确处理并返回错误信息",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Input file not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"\n}"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径包含特殊字符时能否正常工作",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged@#$.pdf\"\n}"
        },
        "execution_time": 0.05922055244445801,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Output to Protected Directory",
        "purpose": "确保工具不能写入系统保护目录（如C:\\Windows）以防止潜在安全风险",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "C:\\Windows\\test_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\test_output.pdf'\"\n}"
        },
        "execution_time": 0.050769805908203125,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Non-PDF Files in List",
        "purpose": "验证工具在PDF路径列表中包含非PDF文件时的行为是否稳健",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_pdf_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Input file not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"\n}"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "Long Path and Filename Merge",
        "purpose": "验证工具是否支持长路径和长文件名",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_1234567890123456789012345678901234567890.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into very_long_output_filename_1234567890123456789012345678901234567890.pdf\"\n}"
        },
        "execution_time": 0.06276488304138184,
        "is_functional_test": true
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证工具能正确从PDF文件中提取指定页面并生成新文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0,
            1,
            2
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_basic.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 3 pages into extracted_basic.pdf\"\n}"
        },
        "execution_time": 0.04100298881530762,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证工具能正确提取单个页面并生成新的PDF文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            1
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_single.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.006997823715209961,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Extract From Protected Directory",
        "purpose": "确保工具不能读取系统保护目录中的PDF文件（如C:\\Windows）以防止潜在安全风险",
        "args": {
          "source_path": "C:\\Windows\\test_output.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\protected_extract_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file not found: C:\\\\Windows\\\\test_output.pdf\"\n}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Source Path",
        "purpose": "测试无效的源文件路径是否被正确处理",
        "args": {
          "source_path": "D:\\invalid\\path\\to\\source.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_source_extract.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file not found: D:\\\\invalid\\\\path\\\\to\\\\source.pdf\"\n}"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Pages List",
        "purpose": "验证当页面列表为空时，工具返回错误信息而不是崩溃",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pages_extract.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 0 pages into empty_pages_extract.pdf\"\n}"
        },
        "execution_time": 0.013002872467041016,
        "is_functional_test": false
      },
      {
        "case_name": "Out of Range Page Numbers",
        "purpose": "测试超出PDF实际页数的页面编号是否被正确处理",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            100
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\out_of_range_page.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Invalid page number: 100. Must be between 0 and 6.\"\n}"
        },
        "execution_time": 0.011998891830444336,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径包含特殊字符时能否正常工作",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.011311769485473633,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Page Number",
        "purpose": "验证负数页面编号是否被正确处理为错误输入",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            -1
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\negative_page_extract.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Invalid page number: -1. Must be between 0 and 6.\"\n}"
        },
        "execution_time": 0.009510278701782227,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Similarity Search",
        "purpose": "验证工具能基于内容相似性找到与目标PDF相关的文件（使用默认top_n=5）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged@#$.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_merged_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_1234567890123456789012345678901234567890.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_basic.pdf\",\n  \"similarity_score\": 0.8732\n}"
        ],
        "execution_time": 0.6646115779876709,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Top N Value",
        "purpose": "验证工具支持自定义返回的最相似PDF数量",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 3
        },
        "response": {
          "result": "{\n  \"error\": \"Could not extract text from target PDF or it is empty.\"\n}"
        },
        "execution_time": 0.01261448860168457,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证当搜索目录为空时，工具正确返回空列表",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.1972031593322754,
        "is_functional_test": true
      },
      {
        "case_name": "No Similar PDFs Found",
        "purpose": "验证当没有匹配的PDF时，工具返回空列表",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pages_extract.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Could not extract text from target PDF or it is empty.\"\n}"
        },
        "execution_time": 0.004060268402099609,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Hidden Git Directory",
        "purpose": "确保工具不会意外访问.git隐藏目录中的PDF文件（即使存在也不会处理）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\objects"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.14762330055236816,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Target PDF Path",
        "purpose": "测试无效的目标PDF路径是否被正确处理",
        "args": {
          "target_pdf": "D:\\invalid\\path\\to\\file.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: D:\\\\invalid\\\\path\\\\to\\\\file.pdf\"\n}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Search Directory",
        "purpose": "测试无效的搜索目录是否被正确处理",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\invalid\\directory\\path"
        },
        "response": {
          "result": "{\n  \"error\": \"Search directory not found: D:\\\\invalid\\\\directory\\\\path\"\n}"
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Paths",
        "purpose": "测试包含特殊字符的路径是否能被正常处理",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged@#$.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_merged_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_1234567890123456789012345678901234567890.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_basic.pdf\",\n  \"similarity_score\": 0.8732\n}"
        ],
        "execution_time": 0.638810396194458,
        "is_functional_test": true
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic Ordered Merge with Exact Match",
        "purpose": "验证工具能根据指定顺序精确匹配并合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ordered_merge_basic.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.0500333309173584,
        "is_functional_test": true
      },
      {
        "case_name": "Fuzzy Match Ordered Merge",
        "purpose": "验证模糊匹配模式下按顺序合并PDF文件的功能",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper",
            "rule"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ordered_merge_fuzzy.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.057767391204833984,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Order Patterns List",
        "purpose": "验证空的排序模式列表是否返回错误信息",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_order_merge.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "No Matching Files in Order Patterns",
        "purpose": "验证当排序模式无法匹配任何文件时工具能否优雅处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "nonexistent1.pdf",
            "nonexistent2.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_merge.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Merge from Git Directory",
        "purpose": "确保工具不会意外合并.git目录中的PDF文件（若存在）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_patterns": [
            "*.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_dir_merge.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径包含特殊字符时能否正常工作",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merge@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.11492109298706055,
        "is_functional_test": true
      },
      {
        "case_name": "Merge into Protected System Directory",
        "purpose": "验证工具不能写入系统保护目录以防止潜在安全风险",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "C:\\Windows\\system_protected_merge.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system_protected_merge.pdf'\"\n}"
        },
        "execution_time": 0.051000356674194336,
        "is_functional_test": false
      },
      {
        "case_name": "Long Filename and Path Test",
        "purpose": "验证工具是否支持长路径和长文件名",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "very_long_output_filename_1234567890123456789012345678901234567890.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_1234567890123456789012345678901234567890_merged.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_1234567890123456789012345678901234567890.pdf\"\n  ]\n}"
        },
        "execution_time": 0.03899979591369629,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 40
}