{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_git_repo_manager",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_git_repo_manager/refined/server.py",
  "timestamp": "2025-07-13T04:19:15.543859",
  "tools": [
    {
      "name": "write_to_temp_file",
      "description": "\n    将内容写入指定文件路径。\n\n    Args:\n        file_path: 要写入的文件路径 (必填)。\n        content: 要写入的内容 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        IOError: 如果文件写入失败。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "write_to_temp_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "git_init",
      "description": "\n    初始化一个新的Git仓库。\n\n    Args:\n        repo_path: 新仓库的文件路径 (必填)。\n\n    Returns:\n        包含初始化状态的字典，包括仓库路径和初始化成功状态。\n\n    Raises:\n        ValueError: 如果提供的路径无效或已存在。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_initArguments",
        "type": "object"
      }
    },
    {
      "name": "git_status",
      "description": "\n    获取仓库当前状态。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含仓库状态信息的字典，如当前分支、修改文件列表等。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_statusArguments",
        "type": "object"
      }
    },
    {
      "name": "git_add",
      "description": "\n    将文件添加到暂存区。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要添加的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_addArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_unstaged",
      "description": "\n    查看未暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含未暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_unstagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_staged",
      "description": "\n    查看已暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含已暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_stagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff",
      "description": "\n    比较分支或提交。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit1: 第一个比较的提交哈希或分支名 (必填)。\n        commit2: 第二个比较的提交哈希或分支名 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含两个提交之间差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit1": {
            "title": "Commit1",
            "type": "string"
          },
          "commit2": {
            "title": "Commit2",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit1",
          "commit2"
        ],
        "title": "git_diffArguments",
        "type": "object"
      }
    },
    {
      "name": "git_commit",
      "description": "\n    提交更改。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        message: 提交信息 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交结果的字典，包括提交哈希和消息。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "title": "git_commitArguments",
        "type": "object"
      }
    },
    {
      "name": "git_reset",
      "description": "\n    取消暂存文件。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要取消暂存的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或文件信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_resetArguments",
        "type": "object"
      }
    },
    {
      "name": "git_log",
      "description": "\n    查看提交历史。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交历史的列表，每个条目包含提交哈希、作者、日期和消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_logArguments",
        "type": "object"
      }
    },
    {
      "name": "git_create_branch",
      "description": "\n    创建新分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 新分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_create_branchArguments",
        "type": "object"
      }
    },
    {
      "name": "git_checkout",
      "description": "\n    切换分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 要切换到的分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_checkoutArguments",
        "type": "object"
      }
    },
    {
      "name": "git_show",
      "description": "\n    显示提交的详细内容。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit_hash: 要显示的提交哈希 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交详细信息的字符串，包括元数据和差异内容。\n\n    Raises:\n        ValueError: 如果提供的路径或提交哈希无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit_hash": {
            "title": "Commit Hash",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit_hash"
        ],
        "title": "git_showArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "write_to_temp_file": [
      {
        "case_name": "基本写入文件测试",
        "purpose": "验证工具可以将内容正确写入指定路径的文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_screenshot.png",
          "content": "This is a test content for basic write operation."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_screenshot.png\", \"content_length\": 49}}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数写入测试",
        "purpose": "使用默认 skip_dependent_steps 参数验证写入功能",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\saved_nature.jpeg",
          "content": "Default skip_dependent_steps value test content."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\saved_nature.jpeg\", \"content_length\": 48}}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的写入测试",
        "purpose": "验证 skip_dependent_steps 参数为 True 时的行为",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\saved_xue.jpg",
          "content": "Content for skip_dependent_steps=True test.",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\saved_xue.jpg\", \"content_length\": 43}}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符文件路径写入测试",
        "purpose": "验证工具能否处理包含特殊字符的文件路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png",
          "content": "Content for special character file path test."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\shape@#$_result.png\", \"content_length\": 45}}"
        },
        "execution_time": 0.006003856658935547,
        "is_functional_test": true
      },
      {
        "case_name": "长文件名写入测试",
        "purpose": "验证工具能否处理超长文件名",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg",
          "content": "Content for long file name test."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\", \"content_length\": 32}}"
        },
        "execution_time": 0.01000070571899414,
        "is_functional_test": true
      },
      {
        "case_name": "写入只读文件测试",
        "purpose": "尝试写入一个只读文件，验证工具能否处理权限不足的情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png",
          "content": "Content to test writing to a read-only file."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output.png\", \"content_length\": 44}}"
        },
        "execution_time": 0.00799870491027832,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径写入测试",
        "purpose": "验证工具对无效路径的处理",
        "args": {
          "file_path": "D:\\invalid\\path\\that\\does\\not\\exist\\test.txt",
          "content": "Content for invalid path test."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\invalid\\\\path\\\\that\\\\does\\\\not\\\\exist\\\\test.txt\", \"content_length\": 30}}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "写入隐藏文件测试",
        "purpose": "验证工具能否写入隐藏文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx",
          "content": "Content for hidden file write test."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\", \"content_length\": 35}}"
        },
        "execution_time": 0.00800180435180664,
        "is_functional_test": true
      }
    ],
    "git_init": [
      {
        "case_name": "基本Git仓库初始化测试",
        "purpose": "验证工具可以成功在指定路径下初始化一个新的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_repo\", \"initialized\": true}}"
        },
        "execution_time": 0.21763896942138672,
        "is_functional_test": true
      },
      {
        "case_name": "已存在目录的Git初始化失败测试",
        "purpose": "验证工具在尝试初始化一个已经存在的Git仓库时抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径Git初始化错误处理测试",
        "purpose": "验证工具在提供无效路径时是否能正确抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\init"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\invalid\\\\path\\\\for\\\\git\\\\init\", \"initialized\": true}}"
        },
        "execution_time": 0.21015357971191406,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符路径Git初始化测试",
        "purpose": "验证工具能否处理包含特殊字符的路径进行Git初始化",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\git@#$_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\git@#$_repo\", \"initialized\": true}}"
        },
        "execution_time": 0.20661497116088867,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径Git初始化边界测试",
        "purpose": "验证工具能否处理超长路径的Git仓库初始化",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_git_repo_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_git_repo_name_1234567890123456789012345678901234567890\", \"initialized\": true}}"
        },
        "execution_time": 0.2276155948638916,
        "is_functional_test": true
      },
      {
        "case_name": "只读路径Git初始化安全测试",
        "purpose": "验证工具在尝试写入只读路径时能否正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "隐藏路径Git初始化功能测试",
        "purpose": "验证工具能否在隐藏路径下成功初始化Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\", \"initialized\": true}}"
        },
        "execution_time": 0.19800400733947754,
        "is_functional_test": true
      },
      {
        "case_name": "非法分支名路径Git初始化安全性测试",
        "purpose": "验证工具在含有非法分支名的路径下初始化Git仓库的安全性行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\invalid branch name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\invalid branch name\"}"
        },
        "execution_time": 0.004994869232177734,
        "is_functional_test": false
      }
    ],
    "git_status": [
      {
        "case_name": "基本Git状态获取测试",
        "purpose": "验证工具可以成功获取指定路径下Git仓库的当前状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u72b6\\u6001\\u4fe1\\u606f\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"is_dirty\": true, \"active_branch\": \"long_branch_name_1234567890123456789012345678901234567890\", \"untracked_files\": [\".hidden_git_repo/\", \"nature_shapes_circle.jpeg\", \"nature_shapes_triangle.jpeg\", \"output/basic_git_repo/\", \"output/basic_screenshot.png\", \"output/git@#$_repo/\", \"output/saved_document.docx\", \"output/saved_document_2.docx\", \"output/saved_nature.jpeg\", \"output/saved_xue.jpg\", \"output/screenshot_on_headless.png\", \"output/shape@#$_result.png\", \"output/shape@#$_result_thresholded.png\", \"output/special@#$_document_saved.docx\", \"output/very_long_file_name_1234567890123456789012345678901234567890_saved.docx\", \"output/very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\", \"output/very_long_file_name_1234567890123456789012345678901234567890_saved_edges_canny.jpg\", \"output/very_long_file_name_123456789012345678901234567890_saved.jpg\", \"output/very_long_file_name_123456789012345678901234567890_saved_thresholded.jpg\", \"output/very_long_git_repo_name_1234567890123456789012345678901234567890/\", \"xue_shapes_rectangle.jpg\"], \"modified_files\": [\".hidden_file.txt\", \"empty_content_test.txt\", \"empty_content_write.txt\", \"nature.png\", \"output/out_of_bounds_cropped.png\", \"output/xue_cropped_zero.png\", \"output/xue_full_cropped.png\", \"performance_results.csv\", \"special@#$.txt\", \"test_output.pdf\"]...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1522字符，剩余22字符"
        },
        "execution_time": 1.389847755432129,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数Git状态获取测试",
        "purpose": "使用默认 skip_dependent_steps 参数验证获取Git仓库状态的基本功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.6563148498535156,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的Git状态测试",
        "purpose": "验证 skip_dependent_steps 参数为 True 时的行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_repo\\.git",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.7121222019195557,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径Git状态测试",
        "purpose": "验证工具能否处理包含特殊字符的仓库路径并正确获取状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\git@#$_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.7273886203765869,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径Git状态边界测试",
        "purpose": "验证工具能否处理超长路径的Git仓库状态查询",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_git_repo_name_1234567890123456789012345678901234567890\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.8580629825592041,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径Git状态错误处理测试",
        "purpose": "验证工具在提供无效路径时是否能正确抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\that\\does\\not\\exist\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\that\\\\does\\\\not\\\\exist\\\\.git\"}"
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": false
      },
      {
        "case_name": "只读路径Git状态安全测试",
        "purpose": "验证工具在尝试访问只读路径下的Git仓库时能否正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "隐藏路径Git状态功能测试",
        "purpose": "验证工具能否在隐藏路径下成功获取Git仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.7452654838562012,
        "is_functional_test": true
      }
    ],
    "git_add": [
      {
        "case_name": "基本git_add功能测试",
        "purpose": "验证git_add工具可以将指定文件添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.jpeg \\u6dfb\\u52a0\\u5230\\u6682\\u5b58\\u533a\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.jpeg\", \"added\": true}}"
        },
        "execution_time": 0.012001752853393555,
        "is_functional_test": true
      },
      {
        "case_name": "默认skip_dependent_steps参数测试",
        "purpose": "使用默认 skip_dependent_steps 参数验证git_add的基本行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "skip_dependent_steps=True时的行为测试",
        "purpose": "验证当skip_dependent_steps为True时，git_add能否正确处理失败情况并跳过依赖步骤",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_repo\"}"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径文件添加测试",
        "purpose": "验证git_add能否处理包含特殊字符的文件路径",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\git@#$_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\git@#$_repo\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "超长文件名添加测试",
        "purpose": "验证git_add能否处理超长文件名的文件添加操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_git_repo_name_1234567890123456789012345678901234567890",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_git_repo_name_1234567890123456789012345678901234567890\"}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": true
      },
      {
        "case_name": "只读文件添加测试",
        "purpose": "尝试添加一个只读文件，验证git_add是否能正确处理权限不足的情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.0049953460693359375,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径错误处理测试",
        "purpose": "验证git_add在提供无效仓库路径时是否能正确抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\that\\does\\not\\exist\\repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\that\\\\does\\\\not\\\\exist\\\\repo\"}"
        },
        "execution_time": 0.005009651184082031,
        "is_functional_test": false
      },
      {
        "case_name": "隐藏文件添加测试",
        "purpose": "验证git_add能否成功添加隐藏文件到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.007995843887329102,
        "is_functional_test": true
      }
    ],
    "git_diff_unstaged": [
      {
        "case_name": "基本未暂存差异查看测试",
        "purpose": "验证工具可以正确获取指定Git仓库中未暂存的文件修改差异内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n- \\u4fee\\u6539\\u6587\\u4ef6: .hidden_file.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_test.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_write.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: nature.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/out_of_bounds_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_cropped_zero.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_full_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: performance_results.csv\\n- \\u4fee\\u6539\\u6587\\u4ef6: special@#$.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: test_output.pdf\\n- \\u672a\\u8ddf\\u8e2a\\u6587\\u4ef6:\\n  * nature_shapes_circle.jpeg\\n  * nature_shapes_triangle.jpeg\\n  * output/basic_screenshot.png\\n  * output/saved_document.docx\\n  * output/saved_document_2.docx\\n  * output/saved_nature.jpeg\\n  * output/saved_xue.jpg\\n  * output/screenshot_on_headless.png\\n  * output/shape@#$_result.png\\n  * output/shape@#$_result_thresholded.png\\n  * output/special@#$_document_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved_edges_canny.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved_thresholded.jpg\\n  * xue_shapes_recta...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1512字符，剩余12字符"
        },
        "execution_time": 0.43259549140930176,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数处理未暂存差异测试",
        "purpose": "使用默认 skip_dependent_steps 参数值验证工具对未暂存差异的获取行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n- \\u4fee\\u6539\\u6587\\u4ef6: .hidden_file.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_test.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_write.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: nature.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/out_of_bounds_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_cropped_zero.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_full_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: performance_results.csv\\n- \\u4fee\\u6539\\u6587\\u4ef6: special@#$.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: test_output.pdf\\n- \\u672a\\u8ddf\\u8e2a\\u6587\\u4ef6:\\n  * nature_shapes_circle.jpeg\\n  * nature_shapes_triangle.jpeg\\n  * output/basic_screenshot.png\\n  * output/saved_document.docx\\n  * output/saved_document_2.docx\\n  * output/saved_nature.jpeg\\n  * output/saved_xue.jpg\\n  * output/screenshot_on_headless.png\\n  * output/shape@#$_result.png\\n  * output/shape@#$_result_thresholded.png\\n  * output/special@#$_document_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved_edges_canny.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved_thresholded.jpg\\n  * xue_shapes_recta...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1512字符，剩余12字符"
        },
        "execution_time": 0.6034784317016602,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的未暂存差异查看测试",
        "purpose": "验证当 skip_dependent_steps 设置为 True 时，工具能否继续尝试获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n- \\u4fee\\u6539\\u6587\\u4ef6: .hidden_file.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_test.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: empty_content_write.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: nature.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/out_of_bounds_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_cropped_zero.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: output/xue_full_cropped.png\\n- \\u4fee\\u6539\\u6587\\u4ef6: performance_results.csv\\n- \\u4fee\\u6539\\u6587\\u4ef6: special@#$.txt\\n- \\u4fee\\u6539\\u6587\\u4ef6: test_output.pdf\\n- \\u672a\\u8ddf\\u8e2a\\u6587\\u4ef6:\\n  * nature_shapes_circle.jpeg\\n  * nature_shapes_triangle.jpeg\\n  * output/basic_screenshot.png\\n  * output/saved_document.docx\\n  * output/saved_document_2.docx\\n  * output/saved_nature.jpeg\\n  * output/saved_xue.jpg\\n  * output/screenshot_on_headless.png\\n  * output/shape@#$_result.png\\n  * output/shape@#$_result_thresholded.png\\n  * output/special@#$_document_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.docx\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_1234567890123456789012345678901234567890_saved_edges_canny.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved.jpg\\n  * output/very_long_file_name_123456789012345678901234567890_saved_thresholded.jpg\\n  * xue_shapes_recta...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1512字符，剩余12字符"
        },
        "execution_time": 0.4488847255706787,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径查看未暂存差异失败测试",
        "purpose": "验证工具在提供无效仓库路径时是否抛出 ValueError 异常",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\diff"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\diff\"}"
        },
        "execution_time": 0.00782918930053711,
        "is_functional_test": false
      },
      {
        "case_name": "只读路径查看未暂存差异安全性测试",
        "purpose": "验证工具在尝试访问只读 Git 路径时是否能正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.004046916961669922,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符路径未暂存差异查看测试",
        "purpose": "验证工具能否处理包含特殊字符的仓库路径进行未暂存差异查看",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\feature\\branch@#$_special"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\feature\\\\branch@#$_special\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径未暂存差异边界测试",
        "purpose": "验证工具能否处理超长仓库路径的未暂存差异查看请求",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\long_branch_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\long_branch_name_1234567890123456789012345678901234567890\"}"
        },
        "execution_time": 0.0071108341217041016,
        "is_functional_test": true
      },
      {
        "case_name": "隐藏路径查看未暂存差异功能测试",
        "purpose": "验证工具能否在隐藏 Git 路径下成功获取未暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      }
    ],
    "git_commit": [
      {
        "case_name": "基本Git提交测试",
        "purpose": "验证工具可以在已初始化的Git仓库中成功执行一次基本提交",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "Initial commit from test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_hash\": \"21c565f9158796aae29ce8954339612e30fc9433\", \"message\": \"Initial commit from test\"}}"
        },
        "execution_time": 0.5943212509155273,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数提交测试",
        "purpose": "验证工具在未指定 skip_dependent_steps 参数时的行为是否符合预期（默认False）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "Commit with default skip_dependent_steps"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_hash\": \"269b927d5b5deb47655b6a41fd61454c0a3a756d\", \"message\": \"Commit with default skip_dependent_steps\"}}"
        },
        "execution_time": 0.7614853382110596,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的提交测试",
        "purpose": "验证 skip_dependent_steps 参数为 True 时的行为是否正常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "Commit with skip_dependent_steps=True",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_hash\": \"044796dd0fa3705f21914ff226995adddc44812a\", \"message\": \"Commit with skip_dependent_steps=True\"}}"
        },
        "execution_time": 0.6933040618896484,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径提交测试",
        "purpose": "验证工具能否处理包含特殊字符的仓库路径进行提交",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\feature\\branch@#$_special",
          "message": "Commit in special character path"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\feature\\\\branch@#$_special\"}"
        },
        "execution_time": 0.016629934310913086,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径提交错误处理测试",
        "purpose": "验证工具在提供无效 repo_path 时是否能正确抛出 ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\commit",
          "message": "Commit message for invalid path test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\commit\"}"
        },
        "execution_time": 0.007001161575317383,
        "is_functional_test": false
      },
      {
        "case_name": "空提交信息错误处理测试",
        "purpose": "验证工具在提交信息为空时是否能正确抛出 ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u63d0\\u4ea4\\u4fe1\\u606f\"}"
        },
        "execution_time": 0.003360748291015625,
        "is_functional_test": false
      },
      {
        "case_name": "超长提交信息边界测试",
        "purpose": "验证工具能否处理超长提交信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes. This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_hash\": \"051a6dc763915d9f540492ce7183fa3ce8a8e5e2\", \"message\": \"This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes. This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes.\"}}"
        },
        "execution_time": 0.6118979454040527,
        "is_functional_test": true
      },
      {
        "case_name": "只读仓库路径提交安全测试",
        "purpose": "验证工具在尝试向只读路径下的Git仓库提交时是否能正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check",
          "message": "Commit to read-only repository"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      }
    ],
    "git_diff_staged": [
      {
        "case_name": "基本已暂存差异查看测试",
        "purpose": "验证工具可以成功获取并返回已暂存的Git差异内容（使用默认参数）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5df2\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u627e\\u5230\\u5df2\\u6682\\u5b58\\u7684\\u66f4\\u6539\\u3002\"}"
        },
        "execution_time": 0.37360668182373047,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤参数的差异查看测试",
        "purpose": "验证 skip_dependent_steps 参数为 True 时的行为，确保不影响差异获取功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5df2\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u627e\\u5230\\u5df2\\u6682\\u5b58\\u7684\\u66f4\\u6539\\u3002\"}"
        },
        "execution_time": 0.3920938968658447,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径差异查看失败测试",
        "purpose": "验证工具在提供无效 repo_path 时能否正确抛出 ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\diff"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\diff\"}"
        },
        "execution_time": 0.00450897216796875,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符仓库路径差异查看测试",
        "purpose": "验证工具能否处理包含特殊字符的仓库路径并正确获取差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\feature\\branch@#$_special"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\feature\\\\branch@#$_special\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "只读仓库路径安全访问测试",
        "purpose": "验证工具在尝试从只读路径获取差异时是否能正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.007004737854003906,
        "is_functional_test": false
      },
      {
        "case_name": "超长仓库路径边界测试",
        "purpose": "验证工具能否处理超长路径的Git仓库并正确获取差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\long_branch_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\long_branch_name_1234567890123456789012345678901234567890\"}"
        },
        "execution_time": 0.007885217666625977,
        "is_functional_test": true
      },
      {
        "case_name": "隐藏仓库路径差异查看测试",
        "purpose": "验证工具能否在隐藏路径下成功获取已暂存的Git差异内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": true
      },
      {
        "case_name": "非法分支名路径安全行为测试",
        "purpose": "验证工具在含有非法分支名的路径下获取差异时的安全性行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\invalid branch name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\invalid branch name\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      }
    ],
    "git_log": [
      {
        "case_name": "基本Git日志功能测试",
        "purpose": "验证git_log工具可以成功获取指定Git仓库的提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u5386\\u53f2\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_count\": 12, \"commits\": [{\"hash\": \"051a6dc763915d9f540492ce7183fa3ce8a8e5e2\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes. This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes.\"}, {\"hash\": \"044796dd0fa3705f21914ff226995adddc44812a\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"Commit with skip_dependent_steps=True\"}, {\"hash\": \"269b927d5b5deb47655b6a41fd61454c0a3a756d\", \"author\": \"pouchine\", \"date\": 1752351731, \"message\": \"Commit with default skip_dependent_steps\"}, {\"hash\": \"21c565f9158796aae29ce8954339612e30fc9433\", \"author\": \"pouchine\", \"date\": 1752351730, \"message\": \"Initial commit from test\"}, {\"hash\": \"5168c70449ae3e1d0701750a9a9b1b4d4797b1bb\", \"author\": \"pouchine\", \"date\": 1752350884, \"message\": \"\"}, {\"hash\": \"5bfaef4494222c3119cefb414a625999d6b9f4bf\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"fix: Update file@#$_and_emoji_\\ud83c\\udf89\"}, {\"hash\": \"2812bbafe2105d3f7940e5fcd7973950b585c76f\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"feat: Add new feature\"}, {\"hash\": \"4152bf972747f18ea5595ae99b40911fb82f6cff\", \"author\": \"pouchine\", \"date\": 1752350151, \"message...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2203字符，剩余703字符"
        },
        "execution_time": 0.4040052890777588,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数Git日志测试",
        "purpose": "使用默认 skip_dependent_steps 参数验证git_log工具获取提交历史功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u5386\\u53f2\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_count\": 12, \"commits\": [{\"hash\": \"051a6dc763915d9f540492ce7183fa3ce8a8e5e2\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes. This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes.\"}, {\"hash\": \"044796dd0fa3705f21914ff226995adddc44812a\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"Commit with skip_dependent_steps=True\"}, {\"hash\": \"269b927d5b5deb47655b6a41fd61454c0a3a756d\", \"author\": \"pouchine\", \"date\": 1752351731, \"message\": \"Commit with default skip_dependent_steps\"}, {\"hash\": \"21c565f9158796aae29ce8954339612e30fc9433\", \"author\": \"pouchine\", \"date\": 1752351730, \"message\": \"Initial commit from test\"}, {\"hash\": \"5168c70449ae3e1d0701750a9a9b1b4d4797b1bb\", \"author\": \"pouchine\", \"date\": 1752350884, \"message\": \"\"}, {\"hash\": \"5bfaef4494222c3119cefb414a625999d6b9f4bf\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"fix: Update file@#$_and_emoji_\\ud83c\\udf89\"}, {\"hash\": \"2812bbafe2105d3f7940e5fcd7973950b585c76f\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"feat: Add new feature\"}, {\"hash\": \"4152bf972747f18ea5595ae99b40911fb82f6cff\", \"author\": \"pouchine\", \"date\": 1752350151, \"message...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2203字符，剩余703字符"
        },
        "execution_time": 0.4809534549713135,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的Git日志测试",
        "purpose": "验证skip_dependent_steps=True时git_log工具的行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u5386\\u53f2\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"commit_count\": 12, \"commits\": [{\"hash\": \"051a6dc763915d9f540492ce7183fa3ce8a8e5e2\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes. This is a very long commit message that exceeds the normal length limit and tests how the system handles large input sizes.\"}, {\"hash\": \"044796dd0fa3705f21914ff226995adddc44812a\", \"author\": \"pouchine\", \"date\": 1752351732, \"message\": \"Commit with skip_dependent_steps=True\"}, {\"hash\": \"269b927d5b5deb47655b6a41fd61454c0a3a756d\", \"author\": \"pouchine\", \"date\": 1752351731, \"message\": \"Commit with default skip_dependent_steps\"}, {\"hash\": \"21c565f9158796aae29ce8954339612e30fc9433\", \"author\": \"pouchine\", \"date\": 1752351730, \"message\": \"Initial commit from test\"}, {\"hash\": \"5168c70449ae3e1d0701750a9a9b1b4d4797b1bb\", \"author\": \"pouchine\", \"date\": 1752350884, \"message\": \"\"}, {\"hash\": \"5bfaef4494222c3119cefb414a625999d6b9f4bf\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"fix: Update file@#$_and_emoji_\\ud83c\\udf89\"}, {\"hash\": \"2812bbafe2105d3f7940e5fcd7973950b585c76f\", \"author\": \"pouchine\", \"date\": 1752350883, \"message\": \"feat: Add new feature\"}, {\"hash\": \"4152bf972747f18ea5595ae99b40911fb82f6cff\", \"author\": \"pouchine\", \"date\": 1752350151, \"message...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2203字符，剩余703字符"
        },
        "execution_time": 0.4666633605957031,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径Git日志测试",
        "purpose": "验证git_log工具能否处理包含特殊字符的仓库路径",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\feature\\branch@#$_special"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\feature\\\\branch@#$_special\"}"
        },
        "execution_time": 0.003565549850463867,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径Git日志错误处理测试",
        "purpose": "验证git_log工具在提供无效路径时是否能正确抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\log"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\log\"}"
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": false
      },
      {
        "case_name": "只读路径Git日志安全测试",
        "purpose": "验证git_log工具在只读路径下是否能正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "隐藏路径Git日志功能测试",
        "purpose": "验证git_log工具能否在隐藏路径下获取提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径Git日志边界测试",
        "purpose": "验证git_log工具能否处理超长路径的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\long_branch_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\long_branch_name_1234567890123456789012345678901234567890\"}"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": true
      }
    ],
    "git_create_branch": [
      {
        "case_name": "基本分支创建测试",
        "purpose": "验证工具可以在已存在的Git仓库中成功创建一个新分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/basic-test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5206\\u652f feature/basic-test \\u521b\\u5efa\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"branch_name\": \"feature/basic-test\", \"created\": true}}"
        },
        "execution_time": 0.2124617099761963,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数分支创建测试",
        "purpose": "使用默认 skip_dependent_steps 参数值验证分支创建功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/default-skip"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5206\\u652f feature/default-skip \\u521b\\u5efa\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"branch_name\": \"feature/default-skip\", \"created\": true}}"
        },
        "execution_time": 0.18116116523742676,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的分支创建测试",
        "purpose": "验证 skip_dependent_steps=True 时工具能否正确处理分支创建",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/skip-deps",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5206\\u652f feature/skip-deps \\u521b\\u5efa\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"branch_name\": \"feature/skip-deps\", \"created\": true}}"
        },
        "execution_time": 0.15202116966247559,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符分支名称测试",
        "purpose": "验证工具是否支持包含特殊字符的分支名称",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/branch@#$_special"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f feature/branch@#$_special \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.014001846313476562,
        "is_functional_test": true
      },
      {
        "case_name": "超长分支名称边界测试",
        "purpose": "验证工具能否处理超长分支名称（极限测试）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/long_branch_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f feature/long_branch_name_1234567890123456789012345678901234567890 \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.011000633239746094,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径分支创建安全性测试",
        "purpose": "验证工具在提供无效路径时是否能正确抛出异常",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\create_branch",
          "branch_name": "feature/invalid-path"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\create_branch\"}"
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": false
      },
      {
        "case_name": "只读路径分支创建权限测试",
        "purpose": "验证工具在尝试向只读路径写入新分支时是否能正确拒绝操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check",
          "branch_name": "feature/readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "重复分支名称错误处理测试",
        "purpose": "验证工具在尝试创建已存在的分支名时是否能正确处理错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f master \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.007999420166015625,
        "is_functional_test": false
      }
    ],
    "git_checkout": [
      {
        "case_name": "基本分支切换测试",
        "purpose": "验证工具可以成功切换到指定的Git分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"GitCommandError\", \"message\": \"Git\\u547d\\u4ee4\\u6267\\u884c\\u5931\\u8d25: Cmd('git') failed due to: exit code(1)\\n  cmdline: git checkout master\\n  stderr: 'error: The following untracked working tree files would be overwritten by checkout:\\n\\t.git/HEAD\\nPlease move or remove them before you switch branches.\\nAborting'\"}"
        },
        "execution_time": 0.1876235008239746,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数分支切换测试",
        "purpose": "使用默认 skip_dependent_steps 参数验证分支切换功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "new-feature"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"GitCommandError\", \"message\": \"Git\\u547d\\u4ee4\\u6267\\u884c\\u5931\\u8d25: Cmd('git') failed due to: exit code(1)\\n  cmdline: git checkout new-feature\\n  stderr: 'error: The following untracked working tree files would be overwritten by checkout:\\n\\t.git/HEAD\\nPlease move or remove them before you switch branches.\\nAborting'\"}"
        },
        "execution_time": 0.1959991455078125,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的分支切换测试",
        "purpose": "验证 skip_dependent_steps=True 时的行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "skip-deps",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u5206\\u652f skip-deps \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符分支名切换测试",
        "purpose": "验证工具能否处理包含特殊字符的分支名称",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature\\branch@#$_special"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f feature\\\\branch@#$_special \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": true
      },
      {
        "case_name": "超长分支名切换测试",
        "purpose": "验证工具能否处理超长分支名",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "long_branch_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6210\\u529f\\u5207\\u6362\\u5230\\u5206\\u652f long_branch_name_1234567890123456789012345678901234567890\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\", \"branch_name\": \"long_branch_name_1234567890123456789012345678901234567890\", \"checked_out\": true}}"
        },
        "execution_time": 0.20733976364135742,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径切换错误处理测试",
        "purpose": "验证工具在提供无效 repo_path 时是否能正确抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\checkout",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\checkout\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的分支名切换错误处理测试",
        "purpose": "验证工具在尝试切换到不存在的分支时是否能抛出GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "non-existent-branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f non-existent-branch \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.008004903793334961,
        "is_functional_test": false
      },
      {
        "case_name": "只读仓库路径分支切换安全性测试",
        "purpose": "验证工具在尝试切换只读仓库的分支时能否正确拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check",
          "branch_name": "readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      }
    ],
    "git_diff": [
      {
        "case_name": "基本git_diff功能测试",
        "purpose": "验证工具可以正确比较两个提交之间的差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "master",
          "commit2": "new-feature"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u53d1\\u73b0\\u4e24\\u4e2a\\u63d0\\u4ea4\\u4e4b\\u95f4\\u7684\\u5dee\\u5f02\\u3002\"}"
        },
        "execution_time": 0.31482458114624023,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数的git_diff测试",
        "purpose": "验证在不提供 skip_dependent_steps 参数的情况下，工具是否能正常运行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "long_branch_name_1234567890123456789012345678901234567890",
          "commit2": "feature\\basic-test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e8c\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: feature\\\\basic-test\"}"
        },
        "execution_time": 0.22439980506896973,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的git_diff测试",
        "purpose": "验证当 skip_dependent_steps 设置为 True 时，工具的行为是否符合预期",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "feature\\new-test-branch",
          "commit2": "feature\\non-git-branch",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: feature\\\\new-test-branch\"}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符分支名的git_diff测试",
        "purpose": "验证工具能否处理包含特殊字符的分支名称进行差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "feature\\branch@#$_special",
          "commit2": "feature\\default-skip"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: feature\\\\branch@#$_special\"}"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "中文分支名的git_diff测试",
        "purpose": "验证工具是否支持使用中文命名的分支进行差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "feature\\中文_branch",
          "commit2": "feature\\skip-deps"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: feature\\\\\\u4e2d\\u6587_branch\"}"
        },
        "execution_time": 0.013997554779052734,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径的git_diff测试",
        "purpose": "验证工具在提供无效仓库路径时是否能正确抛出异常",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\diff",
          "commit1": "master",
          "commit2": "new-feature"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\diff\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希的git_diff测试",
        "purpose": "验证工具在提供无效提交哈希或分支名时是否能正确抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "invalid-commit-hash",
          "commit2": "another-invalid-commit"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: invalid-commit-hash\"}"
        },
        "execution_time": 0.006002902984619141,
        "is_functional_test": false
      },
      {
        "case_name": "只读仓库路径的git_diff安全测试",
        "purpose": "验证工具在尝试对只读路径下的仓库执行 diff 操作时的安全行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check",
          "commit1": "master",
          "commit2": "feature\\skip-deps"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\"}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": false
      }
    ],
    "git_reset": [
      {
        "case_name": "基本取消暂存测试",
        "purpose": "验证在已初始化的Git仓库中，可以成功取消暂存一个文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.jpeg \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.2884712219238281,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数取消暂存测试",
        "purpose": "验证 skip_dependent_steps 默认值为 False 时取消暂存功能正常工作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue.jpg \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.3542184829711914,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的取消暂存测试",
        "purpose": "验证 skip_dependent_steps 参数为 True 时的行为",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\saved_document.docx",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\saved_document.docx \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.3063480854034424,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符文件路径取消暂存测试",
        "purpose": "验证工具能否处理包含特殊字符的文件路径进行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\shape@#$_result.png \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.3613719940185547,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径取消暂存失败测试",
        "purpose": "验证工具对无效仓库路径的处理是否抛出 ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\for\\git\\reset",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\for\\\\git\\\\reset\"}"
        },
        "execution_time": 0.009000062942504883,
        "is_functional_test": false
      },
      {
        "case_name": "无效文件路径取消暂存错误处理测试",
        "purpose": "验证工具在提供无效文件路径时是否能正确抛出 ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\invalid\\path\\to\\nonexistent_file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\invalid\\\\path\\\\to\\\\nonexistent_file.txt \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.4545931816101074,
        "is_functional_test": false
      },
      {
        "case_name": "只读文件取消暂存安全测试",
        "purpose": "验证工具在尝试取消暂存只读文件时是否拒绝操作并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output.png \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.34668564796447754,
        "is_functional_test": false
      },
      {
        "case_name": "超长文件路径取消暂存边界测试",
        "purpose": "验证工具能否处理超长路径的文件进行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.3387610912322998,
        "is_functional_test": true
      }
    ],
    "git_show": [
      {
        "case_name": "基本提交显示测试",
        "purpose": "验证git_show工具能够成功显示指定提交的详细信息（使用有效仓库路径和提交哈希）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: e69de29bb2d1d6434b8b29ae775ad8c2e48c5391\"}"
        },
        "execution_time": 0.18998932838439941,
        "is_functional_test": true
      },
      {
        "case_name": "默认参数跳过依赖步骤测试",
        "purpose": "验证在未显式提供skip_dependent_steps参数时，默认值False是否生效并正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "a5ab2ef5d5e3f3f34c7fc27f839f555ff497f3cf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: a5ab2ef5d5e3f3f34c7fc27f839f555ff497f3cf\"}"
        },
        "execution_time": 0.19761061668395996,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤的提交显示测试",
        "purpose": "验证当skip_dependent_steps=True时，即使依赖步骤失败也能尝试继续执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "47e48c373183cadc768453fe4b7ae3c09a8b89b5",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: 47e48c373183cadc768453fe4b7ae3c09a8b89b5\"}"
        },
        "execution_time": 0.21115756034851074,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证当提供无效的仓库路径时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\invalid\\path\\to\\nonexistent\\.git",
          "commit_hash": "ca7e714b729f1d10c91464009ca11156244ee9e6"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\invalid\\\\path\\\\to\\\\nonexistent\\\\.git\"}"
        },
        "execution_time": 0.0035076141357421875,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希测试",
        "purpose": "验证当提供无效的提交哈希时是否抛出ValueError或GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "invalid_commit_hash_123456"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: invalid_commit_hash_123456\"}"
        },
        "execution_time": 0.00800466537475586,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符仓库路径测试",
        "purpose": "验证git_show能否处理包含特殊字符的仓库路径",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git@#$_special",
          "commit_hash": "a5b2226638e1261d27b580631c4014916ac86bee"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git@#$_special\"}"
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": true
      },
      {
        "case_name": "长提交哈希边界测试",
        "purpose": "验证git_show能否处理超长提交哈希字符串（虽然Git标准为40位，但需确保不会因长度异常崩溃）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391extra_chars"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: e69de29bb2d1d6434b8b29ae775ad8c2e48c5391extra_chars\"}"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      },
      {
        "case_name": "隐藏仓库路径提交显示测试",
        "purpose": "验证git_show能否在隐藏路径下的Git仓库中正确显示提交信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_git_repo",
          "commit_hash": "ed9655066d0b7446e63b05495e1ec51485f861bf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_git_repo\"}"
        },
        "execution_time": 0.009999513626098633,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 104
}