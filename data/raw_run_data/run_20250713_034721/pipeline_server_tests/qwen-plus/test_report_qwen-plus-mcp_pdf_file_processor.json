{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_pdf_file_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_pdf_file_processor/refined/server.py",
  "timestamp": "2025-07-13T04:10:48.518253",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merge multiple PDF files into a single PDF file.\n\n    Args:\n        input_files: List of paths to the PDF files to be merged.\n        output_file: Path where the merged PDF will be saved.\n\n    Returns:\n        A JSON string containing the operation status, merged file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_files": {
            "items": {},
            "title": "Input Files",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_files",
          "output_file"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extract specific pages from a PDF file and save them as a new PDF.\n\n    Args:\n        input_file: Path to the source PDF file.\n        page_numbers: List of page numbers to extract (1-based index).\n        output_file: Path where the extracted pages will be saved.\n\n    Returns:\n        A JSON string containing the operation status, extracted file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the extraction process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_file": {
            "title": "Input File",
            "type": "string"
          },
          "page_numbers": {
            "items": {},
            "title": "Page Numbers",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_file",
          "page_numbers",
          "output_file"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Search for PDF files matching a specific pattern in a given directory.\n\n    Args:\n        directory: Path to the directory to search in.\n        pattern: Regular expression pattern to match PDF filenames.\n\n    Returns:\n        A JSON string containing the operation status, list of matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Merge PDF files in a specific order based on a pattern.\n\n    Args:\n        directory: Path to the directory containing PDF files.\n        order_pattern: Pattern to determine the merge order (exact filename or partial match).\n        output_file: Path where the merged PDF will be saved.\n        exact_match: Boolean indicating whether to use exact match (True) or partial match (False).\n\n    Returns:\n        A JSON string containing the operation status, merged file path, matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_pattern": {
            "title": "Order Pattern",
            "type": "string"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          },
          "exact_match": {
            "default": false,
            "title": "Exact Match",
            "type": "boolean"
          }
        },
        "required": [
          "directory",
          "order_pattern",
          "output_file"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Find PDF files related to a target PDF based on filename patterns and content similarity.\n\n    Args:\n        target_file: Path to the target PDF file.\n        search_directory: Path to the directory to search for related files.\n\n    Returns:\n        A JSON string containing the operation status, related files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "target_file": {
            "title": "Target File",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          }
        },
        "required": [
          "target_file",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证工具能够成功合并两个有效的PDF文件并生成一个输出文件",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read PDF file D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.39208364486694336,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证工具能处理仅有一个输入文件的情况，即合并单个文件为自身",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.030145645141601562,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Input Files List",
        "purpose": "验证当输入文件列表为空时是否抛出ValueError",
        "args": {
          "input_files": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_input_merge.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.028800487518310547,
        "is_functional_test": false
      },
      {
        "case_name": "Non-PDF File in Input",
        "purpose": "验证工具在输入包含非PDF文件时是否正确失败",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_merge_attempt.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.023999452590942383,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output File Path",
        "purpose": "验证工具在提供无效输出路径（如只读目录或不存在的目录）时能否优雅失败",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\nonexistent\\path\\that\\doesnt\\exist\\merge_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.029705047607421875,
        "is_functional_test": false
      },
      {
        "case_name": "Merge with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时工具是否正常处理",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_@#$_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read PDF file D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.35443997383117676,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Large Number of PDFs",
        "purpose": "验证工具是否能处理大量PDF文件的合并操作",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\large_merge_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read PDF file D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.3304271697998047,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Write to Protected System Path",
        "purpose": "验证工具是否阻止写入系统受保护路径（如Windows系统目录）",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "C:\\Windows\\system32\\protected_merge_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.0280001163482666,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证工具能够成功提取PDF文件中的指定页面并生成新的PDF文件",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\extracted_basic.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\extracted_basic.pdf\"}"
        },
        "execution_time": 0.0367121696472168,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证工具能正确处理只提取一页的情况",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            3
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\extracted_single_page.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read input PDF D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.25988221168518066,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Page Numbers List",
        "purpose": "验证当页码列表为空时是否抛出ValueError",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_page_numbers_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least one page number must be specified for extraction\"}"
        },
        "execution_time": 0.021004199981689453,
        "is_functional_test": false
      },
      {
        "case_name": "Page Number Out of Range",
        "purpose": "验证当请求的页码超出PDF实际页数时是否返回错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            999
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\out_of_range_page_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Some page numbers are out of range (document has 7 pages): [999]\"}"
        },
        "execution_time": 0.030515670776367188,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input File Format",
        "purpose": "验证当输入文件不是PDF格式时是否返回错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_file_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid input file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.jpeg\"}"
        },
        "execution_time": 0.027004241943359375,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Write to Protected System Path",
        "purpose": "验证工具是否阻止写入系统受保护路径（如Windows系统目录）",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "C:\\Windows\\system32\\protected_extract_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to write extracted pages to C:\\\\Windows\\\\system32\\\\protected_extract_output.pdf: [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\protected_extract_output.pdf'\"}"
        },
        "execution_time": 0.062139034271240234,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output File Path",
        "purpose": "验证输出路径包含特殊字符时工具是否正常处理",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\extracted_@#$_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read input PDF D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.22734689712524414,
        "is_functional_test": true
      },
      {
        "case_name": "Nonexistent Input File",
        "purpose": "验证当输入文件不存在时是否返回错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nonexistent_input_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Input file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.024968862533569336,
        "is_functional_test": false
      }
    ],
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证工具能够成功搜索指定目录中符合正则表达式的PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"]}"
        },
        "execution_time": 0.05380821228027344,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Specific Pattern",
        "purpose": "验证工具能根据特定模式（如包含'paper'的PDF文件）正确搜索文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*paper.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.04999995231628418,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Empty Directory",
        "purpose": "验证在目标目录中没有匹配PDF文件时返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output",
          "pattern": "nonexistent.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.036000967025756836,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证当提供无效或不存在的目录路径时是否抛出ValueError",
        "args": {
          "directory": "D:\\invalid\\path\\that\\doesnt\\exist",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\invalid\\\\path\\\\that\\\\doesnt\\\\exist\"}"
        },
        "execution_time": 0.10799932479858398,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Regular Expression",
        "purpose": "验证当提供的正则表达式格式不合法时是否抛出ValueError",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*invalid_regex"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid regular expression pattern: *invalid_regex. Error: nothing to repeat at position 0\"}"
        },
        "execution_time": 12.434914350509644,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Search System Protected Path",
        "purpose": "验证工具是否阻止搜索系统受保护路径（如Windows系统目录）",
        "args": {
          "directory": "C:\\Windows\\system32",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.5815906524658203,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Special Characters in Pattern",
        "purpose": "验证工具能否处理包含特殊字符的正则表达式模式",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*rule\\d+\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"]}"
        },
        "execution_time": 0.21796298027038574,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Long Pattern",
        "purpose": "验证工具在使用非常长的正则表达式模式时的行为",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*(paper1|rule1|nature|empty_content_write|modules|present|re2|swe|test_mskanji|xue).*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"]}"
        },
        "execution_time": 0.11800622940063477,
        "is_functional_test": true
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic PDF Merge by Exact Match",
        "purpose": "验证工具能够基于精确匹配模式成功合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper1.pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_exact_match.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\merged_exact_match.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.09685921669006348,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with Partial Match Pattern",
        "purpose": "验证工具能使用部分匹配模式正确排序并合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "rule",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_partial_match.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to read PDF file D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf: EOF marker not found\"}"
        },
        "execution_time": 0.3493809700012207,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with Default Exact Match Value",
        "purpose": "验证工具在未指定exact_match参数时默认使用部分匹配",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_default_match.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\merged_default_match.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.09768128395080566,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Write to Protected System Path",
        "purpose": "验证工具是否阻止写入系统受保护路径（如Windows系统目录）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper1",
          "output_file": "C:\\Windows\\system32\\protected_merge_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: paper1\"}"
        },
        "execution_time": 0.04948782920837402,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证当提供无效的目录路径时工具是否返回错误",
        "args": {
          "directory": "D:\\nonexistent\\directory",
          "order_pattern": "pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_dir_merge.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: pdf\"}"
        },
        "execution_time": 0.04350709915161133,
        "is_functional_test": false
      },
      {
        "case_name": "No Matching Files Found",
        "purpose": "验证当没有文件符合order_pattern时工具是否返回错误",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "nonexistentfile",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\no_match_merge.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: nonexistentfile\"}"
        },
        "execution_time": 0.05530381202697754,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output File Path",
        "purpose": "验证输出路径包含特殊字符时工具是否正常处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\merged_@#$_output.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\merged_@#$_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.09125208854675293,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Empty PDF Files List",
        "purpose": "验证当匹配到空PDF列表时工具是否抛出适当错误",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "nonexistentpattern",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_merge.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: nonexistentpattern\"}"
        },
        "execution_time": 0.04730558395385742,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Related PDF Search",
        "purpose": "验证工具能够基于目标PDF文件在指定目录中成功查找相关PDF文件",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.7538557052612305,
        "is_functional_test": true
      },
      {
        "case_name": "Search Directory Does Not Exist",
        "purpose": "验证当搜索目录不存在时是否抛出ValueError",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\nonexistent\\directory"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.7306923866271973,
        "is_functional_test": false
      },
      {
        "case_name": "Target File Does Not Exist",
        "purpose": "验证当目标文件不存在时是否抛出ValueError",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Target file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.03599905967712402,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Target File Extension",
        "purpose": "验证当目标文件不是PDF格式时是否抛出ValueError",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid target file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.jpeg\"}"
        },
        "execution_time": 0.04300189018249512,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证当搜索目录为空时是否返回空列表（无相关文件）",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_dir\"}"
        },
        "execution_time": 0.037000417709350586,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in File Paths",
        "purpose": "验证路径包含特殊字符时能否正常处理",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$_output.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Target file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_@#$_output.pdf\"}"
        },
        "execution_time": 0.0839991569519043,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Traverse Up Directory Tree",
        "purpose": "验证工具是否阻止通过../进行目录遍历攻击",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.6793358325958252,
        "is_functional_test": false
      },
      {
        "case_name": "Large Number of Files in Search Directory",
        "purpose": "验证工具在搜索目录包含大量文件时的性能和稳定性",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\objects"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 1.4579288959503174,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 40
}