{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-13T04:05:51.007720",
  "tools": [
    {
      "name": "create_document",
      "description": "Creates a new Word document.\n\n    Args:\n        file_name (str): The name of the file to be created.\n\n    Returns:\n        A confirmation message indicating the document was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_name": {
            "title": "File Name",
            "type": "string"
          }
        },
        "required": [
          "file_name"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Opens an existing Word document.\n\n    Args:\n        file_path (str): The path to the document file.\n\n    Returns:\n        A confirmation message indicating the document was opened successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Saves the currently open Word document.\n\n    Args:\n        file_path (str): The path where the document should be saved.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Saves the currently open Word document with a new name or in a different location.\n\n    Args:\n        new_file_path (str): The new file path for saving the document.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "new_file_path": {
            "title": "New File Path",
            "type": "string"
          }
        },
        "required": [
          "new_file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Creates a copy of the currently open Word document.\n\n    Args:\n        copy_file_path (str): The file path where the copy should be saved.\n\n    Returns:\n        A confirmation message indicating the document copy was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "copy_file_path": {
            "title": "Copy File Path",
            "type": "string"
          }
        },
        "required": [
          "copy_file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Adds a paragraph to the document.\n\n    Args:\n        text (str): The text content of the paragraph.\n\n    Returns:\n        A confirmation message indicating the paragraph was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Adds a heading to the document.\n\n    Args:\n        text (str): The text content of the heading.\n        level (int): The level of the heading (e.g., 1 for main heading, 2 for subheading).\n\n    Returns:\n        A confirmation message indicating the heading was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Adds a table to the document.\n\n    Args:\n        rows (int): The number of rows in the table.\n        cols (int): The number of columns in the table.\n\n    Returns:\n        A confirmation message indicating the table was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Adds a page break to the document.\n\n    Returns:\n        A confirmation message indicating the page break was added successfully.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieves metadata about the document, such as the number of pages, paragraphs, and tables.\n\n    Returns:\n        A JSON string containing metadata about the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Searches for specific text within the document.\n\n    Args:\n        query (str): The text to search for.\n\n    Returns:\n        A JSON string of locations where the text was found.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Finds specific text in the document and replaces it with new text.\n\n    Args:\n        old_text (str): The text to find.\n        new_text (str): The text to replace it with.\n\n    Returns:\n        A confirmation message indicating the replacement was successful.\n    ",
      "args_schema": {
        "properties": {
          "old_text": {
            "title": "Old Text",
            "type": "string"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "old_text",
          "new_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Deletes a specified paragraph from the document.\n\n    Args:\n        paragraph_index (int): The index of the paragraph to delete.\n\n    Returns:\n        A confirmation message indicating the paragraph was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Deletes all instances of specified text from the document.\n\n    Args:\n        text_to_delete (str): The text to delete.\n\n    Returns:\n        A confirmation message indicating the text was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "text_to_delete": {
            "title": "Text To Delete",
            "type": "string"
          }
        },
        "required": [
          "text_to_delete"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Adds a new row to an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n\n    Returns:\n        A confirmation message indicating the row was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Deletes a row from an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row to delete.\n\n    Returns:\n        A confirmation message indicating the row was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edits the content of a specific cell in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row.\n        col_index (int): The index of the column.\n        new_content (str): The new content for the cell.\n\n    Returns:\n        A confirmation message indicating the cell was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merges cells in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        start_row (int): The starting row index for merging.\n        start_col (int): The starting column index for merging.\n        end_row (int): The ending row index for merging.\n        end_col (int): The ending column index for merging.\n\n    Returns:\n        A confirmation message indicating the cells were merged successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_col",
          "end_row",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Splits a table into two separate tables at a specified row.\n\n    Args:\n        table_index (int): The index of the table.\n        split_row_index (int): The row index where the split should occur.\n\n    Returns:\n        A confirmation message indicating the table was split successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "split_row_index": {
            "title": "Split Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "split_row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Sets the page margins for the document.\n\n    Args:\n        top (float): The top margin in inches.\n        bottom (float): The bottom margin in inches.\n        left (float): The left margin in inches.\n        right (float): The right margin in inches.\n\n    Returns:\n        A confirmation message indicating the margins were set successfully.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          }
        },
        "required": [
          "top",
          "bottom",
          "left",
          "right"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replaces the content of a section based on its title.\n\n    Args:\n        section_title (str): The title of the section to replace.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was replaced successfully.\n    ",
      "args_schema": {
        "properties": {
          "section_title": {
            "title": "Section Title",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "section_title",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edits a section of the document based on a keyword.\n\n    Args:\n        keyword (str): The keyword to locate the section.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create Document with Default Name",
        "purpose": "验证工具能使用默认文件名创建Word文档",
        "args": {
          "file_name": "new_document.docx"
        },
        "response": {
          "result": "Document 'new_document.docx' created successfully."
        },
        "execution_time": 0.012002229690551758,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Valid Custom Name",
        "purpose": "验证工具能使用指定的合法文件名创建Word文档",
        "args": {
          "file_name": "test_document.docx"
        },
        "response": {
          "result": "Document 'test_document.docx' created successfully."
        },
        "execution_time": 0.017002105712890625,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document in Test Directory",
        "purpose": "验证工具能在测试目录中创建文档",
        "args": {
          "file_name": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\created_doc.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\created_doc.docx' created successfully."
        },
        "execution_time": 0.01600813865661621,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document with Empty File Name",
        "purpose": "验证工具在空文件名输入时能否正确处理错误",
        "args": {
          "file_name": ""
        },
        "response": {
          "result": "Document '.docx' created successfully."
        },
        "execution_time": 0.0185239315032959,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Special Characters in File Name",
        "purpose": "验证工具是否支持特殊字符作为文件名",
        "args": {
          "file_name": "special@#$_document.docx"
        },
        "response": {
          "result": "Document 'special@#$_document.docx' created successfully."
        },
        "execution_time": 0.012000083923339844,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document in Read-only Directory",
        "purpose": "验证工具在目标路径为只读目录时是否能优雅地处理错误",
        "args": {
          "file_name": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx' created successfully."
        },
        "execution_time": 0.01600027084350586,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Maximum Length File Name",
        "purpose": "验证工具对最大长度文件名的支持情况",
        "args": {
          "file_name": "very_long_file_name_1234567890123456789012345678901234567890.docx"
        },
        "response": {
          "result": "Document 'very_long_file_name_1234567890123456789012345678901234567890.docx' created successfully."
        },
        "execution_time": 0.016004323959350586,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Hidden File Name",
        "purpose": "验证工具是否支持以隐藏文件形式创建文档",
        "args": {
          "file_name": ".hidden_document.docx"
        },
        "response": {
          "result": "Document '.hidden_document.docx' created successfully."
        },
        "execution_time": 0.013781309127807617,
        "is_functional_test": true
      }
    ],
    "open_document": [
      {
        "case_name": "Open Document with Valid File Path",
        "purpose": "验证工具能使用有效文件路径成功打开Word文档",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "Error opening document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc'"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document with Hidden File",
        "purpose": "验证工具是否支持打开隐藏的Word文档",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_file.txt"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_file.txt' does not exist."
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Non-existent Document",
        "purpose": "验证工具在尝试打开不存在的文档时能否正确处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx' does not exist."
        },
        "execution_time": 0.01799774169921875,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Special Characters in Path",
        "purpose": "验证工具是否支持包含特殊字符的文件路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$.txt"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$.txt' does not exist."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Read-only Document",
        "purpose": "验证工具在尝试打开只读文档时是否能正常响应",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_file.txt"
        },
        "response": {
          "result": "Error opening document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_file.txt'"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Maximum Length File Path",
        "purpose": "验证工具对最大长度文件路径的支持情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890.docx' does not exist."
        },
        "execution_time": 0.006993293762207031,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Directory as Document",
        "purpose": "验证工具是否能正确处理将目录作为文件路径输入的情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "Error opening document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\[Content_Types].xml'"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Open Document with Empty File Path",
        "purpose": "验证工具在空文件路径输入时能否正确处理错误",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "File '' does not exist."
        },
        "execution_time": 0.007999658584594727,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Valid Text",
        "purpose": "验证工具能够成功将有效文本段落添加到文档中",
        "args": {
          "text": "This is a valid paragraph of text to be added to the document."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005576610565185547,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "验证工具在空文本输入时是否能正确处理错误",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.008998394012451172,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具是否支持包含特殊字符的文本内容",
        "args": {
          "text": "This paragraph contains special characters like !@#$%^&*()_+{}[]:;\"'<>?,./`~"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.006001949310302734,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Maximum Length Text",
        "purpose": "验证工具对最大长度文本段落的支持情况",
        "args": {
          "text": "A very long paragraph consisting of exactly 65535 characters. This is a test to see how the system handles paragraphs at or near the maximum supported length. [REPEAT] This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length. This is a test to see how the system handles paragraphs at or near the maximum supported length."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Leading and Trailing Spaces",
        "purpose": "验证工具是否能够正确处理带有前导和尾随空格的文本",
        "args": {
          "text": "   This paragraph starts and ends with spaces.   "
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.006994724273681641,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Newline Characters",
        "purpose": "验证工具是否能够正确处理包含换行符的文本内容",
        "args": {
          "text": "This is line one.\nThis is line two.\r\nThis is line three."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.008001565933227539,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Hidden Control Characters",
        "purpose": "验证工具是否能够安全处理包含隐藏控制字符的文本",
        "args": {
          "text": "This paragraph contains hidden control characters like \u0000, \u001f, and ."
        },
        "response": {
          "result": "Error adding paragraph: All strings must be XML compatible: Unicode or ASCII, no NULL bytes or control characters"
        },
        "execution_time": 0.003996372222900391,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Null Input",
        "purpose": "验证工具在接收到空值（null）作为参数时能否正确处理错误",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0038738250732421875,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Default Level",
        "purpose": "验证工具能使用默认等级1添加标题",
        "args": {
          "text": "Main Title",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": true
      },
      {
        "case_name": "Add Subheading with Level 2",
        "purpose": "验证工具能使用等级2添加子标题",
        "args": {
          "text": "Sub Title",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Level",
        "purpose": "验证工具能处理最大支持的标题等级（例如6）",
        "args": {
          "text": "Level 6 Heading",
          "level": 6
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00899362564086914,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "验证工具在空文本输入时能否正确处理错误",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Special Characters in Text",
        "purpose": "验证工具是否支持包含特殊字符的标题文本",
        "args": {
          "text": "Header with @#$_&*! 特殊字符",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Invalid Level Below Minimum",
        "purpose": "验证工具在标题等级小于最小值（例如0）时能否正确处理错误",
        "args": {
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "Heading level must be between 1 and 9."
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level Above Maximum",
        "purpose": "验证工具在标题等级超过最大值（例如7）时能否正确处理错误",
        "args": {
          "text": "Invalid Level Heading",
          "level": 7
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Long Text",
        "purpose": "验证工具是否能处理超长标题文本",
        "args": {
          "text": "This is a very long heading text that exceeds normal length limits to test how the tool handles long strings in headings.",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Rows and Columns",
        "purpose": "验证工具在使用默认行数和列数时能否成功添加表格到文档",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Valid Rows and Columns",
        "purpose": "验证工具在最小有效行数和列数（1x1）时是否能正确添加表格",
        "args": {
          "rows": 1,
          "cols": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0060079097747802734,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Allowed Rows and Columns",
        "purpose": "验证工具是否支持最大允许的行数和列数（如100x100）",
        "args": {
          "rows": 100,
          "cols": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.02599191665649414,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Table with Zero Rows",
        "purpose": "验证工具在行数为零时是否能正确处理错误",
        "args": {
          "rows": 0,
          "cols": 3
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0060040950775146484,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Zero Columns",
        "purpose": "验证工具在列数为零时是否能正确处理错误",
        "args": {
          "rows": 3,
          "cols": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.004983663558959961,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Rows",
        "purpose": "验证工具在输入负值行数时是否能正确处理错误",
        "args": {
          "rows": -1,
          "cols": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Columns",
        "purpose": "验证工具在输入负值列数时是否能正确处理错误",
        "args": {
          "rows": 2,
          "cols": -1
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0050067901611328125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Large Number of Rows and Columns",
        "purpose": "验证工具在添加大尺寸表格（如50x50）时是否稳定",
        "args": {
          "rows": 50,
          "cols": 50
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.01077580451965332,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Open Document",
        "purpose": "验证工具可以在当前文档中成功添加分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Opening Document",
        "purpose": "验证在没有打开文档的情况下尝试添加分页符时是否能正确处理错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008168458938598633,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Read-only Document",
        "purpose": "验证在只读文档中添加分页符时是否能正确处理错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.006996870040893555,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Empty Document",
        "purpose": "验证在空文档中添加分页符是否能正常工作",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.011713981628417969,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break with Maximum Content",
        "purpose": "验证在文档内容达到极限时添加分页符是否仍能正常工作",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break with Special Characters in Document",
        "purpose": "验证在包含特殊字符的文档中添加分页符是否仍能正常工作",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008530378341674805,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Hidden Document",
        "purpose": "验证在隐藏文档中添加分页符是否仍能正常工作",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.00600433349609375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break with Unauthorized Access",
        "purpose": "验证在无权限写入文档时添加分页符是否能正确处理错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.010995864868164062,
        "is_functional_test": false
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info for Valid Created Document",
        "purpose": "验证工具能否正确获取一个已创建文档的元数据信息，包括页数、段落数和表格数量。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info After Opening Existing File",
        "purpose": "验证在打开一个已有文档后，能否正确获取该文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info Without Any Opened Document",
        "purpose": "验证在没有打开任何文档的情况下调用get_document_info是否能正确返回错误提示而非崩溃。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "Get Document Info for Large Document",
        "purpose": "验证工具能否正确处理大文档并返回其元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for Document with Special Characters",
        "purpose": "验证工具能否正确获取包含特殊字符的文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info in Read-only Mode",
        "purpose": "验证工具在只读模式下是否仍能获取文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for Hidden Document",
        "purpose": "验证工具是否支持获取隐藏文档的元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info with Maximum Length File Name",
        "purpose": "验证工具对最大长度文件名的文档是否能正常获取元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 22, \"tables\": 4}"
        },
        "execution_time": 0.005992412567138672,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search in Document",
        "purpose": "验证工具能否在已打开的文档中搜索指定文本并返回正确结果",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "[\"Paragraph 4\", \"Paragraph 14\"]"
        },
        "execution_time": 0.4075582027435303,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Case-sensitive Text",
        "purpose": "验证工具是否支持区分大小写的文本搜索",
        "args": {
          "query": "Test"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.3994748592376709,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-existent Text",
        "purpose": "验证工具在文档中搜索不存在的文本时能否正确响应",
        "args": {
          "query": "nonexistenttext"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.4086449146270752,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty Query",
        "purpose": "验证工具在空查询输入时能否正确处理错误",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[\"Paragraph 1\", \"Paragraph 2\", \"Paragraph 3\", \"Paragraph 4\", \"Paragraph 5\", \"Paragraph 6\", \"Paragraph 7\", \"Paragraph 8\", \"Paragraph 9\", \"Paragraph 10\", \"Paragraph 11\", \"Paragraph 12\", \"Paragraph 13\", \"Paragraph 14\", \"Paragraph 15\", \"Paragraph 16\", \"Paragraph 17\", \"Paragraph 18\", \"Paragraph 19\", \"Paragraph 20\", \"Paragraph 21\", \"Paragraph 22\", \"Table 1, Row 1, Cell 1\", \"Table 1, Row 1, Cell 2\", \"Table 1, Row 2, Cell 1\", \"Table 1, Row 2, Cell 2\", \"Table 2, Row 1, Cell 1\", \"Table 3, Row 1, Cell 1\", \"Table 3, Row 1, Cell 2\", \"Table 3, Row 1, Cell 3\", \"Table 3, Row 1, Cell 4\", \"Table 3, Row 1, Cell 5\", \"Table 3, Row 1, Cell 6\", \"Table 3, Row 1, Cell 7\", \"Table 3, Row 1, Cell 8\", \"Table 3, Row 1, Cell 9\", \"Table 3, Row 1, Cell 10\", \"Table 3, Row 1, Cell 11\", \"Table 3, Row 1, Cell 12\", \"Table 3, Row 1, Cell 13\", \"Table 3, Row 1, Cell 14\", \"Table 3, Row 1, Cell 15\", \"Table 3, Row 1, Cell 16\", \"Table 3, Row 1, Cell 17\", \"Table 3, Row 1, Cell 18\", \"Table 3, Row 1, Cell 19\", \"Table 3, Row 1, Cell 20\", \"Table 3, Row 1, Cell 21\", \"Table 3, Row 1, Cell 22\", \"Table 3, Row 1, Cell 23\", \"Table 3, Row 1, Cell 24\", \"Table 3, Row 1, Cell 25\", \"Table 3, Row 1, Cell 26\", \"Table 3, Row 1, Cell 27\", \"Table 3, Row 1, Cell 28\", \"Table 3, Row 1, Cell 29\", \"Table 3, Row 1, Cell 30\", \"Table 3, Row 1, Cell 31\", \"Table 3, Row 1, Cell 32\", \"Table 3, Row 1, Cell 33\", \"Table 3, Row 1, Cell 34\", \"Table 3, Row 1, Cell 35\", \"Table 3, Row 1, Cell 36\", \"Table 3, Row 1, Cell 37\", \"Table 3, Row 1, Cell 38\", \"Table 3,...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计347973字符，剩余346473字符"
        },
        "execution_time": 0.41495537757873535,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Special Characters",
        "purpose": "验证工具是否能正确搜索包含特殊字符的文本",
        "args": {
          "query": "@#$_special_text$#@"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.4024515151977539,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Maximum Length Query",
        "purpose": "验证工具对最大长度查询字符串的支持情况",
        "args": {
          "query": "very_long_query_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.4130594730377197,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Unopened Document",
        "purpose": "验证工具在未打开文档状态下尝试搜索时能否优雅地处理错误",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "[\"Paragraph 4\", \"Paragraph 14\"]"
        },
        "execution_time": 0.4066183567047119,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Search for Path Traversal String",
        "purpose": "验证工具是否能够安全处理路径穿越字符串，防止潜在的安全风险",
        "args": {
          "query": "../../etc/passwd"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.40757155418395996,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace in Document",
        "purpose": "验证工具能正确执行基本的查找和替换操作",
        "args": {
          "old_text": "hello",
          "new_text": "hi"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.3589897155761719,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Text Not Present in Document",
        "purpose": "验证当查找文本不存在时，工具是否能优雅处理",
        "args": {
          "old_text": "nonexistenttext",
          "new_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.35430479049682617,
        "is_functional_test": true
      },
      {
        "case_name": "Replace with Empty New Text",
        "purpose": "验证将文本替换为空字符串的操作是否被正确支持",
        "args": {
          "old_text": "test",
          "new_text": ""
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.3683037757873535,
        "is_functional_test": true
      },
      {
        "case_name": "Find Empty Text",
        "purpose": "验证尝试查找空字符串时的行为是否符合预期",
        "args": {
          "old_text": "",
          "new_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.185553789138794,
        "is_functional_test": false
      },
      {
        "case_name": "Replace With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的替换文本",
        "args": {
          "old_text": "placeholder",
          "new_text": "!@#$%^&*()_+=-`~[]{}|\\:;\"'<>,.?/"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.6038341522216797,
        "is_functional_test": true
      },
      {
        "case_name": "Long Text Replacement",
        "purpose": "验证对长字符串的查找和替换是否正常工作",
        "args": {
          "old_text": "This is a very long text that should be replaced due to the test case.",
          "new_text": "This is the replacement for a very long text string used for testing purposes."
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.5817477703094482,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Code Injection via Replacement",
        "purpose": "验证工具是否安全地处理可能的代码注入攻击向量（如命令注入）",
        "args": {
          "old_text": "inject",
          "new_text": "malicious_code; rm -rf /"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.5858392715454102,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Single Character Replacement",
        "purpose": "验证单个字符的查找和替换是否正常工作",
        "args": {
          "old_text": "a",
          "new_text": "z"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.623995304107666,
        "is_functional_test": true
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete First Paragraph from Document",
        "purpose": "验证工具能正确删除文档中的第一个段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0039675235748291016,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph from Document",
        "purpose": "验证工具能正确删除文档中的最后一个段落",
        "args": {
          "paragraph_index": 9
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.006971597671508789,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Middle Paragraph from Document",
        "purpose": "验证工具能正确删除文档中间位置的段落",
        "args": {
          "paragraph_index": 5
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Paragraph with Negative Index",
        "purpose": "验证工具在使用负数索引删除段落时能否正确处理错误",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.004967451095581055,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Paragraph with Out-of-Range Index",
        "purpose": "验证工具在段落索引超出范围时是否能优雅地处理错误",
        "args": {
          "paragraph_index": 20
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Zero Index in Empty Document",
        "purpose": "验证空文档中尝试删除第零段时是否能正确响应",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Delete System Paragraph via Injection",
        "purpose": "验证工具是否对非法输入（如特殊字符）进行有效校验，防止注入攻击",
        "args": {
          "paragraph_index": -2
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete Paragraph at Maximum Allowed Index",
        "purpose": "验证工具是否支持最大合法段落索引值的删除操作",
        "args": {
          "paragraph_index": 1000
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Text Successfully",
        "purpose": "验证工具能正确删除文档中指定的文本内容",
        "args": {
          "text_to_delete": "sample text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.5604190826416016,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Empty Text",
        "purpose": "验证当输入空文本时，工具是否能正确处理错误或无操作",
        "args": {
          "text_to_delete": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.752187967300415,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Special Characters in Text",
        "purpose": "验证工具能否删除包含特殊字符的文本",
        "args": {
          "text_to_delete": "@#$_special_text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.6104636192321777,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "验证当要删除的文本在文档中不存在时，工具是否能优雅地处理",
        "args": {
          "text_to_delete": "nonexistent_text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.634239673614502,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Maximum Length Text",
        "purpose": "验证工具对最大长度文本删除的支持情况",
        "args": {
          "text_to_delete": "very_long_text_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.5705962181091309,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Multilingual Text",
        "purpose": "验证工具能否正确删除多语言混合文本（如中文、日文等）",
        "args": {
          "text_to_delete": "测试删除中文文本"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.6212368011474609,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Hidden Text",
        "purpose": "验证工具能否正确识别并删除隐藏文本（如空白符或不可见字符）",
        "args": {
          "text_to_delete": "   hidden_text_with_spaces   "
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.6401617527008057,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text in Read-only Document",
        "purpose": "验证工具在尝试从只读文档中删除文本时是否能正确处理错误",
        "args": {
          "text_to_delete": "readonly_text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.6831486225128174,
        "is_functional_test": false
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table with Valid Index",
        "purpose": "验证工具能向索引有效的表格添加新行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.004256010055541992,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Maximum Index",
        "purpose": "验证工具能否处理最大合法表格索引值添加行",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Row with Negative Table Index",
        "purpose": "验证工具在负数表格索引输入时是否能正确处理错误",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Non-existent Table Index",
        "purpose": "验证工具对不存在的表格索引进行操作时是否能优雅地失败",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Boundary Minimum Index",
        "purpose": "验证工具对最小边界值（整数下限）的处理情况",
        "args": {
          "table_index": -2147483648
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row Using Zero-based Table Index",
        "purpose": "验证工具是否支持零作为表格索引值",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row with Special Characters in Index (Invalid Type)",
        "purpose": "验证工具是否能正确拒绝非整型参数输入",
        "args": {
          "table_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.005997896194458008,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Null Table Index",
        "purpose": "验证工具在空或无效索引输入时是否能正确处理错误",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Valid Row from Table",
        "purpose": "验证工具能正确删除表格中指定的有效行",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.3761305809020996,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Row with Invalid Table Index",
        "purpose": "验证工具在无效的表格索引下能否正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.33162927627563477,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Row with Invalid Row Index",
        "purpose": "验证工具在无效的行索引下能否正确处理错误",
        "args": {
          "table_index": 1,
          "row_index": -1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.652665376663208,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Row of Table",
        "purpose": "验证工具是否能正确删除表格中的第一行",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.985788106918335,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row of Table",
        "purpose": "验证工具是否能正确删除表格中的最后一行",
        "args": {
          "table_index": 1,
          "row_index": 4
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.09418988227844238,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Non-Existent Row",
        "purpose": "验证工具在尝试删除不存在的行时能否优雅地处理错误",
        "args": {
          "table_index": 2,
          "row_index": 10
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.7924811840057373,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row in High Index Table",
        "purpose": "验证工具是否支持高索引值的表格操作",
        "args": {
          "table_index": 99,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.31220054626464844,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check: Attempt to Inject Malicious Value",
        "purpose": "验证工具是否对非法输入进行安全过滤和拒绝执行",
        "args": {
          "table_index": 0,
          "row_index": "malicious_string"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 1 validation error for delete_table_rowArguments\nrow_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='malicious_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.3100299835205078,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Valid Cell in Table",
        "purpose": "验证工具可以成功编辑表格中一个有效单元格的内容",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.24101471900939941,
        "is_functional_test": true
      },
      {
        "case_name": "Edit First Cell of First Table",
        "purpose": "验证工具可以成功编辑第一个表格的第一个单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "New Header"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.23895716667175293,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Last Cell of Large Table",
        "purpose": "验证工具是否能正确处理大型表格的最后一个单元格编辑操作",
        "args": {
          "table_index": 3,
          "row_index": 9,
          "col_index": 5,
          "new_content": "End of Table"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.2395026683807373,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Empty Content",
        "purpose": "验证工具是否允许将单元格内容清空",
        "args": {
          "table_index": 1,
          "row_index": 2,
          "col_index": 1,
          "new_content": ""
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.3170158863067627,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Special Characters",
        "purpose": "验证工具是否支持在单元格中插入特殊字符",
        "args": {
          "table_index": 2,
          "row_index": 3,
          "col_index": 0,
          "new_content": "Special@#$_Content"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.5774304866790771,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Edit Cell with Invalid Table Index",
        "purpose": "验证工具是否能正确处理无效表格索引的情况",
        "args": {
          "table_index": -1,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Invalid Table"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.2248859405517578,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Edit Cell with Out-of-Bounds Row Index",
        "purpose": "验证工具是否能优雅地处理超出范围的行索引",
        "args": {
          "table_index": 0,
          "row_index": 100,
          "col_index": 0,
          "new_content": "Row Out of Bounds"
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.20351600646972656,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Edit Cell with Negative Column Index",
        "purpose": "验证工具是否能正确处理负数列索引的情况",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": -1,
          "new_content": "Negative Column"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.1347663402557373,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Cells in Valid Table Range",
        "purpose": "验证工具在有效表格范围内合并单元格的基本功能",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "验证工具处理单个单元格的合并操作时的行为",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 1,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.010002374649047852,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row",
        "purpose": "验证工具能否成功合并整行单元格",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_col": 0,
          "end_row": 2,
          "end_col": 5
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.005991935729980469,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column",
        "purpose": "验证工具能否成功合并整列单元格",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_col": 3,
          "end_row": 4,
          "end_col": 3
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.008628368377685547,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Rows and Columns",
        "purpose": "验证工具在跨越多个行和列的情况下正确合并单元格",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 3,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Merge with Invalid Table Index",
        "purpose": "验证工具在无效表格索引输入时是否能优雅地处理错误",
        "args": {
          "table_index": -1,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0070056915283203125,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Merge with End Before Start",
        "purpose": "验证工具在结束行列小于起始行列时是否能正确处理错误",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_col": 2,
          "end_row": 1,
          "end_col": 1
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.0069904327392578125,
        "is_functional_test": false
      },
      {
        "case_name": "Merge with Large Index Values",
        "purpose": "验证工具对大行/列索引值的支持情况",
        "args": {
          "table_index": 0,
          "start_row": 100,
          "start_col": 100,
          "end_row": 105,
          "end_col": 105
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Split Table at Valid Row Index",
        "purpose": "验证工具能够在指定的有效行索引处成功拆分表格",
        "args": {
          "table_index": 0,
          "split_row_index": 3
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "验证工具能够在表格的第一行进行拆分",
        "args": {
          "table_index": 1,
          "split_row_index": 0
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.006001710891723633,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "验证工具能够在表格的最后一行进行拆分",
        "args": {
          "table_index": 2,
          "split_row_index": 4
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.012997865676879883,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Split Table with Invalid Table Index",
        "purpose": "验证工具在无效表格索引下能否正确处理错误",
        "args": {
          "table_index": -1,
          "split_row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006990909576416016,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Split Table with Negative Row Index",
        "purpose": "验证工具在负数行索引下能否正确处理错误",
        "args": {
          "table_index": 0,
          "split_row_index": -1
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Split Table Beyond Row Range",
        "purpose": "验证工具在指定行索引超出表格行数范围时是否能正确处理错误",
        "args": {
          "table_index": 1,
          "split_row_index": 10
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.008097648620605469,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Maximum Allowed Row Index",
        "purpose": "验证工具在最大允许行索引处拆分表格时是否正常",
        "args": {
          "table_index": 2,
          "split_row_index": 2147483647
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.005034685134887695,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table in Read-only Document",
        "purpose": "验证工具在尝试拆分只读文档中的表格时是否能正确响应",
        "args": {
          "table_index": 0,
          "split_row_index": 2
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.007013559341430664,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证工具使用典型默认值设置页面边距的功能",
        "args": {
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.15378379821777344,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Page Margins",
        "purpose": "验证工具能够成功设置非默认的自定义页面边距",
        "args": {
          "top": 1.5,
          "bottom": 0.5,
          "left": 1.2,
          "right": 0.8
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.20221948623657227,
        "is_functional_test": true
      },
      {
        "case_name": "Set Minimum Valid Margins",
        "purpose": "验证工具接受最小合法边距值（接近零但不为负）",
        "args": {
          "top": 0.01,
          "bottom": 0.01,
          "left": 0.01,
          "right": 0.01
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.14357686042785645,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins",
        "purpose": "验证工具是否支持零值边距设置",
        "args": {
          "top": 0.0,
          "bottom": 0.0,
          "left": 0.0,
          "right": 0.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.1426396369934082,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Set Negative Margins",
        "purpose": "验证工具能否正确处理非法负数边距输入",
        "args": {
          "top": -0.5,
          "bottom": -0.5,
          "left": -0.5,
          "right": -0.5
        },
        "response": {
          "result": "Error setting page margins: value must be in range 0 to 18446744073709551615 inclusive, got -457200"
        },
        "execution_time": 0.1627197265625,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with High Precision Values",
        "purpose": "验证工具对高精度浮点数值的支持情况",
        "args": {
          "top": 1.23456789,
          "bottom": 0.98765432,
          "left": 1.11111111,
          "right": 0.88888888
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.1715531349182129,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins in Read-only Document",
        "purpose": "验证在只读文档上设置边距时是否能优雅地处理错误",
        "args": {
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.10932183265686035,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Special Character Input",
        "purpose": "验证工具是否能正确拒绝包含特殊字符而非数字的输入",
        "args": {
          "top": "abc",
          "bottom": "def",
          "left": "ghi",
          "right": "jkl"
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 4 validation errors for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nbottom\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='def', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='ghi', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nright\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='jkl', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.2708277702331543,
        "is_functional_test": false
      }
    ],
    "replace_section": [
      {
        "case_name": "Replace Existing Section with Valid Content",
        "purpose": "验证工具能正确替换文档中已存在的章节内容",
        "args": {
          "section_title": "Introduction",
          "new_content": "This is the updated introduction content."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.5077188014984131,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Nonexistent Section",
        "purpose": "验证工具在尝试替换不存在的章节时能否正确处理错误",
        "args": {
          "section_title": "NonExistentSection",
          "new_content": "This should not be inserted."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.4169604778289795,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Empty Content",
        "purpose": "验证工具是否允许用空内容替换现有章节",
        "args": {
          "section_title": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.3212778568267822,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Special Characters in Title",
        "purpose": "验证工具是否支持包含特殊字符的章节标题替换",
        "args": {
          "section_title": "Summary@#$_Special",
          "new_content": "Updated summary with special characters in title."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.33042025566101074,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section in Read-only Document",
        "purpose": "验证工具在只读文档中替换章节时是否能优雅处理错误",
        "args": {
          "section_title": "ReadOnlySection",
          "new_content": "Attempt to modify read-only document section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 4.422241449356079,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Null Parameters",
        "purpose": "验证工具在null参数输入时能否正确处理错误",
        "args": {
          "section_title": null,
          "new_content": null
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 2 validation errors for replace_sectionArguments\nsection_title\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nnew_content\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.37807273864746094,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Leading and Trailing Spaces in Title",
        "purpose": "验证工具是否能正确处理带有前导和后导空格的章节标题",
        "args": {
          "section_title": "   TrimmedTitle   ",
          "new_content": "Content for trimmed title."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.6212832927703857,
        "is_functional_test": true
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Edit Section with Valid Keyword and Content",
        "purpose": "验证工具能够使用有效的关键字和新内容成功编辑文档中的对应部分",
        "args": {
          "keyword": "introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.008007049560546875,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Empty Keyword",
        "purpose": "验证工具在关键字为空时能否正确处理错误",
        "args": {
          "keyword": "",
          "new_content": "This content should not be applied."
        },
        "response": {
          "result": "Section edited successfully."
        },
        "execution_time": 0.00853276252746582,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Empty New Content",
        "purpose": "验证工具在新内容为空时是否仍能执行编辑操作（视业务逻辑而定）",
        "args": {
          "keyword": "conclusion",
          "new_content": ""
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.008994340896606445,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Special Characters in Keyword",
        "purpose": "验证工具是否支持包含特殊字符的关键字进行匹配和编辑",
        "args": {
          "keyword": "results@2023#final",
          "new_content": "Updated results with special keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.013207197189331055,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Non-existent Keyword",
        "purpose": "验证工具在关键字不存在于文档中时是否能优雅地处理该情况",
        "args": {
          "keyword": "nonexistent_section",
          "new_content": "This should not be inserted."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.018862009048461914,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Maximum Length Keyword",
        "purpose": "验证工具对最大长度关键字的处理能力",
        "args": {
          "keyword": "very_long_keyword_1234567890123456789012345678901234567890",
          "new_content": "Content for very long keyword section."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.012714624404907227,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Hidden Keyword",
        "purpose": "验证工具是否能识别以点开头的隐藏关键字并进行编辑",
        "args": {
          "keyword": ".hidden_section",
          "new_content": "Updated hidden section content."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.007848978042602539,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Malformed Input (e.g., SQL Injection Attempt)",
        "purpose": "验证工具是否能有效防止SQL注入攻击或非法输入",
        "args": {
          "keyword": "test'; DROP TABLE documents;--",
          "new_content": "Injected content"
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.012363672256469727,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document to Default Path",
        "purpose": "验证工具能否将当前打开的文档保存到默认路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx'."
        },
        "execution_time": 0.04534649848937988,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Custom Valid Path",
        "purpose": "验证工具能否将文档保存到指定的有效自定义路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx'."
        },
        "execution_time": 0.037534475326538086,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in File Path",
        "purpose": "验证工具是否支持在文件路径中使用特殊字符进行保存",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document.docx'."
        },
        "execution_time": 0.03863120079040527,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document to Read-only Directory",
        "purpose": "验证工具在尝试保存到只读目录时是否能优雅地处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_document.docx'"
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Save Document with Empty File Path",
        "purpose": "验证工具在空文件路径输入时能否正确处理错误",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.007994890213012695,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Maximum Length File Path",
        "purpose": "验证工具对最大长度文件路径的支持情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890.docx'."
        },
        "execution_time": 0.03500103950500488,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document as Hidden File",
        "purpose": "验证工具是否支持以隐藏文件形式保存文档",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx'."
        },
        "execution_time": 0.03799843788146973,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document to Non-writable Directory",
        "purpose": "验证工具在目标目录不可写时是否能正确响应并提示错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\.lock\\locked_document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\.lock\\\\locked_document.docx'"
        },
        "execution_time": 0.009005546569824219,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document to New Location with Valid Path",
        "purpose": "验证工具能否将当前打开的Word文档保存到新的有效路径下",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx' successfully."
        },
        "execution_time": 0.4016268253326416,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Default Name in New Directory",
        "purpose": "验证工具是否能使用默认文件名将文档保存到新目录中",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_dir\\new_document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_dir\\\\new_document.docx'"
        },
        "execution_time": 0.3680438995361328,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in File Name",
        "purpose": "验证工具是否支持在新文件名中使用特殊字符",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document_saved.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document_saved.docx' successfully."
        },
        "execution_time": 0.35360097885131836,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document to Read-only Directory",
        "purpose": "验证工具在尝试将文档保存到只读目录时是否能优雅地处理错误",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_document.docx' successfully."
        },
        "execution_time": 0.40335822105407715,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Maximum Length File Path",
        "purpose": "验证工具对最大长度文件路径的支持情况",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx' successfully."
        },
        "execution_time": 0.22478389739990234,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document with Empty File Path",
        "purpose": "验证工具在空文件路径输入时能否正确处理错误",
        "args": {
          "new_file_path": ""
        },
        "response": {
          "result": "Document saved as '.docx' successfully."
        },
        "execution_time": 0.323519229888916,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document as Hidden File",
        "purpose": "验证工具是否支持将文档另存为隐藏文件",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx' successfully."
        },
        "execution_time": 0.24104523658752441,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Existing File Path",
        "purpose": "验证工具是否能覆盖保存到已存在的文件路径",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx' successfully."
        },
        "execution_time": 0.1726081371307373,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Create Document Copy with Valid Path",
        "purpose": "验证工具能否在指定有效路径下成功创建当前打开文档的副本",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx' successfully."
        },
        "execution_time": 0.5636661052703857,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Copy with Empty Path",
        "purpose": "验证工具在空文件路径输入时能否正确处理错误",
        "args": {
          "copy_file_path": ""
        },
        "response": {
          "result": "Document copy created at '.docx' successfully."
        },
        "execution_time": 0.3126037120819092,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy in Read-only Directory",
        "purpose": "验证工具在只读目录中是否能优雅地处理复制失败的情况",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png.docx' successfully."
        },
        "execution_time": 0.30518579483032227,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy with Special Characters in Path",
        "purpose": "验证工具是否支持包含特殊字符的复制路径",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document_saved.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_document_saved.docx' successfully."
        },
        "execution_time": 0.21082377433776855,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document Copy with Maximum Length File Path",
        "purpose": "验证工具对最大长度复制路径的支持情况",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx' successfully."
        },
        "execution_time": 0.2517383098602295,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Copy in Non-existent Directory",
        "purpose": "验证工具在目标目录不存在时能否正确处理错误",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir\\copy_document.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_dir\\\\copy_document.docx'"
        },
        "execution_time": 0.27509593963623047,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Create Document Copy with Invalid File Extension",
        "purpose": "验证工具在使用非法扩展名时是否拒绝操作",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_document.txt"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_document.txt.docx' successfully."
        },
        "execution_time": 0.35869503021240234,
        "is_functional_test": false
      },
      {
        "case_name": "Create Hidden Document Copy",
        "purpose": "验证工具是否支持创建隐藏形式的文档副本",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx' successfully."
        },
        "execution_time": 0.29112768173217773,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 175
}