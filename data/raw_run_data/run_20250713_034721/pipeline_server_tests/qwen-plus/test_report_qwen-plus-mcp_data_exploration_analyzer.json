{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_data_exploration_analyzer",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_data_exploration_analyzer/refined/server.py",
  "timestamp": "2025-07-13T04:11:23.116882",
  "tools": [
    {
      "name": "load_csv",
      "description": "\n    加载 CSV 文件数据并将其存储在内存中，支持多个数据集同时操作。\n\n    Args:\n        file_path: CSV 文件的路径。\n        dataset_name: 用于标识该数据集的名称（可选，默认为文件名）。\n\n    Returns:\n        一个包含状态、消息和数据集名称的 JSON 字符串。\n\n    示例:\n        load_csv(file_path=\"data.csv\", dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "dataset_name": {
            "default": null,
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "load_csvArguments",
        "type": "object"
      }
    },
    {
      "name": "run_script",
      "description": "\n    执行用户提供的 Python 数据分析脚本，支持使用 pandas、numpy、scipy、sklearn 和 statsmodels 等数据分析库，并将处理结果保存到内存中供后续操作。\n\n    Args:\n        script_code: 要执行的 Python 脚本代码。\n        dataset_name: 指定要使用的数据集名称。\n\n    Returns:\n        一个包含状态、脚本输出和处理后数据集名称的 JSON 字符串。\n\n    示例:\n        run_script(script_code=\"df.describe()\", dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "script_code": {
            "title": "Script Code",
            "type": "string"
          },
          "dataset_name": {
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "script_code",
          "dataset_name"
        ],
        "title": "run_scriptArguments",
        "type": "object"
      }
    },
    {
      "name": "generate_exploration_plan",
      "description": "\n    自动分析数据结构并生成数据探索计划，提供深度洞察的数据可视化建议。\n\n    Args:\n        dataset_name: 需要进行探索的数据集名称。\n\n    Returns:\n        一个包含状态、探索计划和可视化建议的 JSON 字符串。\n\n    示例:\n        generate_exploration_plan(dataset_name=\"my_dataset\")\n    ",
      "args_schema": {
        "properties": {
          "dataset_name": {
            "title": "Dataset Name",
            "type": "string"
          }
        },
        "required": [
          "dataset_name"
        ],
        "title": "generate_exploration_planArguments",
        "type": "object"
      }
    },
    {
      "name": "execute_visualization",
      "description": "\n    根据生成的数据探索计划执行数据可视化任务。\n\n    Args:\n        plan_id: 指定要执行的探索计划 ID。\n\n    Returns:\n        一个包含状态和可视化结果的 JSON 字符串。\n\n    示例:\n        execute_visualization(plan_id=\"exploration_plan_0001\")\n    ",
      "args_schema": {
        "properties": {
          "plan_id": {
            "title": "Plan Id",
            "type": "string"
          }
        },
        "required": [
          "plan_id"
        ],
        "title": "execute_visualizationArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "load_csv": [
      {
        "case_name": "加载有效CSV文件并使用默认数据集名称",
        "purpose": "验证工具能够正确加载一个有效的CSV文件，并使用默认的数据集名称（即文件名）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_mskanji.csv"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 93, in load_csv\\n    csv_data = f.read()\\n               ^^^^^^^^\\n  File \\\"<frozen codecs>\\\", line 322, in decode\\n  File \\\"C:\\\\Users\\\\PS\\\\.conda\\\\envs\\\\agent_lab\\\\Lib\\\\encodings\\\\utf_8_sig.py\\\", line 69, in _buffer_decode\\n    return codecs.utf_8_decode(input, errors, final)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\\n\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": true
      },
      {
        "case_name": "加载有效CSV文件并指定自定义数据集名称",
        "purpose": "验证工具能够正确加载一个有效的CSV文件，并允许用户指定自定义的数据集名称。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_mskanji.csv",
          "dataset_name": "custom_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 93, in load_csv\\n    csv_data = f.read()\\n               ^^^^^^^^\\n  File \\\"<frozen codecs>\\\", line 322, in decode\\n  File \\\"C:\\\\Users\\\\PS\\\\.conda\\\\envs\\\\agent_lab\\\\Lib\\\\encodings\\\\utf_8_sig.py\\\", line 69, in _buffer_decode\\n    return codecs.utf_8_decode(input, errors, final)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\\n\"}"
        },
        "execution_time": 0.007248401641845703,
        "is_functional_test": true
      },
      {
        "case_name": "尝试加载非CSV文件并验证错误处理",
        "purpose": "验证工具在尝试加载非CSV格式的文件时是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.00799703598022461,
        "is_functional_test": false
      },
      {
        "case_name": "尝试加载不存在的文件路径",
        "purpose": "验证工具在提供无效或不存在的文件路径时是否能正确处理错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.csv"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 文件 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.csv' 不存在。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 78, in load_csv\\n    raise FileNotFoundError(f\\\"文件 '{file_path}' 不存在。\\\")\\nFileNotFoundError: 文件 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.csv' 不存在。\\n\"}"
        },
        "execution_time": 0.007997751235961914,
        "is_functional_test": false
      },
      {
        "case_name": "加载带有特殊字符的数据集名称",
        "purpose": "验证工具是否支持在 dataset_name 参数中使用特殊字符。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_mskanji.csv",
          "dataset_name": "dataset_@#$_特殊"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 93, in load_csv\\n    csv_data = f.read()\\n               ^^^^^^^^\\n  File \\\"<frozen codecs>\\\", line 322, in decode\\n  File \\\"C:\\\\Users\\\\PS\\\\.conda\\\\envs\\\\agent_lab\\\\Lib\\\\encodings\\\\utf_8_sig.py\\\", line 69, in _buffer_decode\\n    return codecs.utf_8_decode(input, errors, final)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\\n\"}"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": true
      },
      {
        "case_name": "加载CSV文件并验证返回的JSON结构",
        "purpose": "验证工具返回的JSON是否符合预期结构，包含状态、消息和数据集名称字段。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_mskanji.csv",
          "dataset_name": "validation_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 93, in load_csv\\n    csv_data = f.read()\\n               ^^^^^^^^\\n  File \\\"<frozen codecs>\\\", line 322, in decode\\n  File \\\"C:\\\\Users\\\\PS\\\\.conda\\\\envs\\\\agent_lab\\\\Lib\\\\encodings\\\\utf_8_sig.py\\\", line 69, in _buffer_decode\\n    return codecs.utf_8_decode(input, errors, final)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte\\n\"}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "尝试使用空字符串作为数据集名称",
        "purpose": "验证工具是否接受空字符串作为 dataset_name 参数。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_mskanji.csv",
          "dataset_name": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 'dataset_name' 必须是有效的字符串。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 75, in load_csv\\n    raise ValueError(\\\"'dataset_name' 必须是有效的字符串。\\\")\\nValueError: 'dataset_name' 必须是有效的字符串。\\n\"}"
        },
        "execution_time": 0.0069959163665771484,
        "is_functional_test": true
      },
      {
        "case_name": "尝试加载隐藏的CSV文件",
        "purpose": "验证工具是否可以正确加载隐藏的CSV文件（例如以点开头的文件名）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"加载 CSV 时发生错误: 仅支持 CSV 文件格式。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 81, in load_csv\\n    raise ValueError(\\\"仅支持 CSV 文件格式。\\\")\\nValueError: 仅支持 CSV 文件格式。\\n\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      }
    ],
    "generate_exploration_plan": [
      {
        "case_name": "生成默认数据集的探索计划",
        "purpose": "验证工具能够为已加载的默认命名数据集生成有效的探索计划和可视化建议。",
        "args": {
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.28661394119262695,
        "is_functional_test": true
      },
      {
        "case_name": "生成自定义数据集的探索计划",
        "purpose": "验证工具能够为用户指定的自定义数据集名称生成探索计划和可视化建议。",
        "args": {
          "dataset_name": "custom_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'custom_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'custom_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.3008904457092285,
        "is_functional_test": true
      },
      {
        "case_name": "尝试使用空字符串作为数据集名称",
        "purpose": "验证工具是否正确拒绝空字符串作为 dataset_name 参数。",
        "args": {
          "dataset_name": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 'dataset_name' 必须是有效的字符串。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 239, in generate_exploration_plan\\n    raise ValueError(\\\"'dataset_name' 必须是有效的字符串。\\\")\\nValueError: 'dataset_name' 必须是有效的字符串。\\n\"}"
        },
        "execution_time": 0.16986846923828125,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为数据集名称进行探索",
        "purpose": "验证工具是否支持包含特殊字符的数据集名称，并能生成探索计划。",
        "args": {
          "dataset_name": "dataset_@#$_特殊"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'dataset_@#$_特殊' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'dataset_@#$_特殊' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.18937110900878906,
        "is_functional_test": true
      },
      {
        "case_name": "尝试为未加载的数据集生成探索计划",
        "purpose": "验证工具在尝试对未加载或不存在的数据集生成探索计划时是否返回错误。",
        "args": {
          "dataset_name": "nonexistent_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.15523505210876465,
        "is_functional_test": false
      },
      {
        "case_name": "生成最大长度数据集名称的探索计划",
        "purpose": "验证工具是否可以处理长字符串作为 dataset_name 并成功生成探索计划。",
        "args": {
          "dataset_name": "long_dataset_name_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'long_dataset_name_1234567890123456789012345678901234567890' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'long_dataset_name_1234567890123456789012345678901234567890' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.26958417892456055,
        "is_functional_test": true
      },
      {
        "case_name": "尝试为非CSV文件生成探索计划",
        "purpose": "验证工具是否拒绝为非CSV格式的数据集生成探索计划，确保参数一致性。",
        "args": {
          "dataset_name": "nature_image"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'nature_image' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'nature_image' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.43123555183410645,
        "is_functional_test": false
      },
      {
        "case_name": "测试并发请求下的探索计划生成",
        "purpose": "验证工具在高并发请求下仍能稳定生成探索计划，确保服务可靠性。",
        "args": {
          "dataset_name": "concurrent_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"生成探索计划时发生错误: 数据集 'concurrent_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 242, in generate_exploration_plan\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'concurrent_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.26393938064575195,
        "is_functional_test": false
      }
    ],
    "execute_visualization": [
      {
        "case_name": "执行有效探索计划的可视化",
        "purpose": "验证工具能够根据已生成的有效探索计划 ID 成功执行数据可视化任务并返回结果。",
        "args": {
          "plan_id": "exploration_plan_0001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'exploration_plan_0001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.2272024154663086,
        "is_functional_test": true
      },
      {
        "case_name": "使用无效或不存在的计划 ID 执行可视化",
        "purpose": "验证工具在提供无效或不存在的 plan_id 时是否能正确处理错误。",
        "args": {
          "plan_id": "invalid_plan_id_9999"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'invalid_plan_id_9999' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'invalid_plan_id_9999' 的探索计划。\\n\"}"
        },
        "execution_time": 0.1365194320678711,
        "is_functional_test": false
      },
      {
        "case_name": "尝试使用空字符串作为 plan_id",
        "purpose": "验证工具是否拒绝空字符串作为 plan_id 参数。",
        "args": {
          "plan_id": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 'plan_id' 必须是有效的字符串。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 379, in execute_visualization\\n    raise ValueError(\\\"'plan_id' 必须是有效的字符串。\\\")\\nValueError: 'plan_id' 必须是有效的字符串。\\n\"}"
        },
        "execution_time": 0.048313140869140625,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符的 plan_id 执行可视化",
        "purpose": "验证工具是否支持包含特殊字符的 plan_id，并能正确处理请求。",
        "args": {
          "plan_id": "plan_@#$_特殊"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'plan_@#$_特殊' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'plan_@#$_特殊' 的探索计划。\\n\"}"
        },
        "execution_time": 0.011597156524658203,
        "is_functional_test": false
      },
      {
        "case_name": "执行最大长度 plan_id 的可视化任务",
        "purpose": "验证工具是否可以处理长字符串作为 plan_id 并成功执行可视化。",
        "args": {
          "plan_id": "long_plan_id_1234567890123456789012345678901234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'long_plan_id_1234567890123456789012345678901234567890' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'long_plan_id_1234567890123456789012345678901234567890' 的探索计划。\\n\"}"
        },
        "execution_time": 0.007003307342529297,
        "is_functional_test": true
      },
      {
        "case_name": "并发请求下执行多个可视化任务",
        "purpose": "验证工具在高并发请求下仍能稳定执行可视化任务，确保服务可靠性。",
        "args": {
          "plan_id": "concurrent_plan_001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'concurrent_plan_001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'concurrent_plan_001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.015004158020019531,
        "is_functional_test": false
      },
      {
        "case_name": "尝试为未生成的计划执行可视化",
        "purpose": "验证工具在尝试对未生成或不存在的探索计划执行可视化时是否返回错误。",
        "args": {
          "plan_id": "nonexistent_plan"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'nonexistent_plan' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'nonexistent_plan' 的探索计划。\\n\"}"
        },
        "execution_time": 0.008978843688964844,
        "is_functional_test": false
      },
      {
        "case_name": "测试跨用户/会话的 plan_id 隔离性",
        "purpose": "验证工具是否能正确隔离不同用户或会话的探索计划 ID，防止越权访问。",
        "args": {
          "plan_id": "userA_plan_001"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行可视化时发生错误: 找不到 ID 为 'userA_plan_001' 的探索计划。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 389, in execute_visualization\\n    raise ValueError(f\\\"找不到 ID 为 '{plan_id}' 的探索计划。\\\")\\nValueError: 找不到 ID 为 'userA_plan_001' 的探索计划。\\n\"}"
        },
        "execution_time": 0.012007474899291992,
        "is_functional_test": false
      }
    ],
    "run_script": [
      {
        "case_name": "执行基本描述统计脚本",
        "purpose": "验证工具能够正确执行一个简单的 pandas 描述性统计脚本，并返回处理后的数据集。",
        "args": {
          "script_code": "df.describe()",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.007620811462402344,
        "is_functional_test": true
      },
      {
        "case_name": "使用 numpy 计算列平方",
        "purpose": "验证工具支持 numpy 操作，能对指定数据集的某一列进行平方运算并保存结果。",
        "args": {
          "script_code": "import numpy as np\ndf['new_col'] = np.square(df['col1'])",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.011123180389404297,
        "is_functional_test": true
      },
      {
        "case_name": "使用 sklearn 标准化数据",
        "purpose": "验证工具支持 sklearn 的预处理模块，对数据集进行标准化处理。",
        "args": {
          "script_code": "from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ndf_scaled = scaler.fit_transform(df)\ndf_scaled = pd.DataFrame(df_scaled, columns=df.columns)",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.010986328125,
        "is_functional_test": true
      },
      {
        "case_name": "使用 statsmodels 进行线性回归拟合",
        "purpose": "验证工具支持 statsmodels 库，能对数据集进行简单线性回归建模。",
        "args": {
          "script_code": "import statsmodels.api as sm\nX = df[['col1']]\ny = df['col2']\nX = sm.add_constant(X)\nmodel = sm.OLS(y, X).fit()",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.008610010147094727,
        "is_functional_test": true
      },
      {
        "case_name": "尝试执行恶意系统命令",
        "purpose": "测试工具是否阻止了任何潜在的系统命令注入攻击（如导入 os 并调用 system）。",
        "args": {
          "script_code": "import os\nos.system('rm -rf /')",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'test_mskanji' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.011664390563964844,
        "is_functional_test": false
      },
      {
        "case_name": "执行空脚本代码",
        "purpose": "验证工具在 script_code 参数为空时是否能正确抛出错误。",
        "args": {
          "script_code": "",
          "dataset_name": "test_mskanji"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 'script_code' 不能为空。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 144, in run_script\\n    raise ValueError(\\\"'script_code' 不能为空。\\\")\\nValueError: 'script_code' 不能为空。\\n\"}"
        },
        "execution_time": 0.007982254028320312,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效数据集名称执行脚本",
        "purpose": "验证工具在指定的数据集不存在时能否正确返回错误信息。",
        "args": {
          "script_code": "df.describe()",
          "dataset_name": "nonexistent_dataset"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"执行脚本时发生错误: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\qwen-plus\\\\mcp_data_exploration_analyzer\\\\refined\\\\server.py\\\", line 150, in run_script\\n    raise ValueError(f\\\"数据集 '{dataset_name}' 不存在，请先使用 load_csv 加载数据。\\\")\\nValueError: 数据集 'nonexistent_dataset' 不存在，请先使用 load_csv 加载数据。\\n\"}"
        },
        "execution_time": 0.010004043579101562,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 31
}