{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-financial_data_mcp_server",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/financial_data_mcp_server/refined/server.py",
  "timestamp": "2025-07-13T04:11:50.109657",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    Fetches income statements for a specified company.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n        reporting_period (str): Reporting period (e.g., 'annual', 'quarterly', 'TTM').\n        limit (int): Number of results to return.\n\n    Returns:\n        str: A JSON string containing income statement data.\n\n    Example:\n        >>> get_income_statements(stock_code=\"AAPL\", reporting_period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "reporting_period": {
            "title": "Reporting Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "reporting_period",
          "limit"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    Fetches balance sheets for a specified company.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n        reporting_period (str): Reporting period (e.g., 'annual', 'quarterly', 'TTM').\n        limit (int): Number of results to return.\n\n    Returns:\n        str: A JSON string containing balance sheet data.\n\n    Example:\n        >>> get_balance_sheets(stock_code=\"AAPL\", reporting_period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "reporting_period": {
            "title": "Reporting Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "reporting_period",
          "limit"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    Extracts cash flow statements for a specified company.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n        reporting_period (str): Reporting period (e.g., 'annual', 'quarterly', 'TTM').\n        limit (int): Number of results to return.\n\n    Returns:\n        str: A JSON string containing cash flow data.\n\n    Example:\n        >>> get_cash_flows(stock_code=\"AAPL\", reporting_period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "reporting_period": {
            "title": "Reporting Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "reporting_period",
          "limit"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    Queries historical stock prices for a specified range.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n        start_date (str): Start date for the historical price range (YYYY-MM-DD).\n        end_date (str): End date for the historical price range (YYYY-MM-DD).\n\n    Returns:\n        str: A JSON string containing historical stock price data.\n\n    Example:\n        >>> get_stock_prices(stock_code=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "stock_code",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    Retrieves financial news related to companies or markets.\n\n    Args:\n        company_identifier (str): Identifier for the company/market.\n\n    Returns:\n        str: A JSON string containing relevant news articles.\n\n    Example:\n        >>> get_market_news(company_identifier=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "company_identifier": {
            "title": "Company Identifier",
            "type": "string"
          }
        },
        "required": [
          "company_identifier"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    Retrieves company profiles including industry and location details.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing company profile information.\n\n    Example:\n        >>> get_company_profile(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    Fetches analyst estimates like target price and earnings forecasts.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing analyst predictions.\n\n    Example:\n        >>> get_analyst_estimates(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    Gets dividend history for a specified company.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing dividend records.\n\n    Example:\n        >>> get_dividend_history(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    Queries stock split history for a specified company.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing stock split records.\n\n    Example:\n        >>> get_splits_history(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    Fetches historical earnings data including EPS.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing earnings data.\n\n    Example:\n        >>> get_earnings_history(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    Gets financial ratios such as P/E and Debt-to-Equity.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing financial ratios.\n\n    Example:\n        >>> get_financial_ratios(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    Retrieves ownership structure data like institutional holdings.\n\n    Args:\n        stock_code (str): Stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string containing ownership details.\n\n    Example:\n        >>> get_ownership_data(stock_code=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的公司资料",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的公司资料信息。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 2.0622150897979736,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.8368585109710693,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.829434871673584,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.7686970233917236,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.8417119979858398,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.953906536102295,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 使用数字股票代码",
        "purpose": "验证工具是否能接受纯数字形式的股票代码（如部分市场使用数字代码）。",
        "args": {
          "stock_code": "12345"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 2.078944206237793,
        "is_functional_test": true
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: An unexpected error occurred: "
        },
        "execution_time": 1.9724352359771729,
        "is_functional_test": true
      }
    ],
    "get_income_statements": [
      {
        "case_name": "基本功能测试 - 获取苹果公司年度收入报表",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的年度收入报表数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.7312028408050537,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取季度收入报表",
        "purpose": "验证工具能够正确处理'quarterly'作为报告周期参数并返回有效的季度收入报表数据。",
        "args": {
          "stock_code": "MSFT",
          "reporting_period": "quarterly",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.6441774368286133,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取TTM收入报表",
        "purpose": "验证工具能够正确处理'TTM'（Trailing Twelve Months）作为报告周期参数并返回对应数据。",
        "args": {
          "stock_code": "GOOGL",
          "reporting_period": "TTM",
          "limit": 1
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.5601365566253662,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.5857815742492676,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小限制值",
        "purpose": "验证工具是否能处理最小的limit值（例如0），并返回适当的响应。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.5579113960266113,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大限制值",
        "purpose": "验证工具是否能处理较大的limit值（例如100）并返回适当数量的数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.5244734287261963,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE income_statements;--",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.6015565395355225,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": "",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: An unexpected error occurred: "
        },
        "execution_time": 1.546069622039795,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "基本功能测试 - 获取苹果公司年度资产负债表",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的年度资产负债表数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5314934253692627,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取季度资产负债表",
        "purpose": "验证工具能够正确处理'quarterly'作为报告周期参数并返回有效的季度资产负债表数据。",
        "args": {
          "stock_code": "MSFT",
          "reporting_period": "quarterly",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5256998538970947,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取TTM资产负债表",
        "purpose": "验证工具能够正确处理'TTM'（Trailing Twelve Months）作为报告周期参数并返回对应数据。",
        "args": {
          "stock_code": "GOOGL",
          "reporting_period": "TTM",
          "limit": 1
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5824024677276611,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5522916316986084,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小限制值",
        "purpose": "验证工具是否能处理最小的limit值（例如0），并返回适当的响应。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5438382625579834,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大限制值",
        "purpose": "验证工具是否能处理较大的limit值（例如100）并返回适当数量的数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.6047048568725586,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE balance_sheets;--",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.7630894184112549,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": "",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: An unexpected error occurred: "
        },
        "execution_time": 1.5542335510253906,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "基本功能测试 - 获取苹果公司年度现金流报表",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的年度现金流量表数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.7953495979309082,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取季度现金流报表",
        "purpose": "验证工具能够正确处理'quarterly'作为报告周期参数并返回有效的季度现金流量表数据。",
        "args": {
          "stock_code": "MSFT",
          "reporting_period": "quarterly",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.894479513168335,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取TTM现金流报表",
        "purpose": "验证工具能够正确处理'TTM'（Trailing Twelve Months）作为报告周期参数并返回对应数据。",
        "args": {
          "stock_code": "GOOGL",
          "reporting_period": "TTM",
          "limit": 1
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.8189573287963867,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.9244449138641357,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小限制值",
        "purpose": "验证工具是否能处理最小的limit值（例如0），并返回适当的响应。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.875612497329712,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大限制值",
        "purpose": "验证工具是否能处理较大的limit值（例如100）并返回适当数量的数据。",
        "args": {
          "stock_code": "AAPL",
          "reporting_period": "annual",
          "limit": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 1.8954408168792725,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE cash_flows;--",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 2.6705334186553955,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": "",
          "reporting_period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: An unexpected error occurred: "
        },
        "execution_time": 2.0199244022369385,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的财务比率",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的财务比率信息。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5582244396209717,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.550283432006836,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5484247207641602,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.521092176437378,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5444684028625488,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5142569541931152,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 使用数字股票代码",
        "purpose": "验证工具是否能接受纯数字形式的股票代码（如部分市场使用数字代码）。",
        "args": {
          "stock_code": "12345"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5321269035339355,
        "is_functional_test": true
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: An unexpected error occurred: "
        },
        "execution_time": 1.5422179698944092,
        "is_functional_test": true
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的收益历史数据",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的历史收益数据。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.590965747833252,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的收益历史数据",
        "purpose": "验证工具能够成功获取另一个已知股票代码（如MSFT）的历史收益数据。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5949604511260986,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5623693466186523,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE earnings;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5221824645996094,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5375308990478516,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5461034774780273,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5575182437896729,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: An unexpected error occurred: "
        },
        "execution_time": 1.5460989475250244,
        "is_functional_test": true
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的分析师预测",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的分析师预测数据。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5822627544403076,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5519890785217285,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE analyst_estimates;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.550610065460205,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5246105194091797,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.544039249420166,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5209133625030518,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 使用数字股票代码",
        "purpose": "验证工具是否能接受纯数字形式的股票代码（如部分市场使用数字代码）。",
        "args": {
          "stock_code": "12345"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5467941761016846,
        "is_functional_test": true
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: An unexpected error occurred: "
        },
        "execution_time": 1.5280733108520508,
        "is_functional_test": true
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的标准日期范围股价数据",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）在指定日期范围内（2023-01-01至2023-12-31）的历史股价数据。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5322489738464355,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取MSFT在短日期范围内的股价数据",
        "purpose": "验证工具能够正确处理较短的时间范围（例如一周），并返回有效的历史股价数据。",
        "args": {
          "stock_code": "MSFT",
          "start_date": "2024-04-01",
          "end_date": "2024-04-07"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5476105213165283,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取空日期范围的默认行为",
        "purpose": "验证工具是否对空日期范围使用默认逻辑，例如自动填充最近30天或抛出明确错误提示。",
        "args": {
          "stock_code": "GOOGL",
          "start_date": "",
          "end_date": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5237541198730469,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止SQL注入攻击。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "'; DROP TABLE stock_prices;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5763201713562012,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误信息。",
        "args": {
          "stock_code": "XYZ123",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.529461145401001,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 开始日期晚于结束日期",
        "purpose": "验证工具是否能识别开始日期晚于结束日期的情况，并返回适当的错误信息。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2023-12-31",
          "end_date": "2023-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5738248825073242,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小日期范围",
        "purpose": "验证工具是否能处理最小的有效日期范围（如仅一天）。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2024-01-01",
          "end_date": "2024-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5720858573913574,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大日期范围",
        "purpose": "验证工具是否能处理最大可能的日期范围（如5年）。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2019-01-01",
          "end_date": "2024-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: An unexpected error occurred: "
        },
        "execution_time": 1.5463488101959229,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "基本功能测试 - 获取有效公司标识的市场新闻",
        "purpose": "验证工具能够成功获取一个已知公司标识（如AAPL）相关的市场新闻。",
        "args": {
          "company_identifier": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.5485656261444092,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用默认参数获取市场新闻",
        "purpose": "验证工具在未指定参数时是否使用默认值或合理行为，若无默认值则返回错误信息。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 1 validation error for get_market_newsArguments\ncompany_identifier\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名市场的新闻",
        "purpose": "验证工具能否通过市场标识符（如NASDAQ）获取相关市场新闻。",
        "args": {
          "company_identifier": "NASDAQ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.568455696105957,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止SQL注入攻击。",
        "args": {
          "company_identifier": "'; DROP TABLE market_news;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.5794403553009033,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效公司标识",
        "purpose": "验证工具在提供不存在或无效的公司标识时能否正确返回错误或空数据。",
        "args": {
          "company_identifier": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.5330286026000977,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为公司标识",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "company_identifier": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.5496759414672852,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短公司标识",
        "purpose": "验证工具是否能处理最短的有效公司标识，例如1个字符的代码（如果系统支持）。",
        "args": {
          "company_identifier": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.5531160831451416,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符处理",
        "purpose": "验证工具是否能正确处理包含特殊字符的公司标识，如@、#、$等，并返回合理的响应。",
        "args": {
          "company_identifier": "C0MP@NY#ID$"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: An unexpected error occurred: "
        },
        "execution_time": 1.529231071472168,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的股息历史",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的历史股息数据。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5628011226654053,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的股息历史",
        "purpose": "验证工具能够获取另一个已知股票代码（如MSFT）的历史股息数据。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.571932077407837,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误信息。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5300114154815674,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5766055583953857,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE dividends;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5461671352386475,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5204720497131348,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.541992425918579,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: An unexpected error occurred: "
        },
        "execution_time": 1.5705087184906006,
        "is_functional_test": true
      }
    ],
    "get_splits_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的拆股历史",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的拆股历史记录。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.6064727306365967,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误或空数据。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5668928623199463,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5448789596557617,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.524022102355957,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE splits;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5248010158538818,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5554475784301758,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 使用数字股票代码",
        "purpose": "验证工具是否能接受纯数字形式的股票代码（如部分市场使用数字代码）。",
        "args": {
          "stock_code": "12345"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5408830642700195,
        "is_functional_test": true
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: An unexpected error occurred: "
        },
        "execution_time": 1.5858430862426758,
        "is_functional_test": true
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的所有权数据",
        "purpose": "验证工具能够成功获取一个已知股票代码（如AAPL）的所有权结构数据。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.548187255859375,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的所有权数据",
        "purpose": "验证工具能够成功获取另一个已知股票代码（如MSFT）的所有权结构数据。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5367205142974854,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 无效股票代码",
        "purpose": "验证工具在提供不存在或无效的股票代码时能否正确返回错误信息。",
        "args": {
          "stock_code": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5284223556518555,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 特殊字符注入尝试",
        "purpose": "验证工具是否对特殊字符进行适当过滤或转义，防止注入攻击。",
        "args": {
          "stock_code": "'; DROP TABLE ownership;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5274274349212646,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最短股票代码",
        "purpose": "验证工具是否能处理最短的有效股票代码，例如1个字符的代码（如果系统支持）。",
        "args": {
          "stock_code": "A"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5644629001617432,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最长股票代码",
        "purpose": "验证工具是否能处理较长的股票代码（如5个字符），这是许多交易所支持的最大长度。",
        "args": {
          "stock_code": "ABCDE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5228886604309082,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 空字符串作为股票代码",
        "purpose": "验证工具是否能优雅处理空字符串输入并返回适当的错误信息。",
        "args": {
          "stock_code": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5684490203857422,
        "is_functional_test": false
      },
      {
        "case_name": "功能性测试 - 混合大小写的股票代码",
        "purpose": "验证工具是否能处理混合大小写的股票代码，例如 'aApL'，并正确识别对应公司。",
        "args": {
          "stock_code": "aApL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: An unexpected error occurred: "
        },
        "execution_time": 1.5632858276367188,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 96
}