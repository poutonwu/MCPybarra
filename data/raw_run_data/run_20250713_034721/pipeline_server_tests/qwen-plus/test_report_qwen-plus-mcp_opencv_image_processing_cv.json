{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_opencv_image_processing_cv",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_opencv_image_processing_cv/refined/server.py",
  "timestamp": "2025-07-13T04:16:20.458590",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    保存图片文件。\n\n    Args:\n        image_path: 源图像的文件路径 (必填)。\n        output_path: 目标保存路径 (必填)。\n\n    Returns:\n        包含成功或失败消息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果输出路径无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        save_image_tool(image_path=\"input.jpg\", output_path=\"output.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    调整图片尺寸。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        width: 新宽度，必须为正整数 (必填)。\n        height: 新高度，必须为正整数 (必填)。\n\n    Returns:\n        包含调整后的尺寸和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果宽度或高度不是正整数。\n        Exception: 对于其他意外错误。\n\n    示例:\n        resize_image_tool(image_path=\"input.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    裁剪图片区域。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        x: 裁剪区域左上角 x 坐标 (必填)。\n        y: 裁剪区域左上角 y 坐标 (必填)。\n        width: 裁剪区域宽度，必须为正整数 (必填)。\n        height: 裁剪区域高度，必须为正整数 (必填)。\n\n    Returns:\n        包含裁剪区域信息和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果坐标或尺寸无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        crop_image_tool(image_path=\"input.jpg\", x=100, y=100, width=400, height=300)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    获取图片统计信息。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n\n    Returns:\n        包含图像尺寸、颜色空间和像素值范围等信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        Exception: 对于其他意外错误。\n\n    示例:\n        get_image_stats_tool(image_path=\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    应用图像滤镜。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        filter_type: 滤镜类型（例如 \"gaussian\", \"median\"） (必填)。\n        kernel_size: 核大小，必须为正奇数 (必填)。\n\n    Returns:\n        包含应用的滤镜类型和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_filter_tool(image_path=\"input.jpg\", filter_type=\"gaussian\", kernel_size=5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    检测图像边缘。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        method: 边缘检测方法（例如 \"canny\"） (必填)。\n        threshold1: 第一个阈值，必须为非负整数 (必填)。\n        threshold2: 第二个阈值，必须为非负整数且大于第一个阈值 (必填)。\n\n    Returns:\n        包含检测到的边缘数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_edges_tool(image_path=\"input.jpg\", method=\"canny\", threshold1=100, threshold2=200)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "integer"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "method",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    进行阈值分割。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        threshold_value: 阈值，必须为非负整数 (必填)。\n        max_value: 最大值，必须为正整数且大于阈值 (必填)。\n\n    Returns:\n        包含应用的阈值和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_threshold_tool(image_path=\"input.jpg\", threshold_value=127, max_value=255)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "integer"
          },
          "max_value": {
            "title": "Max Value",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    检测图像轮廓。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        mode: 轮廓检索模式（例如 \"external\", \"tree\"） (必填)。\n        method: 轮廓近似方法（例如 \"simple\", \"chain_approx_none\"） (必填)。\n\n    Returns:\n        包含检测到的轮廓数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_contours_tool(image_path=\"input.jpg\", mode=\"external\", method=\"simple\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "mode",
          "method"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    查找图像形状。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        shape_type: 形状类型（例如 \"circle\", \"rectangle\"） (必填)。\n\n    Returns:\n        包含找到的形状数量和位置信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        find_shapes_tool(image_path=\"input.jpg\", shape_type=\"circle\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Stats for Valid JPEG",
        "purpose": "验证工具能正确获取有效JPEG图像的统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 1080, \"height\": 715, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Yellow)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 16, \"max\": 255, \"range\": 239}], \"total_pixels\": 2316600, \"memory_usage_kb\": 2262.3}}"
        },
        "execution_time": 0.024786710739135742,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Stats for Valid JPG",
        "purpose": "验证工具能正确获取有效JPG图像的统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.11312747001647949,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.16437840461730957,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Long File Name",
        "purpose": "验证工具能处理具有超长文件名的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_1234567890123456789012345678901234567890_saved.docx\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Chinese File Name",
        "purpose": "验证工具能处理中文文件名的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\中文_branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\\\u4e2d\\u6587_branch\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "File Not Found Error Handling",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      },
      {
        "case_name": "Access Readonly Image File",
        "purpose": "验证工具是否能处理只读图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.15451431274414062,
        "is_functional_test": false
      },
      {
        "case_name": "Access Hidden Image File",
        "purpose": "验证工具是否能处理隐藏图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      }
    ],
    "save_image_tool": [
      {
        "case_name": "Basic Image Save for Valid JPEG",
        "purpose": "验证工具能正确保存有效JPEG图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\saved_nature.jpeg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\saved_nature.jpeg\"}"
        },
        "execution_time": 0.008967876434326172,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Save for Valid JPG",
        "purpose": "验证工具能正确保存有效JPG图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.08099770545959473,
        "is_functional_test": true
      },
      {
        "case_name": "Image Save with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并成功保存",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Read-Only Output Path",
        "purpose": "验证工具在输出路径为只读时是否抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output.png\"}"
        },
        "execution_time": 0.28238630294799805,
        "is_functional_test": false
      },
      {
        "case_name": "Save Non-Existent Image File",
        "purpose": "验证当源图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\saved_image.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image to Invalid Output Path",
        "purpose": "验证当输出路径无效或不可写时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "output_path": "D:\\invalid\\path\\to\\save\\image.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\invalid\\\\path\\\\to\\\\save\\\\image.jpg\"}"
        },
        "execution_time": 0.0120391845703125,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image with Long File Name",
        "purpose": "验证工具能否处理超长文件名作为输出路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\"}"
        },
        "execution_time": 0.00869607925415039,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Hidden Output Path",
        "purpose": "验证工具能否将图像保存到隐藏目录中",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx\\saved.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to save image to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\\\\saved.jpg\"}"
        },
        "execution_time": 0.05864095687866211,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize for Valid JPEG",
        "purpose": "验证工具能正确调整有效JPEG图像的尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 800x600 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_resized.jpeg\"}"
        },
        "execution_time": 0.008353948593139648,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Resize for Valid JPG",
        "purpose": "验证工具能正确调整有效JPG图像的尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 1024x768 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.05503344535827637,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并成功调整尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.003997087478637695,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image to Long File Name Output",
        "purpose": "验证工具能否将调整后的图像保存为超长文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "width": 1920,
          "height": 1080
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 1920x1080 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_resized.jpeg\"}"
        },
        "execution_time": 0.017006635665893555,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Chinese File Name Image",
        "purpose": "验证工具能处理中文文件名的图像并调整尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\中文_branch",
          "width": 640,
          "height": 480
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\\\u4e2d\\u6587_branch\"}"
        },
        "execution_time": 0.011999845504760742,
        "is_functional_test": true
      },
      {
        "case_name": "File Not Found Error Handling",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.009004354476928711,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Width Value Handling",
        "purpose": "验证工具是否拒绝非正整数宽度值并抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "width": -100,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Width must be a positive integer, got -100\"}"
        },
        "execution_time": 0.011023998260498047,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Hidden Image File",
        "purpose": "验证工具是否能处理隐藏图像文件并调整尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\"}"
        },
        "execution_time": 0.010529041290283203,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop for Valid JPEG",
        "purpose": "验证工具能正确裁剪有效JPEG图像的指定区域",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "x": 100,
          "y": 100,
          "width": 400,
          "height": 300
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 400x300 at position (100, 100) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_cropped.jpeg\"}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Crop for Valid JPG",
        "purpose": "验证工具能正确裁剪有效JPG图像的指定区域",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 200,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 300x200 at position (200, 150) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.05151200294494629,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并成功裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Non-Existent Image File",
        "purpose": "验证当源图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Negative Coordinates",
        "purpose": "验证工具对负数坐标输入是否进行正确参数校验",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "x": -10,
          "y": 20,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"X coordinate must be non-negative integer, got -10\"}"
        },
        "execution_time": 0.008469581604003906,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Zero or Negative Dimensions",
        "purpose": "验证工具对宽度或高度为0或负数的输入是否进行正确参数校验",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 0,
          "y": 0,
          "width": 0,
          "height": -50
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Width must be a positive integer, got 0\"}"
        },
        "execution_time": 0.007102012634277344,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image Beyond Image Bounds",
        "purpose": "验证工具在裁剪区域超出图像尺寸时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "x": 1000,
          "y": 800,
          "width": 500,
          "height": 400
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Crop area (1000, 800, 500, 400) exceeds image dimensions (1080, 715)\"}"
        },
        "execution_time": 0.008621692657470703,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Read-Only Image File",
        "purpose": "验证工具是否能处理只读图像文件并成功裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 300x200 at position (100, 100) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output_cropped.png\"}"
        },
        "execution_time": 0.12016987800598145,
        "is_functional_test": true
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Apply Gaussian Filter with Valid Parameters",
        "purpose": "验证使用有效参数应用高斯滤镜的基本功能是否正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_gaussian_filtered.jpeg\"}"
        },
        "execution_time": 0.009999990463256836,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Median Filter with Valid Parameters",
        "purpose": "验证使用有效参数应用中值滤镜的基本功能是否正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied median filter with kernel size 3 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_median_filtered.jpg\"}"
        },
        "execution_time": 0.09035038948059082,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter on Image with Special Characters in Path",
        "purpose": "验证工具能否处理路径中包含特殊字符的图像文件并成功应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter with Invalid Kernel Size (Even Number)",
        "purpose": "验证当核大小为偶数时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got 4\"}"
        },
        "execution_time": 0.006519317626953125,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Invalid Kernel Size (Zero)",
        "purpose": "验证当核大小为0时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "median",
          "kernel_size": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got 0\"}"
        },
        "execution_time": 0.004995822906494141,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter on Non-Existent Image File",
        "purpose": "验证当源图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Unsupported Filter Type",
        "purpose": "验证当滤镜类型不支持时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "unsupported_filter",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid filter type: unsupported_filter. Supported types are ['gaussian', 'median', 'blur', 'bilateral']\"}"
        },
        "execution_time": 0.008773088455200195,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter on Hidden Image File",
        "purpose": "验证工具是否能处理隐藏图像文件并成功应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\"}"
        },
        "execution_time": 0.004804372787475586,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection with Canny Method",
        "purpose": "验证工具能使用默认参数正确检测图像边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 56513 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_edges_canny.jpeg\"}"
        },
        "execution_time": 0.012034416198730469,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on JPG Image",
        "purpose": "验证工具能处理JPG格式图像并检测边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 50,
          "threshold2": 150
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1371803 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.jpg\"}"
        },
        "execution_time": 0.11352658271789551,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "method": "canny",
          "threshold1": 80,
          "threshold2": 160
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.003995180130004883,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Read-Only File",
        "purpose": "验证工具能否处理只读图像文件并检测边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png",
          "method": "canny",
          "threshold1": 70,
          "threshold2": 140
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 185135 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output_edges_canny.png\"}"
        },
        "execution_time": 0.05104422569274902,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Long File Name",
        "purpose": "验证工具能否处理超长文件名的图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 56593 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_1234567890123456789012345678901234567890_saved_edges_canny.jpg\"}"
        },
        "execution_time": 0.012041568756103516,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Threshold Values",
        "purpose": "验证工具是否能正确处理无效阈值输入（threshold2 <= threshold1）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "method": "canny",
          "threshold1": 200,
          "threshold2": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold2 must be an integer greater than threshold1, got 100\"}"
        },
        "execution_time": 0.00595855712890625,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value",
        "purpose": "验证工具是否拒绝负数阈值输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": -10,
          "threshold2": 50
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold1 must be a non-negative integer, got -10\"}"
        },
        "execution_time": 0.008997440338134766,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Image File",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.006509304046630859,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Threshold Application for Valid JPEG",
        "purpose": "验证工具能正确对有效JPEG图像应用阈值分割",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_thresholded.jpeg\"}"
        },
        "execution_time": 0.014995336532592773,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Threshold Application for Valid JPG",
        "purpose": "验证工具能正确对有效JPG图像应用阈值分割",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.07585883140563965,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold Application with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并成功应用阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shape@#$_result.png",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 100 with max value 200 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\shape@#$_result_thresholded.png\"}"
        },
        "execution_time": 0.051087141036987305,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold on Long File Name",
        "purpose": "验证工具能否处理具有超长文件名的图像并应用阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_123456789012345678901234567890_saved.jpg",
          "threshold_value": 150,
          "max_value": 250
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 150 with max value 250 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_123456789012345678901234567890_saved_thresholded.jpg\"}"
        },
        "execution_time": 0.03869462013244629,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold on Chinese File Name",
        "purpose": "验证工具是否能处理中文文件名的图像并成功应用阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\中文_branch",
          "threshold_value": 120,
          "max_value": 230
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\\\u4e2d\\u6587_branch\"}"
        },
        "execution_time": 0.004510641098022461,
        "is_functional_test": true
      },
      {
        "case_name": "File Not Found Error Handling",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0069980621337890625,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Threshold Value - Negative Threshold",
        "purpose": "验证负数阈值是否引发ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "threshold_value": -10,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold value must be a non-negative integer, got -10\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Max Value Less Than Threshold",
        "purpose": "验证max_value小于threshold_value时是否引发ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 200,
          "max_value": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Max value must be an integer greater than threshold value, got 150\"}"
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection for Valid JPEG",
        "purpose": "验证工具能正确检测有效JPEG图像的轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 317 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_contours_external_simple.jpeg\"}"
        },
        "execution_time": 0.014550924301147461,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Contour Detection for Valid JPG",
        "purpose": "验证工具能正确检测有效JPG图像的轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "tree",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 17959 contours using mode 'tree' and method 'chain_approx_none', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_tree_chain_approx_none.jpg\"}"
        },
        "execution_time": 0.21195507049560547,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并成功检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection for Hidden Image File",
        "purpose": "验证工具是否能处理隐藏图像文件并检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx",
          "mode": "tree",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_saved_document.docx\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "File Not Found Error Handling",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.008001327514648438,
        "is_functional_test": false
      },
      {
        "case_name": "Access Readonly Image File for Contour Detection",
        "purpose": "验证工具是否能处理只读图像文件并成功检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png",
          "mode": "tree",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output.png\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Mode Parameter Handling",
        "purpose": "验证工具在传入无效mode参数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "mode": "invalid_mode",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour retrieval mode: invalid_mode. Supported modes are ['external', 'tree']\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Method Parameter Handling",
        "purpose": "验证工具在传入无效method参数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "invalid_method"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour approximation method: invalid_method. Supported methods are ['simple', 'chain_approx_none']\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection for Valid JPEG",
        "purpose": "验证工具能正确检测有效JPEG图像中的圆形形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Found 1073 circle shapes\", \"shapes\": [{\"type\": \"circle\", \"position\": {\"x\": 524, \"y\": 90}, \"radius\": 616}, {\"type\": \"circle\", \"position\": {\"x\": 510, \"y\": 68}, \"radius\": 641}, {\"type\": \"circle\", \"position\": {\"x\": 450, \"y\": 188}, \"radius\": 518}, {\"type\": \"circle\", \"position\": {\"x\": 520, \"y\": 24}, \"radius\": 687}, {\"type\": \"circle\", \"position\": {\"x\": 538, \"y\": 126}, \"radius\": 588}, {\"type\": \"circle\", \"position\": {\"x\": 512, \"y\": 138}, \"radius\": 573}, {\"type\": \"circle\", \"position\": {\"x\": 540, \"y\": 14}, \"radius\": 695}, {\"type\": \"circle\", \"position\": {\"x\": 566, \"y\": 52}, \"radius\": 659}, {\"type\": \"circle\", \"position\": {\"x\": 486, \"y\": 118}, \"radius\": 586}, {\"type\": \"circle\", \"position\": {\"x\": 518, \"y\": 48}, \"radius\": 646}, {\"type\": \"circle\", \"position\": {\"x\": 480, \"y\": 88}, \"radius\": 609}, {\"type\": \"circle\", \"position\": {\"x\": 450, \"y\": 14}, \"radius\": 696}, {\"type\": \"circle\", \"position\": {\"x\": 494, \"y\": 38}, \"radius\": 673}, {\"type\": \"circle\", \"position\": {\"x\": 564, \"y\": 170}, \"radius\": 541}, {\"type\": \"circle\", \"position\": {\"x\": 546, \"y\": 228}, \"radius\": 486}, {\"type\": \"circle\", \"position\": {\"x\": 542, \"y\": 48}, \"radius\": 661}, {\"type\": \"circle\", \"position\": {\"x\": 512, \"y\": 112}, \"radius\": 588}, {\"type\": \"circle\", \"position\": {\"x\": 508, \"y\": 272}, \"radius\": 440}, {\"type\": \"circle\", \"position\": {\"x\": 562, \"y\": 116}, \"radius\": 599}, {\"type\": \"circle\", \"position\": {\"x\": 518, \"y\": 188}, \"radius\": 523}, {\"type\": \"circle\", \"position\": {\"x\": 556, \"y\": 76}, \"radiu...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计73514字符，剩余72014字符"
        },
        "execution_time": 4.8054890632629395,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Shape Detection for Valid JPG",
        "purpose": "验证工具能正确检测有效JPG图像中的矩形形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Found 1 rectangle shapes\", \"shapes\": [{\"type\": \"rectangle\", \"position\": {\"x\": 0, \"y\": 0}, \"dimensions\": {\"width\": 3568, \"height\": 2416}}]}"
        },
        "execution_time": 0.10062050819396973,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with Special Character Path",
        "purpose": "验证工具能处理路径中包含特殊字符的图像文件并检测形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\branch@#$_special\\readonly_output.png",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\branch@#$_special\\\\readonly_output.png\"}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection for Chinese File Name",
        "purpose": "验证工具能处理中文文件名的图像文件并检测形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\refs\\heads\\feature\\中文_branch",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\refs\\\\heads\\\\feature\\\\\\u4e2d\\u6587_branch\"}"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": false
      },
      {
        "case_name": "File Not Found Error Handling",
        "purpose": "验证当图像文件不存在时，工具是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Access Readonly Image File",
        "purpose": "验证工具是否能处理只读图像文件并检测形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\readonly-check\\readonly_output.png",
          "shape_type": "rectangle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\readonly-check\\\\readonly_output.png\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Shape Type Error Handling",
        "purpose": "验证当传入无效形状类型时，工具是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "shape_type": "triangle"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Found 0 triangle shapes\", \"shapes\": []}"
        },
        "execution_time": 0.01399993896484375,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Name Shape Detection",
        "purpose": "验证工具能否处理超长文件名作为输入并成功检测形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg",
          "shape_type": "circle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_file_name_1234567890123456789012345678901234567890_saved.jpg\"}"
        },
        "execution_time": 0.006317853927612305,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 72
}