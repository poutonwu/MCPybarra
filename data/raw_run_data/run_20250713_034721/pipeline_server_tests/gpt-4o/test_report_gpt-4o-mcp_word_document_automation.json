{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-13T03:47:24.552056",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        str: A success message along with the path of the created document.\n\n    Example:\n        create_document()\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        file_path (str): Path to the Word document to open.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        open_document(\"example.docx\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently opened Word document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        save_document()\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently opened Word document under a new name.\n\n    Args:\n        new_file_path (str): The new file path for saving the document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        save_as_document(\"new_name.docx\")\n    ",
      "args_schema": {
        "properties": {
          "new_file_path": {
            "title": "New File Path",
            "type": "string"
          }
        },
        "required": [
          "new_file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently opened Word document.\n\n    Args:\n        copy_file_path (str): The file path for the copied document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        create_document_copy(\"copy_name.docx\")\n    ",
      "args_schema": {
        "properties": {
          "copy_file_path": {
            "title": "Copy File Path",
            "type": "string"
          }
        },
        "required": [
          "copy_file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text (str): The text content of the paragraph.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_paragraph(\"This is a paragraph.\")\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text (str): The text content of the heading.\n        level (int): Heading level (e.g., 1 for H1, 2 for H2).\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_heading(\"Chapter 1\", 1)\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows (int): Number of rows in the table.\n        columns (int): Number of columns in the table.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_table(3, 4)\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_page_break()\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证是否可以成功创建一个新的Word文档，使用默认参数",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.020000457763671875,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document and Verify File Path Format",
        "purpose": "验证新创建的Word文档返回的路径格式是否符合预期",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.024005413055419922,
        "is_functional_test": true
      },
      {
        "case_name": "Check If Created Document Is Accessible",
        "purpose": "验证创建的文档路径是否有效并能被访问（需结合文件系统测试）",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.026540756225585938,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Document Creation",
        "purpose": "验证多个用户/线程同时调用create_document时是否能正确处理而不冲突",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.03503704071044922,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation in Restricted Directory",
        "purpose": "验证在无写权限或受限目录中调用create_document时的行为是否安全",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.02853250503540039,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document With Invalid Parameters",
        "purpose": "验证当传入非法参数时工具是否能够正确拒绝请求并返回错误信息",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.022998571395874023,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document When Disk Space Is Full",
        "purpose": "验证磁盘空间不足时能否优雅地处理错误并返回提示信息",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.026000261306762695,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Name Boundary Test",
        "purpose": "验证创建具有超长文件名的文档时是否能正确处理（如255字符限制）",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.02200031280517578,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Basic Paragraph",
        "purpose": "验证是否可以成功向文档中添加一个基本段落",
        "args": {
          "text": "This is a basic paragraph."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "验证是否可以添加一个空字符串作为段落内容",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.015488147735595703,
        "is_functional_test": true
      },
      {
        "case_name": "Add Long Paragraph",
        "purpose": "验证是否能成功添加一个长文本段落（边界测试）",
        "args": {
          "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Special Characters",
        "purpose": "验证是否能正确处理包含特殊字符的段落内容",
        "args": {
          "text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/`~中文字符1234567890"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.0060062408447265625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Null Text",
        "purpose": "验证当传入null值时工具是否能够拒绝请求并返回错误信息",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003995418548583984,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph Without Required Parameter",
        "purpose": "验证当不提供必需参数'text'时是否能正确抛出错误",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph With Non-String Input",
        "purpose": "验证当传入非字符串类型参数时是否能正确拒绝请求",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph To Secured Document",
        "purpose": "验证在受保护或只读文档中添加段落时是否能正确处理权限限制",
        "args": {
          "text": "This should not be added to a read-only document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.008002519607543945,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Basic Heading H1",
        "purpose": "验证是否可以成功向文档中添加一个基本H1标题",
        "args": {
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Add Basic Heading H2",
        "purpose": "验证是否可以成功向文档中添加一个基本H2标题",
        "args": {
          "text": "Section 1.1",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.010001182556152344,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Heading",
        "purpose": "验证是否允许添加空字符串作为标题内容",
        "args": {
          "text": "",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.008998632431030273,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Special Characters",
        "purpose": "验证是否能正确处理包含特殊字符的标题内容",
        "args": {
          "text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/`~中文字符1234567890",
          "level": 4
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading Level Boundary Min",
        "purpose": "验证最小有效标题级别（如Level=1）是否正常工作",
        "args": {
          "text": "Minimum Level Heading",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading Level Boundary Max",
        "purpose": "验证最大有效标题级别（如Level=9）是否正常工作",
        "args": {
          "text": "Maximum Level Heading",
          "level": 9
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Invalid Level",
        "purpose": "验证当传入非法标题级别时是否能拒绝请求并返回错误信息",
        "args": {
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.0057070255279541016,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading Without Required Parameters",
        "purpose": "验证不提供必需参数'text'或'level'时是否抛出错误",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_heading: 2 validation errors for add_headingArguments\ntext\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nlevel\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Add Basic Table",
        "purpose": "验证是否可以成功向文档中添加一个基本表格（默认参数）",
        "args": {
          "rows": 2,
          "columns": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Zero Rows",
        "purpose": "验证当传入0作为行数时工具是否能正确拒绝请求并返回错误信息",
        "args": {
          "rows": 0,
          "columns": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table With Zero Columns",
        "purpose": "验证当传入0作为列数时工具是否能正确拒绝请求并返回错误信息",
        "args": {
          "rows": 4,
          "columns": 0
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.00799870491027832,
        "is_functional_test": false
      },
      {
        "case_name": "Add Large Table",
        "purpose": "验证是否能成功添加具有大量行列的表格（边界测试）",
        "args": {
          "rows": 100,
          "columns": 50
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.015000581741333008,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table With Negative Rows",
        "purpose": "验证当传入负数作为行数时工具是否能正确拒绝请求并返回错误信息",
        "args": {
          "rows": -1,
          "columns": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table With Negative Columns",
        "purpose": "验证当传入负数作为列数时工具是否能正确拒绝请求并返回错误信息",
        "args": {
          "rows": 3,
          "columns": -1
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.003002643585205078,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table Without Required Parameters",
        "purpose": "验证当不提供必需参数'rows'和'columns'时是否能正确抛出错误",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_table: 2 validation errors for add_tableArguments\nrows\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\ncolumns\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006005525588989258,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table With Non-Integer Parameters",
        "purpose": "验证当传入非整型参数时是否能正确拒绝请求并返回错误信息",
        "args": {
          "rows": "five",
          "columns": "five"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 2 validation errors for add_tableArguments\nrows\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='five', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing\ncolumns\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='five', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Document",
        "purpose": "验证是否可以成功向文档中添加一个分页符，使用默认参数",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Creating Document First",
        "purpose": "验证在未创建文档的情况下调用add_page_break是否会正确抛出错误或提示信息",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Read-Only Document",
        "purpose": "验证在只读或受保护的文档中添加分页符时是否能正确处理权限限制",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.008740425109863281,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break with Unexpected Parameters",
        "purpose": "验证当传入非法或意外参数时工具是否能够拒绝请求并返回错误信息",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Add Page Break Operations",
        "purpose": "验证多个用户/线程同时调用add_page_break时是否能正确处理而不冲突",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.005997180938720703,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Restricted Directory",
        "purpose": "验证在无写权限或受限目录中调用add_page_break时的行为是否安全",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Large Document",
        "purpose": "验证在包含大量内容的大型文档中添加分页符是否仍然有效（边界测试）",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break and Verify Document Structure",
        "purpose": "验证添加分页符后文档结构是否保持完整且分页位置正确",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证是否可以成功保存当前打开的Word文档，使用默认参数",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.03768038749694824,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Adding Content",
        "purpose": "验证在添加段落内容后保存文档是否仍有效",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.03505659103393555,
        "is_functional_test": true
      },
      {
        "case_name": "Save Unopened Document",
        "purpose": "验证未打开任何文档时调用save_document是否能正确处理错误",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.029656171798706055,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document In Restricted Directory",
        "purpose": "验证在无写权限目录中尝试保存文档时是否能安全拒绝并返回错误",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.02603602409362793,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Document Save",
        "purpose": "验证多个用户/线程同时调用save_document时是否能正确处理而不冲突",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.02952098846435547,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document When Disk Space Is Full",
        "purpose": "验证磁盘空间不足时能否优雅地处理错误并返回提示信息",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.030622005462646484,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Long File Path",
        "purpose": "验证保存具有超长文件路径的文档时是否能正确处理（如1024字符限制）",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.022035598754882812,
        "is_functional_test": true
      },
      {
        "case_name": "Save Secured Or Read-Only Document",
        "purpose": "验证尝试保存受保护或只读文档时是否能正确处理权限限制",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.023522615432739258,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Document",
        "purpose": "验证是否可以使用默认路径成功将当前打开的文档另存为新文件",
        "args": {
          "new_file_path": "saved_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.014000892639160156,
        "is_functional_test": true
      },
      {
        "case_name": "Save As With Existing File Path",
        "purpose": "验证当目标文件已存在时，是否能正确处理并返回错误或覆盖",
        "args": {
          "new_file_path": "existing_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"existing_document.docx\"}"
        },
        "execution_time": 0.020327091217041016,
        "is_functional_test": true
      },
      {
        "case_name": "Save As With Restricted Directory",
        "purpose": "验证在无写权限目录中保存文档时是否能安全拒绝操作并返回提示信息",
        "args": {
          "new_file_path": "C:\\Windows\\system32\\restricted_save.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\restricted_save.docx'\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Save As With Long File Name",
        "purpose": "验证保存具有超长文件名（如255字符）的文档是否能被正确处理",
        "args": {
          "new_file_path": "very_long_file_name_1234567890_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_very_long_extension.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"very_long_file_name_1234567890_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_very_long_extension.docx\"}"
        },
        "execution_time": 0.018002748489379883,
        "is_functional_test": false
      },
      {
        "case_name": "Save As With Special Characters",
        "purpose": "验证保存文档时支持特殊字符的文件名是否能被正确处理",
        "args": {
          "new_file_path": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/`~中文文件名.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 22] Invalid argument: '!@#$%^&*()_+{}[]|\\\\\\\\:;\\\"\\\\'<>,.?/`~\\u4e2d\\u6587\\u6587\\u4ef6\\u540d.docx'\"}"
        },
        "execution_time": 0.012263774871826172,
        "is_functional_test": true
      },
      {
        "case_name": "Save As Without New File Path",
        "purpose": "验证未提供必需参数'new_file_path'时是否能正确拒绝请求并返回错误信息",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_file_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": false
      },
      {
        "case_name": "Save As With Null File Path",
        "purpose": "验证传入null值作为文件路径时工具是否能够拒绝请求并返回错误信息",
        "args": {
          "new_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Save As To Network Path",
        "purpose": "验证是否能成功将文档保存到网络路径，测试跨系统文件访问能力",
        "args": {
          "new_file_path": "\\\\network_share\\save_as_network.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: '\\\\\\\\\\\\\\\\network_share\\\\\\\\save_as_network.docx'\"}"
        },
        "execution_time": 7.286548852920532,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证是否可以成功创建当前打开文档的副本，使用基本参数",
        "args": {
          "copy_file_path": "copy_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"copy_document.docx\"}"
        },
        "execution_time": 0.015987157821655273,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document With Full Path",
        "purpose": "验证是否可以使用完整路径创建文档副本",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\copy_document.docx\"}"
        },
        "execution_time": 0.019999265670776367,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document With Special Characters In File Name",
        "purpose": "验证是否能正确处理包含特殊字符的副本文件名",
        "args": {
          "copy_file_path": "copy_@#%&().docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"copy_@#%&().docx\"}"
        },
        "execution_time": 0.020891666412353516,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document To Restricted Directory",
        "purpose": "验证在无写权限或受限目录中调用create_document_copy时的行为是否安全",
        "args": {
          "copy_file_path": "C:\\Windows\\copy_document.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\copy_document.docx'\"}"
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Null File Path",
        "purpose": "验证当传入null值作为文件路径时工具是否能够拒绝请求并返回错误信息",
        "args": {
          "copy_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document Without Required Parameter",
        "purpose": "验证当不提供必需参数'copy_file_path'时是否能正确抛出错误",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_file_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document With Long File Name",
        "purpose": "验证创建具有超长文件名（如255字符）的副本文档时是否能正确处理",
        "args": {
          "copy_file_path": "aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnoooooooooopppppppppp.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnoooooooooopppppppppp.docx\"}"
        },
        "execution_time": 0.017513275146484375,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document When Disk Space Is Full",
        "purpose": "验证磁盘空间不足时能否优雅地处理错误并返回提示信息",
        "args": {
          "copy_file_path": "D:\\full_disk\\copy_document.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\full_disk\\\\\\\\copy_document.docx'\"}"
        },
        "execution_time": 0.0070095062255859375,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Open Document With Valid File Path",
        "purpose": "验证是否可以使用有效的文件路径成功打开一个已存在的Word文档",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.021002769470214844,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document With Nonexistent File",
        "purpose": "验证尝试打开一个不存在的Word文档时是否能正确处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx'\"}"
        },
        "execution_time": 0.0059967041015625,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Empty File Path",
        "purpose": "验证传入空字符串作为文件路径时是否能拒绝请求并返回错误信息",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"Package not found at ''\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Null File Path",
        "purpose": "验证传入null值作为文件路径时是否能正确拒绝请求并返回错误信息",
        "args": {
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool open_document: 1 validation error for open_documentArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Special Characters In Path",
        "purpose": "验证包含特殊字符的文件路径是否能被正确处理或拒绝",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#%&().docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#%&().docx'\"}"
        },
        "execution_time": 0.0050051212310791016,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document With Read-Only Access",
        "purpose": "验证尝试打开只读权限的Word文档时是否能正确处理权限限制",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc'\"}"
        },
        "execution_time": 0.004996299743652344,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document With Very Long File Path",
        "purpose": "验证超长文件路径（如超过255字符）是否能被正确处理或拒绝",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\longpath_12345678901234567890123456789012345678901234567890.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\longpath_12345678901234567890123456789012345678901234567890.docx'\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document From Restricted Directory",
        "purpose": "验证尝试从无访问权限的目录中打开文档时是否能安全地处理错误",
        "args": {
          "file_path": "C:\\Program Files\\Common Files\\test_restricted.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'C:\\\\Program Files\\\\Common Files\\\\test_restricted.docx'\"}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}