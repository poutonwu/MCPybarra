{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_zotero_library_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_zotero_library_manager/refined/server.py",
  "timestamp": "2025-07-13T03:53:09.853702",
  "tools": [
    {
      "name": "get_item_metadata",
      "description": "\n    Fetch detailed metadata of a Zotero item using its unique item key.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A JSON string containing item metadata, such as title, creators, publication year, and other bibliographic details.\n            Example:\n            {\n                \"title\": \"Sample Title\",\n                \"creators\": [\"John Doe\", \"Jane Smith\"],\n                \"year\": 2023,\n                \"publisher\": \"Sample Publisher\",\n                \"DOI\": \"10.1234/sample.doi\"\n            }\n\n    Raises:\n        ValueError: If the item key is invalid.\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_metadataArguments",
        "type": "object"
      }
    },
    {
      "name": "get_item_fulltext",
      "description": "\n    Extract the full text content of a Zotero item. If the item contains a PDF, extract text from the PDF file.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A string containing the extracted full text content of the item.\n            Example: \"This is the extracted full text content of the PDF associated with the Zotero item.\"\n\n    Raises:\n        ValueError: If the item key is invalid or no PDF attachment is found.\n        Exception: If the Zotero API call or PDF extraction fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_fulltextArguments",
        "type": "object"
      }
    },
    {
      "name": "search_items",
      "description": "\n    Search the Zotero library based on specified criteria and return a list of formatted search results.\n\n    Args:\n        title (str, optional): Search by title.\n            Example: \"Sample Title\"\n        creators (str, optional): Search by creators.\n            Example: \"John Doe\"\n        year (int, optional): Search by publication year.\n            Example: 2023\n        fulltext (str, optional): Perform a full-text search.\n            Example: \"Keyword\"\n\n    Returns:\n        str: A JSON string containing a list of dictionaries, each containing metadata for a matching item.\n            Example:\n            [\n                {\n                    \"title\": \"Sample Title\",\n                    \"creators\": [\"John Doe\", \"Jane Smith\"],\n                    \"year\": 2023,\n                    \"DOI\": \"10.1234/sample.doi\"\n                },\n                {\n                    \"title\": \"Another Title\",\n                    \"creators\": [\"Alice Johnson\"],\n                    \"year\": 2022,\n                    \"DOI\": \"10.5678/another.doi\"\n                }\n            ]\n\n    Raises:\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "default": null,
            "title": "Title",
            "type": "string"
          },
          "creators": {
            "default": null,
            "title": "Creators",
            "type": "string"
          },
          "year": {
            "default": null,
            "title": "Year",
            "type": "integer"
          },
          "fulltext": {
            "default": null,
            "title": "Fulltext",
            "type": "string"
          }
        },
        "title": "search_itemsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_items": [
      {
        "case_name": "Basic Title Search",
        "purpose": "验证工具可以通过标题搜索Zotero条目",
        "args": {
          "title": "Sample Title"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 2.3059468269348145,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Creator Search",
        "purpose": "验证工具可以通过作者搜索Zotero条目",
        "args": {
          "creators": "John Doe"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.1548492908477783,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Year Search",
        "purpose": "验证工具可以通过年份搜索Zotero条目",
        "args": {
          "year": 2023
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.9210128784179688,
        "is_functional_test": true
      },
      {
        "case_name": "Fulltext Keyword Search",
        "purpose": "验证工具可以通过全文关键词搜索Zotero条目",
        "args": {
          "fulltext": "Keyword"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 0.7328829765319824,
        "is_functional_test": true
      },
      {
        "case_name": "Combined Title and Creator Search",
        "purpose": "验证工具可以同时通过标题和作者进行组合搜索",
        "args": {
          "title": "Sample Title",
          "creators": "John Doe"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.7466785907745361,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Returns No Results",
        "purpose": "验证未提供任何参数时返回空结果",
        "args": {},
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 0.9352400302886963,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Fulltext Search",
        "purpose": "验证工具可以处理包含特殊字符的全文搜索关键词",
        "args": {
          "fulltext": "café@search#test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 0.9131565093994141,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Year Input Handling",
        "purpose": "验证工具对无效年份输入的处理",
        "args": {
          "year": -1
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.6949481964111328,
        "is_functional_test": false
      }
    ],
    "get_item_metadata": [
      {
        "case_name": "Basic Metadata Fetch",
        "purpose": "验证工具可以通过有效的item_key获取Zotero条目的元数据",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Item Key Handling",
        "purpose": "验证工具在提供无效item_key时抛出ValueError",
        "args": {
          "item_key": "invalid_key!"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key!'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0040051937103271484,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证工具在未提供item_key时的处理行为",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.007994413375854492,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "验证工具是否能正确处理包含特殊字符的item_key输入",
        "args": {
          "item_key": "KEY@WITH#SPECIAL$CHARACTERS"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@WITH#SPECIAL$CHARACTERS'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Long Item Key Boundary Test",
        "purpose": "验证工具对超长item_key的处理能力（边界测试）",
        "args": {
          "item_key": "A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - SQL Injection Attempt",
        "purpose": "验证工具是否安全地处理可能的SQL注入尝试作为item_key输入",
        "args": {
          "item_key": "ABC123XYZ'; DROP TABLE zotero_items; --"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'; DROP TABLE zotero_items; --'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Metadata Structure Validation",
        "purpose": "验证返回的元数据JSON结构是否符合预期格式",
        "args": {
          "item_key": "STRUCT_TEST_987"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'STRUCT_TEST_987'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": true
      },
      {
        "case_name": "Nonexistent Item Key",
        "purpose": "验证工具在请求不存在的item_key时的行为",
        "args": {
          "item_key": "NONEXISTENT_KEY_999"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXISTENT_KEY_999'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      }
    ],
    "get_item_fulltext": [
      {
        "case_name": "Basic Fulltext Extraction",
        "purpose": "验证工具可以通过有效的item_key提取Zotero条目的全文内容（假设该条目包含PDF附件）",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Item Key Format",
        "purpose": "验证工具在提供格式错误的item_key时抛出ValueError",
        "args": {
          "item_key": "invalid_key!"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key!'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0030035972595214844,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证工具在未提供item_key时的处理行为",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Item Without PDF Attachment",
        "purpose": "验证工具在指定item没有PDF附件时的行为，应抛出ValueError",
        "args": {
          "item_key": "NO_PDF_ITEM"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NO_PDF_ITEM'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "验证工具是否能正确处理包含特殊字符的item_key输入",
        "args": {
          "item_key": "KEY@WITH#SPECIAL$CHARACTERS"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@WITH#SPECIAL$CHARACTERS'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - SQL Injection Attempt",
        "purpose": "验证工具是否安全地处理可能的SQL注入尝试作为item_key输入",
        "args": {
          "item_key": "ABC123XYZ'; DROP TABLE zotero_items; --"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'; DROP TABLE zotero_items; --'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0070040225982666016,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Item Key",
        "purpose": "验证工具在请求不存在的item_key时的行为",
        "args": {
          "item_key": "NONEXISTENT_KEY_999"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXISTENT_KEY_999'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.006946086883544922,
        "is_functional_test": true
      },
      {
        "case_name": "Long Item Key Boundary Test",
        "purpose": "验证工具对超长item_key的处理能力（边界测试）",
        "args": {
          "item_key": "A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 24
}