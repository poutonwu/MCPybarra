{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_opencv_image_processing",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_opencv_image_processing/refined/server.py",
  "timestamp": "2025-07-13T03:51:40.641430",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "Saves an image to the file system in the desired format.\n\n    Args:\n        image_path (str): Path to the input image file.\n        output_path (str): Path to save the output image file.\n\n    Returns:\n        bool: True if the image is successfully saved, otherwise False.\n\n    Raises:\n        FileNotFoundError: If the input image file doesn't exist\n        ValueError: If the image can't be loaded or saved\n\n    Example:\n        save_image_tool(\"input.jpg\", \"output.png\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "Resizes the image to specific dimensions.\n\n    Args:\n        image_path (str): Path to the input image file.\n        width (int): The new width of the image. Must be positive.\n        height (int): The new height of the image. Must be positive.\n\n    Returns:\n        str: Path to the resized image file.\n\n    Raises:\n        ValueError: If width or height are not positive integers\n\n    Example:\n        resize_image_tool(\"input.jpg\", 800, 600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "Crops a specific rectangular region from the image.\n\n    Args:\n        image_path (str): Path to the input image file.\n        x (int): The x-coordinate of the top-left corner of the crop box.\n        y (int): The y-coordinate of the top-left corner of the crop box.\n        width (int): The width of the crop box. Must be positive.\n        height (int): The height of the crop box. Must be positive.\n\n    Returns:\n        str: Path to the cropped image file.\n\n    Raises:\n        ValueError: If any dimension parameters are invalid\n\n    Example:\n        crop_image_tool(\"input.jpg\", 10, 10, 100, 100)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "Retrieves basic statistics about the image, including dimensions and pixel intensity histograms.\n\n    Args:\n        image_path (str): Path to the input image file.\n\n    Returns:\n        str: JSON string containing dimensions and histogram data.\n\n    Example:\n        get_image_stats_tool(\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "Applies a specified filter to the image (e.g., Gaussian blur, median blur).\n\n    Args:\n        image_path (str): Path to the input image file.\n        filter_type (str): The type of filter to apply (\"gaussian\", \"median\", etc.).\n        kernel_size (int): The size of the kernel used for filtering. Must be odd and positive.\n\n    Returns:\n        str: Path to the filtered image file.\n\n    Raises:\n        ValueError: If filter_type is unsupported or kernel_size is invalid\n\n    Example:\n        apply_filter_tool(\"input.jpg\", \"gaussian\", 5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "Detects edges in the image using OpenCV's Canny edge detection algorithm.\n\n    Args:\n        image_path (str): Path to the input image file.\n        threshold1 (float): The first threshold for the hysteresis procedure.\n        threshold2 (float): The second threshold for the hysteresis procedure.\n\n    Returns:\n        str: Path to the edge-detected image file.\n\n    Example:\n        detect_edges_tool(\"input.jpg\", 50.0, 150.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "Applies a thresholding operation to the image.\n\n    Args:\n        image_path (str): Path to the input grayscale image file.\n        threshold_value (float): The threshold value.\n        max_value (float): The maximum value to assign to pixels exceeding the threshold.\n\n    Returns:\n        str: Path to the thresholded binary image file.\n\n    Example:\n        apply_threshold_tool(\"input.jpg\", 127.0, 255.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "Detects contours in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of contours.\n\n    Example:\n        detect_contours_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "Identifies and classifies simple geometric shapes (e.g., circles, squares) in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of detected shapes.\n\n    Example:\n        find_shapes_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具能够将图像文件以指定格式保存到指定路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.006508350372314453,
        "is_functional_test": true
      },
      {
        "case_name": "Image Save with Different Format",
        "purpose": "验证工具能够将图像保存为与原始格式不同的格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_image.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.2794208526611328,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正常保存图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#%&().png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.026038169860839844,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Non-Existent Directory",
        "purpose": "验证输出目录不存在时是否能正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_space_rocket.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_folder\\saved_image.png"
        },
        "response": {
          "result": "false"
        },
        "execution_time": 0.010004758834838867,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Save Non-Image File",
        "purpose": "验证尝试保存非图像文件时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.004502534866333008,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.00400996208190918,
        "is_functional_test": false
      },
      {
        "case_name": "Long Output File Path",
        "purpose": "验证工具是否能处理超长输出文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.bmp",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\longpath_12345678901234567890123456789012345678901234567890.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.023508071899414062,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否能覆盖已存在的输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.3684513568878174,
        "is_functional_test": true
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Statistics Retrieval",
        "purpose": "验证工具能够正确获取图像的基本统计信息，包括尺寸和像素直方图",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics with JPEG Format",
        "purpose": "验证工具能够处理JPEG格式图像并返回统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [66449.0, 24135.0, 28989.0, 31987.0, 25351.0, 24979.0, 25093.0, 28098.0, 30404.0, 32103.0, 33634.0, 34111.0, 34061.0, 33373.0, 32463.0, 33134.0, 33960.0, 34462.0, 35118.0, 34764.0, 34467.0, 34037.0, 35288.0, 36703.0, 37421.0, 37711.0, 38083.0, 38862.0, 38937.0, 39134.0, 39363.0, 39281.0, 39151.0, 38616.0, 38342.0, 37450.0, 37351.0, 37107.0, 36286.0, 36033.0, 35227.0, 34519.0, 33534.0, 32225.0, 31377.0, 30946.0, 31134.0, 31265.0, 31628.0, 32517.0, 32672.0, 32660.0, 32572.0, 32711.0, 31900.0, 31975.0, 31818.0, 31995.0, 31707.0, 31601.0, 31842.0, 31695.0, 31413.0, 31280.0, 31320.0, 31127.0, 30985.0, 30407.0, 30445.0, 30446.0, 30051.0, 29870.0, 29379.0, 28556.0, 27915.0, 27562.0, 27367.0, 26848.0, 26997.0, 26958.0, 26838.0, 27237.0, 26879.0, 26981.0, 26312.0, 25951.0, 25730.0, 25728.0, 25690.0, 25379.0, 24663.0, 24807.0, 24633.0, 23987.0, 23995.0, 24198.0, 23919.0, 23176.0, 23304.0, 23198.0, 23163.0, 22764.0, 22716.0, 22751.0, 22473.0, 22280.0, 22037.0, 22105.0, 21863.0, 21430.0, 21257.0, 21438.0, 21238.0, 21043.0, 20819.0, 20565.0, 20231.0, 20231.0, 20370.0, 19970.0, 19967.0, 19767.0, 19719.0, 19104.0, 18888.0, 18938.0, 18643.0, 18716.0, 18379.0, 18273.0, 17961.0, 17833.0, 17936.0, 17594.0, 17854.0, 17654.0, 17954.0, 18134.0, 17955.0, 18329.0, 17865.0, 18136.0, 18077.0, 18371.0, 18249.0, 18573.0, 18324.0, 18385.0, 18067.0, 17833.0, 17330.0, 17085.0, 16840.0, 16546.0, 16621.0, 16979.0, 17084.0, 17207.0, 17198.0, 17072.0, 16604.0, 16218...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2352字符，剩余852字符"
        },
        "execution_time": 0.06307339668273926,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics with BMP Format",
        "purpose": "验证工具能够处理BMP格式图像并返回统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.bmp"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.bmp\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics for Overwritten File",
        "purpose": "验证工具能否从已存在的输出文件路径中读取图像并生成统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_output.png\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics with Special Characters in Path",
        "purpose": "验证工具能否处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#%&().png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_@#%&().png\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证当输入图像文件不存在时是否能抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Read Non-Image File",
        "purpose": "验证尝试读取非图像文件时是否能抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Long Input File Path Handling",
        "purpose": "验证工具是否能处理超长输入文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\longpath_12345678901234567890123456789012345678901234567890.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\longpath_12345678901234567890123456789012345678901234567890.png\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具能够将图像文件按指定尺寸正常缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image with JPEG Format",
        "purpose": "验证工具支持JPEG格式图像的缩放操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.0845181941986084,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image to Zero Width",
        "purpose": "验证宽度为零时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "width": 0,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=600\"}"
        },
        "execution_time": 0.007002592086791992,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Negative Height",
        "purpose": "验证高度为负数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": -500
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=800, height=-500\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入图像文件不存在时是否能正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.010001420974731445,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Resize Non-Image File",
        "purpose": "验证尝试调整非图像文件大小时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.011738300323486328,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Maximum Allowed Dimensions",
        "purpose": "验证工具能否处理最大允许尺寸的图像缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "width": 32767,
          "height": 32767
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image with Special Characters in Input Path",
        "purpose": "验证输入路径包含特殊字符时是否能正常调整图像大小",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#%&().png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_@#%&().png\"}"
        },
        "execution_time": 0.012001752853393555,
        "is_functional_test": true
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop",
        "purpose": "验证工具能够正确裁剪图像的指定矩形区域（基本功能测试）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.06387472152709961,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Entire Image",
        "purpose": "验证工具能正确裁剪整个图像，即从(0,0)到最大尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "x": 0,
          "y": 0,
          "width": 1920,
          "height": 1080
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.01163625717163086,
        "is_functional_test": true
      },
      {
        "case_name": "Crop at Edge of Image",
        "purpose": "验证工具在图像边缘进行裁剪时的行为是否符合预期",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "x": 1900,
          "y": 1060,
          "width": 20,
          "height": 20
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.1366901397705078,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Negative X Coordinate",
        "purpose": "验证当X坐标为负值时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": -10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Coordinates cannot be negative. Received: x=-10, y=10\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Zero Width",
        "purpose": "验证当宽度为0时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "x": 10,
          "y": 10,
          "width": 0,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=100\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入图像文件不存在时是否能正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.008999109268188477,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Crop Non-Image File",
        "purpose": "验证尝试对非图像文件执行裁剪操作时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Crop with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否仍能成功保存裁剪后的图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 200
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.054999351501464844,
        "is_functional_test": true
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Filter Application with Gaussian",
        "purpose": "验证工具能够正确对图像应用高斯模糊滤波器，使用默认推荐参数进行基础功能测试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.08195257186889648,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Median Filter to Image",
        "purpose": "验证工具支持中值滤波器的应用，并能成功生成输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.011995792388916016,
        "is_functional_test": true
      },
      {
        "case_name": "Unsupported Filter Type Handling",
        "purpose": "验证工具在传入不支持的滤波类型时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "filter_type": "bilateral",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Unsupported filter type 'bilateral'. Supported filters: ['gaussian', 'median']\"}"
        },
        "execution_time": 0.006997585296630859,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Kernel Size - Even Number",
        "purpose": "验证工具拒绝偶数大小的核并抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"error\": \"Kernel size should be odd for OpenCV filters. Received: 4\"}"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Valid Kernel Size",
        "purpose": "验证工具接受最小合法核尺寸（1x1）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 1
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.0836629867553711,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Reasonable Kernel Size",
        "purpose": "验证工具处理较大但合理的核尺寸（如31x31）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "filter_type": "median",
          "kernel_size": 31
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.05700254440307617,
        "is_functional_test": true
      },
      {
        "case_name": "Image Path Does Not Exist",
        "purpose": "验证输入图像路径不存在时是否能正确抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证尝试对非图像文件应用滤波器时是否能正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection",
        "purpose": "验证工具能够使用默认阈值对图像进行边缘检测并生成结果文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.004987239837646484,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with JPEG Format",
        "purpose": "验证工具能够处理JPEG格式图像并正确执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.11000180244445801,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Special Characters in Path",
        "purpose": "验证输入路径包含特殊字符时是否能正常执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$.png\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Overwritten File",
        "purpose": "验证工具能否从已存在的输出文件路径中读取图像并执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_output.png\"}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Process Non-Image File",
        "purpose": "验证尝试对非图像文件执行边缘检测时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Low Threshold Edge Detection",
        "purpose": "验证使用较低阈值组合是否能正确执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "threshold1": 10.0,
          "threshold2": 30.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.014998674392700195,
        "is_functional_test": true
      },
      {
        "case_name": "High Threshold Edge Detection",
        "purpose": "验证使用较高阈值组合是否能正确执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "threshold1": 200.0,
          "threshold2": 255.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.16500425338745117,
        "is_functional_test": true
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Threshold Application",
        "purpose": "验证工具能够对输入灰度图像应用基本阈值操作并生成二值图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with JPEG Input",
        "purpose": "验证工具能够处理JPEG格式的灰度图像并正确应用阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 100.0,
          "max_value": 200.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.08299946784973145,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold Value at Maximum Range",
        "purpose": "验证最大阈值边界（等于最大像素值）是否能正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "threshold_value": 255.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.009000778198242188,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold Below Minimum Range",
        "purpose": "验证低于最小允许值的阈值是否被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "threshold_value": -10.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.15216350555419922,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证尝试对非图像文件进行阈值处理时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.007002830505371094,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正常保存结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "threshold_value": 150.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.007007122039794922,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing Binary Image",
        "purpose": "验证工具是否能覆盖已存在的输出二值图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.08025026321411133,
        "is_functional_test": true
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具能够正确检测图像中的轮廓并返回JSON格式结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection on JPEG Image",
        "purpose": "验证工具是否支持JPEG格式的图像进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.06085824966430664,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Special Characters in Path",
        "purpose": "验证路径中包含特殊字符时，轮廓检测功能是否仍能正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#%&().png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_@#%&().png\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入图像文件不存在时是否抛出错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.006996631622314453,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Detect Contours from Non-Image File",
        "purpose": "验证尝试从非图像文件（如文本文件）中检测轮廓时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Long Input File Path Handling",
        "purpose": "验证工具是否能处理超长输入文件路径的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\longpath_12345678901234567890123456789012345678901234567890.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\longpath_12345678901234567890123456789012345678901234567890.png\"}"
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours on Overwritten File Path",
        "purpose": "验证工具能否从已存在的输出文件路径中读取图像并检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_output.png\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt to Access Restricted System Files",
        "purpose": "验证工具是否限制访问系统级敏感文件（如.git目录下的文件）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection",
        "purpose": "验证工具能够正确识别并分类图像中的基本几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\thresholded_image.jpg\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with JPEG Format",
        "purpose": "验证工具是否支持JPEG格式图像的形状检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]}]}"
        },
        "execution_time": 0.06000018119812012,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with PNG Format",
        "purpose": "验证工具是否支持PNG格式图像的形状检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature.png\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.jpg\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Detect Shapes in Non-Image File",
        "purpose": "验证尝试在非图像文件上运行形状检测时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_test_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_test_output.txt\"}"
        },
        "execution_time": 0.007997989654541016,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#%&().png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_@#%&().png\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Long Input File Path Handling",
        "purpose": "验证工具是否能处理超长输入文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\longpath_12345678901234567890123456789012345678901234567890.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\longpath_12345678901234567890123456789012345678901234567890.png\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Access Sensitive System Files",
        "purpose": "验证工具是否安全地限制了对系统敏感文件的访问",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.007002592086791992,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}