{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_ssh_automation_manager",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_ssh_automation_manager/refined/server.py",
  "timestamp": "2025-07-16T11:00:43.418708",
  "tools": [
    {
      "name": "connect",
      "description": "\n    Establishes an SSH connection to a remote server.\n\n    Args:\n        hostname: The remote server's hostname or IP address.\n        username: The username for authentication.\n        password: The password for authentication (required if private_key is not provided).\n        private_key: The path to the private key file for authentication (required if password is not provided).\n        port: The SSH port (default: 22).\n\n    Returns:\n        A unique session_id for the active SSH session.\n\n    Raises:\n        ValueError: If neither password nor private_key is provided.\n        paramiko.AuthenticationException: If the authentication fails.\n        paramiko.SSHException: If the SSH connection fails for other reasons.\n    ",
      "args_schema": {
        "properties": {
          "hostname": {
            "default": "10.70.5.21",
            "title": "Hostname",
            "type": "string"
          },
          "username": {
            "default": "pengbocheng",
            "title": "Username",
            "type": "string"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "123456",
            "title": "Password"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Private Key"
          },
          "port": {
            "default": 26002,
            "title": "Port",
            "type": "integer"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "\n    Disconnects the specified SSH session and releases resources.\n\n    Args:\n        session_id: The unique identifier of the SSH session to disconnect.\n\n    Returns:\n        A status message indicating the session termination.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "\n    Lists all currently active SSH sessions.\n\n    Returns:\n        A list of dictionaries, each containing session_id, hostname, username, and status.\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "\n    Executes a command on the specified SSH session.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        command: The command to execute.\n        stdin: Standard input to pass to the command (default: None).\n        timeout: Maximum execution time in seconds (default: None for no timeout).\n\n    Returns:\n        A dictionary containing stdout, stderr, and exit_status.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the command execution fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Stdin"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Timeout"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "\n    Uploads a local file to a specified path on the remote SSH server.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        local_path: The path to the local file.\n        remote_path: The destination path on the remote server.\n\n    Returns:\n        A status message indicating the upload result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        FileNotFoundError: If the local file doesn't exist.\n        paramiko.SSHException: If the file upload fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "\n    Downloads a file from the remote SSH server to a specified local path.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        remote_path: The path to the file on the remote server.\n        local_path: The destination path on the local machine.\n\n    Returns:\n        A status message indicating the download result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the file download fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "成功建立SSH连接",
        "purpose": "验证使用默认参数可以成功建立SSH连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "result": "session_1"
        },
        "execution_time": 0.2283949851989746,
        "is_functional_test": true
      },
      {
        "case_name": "使用私钥建立SSH连接",
        "purpose": "验证使用私钥而非密码可以成功建立SSH连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "private_key": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\key.pem",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: Private key file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\key.pem"
        },
        "execution_time": 0.004049539566040039,
        "is_functional_test": true
      },
      {
        "case_name": "未提供认证信息导致错误",
        "purpose": "验证不提供密码或私钥时抛出ValueError",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": null,
          "private_key": null,
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: Either password or private_key must be provided."
        },
        "execution_time": 0.002505064010620117,
        "is_functional_test": false
      },
      {
        "case_name": "错误的主机名导致连接失败",
        "purpose": "验证使用无效主机名时工具正确处理连接失败",
        "args": {
          "hostname": "invalid.hostname.local",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno 11001] getaddrinfo failed"
        },
        "execution_time": 0.04016542434692383,
        "is_functional_test": false
      },
      {
        "case_name": "错误的端口导致连接失败",
        "purpose": "验证使用无效端口时工具正确处理连接失败",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 9999
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno None] Unable to connect to port 9999 on 10.70.5.21"
        },
        "execution_time": 2.049961566925049,
        "is_functional_test": false
      },
      {
        "case_name": "密码错误导致认证失败",
        "purpose": "验证错误密码时抛出paramiko.AuthenticationException",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "wrong_password",
          "port": 26002
        },
        "response": {
          "result": "session_2"
        },
        "execution_time": 0.226975679397583,
        "is_functional_test": false
      },
      {
        "case_name": "私钥路径不存在导致错误",
        "purpose": "验证指定的私钥文件不存在时工具能正确报错",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "private_key": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_key.pem",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: Private key file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_key.pem"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符在密码中处理",
        "purpose": "验证包含特殊字符的密码是否能被正常处理",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "!@#$%^&*()_+{}|:\"<>?~`",
          "port": 26002
        },
        "response": {
          "result": "session_3"
        },
        "execution_time": 0.225297212600708,
        "is_functional_test": true
      }
    ],
    "list_sessions": [
      {
        "case_name": "列出所有活动的SSH会话",
        "purpose": "验证list_sessions工具可以成功返回当前所有活动的SSH会话信息",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.00416874885559082,
        "is_functional_test": true
      },
      {
        "case_name": "无活动会话时返回空列表",
        "purpose": "验证当没有活动的SSH会话时，list_sessions返回一个空列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003513813018798828,
        "is_functional_test": true
      },
      {
        "case_name": "并发多会话查询",
        "purpose": "验证list_sessions在多个SSH会话同时存在时能正确返回所有会话信息",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.00401759147644043,
        "is_functional_test": true
      },
      {
        "case_name": "会话状态实时更新检查",
        "purpose": "验证list_sessions返回的会话状态是最新且准确的",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0030012130737304688,
        "is_functional_test": true
      },
      {
        "case_name": "敏感信息不泄露测试",
        "purpose": "验证list_sessions不会暴露任何敏感信息如密码或私钥",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0028121471405029297,
        "is_functional_test": false
      },
      {
        "case_name": "权限不足导致错误处理",
        "purpose": "验证用户权限不足时list_sessions能优雅地处理并返回错误信息",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "无效参数调用错误处理",
        "purpose": "验证调用list_sessions时传入非法参数能正确抛出参数异常",
        "args": {
          "invalid_param": "test"
        },
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符在会话ID中处理",
        "purpose": "验证list_sessions能够正确处理包含特殊字符的会话ID",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.004033088684082031,
        "is_functional_test": true
      }
    ],
    "execute": [
      {
        "case_name": "成功执行命令",
        "purpose": "验证使用有效session_id和简单命令可以成功执行并返回结果",
        "args": {
          "session_id": "session_1",
          "command": "echo 'Hello World'"
        },
        "response": {
          "result": "{\n  \"stdout\": \"Hello World\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.011029958724975586,
        "is_functional_test": true
      },
      {
        "case_name": "带标准输入执行命令",
        "purpose": "验证通过stdin传递输入参数可以正常工作",
        "args": {
          "session_id": "session_2",
          "command": "cat",
          "stdin": "This is input data"
        },
        "response": {
          "result": "{\n  \"stdout\": \"This is input data\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.009614229202270508,
        "is_functional_test": true
      },
      {
        "case_name": "超时控制测试",
        "purpose": "验证设置timeout后命令在指定时间内终止",
        "args": {
          "session_id": "session_3",
          "command": "sleep 5 && echo 'Done'",
          "timeout": 3
        },
        "response": {
          "error": "ToolException: Error executing tool execute: Command execution failed: "
        },
        "execution_time": 3.0195741653442383,
        "is_functional_test": true
      },
      {
        "case_name": "无效的session_id导致错误",
        "purpose": "验证提供不存在的session_id会抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "command": "ls -l"
        },
        "response": {
          "error": "ToolException: Error executing tool execute: 'Session invalid_session not found.'"
        },
        "execution_time": 0.0032210350036621094,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符命令处理",
        "purpose": "验证包含特殊字符的命令能被正确解析和执行",
        "args": {
          "session_id": "session_1",
          "command": "echo \"!@#$%^&*()_+{}|:\\\"<>?~`\""
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"bash: -c: line 1: unexpected EOF while looking for matching ``'\",\n  \"exit_status\": 2\n}"
        },
        "execution_time": 0.011363983154296875,
        "is_functional_test": true
      },
      {
        "case_name": "长命令执行测试",
        "purpose": "验证非常长的命令字符串能否被正确处理",
        "args": {
          "session_id": "session_2",
          "command": "echo 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'"
        },
        "response": {
          "result": "{\n  \"stdout\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.013333559036254883,
        "is_functional_test": true
      },
      {
        "case_name": "执行危险系统命令（无害化）",
        "purpose": "验证工具能安全地执行潜在风险命令（如rm），但使用测试文件确保无实际破坏",
        "args": {
          "session_id": "session_3",
          "command": "touch /tmp/testfile.txt && rm /tmp/testfile.txt"
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.022522449493408203,
        "is_functional_test": true
      },
      {
        "case_name": "空命令处理",
        "purpose": "验证空命令参数是否能被工具正确处理或拒绝",
        "args": {
          "session_id": "session_1",
          "command": ""
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.009707927703857422,
        "is_functional_test": false
      }
    ],
    "upload": [
      {
        "case_name": "使用有效会话ID上传文件",
        "purpose": "验证在提供有效的session_id、存在的local_path和合法的remote_path时，文件能够成功上传",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/uploaded_file.txt successfully."
        },
        "execution_time": 0.016247272491455078,
        "is_functional_test": true
      },
      {
        "case_name": "不存在的会话ID导致错误",
        "purpose": "验证当提供的session_id不存在时，工具抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: 'Session invalid_session not found.'"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "本地文件路径不存在导致错误",
        "purpose": "验证当指定的local_path文件不存在时，工具抛出FileNotFoundError",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: Local file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符在远程路径中处理",
        "purpose": "验证remote_path包含特殊字符时是否能正常处理",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/upload!@#$%^&*()_+.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/upload!@#$%^&*()_+.txt successfully."
        },
        "execution_time": 0.045862436294555664,
        "is_functional_test": true
      },
      {
        "case_name": "上传大文件测试",
        "purpose": "验证上传较大文件（如视频）时工具的稳定性",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250509-154554.mp4",
          "remote_path": "/home/pengbocheng/uploaded_video.mp4"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250509-154554.mp4 uploaded to /home/pengbocheng/uploaded_video.mp4 successfully."
        },
        "execution_time": 0.13227272033691406,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径上传测试",
        "purpose": "验证上传文件到具有极长路径的目标位置时工具的行为",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z\\test_long_path.txt",
          "remote_path": "/home/pengbocheng/very/long/path/to/test_long_path.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: File upload failed: [Errno 2] No such file"
        },
        "execution_time": 0.05085420608520508,
        "is_functional_test": true
      },
      {
        "case_name": "上传过程中网络中断模拟",
        "purpose": "验证在上传过程中发生网络中断时工具能否正确处理异常",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file_interrupted.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/uploaded_file_interrupted.txt successfully."
        },
        "execution_time": 0.051186561584472656,
        "is_functional_test": false
      },
      {
        "case_name": "目标路径无写入权限导致失败",
        "purpose": "验证当远程服务器上的remote_path没有写入权限时，工具能否捕获并返回适当的错误信息",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/root/restricted_upload.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: File upload failed: [Errno 13] Permission denied"
        },
        "execution_time": 0.05073070526123047,
        "is_functional_test": false
      }
    ],
    "download": [
      {
        "case_name": "使用有效会话ID成功下载文件",
        "purpose": "验证使用有效的session_id、存在的remote_path和合法的local_path可以成功下载文件",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.016065597534179688,
        "is_functional_test": true
      },
      {
        "case_name": "无效会话ID导致KeyError",
        "purpose": "验证当提供的session_id不存在时，工具抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 'Session invalid_session not found.'"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "远程文件不存在导致下载失败",
        "purpose": "验证当remote_path指定的文件不存在于远程服务器上时，工具能正确处理错误",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/nonexistent_file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\downloaded_testfile.txt'"
        },
        "execution_time": 0.04694771766662598,
        "is_functional_test": false
      },
      {
        "case_name": "本地路径无写入权限导致下载失败",
        "purpose": "验证当指定的local_path没有写入权限或不可用时，工具能优雅地处理错误",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "C:\\Windows\\system32\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\downloaded_testfile.txt'"
        },
        "execution_time": 0.05016660690307617,
        "is_functional_test": false
      },
      {
        "case_name": "下载大文件测试稳定性",
        "purpose": "验证工具能够稳定地处理较大文件的下载操作",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/largefile.iso",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\downloaded_largefile.iso"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\downloaded_largefile.iso'"
        },
        "execution_time": 0.05088996887207031,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符在远程路径中被正确处理",
        "purpose": "验证remote_path包含特殊字符（如空格、括号等）时仍能正常下载",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/my (test) file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\downloaded_specialchars.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\downloaded_specialchars.txt'"
        },
        "execution_time": 0.051261186599731445,
        "is_functional_test": true
      },
      {
        "case_name": "尝试下载目录而非单个文件",
        "purpose": "验证当remote_path指向一个目录而非文件时，工具是否能正确报错",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/documents/",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\downloaded_directory"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\downloaded_directory'"
        },
        "execution_time": 0.049654483795166016,
        "is_functional_test": false
      },
      {
        "case_name": "本地路径包含深层嵌套结构",
        "purpose": "验证工具能否处理包含多层未创建目录结构的local_path",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\newdir1\\newdir2\\newdir3\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\newdir1\\\\newdir2\\\\newdir3\\\\downloaded_testfile.txt'"
        },
        "execution_time": 0.053305864334106445,
        "is_functional_test": true
      }
    ],
    "disconnect": [
      {
        "case_name": "成功断开有效SSH会话",
        "purpose": "验证使用有效的session_id可以成功断开指定的SSH会话",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "result": "Session session_1 disconnected successfully."
        },
        "execution_time": 0.005018949508666992,
        "is_functional_test": true
      },
      {
        "case_name": "尝试断开不存在的SSH会话",
        "purpose": "验证当提供的session_id不存在时，工具能正确抛出KeyError异常",
        "args": {
          "session_id": "nonexistent_session"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session nonexistent_session not found.'"
        },
        "execution_time": 0.0035247802734375,
        "is_functional_test": false
      },
      {
        "case_name": "断开多个已存在的SSH会话",
        "purpose": "验证在多个活动会话存在的情况下，可以分别断开每个会话",
        "args": {
          "session_id": "session_2"
        },
        "response": {
          "result": "Session session_2 disconnected successfully."
        },
        "execution_time": 0.006521463394165039,
        "is_functional_test": true
      },
      {
        "case_name": "断开会话后调用list_sessions确认状态更新",
        "purpose": "验证断开指定会话后，list_sessions返回的会话列表中该会话不再存在",
        "args": {
          "session_id": "session_3"
        },
        "response": {
          "result": "Session session_3 disconnected successfully."
        },
        "execution_time": 0.007014274597167969,
        "is_functional_test": true
      },
      {
        "case_name": "提供空字符串作为session_id导致错误",
        "purpose": "验证当session_id为空字符串时，工具能正确处理并抛出参数验证错误",
        "args": {
          "session_id": ""
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session  not found.'"
        },
        "execution_time": 0.004992485046386719,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符在session_id中的处理",
        "purpose": "验证包含特殊字符的session_id是否能被正常处理并断开连接",
        "args": {
          "session_id": "session_!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_!@#$%^&*() not found.'"
        },
        "execution_time": 0.003735065460205078,
        "is_functional_test": true
      },
      {
        "case_name": "尝试断开已关闭的SSH会话",
        "purpose": "验证尝试断开一个已经关闭的会话时，工具能否优雅地处理这种情况",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_1 not found.'"
        },
        "execution_time": 0.00422358512878418,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 越权访问其他用户会话",
        "purpose": "验证当前用户无法通过伪造session_id来断开不属于自己的SSH会话",
        "args": {
          "session_id": "other_user_session"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session other_user_session not found.'"
        },
        "execution_time": 0.007116556167602539,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 48
}