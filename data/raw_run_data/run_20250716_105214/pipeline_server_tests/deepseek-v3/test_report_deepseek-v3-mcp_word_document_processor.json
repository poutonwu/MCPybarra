{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-16T10:53:33.250311",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        A string indicating the document ID or file path of the newly created document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        document_path: Path to the document file.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          }
        },
        "required": [
          "document_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently open document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently open document with a new name or path.\n\n    Args:\n        new_path: New file path for the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "new_path": {
            "title": "New Path",
            "type": "string"
          }
        },
        "required": [
          "new_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently open document.\n\n    Args:\n        copy_path: Path for the new copy.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "copy_path": {
            "title": "Copy Path",
            "type": "string"
          }
        },
        "required": [
          "copy_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text: The text content of the paragraph.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text: The text content of the heading.\n        level: Heading level (e.g., 1 for top-level).\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows: Number of rows.\n        columns: Number of columns.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    Retrieves metadata about the document (e.g., word count, author).\n\n    Returns:\n        A JSON object containing document metadata.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    Searches for text in the document.\n\n    Args:\n        query: The text to search for.\n\n    Returns:\n        A list of matches with their positions.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    Finds and replaces text in the document.\n\n    Args:\n        find_text: The text to find.\n        replace_text: The replacement text.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "find_text": {
            "title": "Find Text",
            "type": "string"
          },
          "replace_text": {
            "title": "Replace Text",
            "type": "string"
          }
        },
        "required": [
          "find_text",
          "replace_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    Deletes a paragraph from the document.\n\n    Args:\n        paragraph_index: Index of the paragraph to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    Deletes specified text from the document.\n\n    Args:\n        text: The text to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    Adds a row to an existing table.\n\n    Args:\n        table_index: Index of the table.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    Deletes a row from an existing table.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Index of the row to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    Edits the content of a table cell.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Row index of the cell.\n        column_index: Column index of the cell.\n        new_text: New content for the cell.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "column_index": {
            "title": "Column Index",
            "type": "integer"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "column_index",
          "new_text"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    Merges specified cells in a table.\n\n    Args:\n        table_index: Index of the table.\n        start_row: Starting row index.\n        start_column: Starting column index.\n        end_row: Ending row index.\n        end_column: Ending column index.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_column": {
            "title": "Start Column",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_column": {
            "title": "End Column",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_column",
          "end_row",
          "end_column"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    Sets the page margins for the document.\n\n    Args:\n        left: Left margin in inches.\n        right: Right margin in inches.\n        top: Top margin in inches.\n        bottom: Bottom margin in inches.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          }
        },
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create New Document Successfully",
        "purpose": "验证工具能够成功创建一个新的Word文档并返回文档ID或路径",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01604461669921875,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Default Parameters",
        "purpose": "验证工具在无参数输入的情况下使用默认行为创建文档",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01476597785949707,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document and Verify File Existence",
        "purpose": "验证创建的文档是否在预期路径下存在",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.014934301376342773,
        "is_functional_test": true
      },
      {
        "case_name": "Verify Document ID Format",
        "purpose": "验证返回的文档ID是否符合预期格式（如UUID或路径格式）",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.01915574073791504,
        "is_functional_test": true
      },
      {
        "case_name": "Create Multiple Documents in Sequence",
        "purpose": "验证工具在连续调用下是否能稳定创建多个文档",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.013939857482910156,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document in Restricted Directory",
        "purpose": "验证工具在尝试创建文档到受限目录时的行为",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.015024185180664062,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Document Creation with Invalid Permissions",
        "purpose": "验证工具在权限不足的情况下是否能正确处理错误",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.014617443084716797,
        "is_functional_test": false
      },
      {
        "case_name": "Test Document Creation with Maximum File Name Length",
        "purpose": "验证工具在创建具有最大长度文件名的文档时的行为",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.015535116195678711,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Valid Text",
        "purpose": "验证工具能够成功将一段有效文本添加到文档中",
        "args": {
          "text": "This is a valid paragraph of text."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0036590099334716797,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "验证当输入为空字符串时，工具是否能正确处理并添加空段落",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.006519317626953125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的段落内容",
        "args": {
          "text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.015035390853881836,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Null Input",
        "purpose": "验证工具在接收到 null 值作为文本参数时的错误处理能力",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Non-String Input",
        "purpose": "验证工具在接收到非字符串类型参数时的参数校验机制",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0070400238037109375,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Restricted Document",
        "purpose": "验证工具尝试向一个受限或只读文档添加段落时的安全性行为",
        "args": {
          "text": "This should fail due to document restrictions."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0035011768341064453,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Valid Text and Default Level",
        "purpose": "验证工具能够使用默认级别成功将有效标题添加到文档中",
        "args": {
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Valid Text and Custom Level",
        "purpose": "验证工具能够使用指定级别（如2）成功将有效标题添加到文档中",
        "args": {
          "text": "Chapter 1",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005913496017456055,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "验证当输入为空字符串时，工具是否能正确处理并添加空标题",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005014181137084961,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的标题内容",
        "args": {
          "text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Null Text",
        "purpose": "验证工具在接收到 null 值作为文本参数时的错误处理能力",
        "args": {
          "text": null,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003509998321533203,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Non-Integer Level",
        "purpose": "验证工具在接收到非整数类型作为级别参数时的参数校验机制",
        "args": {
          "text": "Invalid Level Test",
          "level": "two"
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\nlevel\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.006737232208251953,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading to Restricted Document",
        "purpose": "验证工具尝试向一个受限或只读文档添加标题时的安全性行为",
        "args": {
          "text": "Restricted Document Heading",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005013704299926758,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Maximum Level Value",
        "purpose": "验证工具在使用最大支持的标题级别（例如6）时的行为",
        "args": {
          "text": "Maximum Level Heading",
          "level": 6
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00803375244140625,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Rows and Columns",
        "purpose": "验证工具在使用默认参数（如1行1列）时能够成功向文档中添加表格",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Valid Rows and Columns",
        "purpose": "验证工具在指定有效行数和列数时能正确添加表格",
        "args": {
          "rows": 3,
          "columns": 4
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.008022308349609375,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "验证当行数为0时工具是否能正确处理并返回错误信息",
        "args": {
          "rows": 0,
          "columns": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.007070779800415039,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Columns",
        "purpose": "验证当列数为0时工具是否能正确处理并返回错误信息",
        "args": {
          "rows": 2,
          "columns": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0033676624298095703,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Negative Rows",
        "purpose": "验证工具在接收到负值行数时的参数校验机制",
        "args": {
          "rows": -1,
          "columns": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.004009246826171875,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Negative Columns",
        "purpose": "验证工具在接收到负值列数时的参数校验机制",
        "args": {
          "rows": 2,
          "columns": -1
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.006510257720947266,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table to Restricted Document",
        "purpose": "验证工具尝试向一个受限或只读文档添加表格时的安全性行为",
        "args": {
          "rows": 2,
          "columns": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.003843545913696289,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Maximum Rows and Columns",
        "purpose": "验证工具在最大行数和列数下的表现，确保表格正常插入",
        "args": {
          "rows": 100,
          "columns": 50
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.014032363891601562,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break Successfully",
        "purpose": "验证工具能够成功在文档中添加分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks in Sequence",
        "purpose": "验证连续多次调用工具是否能稳定地为文档添加多个分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008510351181030273,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Restricted Document",
        "purpose": "验证向只读或受限文档中添加分页符时的行为是否符合预期（如权限控制）",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005423784255981445,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break Without Active Document",
        "purpose": "验证在没有打开任何文档的情况下尝试添加分页符时的错误处理能力",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004988193511962891,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break and Verify Document Structure",
        "purpose": "验证添加分页符后文档结构是否正确，页面内容未丢失且格式保持完整",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.007175445556640625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break at Beginning of Document",
        "purpose": "验证在文档开头位置添加分页符时的行为是否符合预期",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005330085754394531,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break at End of Document",
        "purpose": "验证在文档末尾添加分页符时的行为是否符合预期（例如不会导致多余空白页）",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008089780807495117,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break with Special Formatting Context",
        "purpose": "验证在包含复杂格式（如表格、图片等）的上下文中插入分页符时文档行为是否正常",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document Successfully",
        "purpose": "验证工具能够成功保存当前打开的文档并返回成功信息",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.022376060485839844,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Open Document",
        "purpose": "验证在没有打开文档的情况下调用保存功能时的行为",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.0206601619720459,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Restricted Access",
        "purpose": "验证工具在尝试保存到受限访问路径时的安全性行为",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.019269704818725586,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Invalid Permissions",
        "purpose": "验证工具在用户权限不足时是否能正确处理错误",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02057027816772461,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Read-Only Path",
        "purpose": "验证工具在目标路径为只读目录时的错误处理能力",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.025870084762573242,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Maximum File Name Length",
        "purpose": "验证工具在保存具有最大长度文件名的文档时的行为",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.021030664443969727,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document During Concurrent Access",
        "purpose": "验证在并发访问情况下工具能否安全地保存文档",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.021813392639160156,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Large Content",
        "purpose": "验证工具在文档内容非常大的情况下仍能正常保存",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.022081613540649414,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document with Valid New Path",
        "purpose": "验证工具能够将当前打开的文档保存到一个新的有效路径",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.01735973358154297,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Existing File Path",
        "purpose": "验证工具在目标文件已存在时是否能覆盖保存或提示错误",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx."
        },
        "execution_time": 0.02356266975402832,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Empty Path",
        "purpose": "验证工具在新路径参数为空字符串时能否正确处理错误",
        "args": {
          "new_path": ""
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.006579160690307617,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Null Path",
        "purpose": "验证工具在新路径参数为null时能否正确抛出异常",
        "args": {
          "new_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0038945674896240234,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special Characters in Path",
        "purpose": "验证工具能否处理包含特殊字符的新路径名",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\<invalid>path.docx'"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Restricted Directory",
        "purpose": "验证工具尝试将文档保存到受限目录（如系统保护目录）时的行为",
        "args": {
          "new_path": "C:\\Windows\\system32\\config\\restricted_save.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 13] Permission denied: 'C:\\\\Windows\\\\system32\\\\config\\\\restricted_save.docx'"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Without Prior Document Open",
        "purpose": "验证工具在没有打开任何文档的情况下调用保存功能的行为",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx."
        },
        "execution_time": 0.019748210906982422,
        "is_functional_test": true
      }
    ],
    "open_document": [
      {
        "case_name": "Open Valid Word Document Successfully",
        "purpose": "验证工具能够成功打开一个存在的Word文档并返回成功信息",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx."
        },
        "execution_time": 0.02203536033630371,
        "is_functional_test": true
      },
      {
        "case_name": "Open Nonexistent Document",
        "purpose": "验证工具在尝试打开不存在的文档时是否能正确处理错误",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.004083395004272461,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Invalid File Extension",
        "purpose": "验证工具是否拒绝非.docx扩展名的文件路径作为输入",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf'"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document in Read-Only Mode",
        "purpose": "验证工具能否以只读方式打开受限制的文档",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.018550395965576172,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Empty Path",
        "purpose": "验证工具在提供空字符串作为文档路径时的错误处理能力",
        "args": {
          "document_path": ""
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.006436347961425781,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Null Path",
        "purpose": "验证工具在接收到 null 值作为文档路径时的参数校验机制",
        "args": {
          "document_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool open_document: 1 validation error for open_documentArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003504037857055664,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Special Characters in Path",
        "purpose": "验证工具能否正确处理包含特殊字符的文档路径",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\!@#$%^&*().docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.005892515182495117,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document from Restricted Directory",
        "purpose": "验证工具尝试从受限或受保护目录打开文档时的安全性行为",
        "args": {
          "document_path": "C:\\Windows\\system32\\notepad.exe"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'C:\\Windows\\system32\\notepad.exe'"
        },
        "execution_time": 0.004992961883544922,
        "is_functional_test": false
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info Successfully",
        "purpose": "验证工具能够成功获取文档的元数据信息并返回JSON格式结果",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.0068132877349853516,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info with No Existing Document",
        "purpose": "验证在没有创建或指定任何文档的情况下调用该工具时是否能正确处理错误",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.00848245620727539,
        "is_functional_test": false
      },
      {
        "case_name": "Get Metadata of Recently Created Document",
        "purpose": "验证工具能否正确获取最新创建文档的基本元数据（如字数、作者）",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.003996849060058594,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info on Read-Only Document",
        "purpose": "验证工具在尝试读取只读文档元数据时的安全性和权限控制能力",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.008041620254516602,
        "is_functional_test": false
      },
      {
        "case_name": "Verify Returned JSON Structure",
        "purpose": "验证工具返回的JSON对象是否包含预期字段（如word_count, author等）",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.004099607467651367,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Invalid Document Reference",
        "purpose": "验证当传递无效或不存在的文档引用时，工具是否能优雅地处理错误",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.003198862075805664,
        "is_functional_test": false
      },
      {
        "case_name": "Get Info for Large Document",
        "purpose": "验证工具在处理具有大量内容的文档时是否能正常获取元数据",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.005017280578613281,
        "is_functional_test": true
      },
      {
        "case_name": "Get Info for Document with Special Characters in Metadata",
        "purpose": "验证工具能否正确处理包含特殊字符的元数据字段值",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 25}"
        },
        "execution_time": 0.0070018768310546875,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Search Text Successfully",
        "purpose": "验证工具能够成功在文档中搜索指定文本并返回匹配结果及其位置",
        "args": {
          "query": "valid paragraph"
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a valid paragraph of text.'}]"
        },
        "execution_time": 0.004700422286987305,
        "is_functional_test": true
      },
      {
        "case_name": "Search Empty Query in Document",
        "purpose": "验证当搜索空字符串时，工具是否能正确处理并返回空结果或适当响应",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a valid paragraph of text.'}, {'paragraph_index': 1, 'text': ''}, {'paragraph_index': 2, 'text': '!@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/~`'}, {'paragraph_index': 3, 'text': 'This should fail due to document restrictions.'}, {'paragraph_index': 4, 'text': 'Introduction'}, {'paragraph_index': 5, 'text': 'Chapter 1'}, {'paragraph_index': 6, 'text': ''}, {'paragraph_index': 7, 'text': '!@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/~`'}, {'paragraph_index': 8, 'text': 'Restricted Document Heading'}, {'paragraph_index': 9, 'text': 'Maximum Level Heading'}, {'paragraph_index': 10, 'text': ''}, {'paragraph_index': 11, 'text': ''}, {'paragraph_index': 12, 'text': ''}, {'paragraph_index': 13, 'text': ''}, {'paragraph_index': 14, 'text': ''}, {'paragraph_index': 15, 'text': ''}, {'paragraph_index': 16, 'text': ''}, {'paragraph_index': 17, 'text': ''}]"
        },
        "execution_time": 0.005014181137084961,
        "is_functional_test": true
      },
      {
        "case_name": "Search Special Characters in Document",
        "purpose": "验证工具能否正确处理包含特殊字符的查询内容",
        "args": {
          "query": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`"
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': '!@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/~`'}, {'paragraph_index': 7, 'text': '!@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/~`'}]"
        },
        "execution_time": 0.009016752243041992,
        "is_functional_test": true
      },
      {
        "case_name": "Search Nonexistent Text",
        "purpose": "验证当搜索不存在于文档中的文本时，工具是否能返回空列表或适当提示",
        "args": {
          "query": "this text does not exist"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.0064966678619384766,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Null Query",
        "purpose": "验证工具在接收到 null 值作为查询参数时的错误处理能力",
        "args": {
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0030117034912109375,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Non-String Query",
        "purpose": "验证工具在接收到非字符串类型参数作为查询时的参数校验机制",
        "args": {
          "query": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Restricted Document",
        "purpose": "验证工具尝试在只读或受限文档中进行搜索时的安全性行为",
        "args": {
          "query": "restricted content"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.0035042762756347656,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace Success",
        "purpose": "验证工具能够成功在文档中查找并替换指定文本",
        "args": {
          "find_text": "old text",
          "replace_text": "new text"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.009816169738769531,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Text with Empty String",
        "purpose": "验证当替换文本为空字符串时，工具是否能正确处理",
        "args": {
          "find_text": "text to remove",
          "replace_text": ""
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.009957075119018555,
        "is_functional_test": true
      },
      {
        "case_name": "Find and Replace Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的查找和替换操作",
        "args": {
          "find_text": "!@#$%^&*()",
          "replace_text": "[special chars replaced]"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.010501384735107422,
        "is_functional_test": true
      },
      {
        "case_name": "Find Non-Existent Text",
        "purpose": "验证当查找的文本不存在时，工具是否能优雅地返回成功但未替换任何内容",
        "args": {
          "find_text": "nonexistent text",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.013770103454589844,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Null Input for Find Text",
        "purpose": "验证工具在查找文本为 null 时的参数校验机制",
        "args": {
          "find_text": null,
          "replace_text": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.012109518051147461,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Null Input for Replace Text",
        "purpose": "验证工具在替换文本为 null 时的参数校验机制",
        "args": {
          "find_text": "old text",
          "replace_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nreplace_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.010536432266235352,
        "is_functional_test": false
      },
      {
        "case_name": "Replace in Read-Only Document",
        "purpose": "验证工具尝试在只读文档中执行替换时的安全性行为",
        "args": {
          "find_text": "read-only text",
          "replace_text": "new content"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.008992195129394531,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Very Long Text Block",
        "purpose": "验证工具在处理超长文本块查找替换时的稳定性",
        "args": {
          "find_text": "a very long string that exceeds normal buffer size and could potentially cause memory issues during processing",
          "replace_text": "short replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.012767791748046875,
        "is_functional_test": true
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Paragraph at Valid Index",
        "purpose": "验证工具能够成功删除文档中指定索引的段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Out-of-Bounds Index",
        "purpose": "验证当提供的段落索引超出文档范围时，工具是否能正确处理错误",
        "args": {
          "paragraph_index": 100
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.003506183624267578,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Empty Document",
        "purpose": "验证在没有段落的文档中尝试删除段落时的行为",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0045146942138671875,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Negative Index",
        "purpose": "验证工具在接收到负数索引参数时的参数校验机制",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.004503965377807617,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Paragraph in Multi-Paragraph Document",
        "purpose": "验证工具能否正确删除多段文档中的第一个段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0030870437622070312,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph in Multi-Paragraph Document",
        "purpose": "验证工具能否正确删除多段文档中的最后一个段落",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Invalid Data Type for Index",
        "purpose": "验证工具在接收到非整型索引参数时的错误处理能力",
        "args": {
          "paragraph_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0031206607818603516,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Read-Only Document",
        "purpose": "验证工具尝试从只读或受限文档中删除段落时的安全性行为",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Text Successfully",
        "purpose": "验证工具能够成功从文档中删除指定文本",
        "args": {
          "text": "This is a valid paragraph of text."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text Not Present",
        "purpose": "验证工具在尝试删除不存在的文本时的行为",
        "args": {
          "text": "Nonexistent text to delete"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005161762237548828,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证工具在删除空字符串文本时的行为",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text with Special Characters",
        "purpose": "验证工具能否正确处理并删除包含特殊字符的文本",
        "args": {
          "text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.0036954879760742188,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text with Null Input",
        "purpose": "验证工具在接收到 null 值作为文本参数时的错误处理能力",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0030014514923095703,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text with Non-String Input",
        "purpose": "验证工具在接收到非字符串类型参数时的参数校验机制",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text from Restricted Document",
        "purpose": "验证工具尝试从一个受限或只读文档中删除文本时的安全性行为",
        "args": {
          "text": "This should fail due to document restrictions."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003247976303100586,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Long Text Content",
        "purpose": "验证工具在删除非常长的文本内容时的行为",
        "args": {
          "text": "A very long string that exceeds typical length limits for text deletion operations."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Valid Table Index",
        "purpose": "验证工具能够成功向指定的有效表格索引添加一行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.003908395767211914,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "验证工具在尝试向不存在的表格索引添加行时是否能正确处理错误",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.00401759147644043,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Negative Table Index",
        "purpose": "验证工具在输入负数表格索引时是否能正确进行参数校验",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Maximum Integer Table Index",
        "purpose": "验证工具在最大整数值作为表格索引时的行为",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0031647682189941406,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Locked or Read-Only Table",
        "purpose": "验证工具在尝试向只读或锁定表格添加行时的安全性行为",
        "args": {
          "table_index": 1
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.003136873245239258,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Null Table Index",
        "purpose": "验证工具在 table_index 参数为 null 时的错误处理能力",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.003147125244140625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Non-Integer Table Index",
        "purpose": "验证工具在接收到非整数类型表格索引时的参数校验机制",
        "args": {
          "table_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0035080909729003906,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Rows in Sequence to Same Table",
        "purpose": "验证工具在连续调用下是否能稳定地多次向同一表格添加行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Row from Table Successfully",
        "purpose": "验证工具能够成功从指定表格中删除指定行",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Delete First Row in Table",
        "purpose": "验证工具可以正确删除表格中的第一行数据",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.005021572113037109,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row in Table",
        "purpose": "验证工具可以正确删除表格中的最后一行数据",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Invalid Table Index",
        "purpose": "验证当提供无效的 table_index 参数时，工具是否能正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Invalid Row Index",
        "purpose": "验证当提供超出范围的 row_index 参数时，工具是否能正确处理错误",
        "args": {
          "table_index": 0,
          "row_index": 100
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.004042625427246094,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Non-Existent Table",
        "purpose": "验证当尝试从不存在的表格中删除行时工具的安全性行为",
        "args": {
          "table_index": 99,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Read-Only Document",
        "purpose": "验证工具在尝试从只读文档中删除表格行时的行为",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0032813549041748047,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Maximum Index Value",
        "purpose": "验证工具在使用最大允许索引值时的边界行为",
        "args": {
          "table_index": 0,
          "row_index": 2147483647
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.003003358840942383,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Table Cell with Valid Parameters",
        "purpose": "验证工具能够成功编辑表格单元格的内容",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 2,
          "new_text": "Updated Content"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.004014492034912109,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell in First Row and Column",
        "purpose": "验证工具在最小索引（0,0）下是否能正确编辑单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Top-Left Cell"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.00424504280090332,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell with Empty Text",
        "purpose": "验证工具能否处理将单元格内容设置为空字符串的情况",
        "args": {
          "table_index": 1,
          "row_index": 2,
          "column_index": 3,
          "new_text": ""
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.003503561019897461,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的单元格内容更新",
        "args": {
          "table_index": 2,
          "row_index": 1,
          "column_index": 1,
          "new_text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.0031669139862060547,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Non-Existent Table Index",
        "purpose": "验证工具在指定无效 table_index 时的错误处理能力",
        "args": {
          "table_index": 999,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Invalid Table"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.001999378204345703,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell with Negative Indices",
        "purpose": "验证工具对负数行或列索引的边界检查和错误处理",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "column_index": -1,
          "new_text": "Negative Index Test"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.002653360366821289,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell in Read-Only Document",
        "purpose": "验证工具尝试在只读文档中修改表格内容时的安全性行为",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": "Should Not Be Editable"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.0020008087158203125,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Cells in Single Table Successfully",
        "purpose": "验证工具能够成功合并指定表格中的单元格范围",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells Across Multiple Rows and Columns",
        "purpose": "验证工具能否正确合并跨越多个行和列的单元格",
        "args": {
          "table_index": 1,
          "start_row": 1,
          "start_column": 1,
          "end_row": 3,
          "end_column": 2
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.008019208908081055,
        "is_functional_test": true
      },
      {
        "case_name": "Merge All Cells in a Row",
        "purpose": "验证工具是否能正确合并一行中的所有单元格",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 0,
          "end_row": 2,
          "end_column": 3
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004023551940917969,
        "is_functional_test": true
      },
      {
        "case_name": "Merge All Cells in a Column",
        "purpose": "验证工具是否能正确合并一列中的所有单元格",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 2,
          "end_row": 4,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.003004312515258789,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells with Same Start and End Indices",
        "purpose": "验证当起始与结束行列相同时，工具是否仍能正确处理（即不合并）",
        "args": {
          "table_index": 1,
          "start_row": 0,
          "start_column": 0,
          "end_row": 0,
          "end_column": 0
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells in Non-Existent Table",
        "purpose": "验证尝试合并不存在的表格时的行为",
        "args": {
          "table_index": 999,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0030202865600585938,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Negative Indices",
        "purpose": "验证工具在输入负数行列索引时的错误处理能力",
        "args": {
          "table_index": 0,
          "start_row": -1,
          "start_column": -1,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.002000093460083008,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Start Greater Than End",
        "purpose": "验证当起始行列大于结束行列时的工具行为",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_column": 3,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.0020008087158203125,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Page Margins with Valid Values",
        "purpose": "验证工具能够成功设置页面的上下左右边距，使用合法数值参数",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.009510993957519531,
        "is_functional_test": true
      },
      {
        "case_name": "Set Page Margins with Default Values",
        "purpose": "验证工具在未提供参数时是否使用默认边距值（假设默认为1英寸）",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.00450444221496582,
        "is_functional_test": true
      },
      {
        "case_name": "Set Page Margins with Zero Value",
        "purpose": "验证工具能否处理边距为0的情况",
        "args": {
          "left": 0,
          "right": 0,
          "top": 0,
          "bottom": 0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": true
      },
      {
        "case_name": "Set Page Margins with Negative Value",
        "purpose": "验证工具在输入负数边距时的错误处理能力",
        "args": {
          "left": -0.5,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Failed to set page margins: value must be in range 0 to 18446744073709551615 inclusive, got -457200"
        },
        "execution_time": 0.005022287368774414,
        "is_functional_test": false
      },
      {
        "case_name": "Set Page Margins with Very Large Values",
        "purpose": "验证工具对极大数值的边距输入是否能正确处理",
        "args": {
          "left": 100,
          "right": 100,
          "top": 100,
          "bottom": 100
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Set Page Margins with Non-Number Input",
        "purpose": "验证工具在接收到非数字类型的参数时是否能进行参数校验并报错",
        "args": {
          "left": "one",
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.005124092102050781,
        "is_functional_test": false
      },
      {
        "case_name": "Set Page Margins Without All Required Parameters",
        "purpose": "验证工具在缺少必要参数时的错误处理机制",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nbottom\n  Field required [type=missing, input_value={'left': 1, 'right': 1, 'top': 1}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0039288997650146484,
        "is_functional_test": false
      },
      {
        "case_name": "Set Page Margins on a Read-Only Document",
        "purpose": "验证工具尝试修改只读文档的页面边距时的安全性行为",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.006027698516845703,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Copy Document to Valid Path Successfully",
        "purpose": "验证工具能够成功将当前打开的文档复制到指定的有效路径",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx."
        },
        "execution_time": 0.021088361740112305,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document with Empty Copy Path",
        "purpose": "验证当提供空字符串作为目标路径时，工具是否能正确处理错误",
        "args": {
          "copy_path": ""
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Non-Existent Directory",
        "purpose": "验证工具在尝试复制文档到不存在的目录时的行为",
        "args": {
          "copy_path": "D:\\nonexistent\\path\\copied_document.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: 'D:\\\\nonexistent\\\\path\\\\copied_document.docx'"
        },
        "execution_time": 0.005012035369873047,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Special Characters in Path",
        "purpose": "验证工具能否正确处理包含特殊字符的目标路径",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_with_!@#$%^&.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_with_!@#$%^&.docx."
        },
        "execution_time": 0.019102811813354492,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Restricted Access Path",
        "purpose": "验证工具在尝试复制文档到受限访问路径时的安全性行为",
        "args": {
          "copy_path": "C:\\Program Files\\restricted\\copied_document.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: 'C:\\\\Program Files\\\\restricted\\\\copied_document.docx'"
        },
        "execution_time": 0.004004716873168945,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Null Copy Path",
        "purpose": "验证工具在接收到 null 值作为 copy_path 参数时的参数校验机制",
        "args": {
          "copy_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0043714046478271484,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Maximum Length Path",
        "purpose": "验证工具在使用最大长度路径进行文档复制时的行为",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx."
        },
        "execution_time": 0.018214941024780273,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document Without Any Opened Document",
        "purpose": "验证在没有打开任何文档的情况下调用复制操作时的行为",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_from_closed.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_from_closed.docx."
        },
        "execution_time": 0.019600391387939453,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 147
}