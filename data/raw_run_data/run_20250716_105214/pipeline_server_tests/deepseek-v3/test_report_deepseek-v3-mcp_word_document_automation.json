{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-16T10:52:16.634424",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document and sets metadata such as title, author, and keywords.\n\n    Args:\n        title: The title of the document.\n        author: The author of the document. Defaults to \"Unknown\".\n        keywords: A list of keywords for the document. Defaults to an empty list.\n\n    Returns:\n        A string containing the path or identifier of the newly created document.\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "author": {
            "default": "Unknown",
            "title": "Author",
            "type": "string"
          },
          "keywords": {
            "default": null,
            "items": {},
            "title": "Keywords",
            "type": "array"
          }
        },
        "required": [
          "title"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_text",
      "description": "\n    Extracts the full text content of a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n\n    Returns:\n        A string containing the full text of the document.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          }
        },
        "required": [
          "document_id"
        ],
        "title": "get_document_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph of text to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        text: The text to add as a paragraph.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to a specified Word document at a specified level (e.g., H1, H2).\n\n    Args:\n        document_id: The identifier or path of the document.\n        text: The text of the heading.\n        level: The heading level (1 for H1, 2 for H2, etc.).\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "document_id",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "\n    Creates a custom text style (e.g., font, size, color) for use in the document.\n\n    Args:\n        style_name: The name of the custom style.\n        font: The font name.\n        size: The font size.\n        color: The font color in HEX format (e.g., \"#FF0000\").\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "font": {
            "title": "Font",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "color": {
            "title": "Color",
            "type": "string"
          }
        },
        "required": [
          "style_name",
          "font",
          "size",
          "color"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "\n    Applies formatting (e.g., bold, italic) to a specified range of text in the document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        start_pos: The starting position of the text range.\n        end_pos: The ending position of the text range.\n        format_options: A dictionary of formatting options (e.g., {\"bold\": True, \"italic\": False}).\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "start_pos": {
            "title": "Start Pos",
            "type": "integer"
          },
          "end_pos": {
            "title": "End Pos",
            "type": "integer"
          },
          "format_options": {
            "title": "Format Options",
            "type": "object"
          }
        },
        "required": [
          "document_id",
          "start_pos",
          "end_pos",
          "format_options"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "\n    Sets password protection for a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        password: The password to set for the document.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "\n    Adds a footnote to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        text: The text of the footnote.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_paragraph_text_from_document",
      "description": "\n    Extracts the text of a specific paragraph from a Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        paragraph_index: The index of the paragraph to extract.\n\n    Returns:\n        A string containing the text of the specified paragraph.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "document_id",
          "paragraph_index"
        ],
        "title": "get_paragraph_text_from_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "find_text_in_document",
      "description": "\n    Searches for a specified text string in a Word document and returns its positions.\n\n    Args:\n        document_id: The identifier or path of the document.\n        search_text: The text to search for.\n\n    Returns:\n        A list of dictionaries, each containing the start and end positions of the found text.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "search_text": {
            "title": "Search Text",
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "search_text"
        ],
        "title": "find_text_in_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        rows: The number of rows in the table.\n        cols: The number of columns in the table.\n        data: The data to populate the table.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          },
          "data": {
            "items": {},
            "title": "Data",
            "type": "array"
          }
        },
        "required": [
          "document_id",
          "rows",
          "cols",
          "data"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_image",
      "description": "\n    Adds an image to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        image_path: The path to the image file.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "image_path"
        ],
        "title": "add_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          }
        },
        "required": [
          "document_id"
        ],
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "add_header_footer",
      "description": "\n    Adds a header or footer to a specified Word document.\n\n    Args:\n        document_id: The identifier or path of the document.\n        text: The text to add to the header or footer.\n        is_header: True for header, False for footer.\n\n    Returns:\n        A boolean indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "is_header": {
            "title": "Is Header",
            "type": "boolean"
          }
        },
        "required": [
          "document_id",
          "text",
          "is_header"
        ],
        "title": "add_header_footerArguments",
        "type": "object"
      }
    },
    {
      "name": "convert_to_pdf",
      "description": "\n    Converts a specified Word document to PDF format.\n\n    Args:\n        document_id: The identifier or path of the document.\n\n    Returns:\n        A string containing the path or identifier of the converted PDF.\n    ",
      "args_schema": {
        "properties": {
          "document_id": {
            "title": "Document Id",
            "type": "string"
          }
        },
        "required": [
          "document_id"
        ],
        "title": "convert_to_pdfArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create Document with All Default Values",
        "purpose": "验证使用默认参数创建文档的基本功能，包括默认作者和空关键词列表。",
        "args": {
          "title": "DefaultDocument"
        },
        "response": {
          "result": "workspace/DefaultDocument.docx"
        },
        "execution_time": 0.020343303680419922,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Custom Author and Keywords",
        "purpose": "验证可以自定义标题、作者和关键词创建文档的功能。",
        "args": {
          "title": "CustomDoc",
          "author": "John Doe",
          "keywords": [
            "test",
            "automation",
            "document"
          ]
        },
        "response": {
          "result": "workspace/CustomDoc.docx"
        },
        "execution_time": 0.0191650390625,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Only Title and Author",
        "purpose": "验证仅提供标题和作者时工具是否正常工作，不设置关键词。",
        "args": {
          "title": "WithTitleAndAuthor",
          "author": "Jane Smith"
        },
        "response": {
          "result": "workspace/WithTitleAndAuthor.docx"
        },
        "execution_time": 0.018529415130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Empty Keywords List",
        "purpose": "验证当明确传递空数组作为关键词时工具是否正常处理。",
        "args": {
          "title": "EmptyKeywordsDoc",
          "keywords": []
        },
        "response": {
          "result": "workspace/EmptyKeywordsDoc.docx"
        },
        "execution_time": 0.02481985092163086,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Special Characters in Title",
        "purpose": "验证标题中包含特殊字符时能否正确创建文档。",
        "args": {
          "title": "Document@2025#Test!",
          "author": "SystemUser",
          "keywords": [
            "special",
            "chars"
          ]
        },
        "response": {
          "result": "workspace/Document@2025#Test!.docx"
        },
        "execution_time": 0.01836848258972168,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Long Title and Keywords",
        "purpose": "测试边界条件：长标题和大量关键词的处理能力。",
        "args": {
          "title": "ThisIsAVeryLongTitleThatExceedsOneHundredCharactersInLengthForTestingPurposesOnly",
          "keywords": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t"
          ]
        },
        "response": {
          "result": "workspace/ThisIsAVeryLongTitleThatExceedsOneHundredCharactersInLengthForTestingPurposesOnly.docx"
        },
        "execution_time": 0.019094467163085938,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Without Title",
        "purpose": "验证缺少必填字段 'title' 时是否能正确报错或拒绝操作。",
        "args": {
          "author": "Unknown",
          "keywords": [
            "missing",
            "title"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\ntitle\n  Field required [type=missing, input_value={'author': 'Unknown', 'ke...': ['missing', 'title']}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Null Keywords",
        "purpose": "验证当 keywords 参数为 null 时工具是否使用默认值（空列表）。",
        "args": {
          "title": "NullKeywordsDoc",
          "keywords": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nkeywords\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/list_type"
        },
        "execution_time": 0.00402522087097168,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Malformed Keywords Input",
        "purpose": "测试非法输入（如嵌套数组或对象）是否会引发异常或安全问题。",
        "args": {
          "title": "MalformedKeywordsTest",
          "keywords": [
            "safe",
            [
              "malicious",
              "data"
            ],
            {
              "danger": "payload"
            }
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: Failed to create document: sequence item 1: expected str instance, list found"
        },
        "execution_time": 0.011285781860351562,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-String Title Input",
        "purpose": "验证传入非字符串类型作为 title 参数时是否能正确处理错误。",
        "args": {
          "title": 123456,
          "author": "InvalidTypeUser"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\ntitle\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-String Author Input",
        "purpose": "验证 author 参数不是字符串时是否能正确处理错误。",
        "args": {
          "title": "InvalidAuthorType",
          "author": [
            "not",
            "a",
            "string"
          ],
          "keywords": [
            "error",
            "handling"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nauthor\n  Input should be a valid string [type=string_type, input_value=['not', 'a', 'string'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003465414047241211,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Zero-Length Title",
        "purpose": "测试最小边界值：零长度标题是否被接受或正确拒绝。",
        "args": {
          "title": "",
          "author": "EmptyTitleTester"
        },
        "response": {
          "result": "workspace/.docx"
        },
        "execution_time": 0.027390003204345703,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加段落的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is a new paragraph added for testing purposes."
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.020742416381835938,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph to Document",
        "purpose": "验证向文档中添加空段落时工具是否正常处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": ""
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.01922130584716797,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证包含特殊字符的文本能否被正确添加到文档中。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.019129514694213867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加段落时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should not be added because the document does not exist."
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: Failed to add paragraph: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.004123687744140625,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Text",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is a test paragraph with malicious content:\r\n<script>alert('XSS')</script>"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.02014017105102539,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "text": "This paragraph should not be added due to invalid document ID type."
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.013522863388061523,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "验证当text参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add H1 Heading to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加H1标题的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Main Title",
          "level": 1
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.021535873413085938,
        "is_functional_test": true
      },
      {
        "case_name": "Add H2 Heading to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加H2标题的功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Sub Title",
          "level": 2
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.024363279342651367,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Heading at Level 3",
        "purpose": "验证向文档中添加空文本的H3标题时工具是否正常处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "",
          "level": 3
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.023058414459228516,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Special Characters at Level 4",
        "purpose": "验证包含特殊字符的标题能否被正确添加到文档中。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Heading with !@#$%^&*()_+=-`~[]{}|;':\",./<>?",
          "level": 4
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03309798240661621,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Heading Text",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Malicious heading content:\r\n<script>alert('XSS')</script>",
          "level": 2
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.026050806045532227,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加标题时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This heading should not be added.",
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: Failed to add heading: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.004266262054443359,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type for Heading",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "text": "Invalid document ID test",
          "level": 2
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003503561019897461,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Heading Level",
        "purpose": "测试极限值：最大支持的标题级别是否被正确处理。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Maximum level heading",
          "level": 9
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.025156497955322266,
        "is_functional_test": true
      }
    ],
    "get_document_text": [
      {
        "case_name": "Extract Text from Existing Word Document",
        "purpose": "验证从已存在的Word文档中提取全文内容的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx"
        },
        "response": {
          "result": "This is a new paragraph added for testing purposes.\n\nThis paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?\nThis is a test paragraph with malicious content:\n\n<script>alert('XSS')</script>\nMain Title\nSub Title\n\nHeading with !@#$%^&*()_+=-`~[]{}|;':\",./<>?\nMalicious heading content:\n\n<script>alert('XSS')</script>\nMaximum level heading"
        },
        "execution_time": 0.013014078140258789,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Text from Document with Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的Word文档中的文本提取。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\Document@2025#Test!.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: Failed to extract text from document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\Document@2025#Test!.docx'"
        },
        "execution_time": 0.004401206970214844,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Extract Text from Non-Word File",
        "purpose": "测试尝试从非Word格式文件（如PDF）中提取文本是否会引发错误或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: Failed to extract text from document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf'"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: 1 validation error for get_document_textArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0055654048919677734,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Document ID",
        "purpose": "验证当document_id参数为null时是否能正确处理错误。",
        "args": {
          "document_id": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: 1 validation error for get_document_textArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029973983764648438,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Document ID",
        "purpose": "验证空字符串作为document_id时是否能正确返回错误信息。",
        "args": {
          "document_id": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: Failed to extract text from document: Package not found at ''"
        },
        "execution_time": 0.003010272979736328,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Long Document Path",
        "purpose": "测试路径长度极限情况，确保工具能正确处理长路径文档的文本提取。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ThisIsAVeryLongTitleThatExceedsOneHundredCharactersInLengthForTestingPurposesOnly.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool get_document_text: Failed to extract text from document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ThisIsAVeryLongTitleThatExceedsOneHundredCharactersInLengthForTestingPurposesOnly.docx'"
        },
        "execution_time": 0.0045130252838134766,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Text from Newly Created Document",
        "purpose": "验证从新创建的文档中提取文本的功能是否正常。",
        "args": {
          "document_id": "workspace/DefaultDocument.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.011509418487548828,
        "is_functional_test": true
      }
    ],
    "get_paragraph_text_from_document": [
      {
        "case_name": "Basic Paragraph Extraction from Valid Document",
        "purpose": "验证从一个有效文档中提取指定段落的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "This is a new paragraph added for testing purposes."
        },
        "execution_time": 0.009914159774780273,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Last Paragraph from Multi-Paragraph Document",
        "purpose": "验证从多段落文档中提取最后一个段落的功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "paragraph_index": 4
        },
        "response": {
          "result": "Main Title"
        },
        "execution_time": 0.021498441696166992,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Extract Paragraph with Malformed Path",
        "purpose": "测试尝试使用恶意构造的路径提取段落是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\malicious.docx",
          "paragraph_index": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_paragraph_text_from_document: Failed to get paragraph text: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\malicious.docx'"
        },
        "execution_time": 0.007139682769775391,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "paragraph_index": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_paragraph_text_from_document: 1 validation error for get_paragraph_text_from_documentArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004567384719848633,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Document",
        "purpose": "验证尝试从不存在的文档中提取段落时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "paragraph_index": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_paragraph_text_from_document: Failed to get paragraph text: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.008545160293579102,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Negative Paragraph Index",
        "purpose": "测试负数作为段落索引时工具是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "paragraph_index": -1
        },
        "response": {
          "error": "ToolException: Error executing tool get_paragraph_text_from_document: Failed to get paragraph text: Paragraph index out of range"
        },
        "execution_time": 0.01397705078125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Out of Range Paragraph Index",
        "purpose": "测试超出文档实际段落数量的索引值是否被正确处理。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "paragraph_index": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_paragraph_text_from_document: Failed to get paragraph text: Paragraph index out of range"
        },
        "execution_time": 0.012038469314575195,
        "is_functional_test": false
      },
      {
        "case_name": "Extract Paragraph Containing Special Characters",
        "purpose": "验证包含特殊字符的段落能否被正确提取。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "paragraph_index": 2
        },
        "response": {
          "result": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "execution_time": 0.013994216918945312,
        "is_functional_test": true
      }
    ],
    "find_text_in_document": [
      {
        "case_name": "Basic Text Search in Document",
        "purpose": "验证工具能否在指定Word文档中正确搜索到指定文本并返回其位置。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": "This is a new paragraph added for testing purposes."
        },
        "response": {
          "result": "{\n  \"start\": 0,\n  \"end\": 51\n}"
        },
        "execution_time": 0.01560354232788086,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Nonexistent Text in Document",
        "purpose": "验证当搜索的文本在文档中不存在时，工具是否返回空列表而不是错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": "This text does not exist"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.029216527938842773,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Special Characters in Text",
        "purpose": "验证包含特殊字符的文本能否被正确搜索。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "result": "{\n  \"start\": 0,\n  \"end\": 75\n}"
        },
        "execution_time": 0.05807685852050781,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Search Malformed Input Text",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": "<script>alert('XSS')</script>"
        },
        "response": [
          "{\n  \"start\": 50,\n  \"end\": 79\n}",
          "{\n  \"start\": 28,\n  \"end\": 57\n}"
        ],
        "execution_time": 0.013648033142089844,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "search_text": "Some search text"
        },
        "response": {
          "error": "ToolException: Error executing tool find_text_in_document: 1 validation error for find_text_in_documentArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004062175750732422,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Search Text",
        "purpose": "验证当search_text参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_text_in_document: 1 validation error for find_text_in_documentArguments\nsearch_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008298158645629883,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Empty Search Text",
        "purpose": "验证当搜索文本为空字符串时是否能正确处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": ""
        },
        "response": [
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}",
          "{\n  \"start\": 0,\n  \"end\": 0\n}"
        ],
        "execution_time": 0.014799356460571289,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Long Search Text",
        "purpose": "测试极限值：长文本搜索是否能正确处理。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "search_text": "aVeryLongTextStringThatExceedsNormalLengthForTestingPurposesOnlyAndIsUsedToCheckHowTheToolHandlesSuchExtremeCases"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.014069795608520508,
        "is_functional_test": true
      }
    ],
    "create_custom_style": [
      {
        "case_name": "Create Custom Style with Valid Parameters",
        "purpose": "验证使用有效参数创建自定义文本样式的基本功能，包括字体、大小和颜色。",
        "args": {
          "style_name": "CustomStyle1",
          "font": "Arial",
          "size": 12,
          "color": "#FF0000"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '#F'"
        },
        "execution_time": 0.012561321258544922,
        "is_functional_test": true
      },
      {
        "case_name": "Create Custom Style with Default Font",
        "purpose": "验证在未指定字体时是否能使用默认字体成功创建样式。",
        "args": {
          "style_name": "DefaultFontStyle",
          "font": "Times New Roman",
          "size": 14,
          "color": "#0000FF"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '#0'"
        },
        "execution_time": 0.026869773864746094,
        "is_functional_test": true
      },
      {
        "case_name": "Create Custom Style with Maximum Font Size",
        "purpose": "测试边界条件：最大允许字体大小（如72）是否被正确处理。",
        "args": {
          "style_name": "MaxFontSizeStyle",
          "font": "Calibri",
          "size": 72,
          "color": "#00FF00"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '#0'"
        },
        "execution_time": 0.015439510345458984,
        "is_functional_test": true
      },
      {
        "case_name": "Create Custom Style with Minimum Font Size",
        "purpose": "测试边界条件：最小允许字体大小（如1）是否被正确处理。",
        "args": {
          "style_name": "MinFontSizeStyle",
          "font": "Verdana",
          "size": 1,
          "color": "#808080"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '#8'"
        },
        "execution_time": 0.01458287239074707,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Color Code",
        "purpose": "验证非法颜色格式输入（如脚本代码或不完整HEX）是否会引发异常或安全问题。",
        "args": {
          "style_name": "MalformedColorTest",
          "font": "Georgia",
          "size": 10,
          "color": "<script>alert('XSS')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '<s'"
        },
        "execution_time": 0.015141487121582031,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Duplicate Style Name",
        "purpose": "验证当尝试创建已存在的样式名称时是否能正确返回错误信息。",
        "args": {
          "style_name": "CustomStyle1",
          "font": "Courier New",
          "size": 11,
          "color": "#FFFFFF"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: '#F'"
        },
        "execution_time": 0.015075445175170898,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Color Format",
        "purpose": "验证非HEX格式的颜色值是否能被正确拒绝。",
        "args": {
          "style_name": "InvalidColorFormat",
          "font": "Tahoma",
          "size": 9,
          "color": "red"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: 're'"
        },
        "execution_time": 0.0251767635345459,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证缺少必填字段时是否能正确报错或拒绝操作。",
        "args": {
          "style_name": "",
          "font": "",
          "size": 0,
          "color": ""
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: Failed to create custom style: invalid literal for int() with base 16: ''"
        },
        "execution_time": 0.014583587646484375,
        "is_functional_test": false
      }
    ],
    "format_text": [
      {
        "case_name": "Apply Bold and Italic to Valid Text Range",
        "purpose": "验证对文档中指定文本范围应用粗体和斜体格式的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 10,
          "end_pos": 30,
          "format_options": {
            "bold": true,
            "italic": true
          }
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03589677810668945,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Only Bold Formatting",
        "purpose": "验证仅启用粗体格式而禁用其他格式选项的功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 5,
          "end_pos": 15,
          "format_options": {
            "bold": true,
            "italic": false
          }
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.035323143005371094,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Formatting with Invalid Document ID",
        "purpose": "验证传递无效的 document_id 是否能正确处理错误。",
        "args": {
          "document_id": "invalid_document_path.docx",
          "start_pos": 0,
          "end_pos": 10,
          "format_options": {
            "bold": true
          }
        },
        "response": {
          "error": "ToolException: Error executing tool format_text: Failed to format text: Package not found at 'invalid_document_path.docx'"
        },
        "execution_time": 0.004023313522338867,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Formatting with Negative Start Position",
        "purpose": "验证负数起始位置是否被正确拒绝，确保参数边界检查有效。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": -5,
          "end_pos": 10,
          "format_options": {
            "bold": true
          }
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.032972097396850586,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Formatting with End Before Start Position",
        "purpose": "验证结束位置小于起始位置时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 20,
          "end_pos": 10,
          "format_options": {
            "italic": true
          }
        },
        "response": {
          "error": "ToolException: Error executing tool format_text: Failed to format text: Start position cannot be greater than end position"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Formatting to Entire Document Text",
        "purpose": "测试最大可能文本范围（例如整个文档）的格式化能力。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 0,
          "end_pos": 1000,
          "format_options": {
            "bold": true,
            "italic": true
          }
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03629589080810547,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Inject Malformed Format Options",
        "purpose": "测试非法或恶意构造的 format_options 输入是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 0,
          "end_pos": 50,
          "format_options": {
            "script_injection": "<script>alert('XSS')</script>"
          }
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03478074073791504,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Formatting with Null Format Options",
        "purpose": "验证当 format_options 为 null 时工具是否使用默认值或正确拒绝操作。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "start_pos": 0,
          "end_pos": 10,
          "format_options": null
        },
        "response": {
          "error": "ToolException: Error executing tool format_text: 1 validation error for format_textArguments\nformat_options\n  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.03065180778503418,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table to Existing Document with Valid Data",
        "purpose": "验证向一个已存在的Word文档中添加指定行数、列数及数据的表格的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 3,
          "cols": 2,
          "data": [
            [
              "Header1",
              "Header2"
            ],
            [
              "Row1Col1",
              "Row1Col2"
            ],
            [
              "Row2Col1",
              "Row2Col2"
            ]
          ]
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.033109426498413086,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "验证当rows参数为0时是否能正确处理错误（边界条件）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 0,
          "cols": 2,
          "data": []
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.033357858657836914,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Columns",
        "purpose": "验证当cols参数为0时是否能正确处理错误（边界条件）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 2,
          "cols": 0,
          "data": []
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: Failed to add table: Data dimensions must match rows and columns"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Mismatched Data Size",
        "purpose": "验证传入的数据大小与rows和cols不匹配时是否能正确报错。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 3,
          "cols": 2,
          "data": [
            [
              "A",
              "B"
            ],
            [
              "C"
            ]
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: Failed to add table: Data dimensions must match rows and columns"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加表格时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "rows": 2,
          "cols": 2,
          "data": [
            [
              "Test1",
              "Test2"
            ],
            [
              "Test3",
              "Test4"
            ]
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: Failed to add table: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.007508039474487305,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Special Characters in Data",
        "purpose": "验证包含特殊字符的数据能否被正确添加到表格中。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 2,
          "cols": 1,
          "data": [
            [
              "!@#$%^&*()_+=-`~[]{}|;':\",./<>?"
            ],
            [
              "<script>alert('XSS')</script>"
            ]
          ]
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.033728837966918945,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Data",
        "purpose": "测试非法输入（如嵌套数组或对象）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "rows": 2,
          "cols": 2,
          "data": [
            [
              "SafeData",
              "AnotherSafe"
            ],
            [
              "Malicious",
              [
                "nested",
                "array"
              ]
            ]
          ]
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03549909591674805,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "rows": 2,
          "cols": 2,
          "data": [
            [
              "A",
              "B"
            ],
            [
              "C",
              "D"
            ]
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005532264709472656,
        "is_functional_test": false
      }
    ],
    "add_image": [
      {
        "case_name": "Add Image to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加图片的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.04554176330566406,
        "is_functional_test": true
      },
      {
        "case_name": "Add Image with Special Characters in Path",
        "purpose": "验证包含特殊字符的图片路径能否被正确处理。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\image@2025#Test!.png"
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: Failed to add image: Image file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\image@2025#Test!.png"
        },
        "execution_time": 0.004008293151855469,
        "is_functional_test": true
      },
      {
        "case_name": "Add Image to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加图片时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: Failed to add image: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.0035009384155273438,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Image Path",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious\r\n<script>alert('XSS')</script>.png"
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: Failed to add image: Image file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious\r\n<script>alert('XSS')</script>.png"
        },
        "execution_time": 0.004212141036987305,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: 1 validation error for add_imageArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Image Path",
        "purpose": "验证当image_path参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: 1 validation error for add_imageArguments\nimage_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003722667694091797,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Zero-Length Image Path",
        "purpose": "测试最小边界值：零长度图片路径是否被接受或正确拒绝。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool add_image: Failed to add image: Image file not found: "
        },
        "execution_time": 0.003004789352416992,
        "is_functional_test": false
      },
      {
        "case_name": "Add Large Image to Document",
        "purpose": "验证工具是否能够处理大尺寸图片文件的插入操作。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250507-151716.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.029883384704589844,
        "is_functional_test": true
      }
    ],
    "add_footnote_to_document": [
      {
        "case_name": "Add Footnote to Document with Valid Parameters",
        "purpose": "验证使用有效文档ID和文本向Word文档添加脚注的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is a test footnote."
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: Failed to add footnote: 'Document' object has no attribute 'add_footnote'"
        },
        "execution_time": 0.015357732772827148,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Footnote to Document",
        "purpose": "验证向文档中添加空脚注时工具是否正常处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": ""
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: Failed to add footnote: 'Document' object has no attribute 'add_footnote'"
        },
        "execution_time": 0.015140056610107422,
        "is_functional_test": true
      },
      {
        "case_name": "Add Footnote with Special Characters",
        "purpose": "验证包含特殊字符的脚注文本能否被正确添加到文档中。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This footnote contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: Failed to add footnote: 'Document' object has no attribute 'add_footnote'"
        },
        "execution_time": 0.030084609985351562,
        "is_functional_test": true
      },
      {
        "case_name": "Add Footnote to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加脚注时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should not be added because the document does not exist."
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Text",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is a test footnote with malicious content:\r\n<script>alert('XSS')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: Failed to add footnote: 'Document' object has no attribute 'add_footnote'"
        },
        "execution_time": 0.015714168548583984,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "text": "This footnote should not be added due to invalid document ID type."
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003004312515258789,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input",
        "purpose": "验证当text参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004015684127807617,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加分页符的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.027832746505737305,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Newly Created Document",
        "purpose": "验证向新创建的文档中添加分页符的功能是否正常。",
        "args": {
          "document_id": "workspace/DefaultDocument.docx"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.017621994018554688,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Document with Special Characters in Path",
        "purpose": "验证包含特殊字符的文档路径能否被正确处理。",
        "args": {
          "document_id": "workspace/Document@2025#Test!.docx"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.01853799819946289,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Malformed Document ID Input",
        "purpose": "测试非法输入（如非字符串或嵌套结构）是否会引发异常或安全问题。",
        "args": {
          "document_id": [
            "malicious",
            "input"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool add_page_break: 1 validation error for add_page_breakArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=['malicious', 'input'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.01856708526611328,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_page_break: 1 validation error for add_page_breakArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004542827606201172,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Document ID",
        "purpose": "验证当document_id参数为null时是否能正确处理错误。",
        "args": {
          "document_id": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_page_break: 1 validation error for add_page_breakArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Empty Document Path",
        "purpose": "验证空文档路径是否能被正确拒绝并返回错误信息。",
        "args": {
          "document_id": ""
        },
        "response": {
          "error": "ToolException: Error executing tool add_page_break: Failed to add page break: Package not found at ''"
        },
        "execution_time": 0.0029015541076660156,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Long Document Path",
        "purpose": "测试极限边界值：极长文档路径是否能被正确处理。",
        "args": {
          "document_id": "workspace/ThisIsAVeryLongTitleThatExceedsOneHundredCharactersInLengthForTestingPurposesOnly.docx"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.019214391708374023,
        "is_functional_test": true
      }
    ],
    "add_header_footer": [
      {
        "case_name": "Add Header to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加header的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is the header content for testing.",
          "is_header": true
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.030166149139404297,
        "is_functional_test": true
      },
      {
        "case_name": "Add Footer to Existing Document",
        "purpose": "验证向一个已存在的Word文档中添加footer的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is the footer content for testing.",
          "is_header": false
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.030256986618041992,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Header to Document",
        "purpose": "验证向文档中添加空header时工具是否正常处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "",
          "is_header": true
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.028931617736816406,
        "is_functional_test": true
      },
      {
        "case_name": "Add Header with Special Characters",
        "purpose": "验证包含特殊字符的header文本能否被正确添加到文档中。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "Header with special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?",
          "is_header": true
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.043271780014038086,
        "is_functional_test": true
      },
      {
        "case_name": "Add Header to Nonexistent Document",
        "purpose": "验证尝试向不存在的文档中添加header时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should not be added because the document does not exist.",
          "is_header": true
        },
        "response": {
          "error": "ToolException: Error executing tool add_header_footer: Failed to add header/footer: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx'"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Header Text",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": "This is a test header with malicious content:\r\n<script>alert('XSS')</script>",
          "is_header": true
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.03232932090759277,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type for Header",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "text": "This header should not be added due to invalid document ID type.",
          "is_header": true
        },
        "response": {
          "error": "ToolException: Error executing tool add_header_footer: 1 validation error for add_header_footerArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Text Input for Footer",
        "purpose": "验证当text参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "text": null,
          "is_header": false
        },
        "response": {
          "error": "ToolException: Error executing tool add_header_footer: 1 validation error for add_header_footerArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004026889801025391,
        "is_functional_test": false
      }
    ],
    "protect_document": [
      {
        "case_name": "Protect Document with Valid Path and Password",
        "purpose": "验证使用有效文档路径和密码设置文档保护的基本功能。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": "secure123"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 2.9742629528045654,
        "is_functional_test": true
      },
      {
        "case_name": "Protect Document with Empty Password",
        "purpose": "测试当提供空密码时是否能正确处理（边界情况）。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": ""
        },
        "response": {
          "result": "true"
        },
        "execution_time": 3.8542237281799316,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Use Special Characters in Password",
        "purpose": "验证包含特殊字符的密码能否被正确应用，确保系统不因特殊字符引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": "!@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 4.622830867767334,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Protect Nonexistent Document",
        "purpose": "验证尝试对不存在的文档进行保护时是否能正确返回错误信息。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "password": "failtest"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: Failed to protect document: (-2147352567, '发生意外。', (0, 'Microsoft Word', '很抱歉，找不到您的文件。该项目是否已移动、重命名或删除?\\r (D:\\\\...\\\\nonexistent_document.docx)', 'wdmain11.chm', 24654, -2146823114), None)"
        },
        "execution_time": 1.752898931503296,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document ID Type",
        "purpose": "验证当传递非字符串类型的document_id参数时是否能正确处理错误。",
        "args": {
          "document_id": 123456,
          "password": "invalidtype"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\ndocument_id\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Password Input",
        "purpose": "验证当password参数为null时是否能正确处理错误。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": null
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\npassword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004018545150756836,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Length Password",
        "purpose": "测试极限值：超长密码是否能被正确处理。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": "ThisIsAVeryLongPasswordThatExceedsTwoHundredCharactersInLengthForTestingPurposesOnlyAndShouldStillBeAcceptedByTheSystemWithoutAnyIssues"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 2.96183705329895,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malformed Password",
        "purpose": "测试非法输入（如嵌入控制字符或脚本代码）是否会引发异常或安全问题。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx",
          "password": "malicious_password\r\n<script>alert('XSS')</script>"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 4.6712188720703125,
        "is_functional_test": false
      }
    ],
    "convert_to_pdf": [
      {
        "case_name": "Convert Existing Word Document to PDF",
        "purpose": "验证工具能够将一个已存在的Word文档转换为PDF格式。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.docx"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\full_metadata.pdf"
        },
        "execution_time": 8.298817157745361,
        "is_functional_test": true
      },
      {
        "case_name": "Convert Word Document with Special Characters in Path",
        "purpose": "测试工具是否能正确处理包含特殊字符的文档路径并成功转换为PDF。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\Document@2025#Test!.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool convert_to_pdf: Failed to convert to PDF: (-2147352567, '发生意外。', (0, 'Microsoft Word', '很抱歉，找不到您的文件。该项目是否已移动、重命名或删除?\\r (D:\\\\...\\\\Document@2025#Test!.docx)', 'wdmain11.chm', 24654, -2146823114), None)"
        },
        "execution_time": 1.7867870330810547,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Convert Invalid File Type",
        "purpose": "验证工具是否能安全地处理非法或非Word文件类型的转换请求，防止潜在的安全风险。",
        "args": {
          "document_id": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "error": "Tool execution timed out after 50.0 seconds."
        },
        "execution_time": 50.0,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 117
}