{
  "server_name": "financial_data_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-financial_data_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\financial_data_mcp_server.py",
  "timestamp": "2025-07-13T23:16:42.006811",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    获取指定公司的财务报表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含收入报表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度收入报表:\n        get_income_statements(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    获取指定公司的资产负债表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含资产负债表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度资产负债表:\n        get_balance_sheets(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    获取指定公司的现金流量表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含现金流量表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度现金流量表:\n        get_cash_flows(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    获取指定股票的历史价格数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        start_date: 开始日期，格式为 'YYYY-MM-DD'（可选）。\n        end_date: 结束日期，格式为 'YYYY-MM-DD'（可选）。如果未提供，默认为当前日期。\n\n    Returns:\n        包含历史价格数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司从2023-01-01到2023-12-31的历史股价:\n        get_stock_prices(symbol=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "default": null,
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "default": null,
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    获取与公司或市场相关的最新金融新闻。\n    \n    Args:\n        ticker: 股票代码 (例如, 'AAPL' 代表苹果公司)（可选）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含金融新闻数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的最新5条新闻:\n        get_market_news(ticker=\"AAPL\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "default": null,
            "title": "Ticker",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    获取公司简介信息，包括行业、所在地等。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含公司简介信息的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的公司简介:\n        get_company_profile(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    获取分析师预测数据，如目标价格和收益预测。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含分析师预测数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的分析师预测数据:\n        get_analyst_estimates(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    获取公司股息历史记录。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股息历史记录的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股息历史记录:\n        get_dividend_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    查询股票分割历史。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股票分割历史的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股票分割历史:\n        get_splits_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    获取公司历史财报数据，如每股收益。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含历史财报数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的历史财报数据:\n        get_earnings_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    获取公司财务比率，如市盈率和负债权益比。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含财务比率数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的财务比率:\n        get_financial_ratios(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    获取公司股权结构数据，如机构持股比例。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股权结构数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股权结构数据:\n        get_ownership_data(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的简介信息（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.6100640296936035,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5876519680023193,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 股票代码不能为空"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5851647853851318,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5570223331451416,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5983893871307373,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5710666179656982,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的年度收入报表（正向测试）",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5582010746002197,
        "is_functional_test": true
      },
      {
        "case_name": "Quarterly Income Statement Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的季度收入报表",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5302057266235352,
        "is_functional_test": true
      },
      {
        "case_name": "TTM Income Statement Retrieval",
        "purpose": "验证工具能够成功获取苹果公司最近十二个月的收入报表",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5826337337493896,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit Income Statement Retrieval",
        "purpose": "验证工具能够处理自定义返回数量（最大值20）",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5637683868408203,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.6336495876312256,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 股票代码不能为空"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 1 validation error for get_income_statementsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008003711700439453,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证工具是否能正确处理非法的 period 参数",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.006504535675048828,
        "is_functional_test": false
      },
      {
        "case_name": "Exceed Max Limit Input",
        "purpose": "验证工具是否能正确处理超过最大值的 limit 参数",
        "args": {
          "symbol": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Limit Input",
        "purpose": "验证工具是否能正确处理负数的 limit 参数",
        "args": {
          "symbol": "AAPL",
          "limit": -1
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 返回数量限制超出范围: -1。有效范围是 1 到 20"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5901448726654053,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的年度资产负债表（正向测试，使用默认参数）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5737183094024658,
        "is_functional_test": true
      },
      {
        "case_name": "Quarterly Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的季度资产负债表数据",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 5.021223783493042,
        "is_functional_test": true
      },
      {
        "case_name": "TTM Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取苹果公司最近十二个月的资产负债表数据",
        "args": {
          "symbol": "AAPL",
          "period": "ttm"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 5.015171766281128,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit Balance Sheet Retrieval",
        "purpose": "验证工具能够处理自定义返回数量（最大值20）",
        "args": {
          "symbol": "AAPL",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6598334312438965,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6209375858306885,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 股票代码不能为空"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 1 validation error for get_balance_sheetsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证工具是否能正确处理非法的 period 参数",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval (Annual)",
        "purpose": "验证工具能够成功获取苹果公司的年度现金流量表数据（正向测试）",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 3.1144192218780518,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Cash Flow Retrieval (Quarterly)",
        "purpose": "验证工具能够成功获取苹果公司的季度现金流量表数据",
        "args": {
          "symbol": "AAPL",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5873565673828125,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Cash Flow Retrieval (TTM)",
        "purpose": "验证工具能够成功获取苹果公司最近十二个月的现金流量表数据",
        "args": {
          "symbol": "AAPL",
          "period": "ttm",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5505750179290771,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Limit Cash Flow Retrieval",
        "purpose": "验证工具能够处理自定义返回数量（最大值20）",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.603595495223999,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5909156799316406,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 股票代码不能为空"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 1 validation error for get_cash_flowsArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证工具是否能正确处理非法的 period 参数",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.01000070571899414,
        "is_functional_test": false
      },
      {
        "case_name": "Exceed Max Limit Input",
        "purpose": "验证工具是否能正确处理超过最大值的 limit 参数",
        "args": {
          "symbol": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.006998300552368164,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Limit Input",
        "purpose": "验证工具是否能正确处理负数的 limit 参数",
        "args": {
          "symbol": "AAPL",
          "limit": -1
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 返回数量限制超出范围: -1。有效范围是 1 到 20"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5749804973602295,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.54951810836792,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.8595287799835205,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.568854808807373,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的财务比率数据（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.570420265197754,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.8020927906036377,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 股票代码不能为空"
        },
        "execution_time": 0.010010242462158203,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.011279582977295,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.019404649734497,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.6387584209442139,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.8920845985412598,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的历史财报数据（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.017819404602051,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.0185322761535645,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 股票代码不能为空"
        },
        "execution_time": 0.003186941146850586,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.6627514362335205,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.0215160846710205,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.020684719085693,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.013854742050171,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的分析师预测数据（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.009218692779541,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.0138773918151855,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 股票代码不能为空"
        },
        "execution_time": 0.004851579666137695,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.024686098098755,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.6683592796325684,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.6767079830169678,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.6869678497314453,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具能够成功获取苹果公司从2023-01-01到2023-12-31的历史股价数据（正向测试）",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.022921085357666,
        "is_functional_test": true
      },
      {
        "case_name": "Stock Price Retrieval with Default End Date",
        "purpose": "验证工具在未提供 end_date 时默认使用当前日期获取历史股价数据",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.015844345092773,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.706221342086792,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 股票代码不能为空"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004298686981201172,
        "is_functional_test": false
      },
      {
        "case_name": "Start Date After End Date",
        "purpose": "验证工具是否能正确处理开始日期晚于结束日期的异常情况",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-12-31",
          "end_date": "2023-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.657026767730713,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.7134079933166504,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.010843753814697,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的股息历史记录（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6355204582214355,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.020650625228882,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 股票代码不能为空"
        },
        "execution_time": 0.004510164260864258,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 2.1768288612365723,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6970717906951904,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6455154418945312,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.02019190788269,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的股票分割历史（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5819659233093262,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5758056640625,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 股票代码不能为空"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5508935451507568,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5587494373321533,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5873799324035645,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5529770851135254,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具能够成功获取默认市场新闻（正向测试）",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5825591087341309,
        "is_functional_test": true
      },
      {
        "case_name": "Market News for Specific Ticker",
        "purpose": "验证工具能够成功获取特定股票代码的市场新闻",
        "args": {
          "ticker": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.6855497360229492,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Limit News Retrieval",
        "purpose": "验证工具在最大限制值20时是否能正确返回结果",
        "args": {
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.015562057495117,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Limit Value",
        "purpose": "验证工具在输入小于1的limit参数时是否抛出ValueError",
        "args": {
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: 0。有效范围是 1 到 20"
        },
        "execution_time": 0.002777099609375,
        "is_functional_test": false
      },
      {
        "case_name": "Exceed Max Limit Input",
        "purpose": "验证工具在输入超过20的limit参数时是否抛出ValueError",
        "args": {
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具是否能正确处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.813215732574463,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "ticker": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.6783514022827148,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证工具在 ticker 参数为空字符串时是否抛出 ValueError",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.00760817527771,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Ownership Data Retrieval",
        "purpose": "验证工具能够成功获取苹果公司的股权结构数据（正向测试）",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.67299222946167,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Stock Symbol Input",
        "purpose": "验证工具在输入无效股票代码时是否抛出 ValueError 异常",
        "args": {
          "symbol": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.6829900741577148,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证工具在 symbol 参数为空字符串时是否抛出 ValueError",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 股票代码不能为空"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Symbol",
        "purpose": "验证工具是否能正确处理包含特殊字符的 symbol 输入",
        "args": {
          "symbol": "!@#$%^"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.016344785690308,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol with Space",
        "purpose": "验证工具是否能正确处理包含空格的 symbol 输入",
        "args": {
          "symbol": "A AP L"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.8994052410125732,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Symbol Input",
        "purpose": "验证工具是否拒绝非字符串类型的 symbol 参数",
        "args": {
          "symbol": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nsymbol\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "API Failure Handling",
        "purpose": "模拟 API 请求失败情况，验证工具是否抛出 httpx.HTTPStatusError",
        "args": {
          "symbol": "FAILTEST"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.008963584899902,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Input",
        "purpose": "验证工具是否能处理较长的 symbol 输入并进行合理错误处理",
        "args": {
          "symbol": "VERYLONGSYMBOLINPUT1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5748140811920166,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 105
}