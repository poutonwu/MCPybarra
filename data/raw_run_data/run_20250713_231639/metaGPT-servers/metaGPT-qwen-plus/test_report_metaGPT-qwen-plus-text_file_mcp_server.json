{
  "server_name": "text_file_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-text_file_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\text_file_mcp_server.py",
  "timestamp": "2025-07-13T23:18:57.048104",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    读取多个文本文件内容，支持按行范围读取并返回文件哈希值。\n\n    Args:\n        file_paths: 要读取的文件路径列表。\n        start_line: 开始行号（可选）。如果指定，则必须同时指定 end_line。\n        end_line: 结束行号（可选）。如果指定，则必须同时指定 start_line。\n\n    Returns:\n        一个包含文件内容和哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或行号范围无效。\n        RuntimeError: 如果读取文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_paths": {
            "items": {},
            "title": "File Paths",
            "type": "array"
          },
          "start_line": {
            "default": null,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_paths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    创建新文本文件并写入内容。\n\n    Args:\n        file_path: 要创建的文件路径。\n        content: 要写入的内容。\n\n    Returns:\n        一个包含操作结果和文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件已经存在。\n        RuntimeError: 如果创建文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    向现有文本文件追加内容。\n\n    Args:\n        file_path: 要追加内容的文件路径。\n        content: 要追加的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或哈希验证失败。\n        RuntimeError: 如果追加内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    删除文本文件中特定范围的内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        start_line: 开始行号（包括）。\n        end_line: 结束行号（包括）。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号范围无效或哈希验证失败。\n        RuntimeError: 如果删除内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    在文本文件的指定位置插入内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        line_number: 插入位置的行号（从1开始计数）。\n        content: 要插入的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号无效或哈希验证失败。\n        RuntimeError: 如果插入内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "line_number",
          "content"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    应用精确修改到文本文件，并支持哈希验证。\n\n    Args:\n        file_path: 要修改的文件路径。\n        old_content: 需要被替换的旧内容。\n        new_content: 替换的新内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、旧内容不匹配或哈希验证失败。\n        RuntimeError: 如果修改文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "old_content": {
            "title": "Old Content",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "old_content",
          "new_content"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "基本功能测试 - 创建新文本文件并写入内容",
        "purpose": "验证工具能够成功创建一个新文本文件并写入指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "This is a test content for create_text_file."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 创建成功\",\n  \"hash\": \"3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e\"\n}"
        },
        "execution_time": 0.005991458892822266,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试覆盖现有文件",
        "purpose": "验证当目标路径已存在文件时，工具是否抛出 ValueError 防止覆盖已有文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_extracted_page.pdf",
          "content": "This should not overwrite the existing file."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_extracted_page.pdf 已经存在"
        },
        "execution_time": 0.00750732421875,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件路径无效",
        "purpose": "验证当提供非法或无效的文件路径时，工具是否能正确处理并抛出运行时错误。",
        "args": {
          "file_path": "D:\\invalid\\path\\that\\does\\not\\exist\\test_output.txt",
          "content": "Testing invalid path handling."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\invalid\\\\path\\\\that\\\\does\\\\not\\\\exist\\\\test_output.txt 创建成功\",\n  \"hash\": \"fa3cfbac5cb1d29aabc8f482a6136195bb19fee8afceecb35df7c761787fb775\"\n}"
        },
        "execution_time": 0.005005598068237305,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极短内容写入",
        "purpose": "验证工具能否处理极短的内容（如空字符串）写入。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_test.txt 创建成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.0050029754638671875,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符路径和内容",
        "purpose": "验证工具能否处理包含特殊字符的文件路径和内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt",
          "content": "Content with special chars: @ # & ( ) { } [ ]"
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#&()_dir\\\\special_chars_@#$.txt 创建成功\",\n  \"hash\": \"336d53940d08899cedba1b2a6c76b66da72af43553d73b2ef4846288b24b3cd8\"\n}"
        },
        "execution_time": 0.00799703598022461,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 缺失文件路径参数",
        "purpose": "验证当未提供 file_path 参数时是否触发参数验证错误。",
        "args": {
          "content": "Missing file path test."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 1 validation error for create_text_fileArguments\nfile_path\n  Field required [type=missing, input_value={'content': 'Missing file path test.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 缺失内容参数",
        "purpose": "验证当未提供 content 参数时是否触发参数验证错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_content_test.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 1 validation error for create_text_fileArguments\ncontent\n  Field required [type=missing, input_value={'file_path': 'D:\\\\devWor...ssing_content_test.txt'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 在隐藏目录中创建文件",
        "purpose": "验证工具能够在隐藏目录中创建文件并写入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_test_dir\\hidden_file.txt",
          "content": "Content inside hidden directory."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_test_dir\\\\hidden_file.txt'"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "基本功能测试 - 读取单个文件全部内容",
        "purpose": "验证工具能够正确读取一个文本文件的全部内容并返回哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\": {\n    \"content\": \"This is a test content for create_text_file.\",\n    \"hash\": \"3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e\"\n  }\n}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 读取多个文件全部内容",
        "purpose": "验证工具支持同时读取多个文本文件的全部内容，并为每个文件生成独立结果。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\": {\n    \"content\": \"This is a test content for create_text_file.\",\n    \"hash\": \"3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_test.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.008105993270874023,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 按行范围读取文件内容",
        "purpose": "验证工具可以按指定的行号范围读取文件内容。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ],
          "start_line": 1,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试读取隐藏文件",
        "purpose": "验证工具是否能安全地处理对隐藏文件（如.git目录）的读取请求，防止敏感信息泄露。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\": {\n    \"content\": \"[core]\\n\\trepositoryformatversion = 0\\n\\tfilemode = false\\n\\tbare = false\\n\\tlogallrefupdates = true\\n\\tignorecase = true\\n\",\n    \"hash\": \"16ede81ff8225a028ea47d7da268da123355decf7cc0fa7b66b8cc4060005fa6\"\n  }\n}"
        },
        "execution_time": 0.007636547088623047,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件路径不存在",
        "purpose": "验证当提供的文件路径不存在时，工具是否能抛出 ValueError 并正确反馈错误信息。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号范围无效",
        "purpose": "验证当提供非法行号范围（如 start_line > end_line 或负数）时，工具能否正确抛出异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ],
          "start_line": 5,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 读取空文件内容",
        "purpose": "验证工具在读取空文件时的行为是否符合预期，包括返回空字符串和正确的哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_test.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.007004976272583008,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件路径和名称",
        "purpose": "验证工具能否处理包含特殊字符的文件路径和文件名。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#&()_dir\\\\special_chars_@#$.txt\": {\n    \"content\": \"Content with special chars: @ # & ( ) { } [ ]\",\n    \"hash\": \"336d53940d08899cedba1b2a6c76b66da72af43553d73b2ef4846288b24b3cd8\"\n  }\n}"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": true
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "基本功能测试 - 向现有文件追加内容",
        "purpose": "验证工具能够成功向一个已存在的文本文件追加指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "Appended content for test.",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0070116519927978516,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 追加空字符串内容",
        "purpose": "验证工具可以正确处理向文件中追加空字符串内容的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt",
          "content": "",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.024509191513061523,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用预期哈希值验证追加后的内容",
        "purpose": "验证工具在提供 expected_hash 参数时，能正确校验追加后文件的哈希值是否符合预期。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "Additional content to trigger hash change.",
          "expected_hash": "5f62c1b9d3e748a0e3f8a5e5c4d3b2a1f0e7c6d5a4b8c7e1f9a0d2e"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: 3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e, 预期哈希: 5f62c1b9d3e748a0e3f8a5e5c4d3b2a1f0e7c6d5a4b8c7e1f9a0d2e"
        },
        "execution_time": 0.01000666618347168,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试追加内容到隐藏文件",
        "purpose": "验证工具能否安全地处理对隐藏文件（如 .git/config）的追加请求，防止敏感信息被篡改。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "content": "Malicious content injection attempt."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\",\n  \"hash\": \"18666cdd1e2f253da78fbaf9ed8cd188d97088c6f06ad93e765590a43125abce\"\n}"
        },
        "execution_time": 0.032525062561035156,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试追加内容到特殊字符路径中的文件",
        "purpose": "验证工具能否安全处理包含特殊字符的路径，防止路径解析错误或注入攻击。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt",
          "content": "Appending content to special character path file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#&()_dir\\\\special_chars_@#$.txt\",\n  \"hash\": \"4d6975c9424166400158fc2e2d6030dd813dcd1700df39dec0eb63249a7cdc7d\"\n}"
        },
        "execution_time": 0.019083738327026367,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在导致追加失败",
        "purpose": "验证当提供的文件路径不存在时，工具是否抛出 ValueError 并提示文件不存在。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "content": "Trying to append to a non-existent file."
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.013671636581420898,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 哈希验证失败",
        "purpose": "验证当提供错误的 expected_hash 值时，工具是否抛出 ValueError 并拒绝写入。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "New content that changes the hash.",
          "expected_hash": "wrong_hash_value_1234567890abcdef"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: 3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e, 预期哈希: wrong_hash_value_1234567890abcdef"
        },
        "execution_time": 0.01451253890991211,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符内容追加",
        "purpose": "验证工具能否正确处理包含特殊字符的内容追加，如换行符、引号等。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "\\n\\r\\t\"'`!@#$%^&*(){}[]<>|/=?+_-~",
          "expected_hash": null
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\nexpected_hash\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.011518716812133789,
        "is_functional_test": true
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "基本功能测试 - 在指定行插入内容",
        "purpose": "验证工具能够成功在文本文件的指定行号位置插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 2,
          "content": "This is the inserted content."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"dd68878fb834a0f479dca9128f8ef72c50ca8f1dddec9a7ec370a2c3970b501c\"\n}"
        },
        "execution_time": 0.0038301944732666016,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 插入内容并验证哈希值",
        "purpose": "验证工具在插入内容后，生成的文件哈希值与预期一致。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 1,
          "content": "Inserted at top of file.",
          "expected_hash": "3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 哈希验证失败。当前文件哈希: dd68878fb834a0f479dca9128f8ef72c50ca8f1dddec9a7ec370a2c3970b501c, 预期哈希: 3e635322dfe17120b12e52301501474f184e7050516bfa3e6960570dc459ce8e"
        },
        "execution_time": 0.006001949310302734,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 在空文件中插入内容",
        "purpose": "验证工具能够在空文件中正确插入内容，并更新文件状态。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt",
          "line_number": 1,
          "content": "First line in an empty file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_test.txt\",\n  \"hash\": \"8bcb87f97ecbe137c2f9145999da662d760476fb7de0c32271094d5bfb8b0e4d\"\n}"
        },
        "execution_time": 0.006264209747314453,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试向隐藏文件插入内容",
        "purpose": "验证工具是否能安全地处理对隐藏文件（如 .git/config）的插入请求，防止敏感信息被修改。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "line_number": 2,
          "content": "# This is a test insertion into a hidden file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\",\n  \"hash\": \"19bec0d8007cdecc3299c913ef2bba0643d70a2ed4673c5de6c06edcf9e0b1b0\"\n}"
        },
        "execution_time": 0.0069904327392578125,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径不存在时，工具是否能抛出 ValueError 并反馈错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "line_number": 1,
          "content": "Trying to insert into a non-existent file."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号超出文件范围",
        "purpose": "验证当提供超出文件实际行数的行号时，工具能否正确抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 100,
          "content": "Inserting at line number beyond actual file length."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号无效"
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 插入空字符串",
        "purpose": "验证工具在插入空字符串时的行为是否符合预期。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 1,
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"a759f21205bf2b2b8a8f8b86f6b2b4d916795fbcebaa70089117e6e5a9f897ed\"\n}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件路径和内容",
        "purpose": "验证工具能否处理包含特殊字符的文件路径和插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt",
          "line_number": 1,
          "content": "Content with special chars: @ # & ( ) { } [ ]"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#&()_dir\\\\special_chars_@#$.txt\",\n  \"hash\": \"b5beff3b06cc75c9f42faf33b437f79dbb5dfba2b91b6c74b7e2f52c0996f86e\"\n}"
        },
        "execution_time": 0.007288217544555664,
        "is_functional_test": true
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "基本功能测试 - 成功替换文件内容",
        "purpose": "验证工具能够成功修改文本文件中的指定内容，并返回操作结果。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "old_content": "This is a test content for create_text_file.",
          "new_content": "This is the updated content after patching."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 内容修改成功\",\n  \"hash\": \"e55d7d904c0b7a9e9148cc078c701140e988a5e9b3f4cafbfa7d8bfb71ecdbf4\"\n}"
        },
        "execution_time": 0.0056226253509521484,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 带哈希验证的替换",
        "purpose": "验证工具在提供预期哈希值时，能正确进行哈希校验并执行内容替换。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\empty_content_test.txt",
          "old_content": "",
          "new_content": "New content after hash-verified patch.",
          "expected_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\empty_content_test.txt 不存在"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改隐藏文件",
        "purpose": "验证工具是否能安全地处理对隐藏文件（如.git配置）的修改请求，防止敏感信息被篡改。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "old_content": "[core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true",
          "new_content": "[core]\n\trepositoryformatversion = 1\n\tfilemode = true\n\tbare = true\n\tlogallrefupdates = false\n\tignorecase = false"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 未找到需要替换的旧内容: [core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true"
        },
        "execution_time": 0.0037059783935546875,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径不存在时，工具是否能抛出 ValueError 并反馈错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\nonexistent_file.txt",
          "old_content": "Non-existent file content",
          "new_content": "Should not be applied"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.00900125503540039,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 旧内容不匹配",
        "purpose": "验证当提供的 old_content 与文件实际内容不一致时，工具能否抛出 ValueError。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\test_output.txt",
          "old_content": "Incorrect old content",
          "new_content": "This should not be applied"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\test_output.txt 不存在"
        },
        "execution_time": 0.009003162384033203,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 哈希验证失败",
        "purpose": "验证当提供的 expected_hash 与文件当前哈希不一致时，工具能否抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\test_output.txt",
          "old_content": "This is a test content for create_text_file.",
          "new_content": "This change should fail due to hash mismatch",
          "expected_hash": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\test_output.txt 不存在"
        },
        "execution_time": 0.00478363037109375,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 替换空字符串内容",
        "purpose": "验证工具能否处理 old_content 和 new_content 都为空字符串的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\empty_content_test.txt",
          "old_content": "",
          "new_content": ""
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\empty_content_test.txt 不存在"
        },
        "execution_time": 0.0044972896575927734,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符处理",
        "purpose": "验证工具能否处理包含特殊字符的文件路径和内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt",
          "old_content": "Content with special chars: @ # & ( ) { } [ ]",
          "new_content": "Updated content with special chars: @ # & ( ) { } [ ] -> modified"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt 不存在"
        },
        "execution_time": 0.0029976367950439453,
        "is_functional_test": true
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "基本功能测试 - 删除指定范围行内容",
        "purpose": "验证工具能够成功删除文本文件中从第2到第3行的内容，并返回正确的哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 2,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 删除单行内容",
        "purpose": "验证工具能够正确处理只删除一行内容的情况（start_line == end_line）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 的内容删除成功\",\n  \"hash\": \"e41c3c271bce44b72e5194e1c167688b076506815ae719d1493c377e0c58c0a8\"\n}"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 删除全部内容",
        "purpose": "验证工具能够删除整个文件内容（start_line=1，end_line=最大行数）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 1,
          "end_line": 5
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改隐藏文件内容",
        "purpose": "验证工具是否能安全地操作隐藏文件（如 .git/config），防止未经授权的修改。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config 的内容删除成功\",\n  \"hash\": \"f3c0ebc290e3820e83658c1bf09e2d32da66d51618738f0163b43d29ae444cb2\"\n}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径不存在时，工具能否抛出 ValueError 并反馈错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt 不存在"
        },
        "execution_time": 0.006002664566040039,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号范围无效",
        "purpose": "验证当提供非法行号范围（如 start_line > end_line 或负数）时，工具能否正确抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 5,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 删除空文件内容",
        "purpose": "验证工具在尝试删除空文件内容时的行为是否符合预期（应抛出错误或返回空文件）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_test.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_test.txt 的内容删除成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件路径和名称",
        "purpose": "验证工具能否处理包含特殊字符的文件路径和文件名进行删除操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#&()_dir\\special_chars_@#$.txt 不存在"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 48
}