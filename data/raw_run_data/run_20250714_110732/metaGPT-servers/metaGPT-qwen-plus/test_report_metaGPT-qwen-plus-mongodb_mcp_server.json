{
  "server_name": "mongodb_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-mongodb_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\mongodb_mcp_server.py",
  "timestamp": "2025-07-14T11:09:08.333408",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON字符串。\n    \n    Raises:\n        OperationFailure: 如果获取数据库列表时发生错误。\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 要列出集合的数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON字符串。\n    \n    Raises:\n        ValueError: 如果数据库名称为空或空白字符。\n        OperationFailure: 如果获取集合列表时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 要插入文档的数据库名称 (必填)。\n        collection_name: 要插入文档的集合名称 (必填)。\n        document: 要插入的文档数据 (必填)，以字典形式提供。\n\n    Returns:\n        一个字符串，表示插入成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称为空，或者文档不是字典类型。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 要查询的数据库名称 (必填)。\n        collection_name: 要查询的集合名称 (必填)。\n        query: 查询条件 (必填)，以字典形式提供。\n        projection: 投影参数 (可选)，指定要返回的字段。\n        limit: 限制返回结果数量 (可选)，0表示无限制。\n\n    Returns:\n        一个包含查询结果的JSON字符串。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要更新文档的数据库名称 (必填)。\n        collection_name: 要更新文档的集合名称 (必填)。\n        query: 更新条件 (必填)，以字典形式提供。\n        update: 更新内容 (必填)，以字典形式提供。\n        multi: 是否更新多个文档 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示更新成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称、查询条件或更新内容无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 要删除文档的数据库名称 (必填)。\n        collection_name: 要删除文档的集合名称 (必填)。\n        query: 删除条件 (必填)，以字典形式提供。\n        multi: 是否批量删除模式 (可选)，默认为False。\n\n    Returns:\n        一个字符串，表示删除成功或失败的消息。\n\n    Raises:\n        ValueError: 如果数据库名称、集合名称或查询条件无效。\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "列出所有数据库的基本功能测试",
        "purpose": "验证mcp_list_databases工具在默认参数下能够成功列出MongoDB服务器上的所有数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.006513833999633789,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问数据库列表的安全性测试",
        "purpose": "模拟用户没有足够权限访问数据库列表时的行为，确保系统返回安全的错误提示而非敏感信息。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      },
      {
        "case_name": "MongoDB服务未运行时的错误处理测试",
        "purpose": "验证当MongoDB服务未启动时，调用mcp_list_databases是否能正确抛出OperationFailure异常。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.007384300231933594,
        "is_functional_test": false
      },
      {
        "case_name": "空数据库环境下的边界测试",
        "purpose": "验证当MongoDB中没有任何数据库时，工具是否能正确返回空列表而不报错。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.005510091781616211,
        "is_functional_test": true
      },
      {
        "case_name": "数据库名称含特殊字符的边界测试",
        "purpose": "验证当数据库名称包含特殊字符（如@、#、$等）时，工具能否正确识别并列出。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "长时间连接后超时的错误处理测试",
        "purpose": "模拟网络延迟或连接超时的情况，验证工具是否能优雅地处理连接失败问题。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.004506826400756836,
        "is_functional_test": false
      },
      {
        "case_name": "多次连续调用工具的功能稳定性测试",
        "purpose": "验证在短时间内多次调用mcp_list_databases工具时，系统是否保持稳定并正常响应。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "数据库数量达到上限的边界测试",
        "purpose": "验证当MongoDB中存在大量数据库时，工具是否仍能正确返回完整列表且不丢失数据。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"test_db\"]}"
        },
        "execution_time": 0.008030414581298828,
        "is_functional_test": true
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "列出指定数据库中的集合的基本功能测试",
        "purpose": "验证mcp_list_collections工具在提供有效数据库名称时能够成功列出该数据库下的所有集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0034835338592529297,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问集合列表的安全性测试",
        "purpose": "模拟用户没有足够权限访问指定数据库的集合列表时的行为，确保系统返回安全的错误提示而非敏感信息。",
        "args": {
          "database_name": "restricted_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0040776729583740234,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的参数验证测试",
        "purpose": "验证当数据库名称参数为空字符串时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": ""
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: 'database_name' 不能为空。"
        },
        "execution_time": 0.00793600082397461,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称含空白字符的参数验证测试",
        "purpose": "验证当数据库名称参数包含空白字符（如空格、换行等）时，工具是否能正确识别并抛出ValueError异常。",
        "args": {
          "database_name": " test_db "
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.003996372222900391,
        "is_functional_test": false
      },
      {
        "case_name": "指定数据库不存在的错误处理测试",
        "purpose": "验证当提供的数据库名称不存在时，工具是否能正确抛出OperationFailure异常。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.004101991653442383,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称含特殊字符的边界测试",
        "purpose": "验证当数据库名称包含特殊字符（如@、#、$等）时，工具能否正确识别并列出对应的集合。",
        "args": {
          "database_name": "db_with_@#$_special_chars"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "长时间连接后超时的错误处理测试",
        "purpose": "模拟网络延迟或连接超时的情况，验证工具是否能优雅地处理连接失败问题并抛出OperationFailure异常。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0075304508209228516,
        "is_functional_test": false
      },
      {
        "case_name": "多次连续调用工具的功能稳定性测试",
        "purpose": "验证在短时间内多次调用mcp_list_collections工具时，系统是否保持稳定并正常响应。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"test_collection\"]}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "插入文档的基本功能测试",
        "purpose": "验证mcp_insert_document工具在提供有效数据库、集合名称和文档时能够成功插入文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "插入文档到不存在的数据库的安全性测试",
        "purpose": "验证当用户尝试将文档插入到无权限访问的数据库时，系统是否返回安全提示而非敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Bob",
            "age": 25
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003804922103881836,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的错误处理测试",
        "purpose": "验证当数据库名称参数为空字符串时，工具是否正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.0050029754638671875,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的错误处理测试",
        "purpose": "验证当集合名称参数为空字符串时，工具是否正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.007522106170654297,
        "is_functional_test": false
      },
      {
        "case_name": "文档为非字典类型的错误处理测试",
        "purpose": "验证当提供的文档不是字典类型时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": "[\"list_item\"]"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value=['list_item'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.004091978073120117,
        "is_functional_test": false
      },
      {
        "case_name": "插入包含特殊字符字段的文档边界测试",
        "purpose": "验证当文档中包含特殊字符（如@、#、$）时，工具能否正确插入。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "username": "user@domain#123",
            "token": "$secret$value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.007506608963012695,
        "is_functional_test": true
      },
      {
        "case_name": "目标集合不存在的错误处理测试",
        "purpose": "验证当指定的集合不存在时，工具是否仍能正确插入文档（MongoDB会自动创建集合）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "document": {
            "note": "This collection may not exist yet."
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 文档插入失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "基本查询功能测试",
        "purpose": "验证mcp_find_documents工具在提供有效数据库、集合和查询条件时能够成功返回匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004508256912231445,
        "is_functional_test": true
      },
      {
        "case_name": "带投影参数的基本查询测试",
        "purpose": "验证当提供projection参数时，查询结果是否仅包含指定字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          },
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "限制返回结果数量的查询测试",
        "purpose": "验证limit参数是否能正确限制返回结果的数量。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.009517669677734375,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问集合的安全性测试",
        "purpose": "模拟用户没有足够权限访问目标集合的情况，确保系统返回安全的错误提示而非敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "secure_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.005510807037353516,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的参数验证测试",
        "purpose": "验证当数据库名称为空字符串时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'database_name' 不能为空。"
        },
        "execution_time": 0.00980997085571289,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的参数验证测试",
        "purpose": "验证当集合名称为空字符串时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 'collection_name' 不能为空。"
        },
        "execution_time": 0.0065228939056396484,
        "is_functional_test": false
      },
      {
        "case_name": "无效查询条件的错误处理测试",
        "purpose": "验证当查询条件为非法类型（如None或非字典）时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nquery\n  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.011512994766235352,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符作为查询条件的边界测试",
        "purpose": "验证当查询条件中包含特殊字符（如正则表达式符号）时，工具是否能正确解析并执行查询。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "username": "@user#123"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 文档查询失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006514072418212891,
        "is_functional_test": true
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "更新单个文档的基本功能测试",
        "purpose": "验证mcp_update_document工具在提供有效数据库、集合、查询条件和更新内容时能够成功更新一个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 30
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004010677337646484,
        "is_functional_test": true
      },
      {
        "case_name": "更新多个文档的多更新模式测试",
        "purpose": "验证当multi参数为True时，是否能正确更新所有匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "status": "active"
          },
          "update": {
            "$set": {
              "status": "inactive"
            }
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问数据库的安全性测试",
        "purpose": "模拟用户对目标数据库没有足够权限的情况，确保系统返回安全错误而非敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "secure_collection",
          "query": {
            "role": "admin"
          },
          "update": {
            "$set": {
              "role": "user"
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006513118743896484,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的参数验证测试",
        "purpose": "验证当数据库名称为空字符串时，工具是否抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "name": "Bob"
          },
          "update": {
            "$set": {
              "age": 25
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.0055086612701416016,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的参数验证测试",
        "purpose": "验证当集合名称为空字符串时，工具是否抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "name": "Charlie"
          },
          "update": {
            "$set": {
              "age": 40
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.005995750427246094,
        "is_functional_test": false
      },
      {
        "case_name": "查询条件为空的参数验证测试",
        "purpose": "验证当查询条件为空字典时，工具是否抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "update": {
            "$set": {
              "age": 50
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0055158138275146484,
        "is_functional_test": false
      },
      {
        "case_name": "更新内容为空的参数验证测试",
        "purpose": "验证当更新内容为空字典时，工具是否抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "David"
          },
          "update": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "数据库或集合不存在的错误处理测试",
        "purpose": "验证当指定的数据库或集合不存在时，工具是否能正确处理并返回失败消息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "name": "Eve"
          },
          "update": {
            "$set": {
              "age": 60
            }
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 文档更新失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004518032073974609,
        "is_functional_test": false
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "删除文档的基本功能测试",
        "purpose": "验证mcp_delete_document工具在提供有效数据库、集合和查询条件时能够成功删除文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "key": "value"
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "批量删除文档的功能测试",
        "purpose": "验证mcp_delete_document工具在启用multi=True模式下，能够正确批量删除符合条件的多个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "category": "test"
          },
          "multi": true
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006544351577758789,
        "is_functional_test": true
      },
      {
        "case_name": "无权限访问数据库的安全性测试",
        "purpose": "模拟用户没有足够权限访问目标数据库时的行为，确保系统返回安全的错误提示而非敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "secure_collection",
          "query": {
            "user": "admin"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.0039958953857421875,
        "is_functional_test": false
      },
      {
        "case_name": "数据库名称为空的参数验证测试",
        "purpose": "验证当数据库名称参数为空字符串时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "",
          "collection_name": "test_collection",
          "query": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'database_name' 不能为空。"
        },
        "execution_time": 0.002511739730834961,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称为空的参数验证测试",
        "purpose": "验证当集合名称参数为空字符串时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "query": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 'collection_name' 不能为空。"
        },
        "execution_time": 0.005013942718505859,
        "is_functional_test": false
      },
      {
        "case_name": "查询条件为空的参数验证测试",
        "purpose": "验证当查询条件为空字典或null时，工具是否能正确抛出ValueError异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.006520986557006836,
        "is_functional_test": false
      },
      {
        "case_name": "数据库不存在的错误处理测试",
        "purpose": "验证当提供的数据库名称不存在时，工具是否能正确处理并返回失败消息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "test_collection",
          "query": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "集合名称含特殊字符的边界测试",
        "purpose": "验证当集合名称包含特殊字符（如@、#、$等）时，工具能否正确识别并执行删除操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "collection_@#$_special",
          "query": {
            "id": "12345"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 文档删除失败: 'MockMongoClient' object is not callable"
        },
        "execution_time": 0.00452113151550293,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 47
}