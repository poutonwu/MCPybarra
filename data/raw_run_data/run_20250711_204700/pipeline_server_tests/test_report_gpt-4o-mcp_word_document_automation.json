{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-11T20:47:03.548953",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        str: A success message along with the path of the created document.\n\n    Example:\n        create_document()\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        file_path (str): Path to the Word document to open.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        open_document(\"example.docx\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently opened Word document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        save_document()\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently opened Word document under a new name.\n\n    Args:\n        new_file_path (str): The new file path for saving the document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        save_as_document(\"new_name.docx\")\n    ",
      "args_schema": {
        "properties": {
          "new_file_path": {
            "title": "New File Path",
            "type": "string"
          }
        },
        "required": [
          "new_file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently opened Word document.\n\n    Args:\n        copy_file_path (str): The file path for the copied document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        create_document_copy(\"copy_name.docx\")\n    ",
      "args_schema": {
        "properties": {
          "copy_file_path": {
            "title": "Copy File Path",
            "type": "string"
          }
        },
        "required": [
          "copy_file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text (str): The text content of the paragraph.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_paragraph(\"This is a paragraph.\")\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text (str): The text content of the heading.\n        level (int): Heading level (e.g., 1 for H1, 2 for H2).\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_heading(\"Chapter 1\", 1)\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows (int): Number of rows in the table.\n        columns (int): Number of columns in the table.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_table(3, 4)\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        str: A success message.\n\n    Example:\n        add_page_break()\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "创建新Word文档",
        "purpose": "验证create_document工具能够成功创建一个新的Word文档并返回路径信息。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
        },
        "execution_time": 0.020525217056274414,
        "is_functional_test": true
      }
    ],
    "add_paragraph": [
      {
        "case_name": "添加基本段落到文档",
        "purpose": "验证add_paragraph工具能够成功将一个基本文本段落添加到当前文档中。",
        "args": {
          "text": "这是一个测试段落。"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "添加空字符串段落",
        "purpose": "验证当传入空字符串时，add_paragraph是否能处理并添加一个空段落。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.002000570297241211,
        "is_functional_test": true
      },
      {
        "case_name": "添加长文本段落",
        "purpose": "验证add_paragraph工具可以处理较长的文本内容并正确添加到文档中。",
        "args": {
          "text": "这是一段非常长的文本内容，用于测试工具是否能够正确处理大量文字输入，并将其作为一个段落插入到文档中。这段文字应该被完整保留，包括标点符号和换行格式（如果支持）。"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.0040090084075927734,
        "is_functional_test": true
      },
      {
        "case_name": "添加包含特殊字符的段落",
        "purpose": "验证add_paragraph工具能够正确处理包含特殊字符的文本内容。",
        "args": {
          "text": "这是一个包含特殊字符的段落：!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`1234567890-=qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.007526874542236328,
        "is_functional_test": true
      },
      {
        "case_name": "添加中文段落",
        "purpose": "验证add_paragraph工具能够正确处理中文文本并添加到文档中。",
        "args": {
          "text": "这是一个中文段落，用于测试中文字符是否能够正常显示。"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.008506059646606445,
        "is_functional_test": true
      },
      {
        "case_name": "添加带换行符的段落",
        "purpose": "验证add_paragraph工具是否能够正确处理带有换行符的文本。",
        "args": {
          "text": "这是第一行\n这是第二行\n这是第三行"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落时注入恶意脚本内容",
        "purpose": "验证add_paragraph是否对潜在的脚本注入进行安全处理或过滤。",
        "args": {
          "text": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.0061609745025634766,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落时传递非字符串类型参数",
        "purpose": "验证工具是否对非字符串类型的参数进行有效校验并返回错误信息。",
        "args": {
          "text": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004996061325073242,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落时传递null值",
        "purpose": "验证工具是否能够处理null值并给出适当错误提示。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0025086402893066406,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落时使用特殊Unicode字符",
        "purpose": "验证add_paragraph是否能够正确处理Unicode字符集中的特殊字符。",
        "args": {
          "text": "Unicode字符测试：©®™€£¥¢∞§¶•ªº–—‘’“”«»÷×±−√≠≤≥"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.004007577896118164,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落时使用制表符和空白字符",
        "purpose": "验证工具是否能够正确处理包含制表符和多个空白字符的文本。",
        "args": {
          "text": "\t\t这是一个包含制表符和   多个空格 的段落。"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully\"}"
        },
        "execution_time": 0.007508277893066406,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "添加基本标题到文档",
        "purpose": "验证add_heading工具能够成功将一个基本标题添加到当前文档中。",
        "args": {
          "text": "文档标题",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.00543212890625,
        "is_functional_test": true
      },
      {
        "case_name": "添加H2级别标题",
        "purpose": "验证add_heading工具可以正确添加H2级别的标题。",
        "args": {
          "text": "章节一",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "添加H6级别标题",
        "purpose": "验证add_heading工具是否支持最低级别的标题（H6）。",
        "args": {
          "text": "子节标题",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.006526470184326172,
        "is_functional_test": true
      },
      {
        "case_name": "添加空字符串标题",
        "purpose": "验证当传入空字符串时，add_heading是否能处理并添加一个空标题。",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.009492635726928711,
        "is_functional_test": true
      },
      {
        "case_name": "添加长文本标题",
        "purpose": "验证add_heading工具是否能够处理较长的标题文本内容。",
        "args": {
          "text": "这是一个非常长的标题文本，用于测试工具是否能够正确处理大量文字输入，并将其作为标题插入到文档中。",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.005517721176147461,
        "is_functional_test": true
      },
      {
        "case_name": "添加包含特殊字符的标题",
        "purpose": "验证add_heading工具是否能够正确处理包含特殊字符的标题文本。",
        "args": {
          "text": "这是一个包含特殊字符的标题：!@#$%^&*()_+{}[]|\\:;\"'<>,.?/~`",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": true
      },
      {
        "case_name": "添加中文标题",
        "purpose": "验证add_heading工具是否能够正确处理中文字符作为标题内容。",
        "args": {
          "text": "第一章 引言",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.004507541656494141,
        "is_functional_test": true
      },
      {
        "case_name": "添加带换行符的标题",
        "purpose": "验证add_heading是否能够处理带有换行符的标题文本。",
        "args": {
          "text": "这是第一行\n这是第二行",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.007995843887329102,
        "is_functional_test": true
      },
      {
        "case_name": "添加标题时注入恶意脚本内容",
        "purpose": "验证add_heading是否对潜在的脚本注入进行安全处理或过滤。",
        "args": {
          "text": "<script>alert('xss')</script>",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题时传递非字符串类型的text参数",
        "purpose": "验证工具是否对非字符串类型的text参数进行有效校验并返回错误信息。",
        "args": {
          "text": 12345,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007523059844970703,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题时传递null值的text参数",
        "purpose": "验证工具是否能够处理null值的text参数并给出适当错误提示。",
        "args": {
          "text": null,
          "level": 2
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003996372222900391,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题时使用非法的负数级别",
        "purpose": "验证工具是否能够处理负数作为标题级别的非法参数。",
        "args": {
          "text": "非法标题",
          "level": -1
        },
        "response": {
          "result": "{\"error\": \"level must be in range 0-9, got -1\"}"
        },
        "execution_time": 0.006524324417114258,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题时使用超过最大限制的级别",
        "purpose": "验证工具是否能够处理超过最大允许值的标题级别（如H7）。",
        "args": {
          "text": "超限标题",
          "level": 7
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.0055043697357177734,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题时使用浮点数作为级别参数",
        "purpose": "验证工具是否能够处理非整数类型的标题级别参数。",
        "args": {
          "text": "浮点标题",
          "level": 2.5
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\nlevel\n  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=2.5, input_type=float]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float"
        },
        "execution_time": 0.0034134387969970703,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "添加基本表格到文档",
        "purpose": "验证add_table工具能够成功将一个基本的表格添加到当前文档中。",
        "args": {
          "rows": 3,
          "columns": 4
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": true
      },
      {
        "case_name": "添加1行1列表格",
        "purpose": "验证add_table工具可以处理最小尺寸的表格（1x1）。",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.0045168399810791016,
        "is_functional_test": true
      },
      {
        "case_name": "添加0行或0列边界测试",
        "purpose": "验证工具是否能正确拒绝创建行数或列数为0的表格。",
        "args": {
          "rows": 0,
          "columns": 5
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.008516550064086914,
        "is_functional_test": false
      },
      {
        "case_name": "添加负值行列数表格",
        "purpose": "验证工具是否对负值的行或列参数进行有效校验并返回错误信息。",
        "args": {
          "rows": -2,
          "columns": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": false
      },
      {
        "case_name": "添加大尺寸表格",
        "purpose": "验证add_table工具是否支持添加较大尺寸的表格，如100x50。",
        "args": {
          "rows": 100,
          "columns": 50
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.018060684204101562,
        "is_functional_test": true
      },
      {
        "case_name": "添加仅一行多列表格",
        "purpose": "验证只有一行但有多列的表格能否被正确添加。",
        "args": {
          "rows": 1,
          "columns": 10
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.004509449005126953,
        "is_functional_test": true
      },
      {
        "case_name": "添加仅一列多行表格",
        "purpose": "验证只有一列但有多行的表格能否被正确添加。",
        "args": {
          "rows": 10,
          "columns": 1
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.007004737854003906,
        "is_functional_test": true
      },
      {
        "case_name": "传递非整数类型参数",
        "purpose": "验证工具是否对非整数类型的参数进行有效校验并返回错误信息。",
        "args": {
          "rows": "five",
          "columns": 3
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\nrows\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='five', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0034606456756591797,
        "is_functional_test": false
      },
      {
        "case_name": "传递null值参数",
        "purpose": "验证工具是否能够处理null值参数并给出适当错误提示。",
        "args": {
          "rows": null,
          "columns": 5
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\nrows\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "同时添加段落和表格",
        "purpose": "验证在已有段落的文档中添加表格是否正常工作。",
        "args": {
          "rows": 4,
          "columns": 4
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.00613093376159668,
        "is_functional_test": true
      },
      {
        "case_name": "连续多次添加不同大小表格",
        "purpose": "验证连续调用add_table工具时，是否能正确添加多个不同尺寸的表格。",
        "args": {
          "rows": 5,
          "columns": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": true
      },
      {
        "case_name": "添加表格时注入恶意内容",
        "purpose": "验证add_table是否对潜在的脚本注入进行安全处理或过滤。",
        "args": {
          "rows": 3,
          "columns": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully\"}"
        },
        "execution_time": 0.004009723663330078,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "添加页面分隔符到文档",
        "purpose": "验证add_page_break工具能够成功在当前文档中插入一个页面分隔符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": true
      },
      {
        "case_name": "连续添加多个页面分隔符",
        "purpose": "验证add_page_break工具可以多次调用并在文档中正确插入多个页面分隔符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.007527589797973633,
        "is_functional_test": true
      },
      {
        "case_name": "在段落后添加页面分隔符",
        "purpose": "验证在使用add_paragraph添加内容后，add_page_break能否正常插入页面分隔符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": true
      },
      {
        "case_name": "在空文档中添加页面分隔符",
        "purpose": "验证新创建的空白文档中是否可以成功插入页面分隔符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0035037994384765625,
        "is_functional_test": true
      },
      {
        "case_name": "添加页面分隔符后保存文档",
        "purpose": "验证添加页面分隔符后，文档可正常保存且格式未丢失。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004004716873168945,
        "is_functional_test": true
      },
      {
        "case_name": "跨页内容布局测试",
        "purpose": "验证页面分隔符是否能正确影响后续内容的排版，确保其出现在新页面。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0062618255615234375,
        "is_functional_test": true
      },
      {
        "case_name": "添加页面分隔符并检查文件格式兼容性",
        "purpose": "验证插入页面分隔符后的文档仍保持有效的Word格式，并可被其他办公软件正确读取。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "添加页面分隔符时注入恶意脚本",
        "purpose": "验证add_page_break工具是否对潜在的脚本注入进行安全处理或过滤。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "无文档上下文时添加页面分隔符",
        "purpose": "验证当没有打开或创建文档时调用add_page_break是否会返回合理的错误信息。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.006512880325317383,
        "is_functional_test": false
      },
      {
        "case_name": "尝试在只读文档中添加页面分隔符",
        "purpose": "验证add_page_break工具在目标文档为只读状态时是否能正确报错并拒绝操作。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004165172576904297,
        "is_functional_test": false
      },
      {
        "case_name": "在受密码保护的文档中添加页面分隔符",
        "purpose": "验证add_page_break工具是否能处理加密文档并提示适当错误。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.003003835678100586,
        "is_functional_test": false
      },
      {
        "case_name": "在非常规文件路径下添加页面分隔符",
        "purpose": "验证add_page_break工具是否支持特殊字符文件路径下的操作，如包含Unicode、空格或长路径。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully\"}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "保存新创建的Word文档",
        "purpose": "验证save_document工具能够成功保存通过create_document创建的新文档。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.016663789749145508,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含基本段落的文档",
        "purpose": "验证save_document能够正确保存已添加基础文本内容的文档。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.01755666732788086,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含空段落的文档",
        "purpose": "验证当文档中存在空段落时，save_document能否正常保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.020939111709594727,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含长文本段落的文档",
        "purpose": "验证save_document是否能正确处理并保存包含大量文本内容的段落。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.020437240600585938,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含特殊字符的文档",
        "purpose": "验证save_document是否能正确保存含有特殊字符的文档内容。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.02001953125,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含中文内容的文档",
        "purpose": "验证save_document是否支持中文字符的正确保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.0184786319732666,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含换行符的文档",
        "purpose": "验证save_document是否能正确处理并保存带有换行符的文本内容。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.021144628524780273,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含Unicode字符的文档",
        "purpose": "验证save_document是否能正确处理并保存包含Unicode字符的内容。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.01999211311340332,
        "is_functional_test": true
      },
      {
        "case_name": "保存包含制表符和空白字符的文档",
        "purpose": "验证save_document是否能正确处理并保存含制表符和多个空格的段落。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.021192073822021484,
        "is_functional_test": true
      },
      {
        "case_name": "在无打开文档时调用保存",
        "purpose": "验证当没有文档被打开时，调用save_document是否会返回适当的错误信息。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.01821589469909668,
        "is_functional_test": false
      },
      {
        "case_name": "尝试保存到受限制路径的文档",
        "purpose": "验证save_document是否能处理文件系统权限不足的情况并给出适当提示。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.019301176071166992,
        "is_functional_test": false
      },
      {
        "case_name": "保存超大文档（模拟）",
        "purpose": "验证save_document是否能处理非常大的文档对象并成功保存。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.021797657012939453,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "将当前文档另存为新文件",
        "purpose": "验证save_as_document工具能够成功将当前打开的Word文档另存为指定的新文件路径。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy_saved.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output_happy_saved.docx\"}"
        },
        "execution_time": 0.018839120864868164,
        "is_functional_test": true
      },
      {
        "case_name": "使用已存在文件路径进行保存",
        "purpose": "验证当提供的new_file_path指向一个已存在的文件时，save_as_document是否能正确覆盖或处理该情况。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output_happy.docx\"}"
        },
        "execution_time": 0.01762104034423828,
        "is_functional_test": true
      },
      {
        "case_name": "尝试保存到不存在的目录",
        "purpose": "验证当目标路径中的目录不存在时，save_as_document是否能正确处理并返回错误信息。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_folder\\test_output.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\nonexistent_folder\\\\\\\\test_output.docx'\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "使用空字符串作为文件路径",
        "purpose": "验证当提供空字符串作为new_file_path时，工具是否能正确校验参数并返回错误信息。",
        "args": {
          "new_file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: ''\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名文件",
        "purpose": "验证save_as_document能否处理包含特殊字符的文件名，并成功保存文档。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\@#$.docx\"}"
        },
        "execution_time": 0.020230531692504883,
        "is_functional_test": true
      },
      {
        "case_name": "使用长文件路径保存文档",
        "purpose": "验证工具在提供非常长的文件路径时是否仍能正常保存文档。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_filename_that_might_cause_issues_if_the_system_has_length_restrictions.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\this_is_a_very_long_filename_that_might_cause_issues_if_the_system_has_length_restrictions.docx\"}"
        },
        "execution_time": 0.02214527130126953,
        "is_functional_test": true
      },
      {
        "case_name": "尝试保存非Word文档内容",
        "purpose": "验证当当前没有打开任何Word文档时调用save_as_document是否会抛出异常或失败。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.01955580711364746,
        "is_functional_test": false
      },
      {
        "case_name": "使用NULL值作为文件路径",
        "purpose": "验证当传入null作为new_file_path时，工具是否能正确处理并返回参数校验错误。",
        "args": {
          "new_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0037169456481933594,
        "is_functional_test": false
      },
      {
        "case_name": "使用只读文件路径进行保存",
        "purpose": "验证当目标路径是只读属性时，save_as_document是否能处理并返回相应错误提示。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\CON.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\CON.docx\"}"
        },
        "execution_time": 0.022182226181030273,
        "is_functional_test": false
      },
      {
        "case_name": "保存文档为受限制扩展名",
        "purpose": "验证当用户尝试保存为系统禁止的扩展名（如.exe）时，工具是否进行安全过滤。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious.exe"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\malicious.exe\"}"
        },
        "execution_time": 0.018024444580078125,
        "is_functional_test": false
      },
      {
        "case_name": "保存文档时路径中包含中文",
        "purpose": "验证save_as_document是否支持包含中文字符的路径和文件名。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试文档_另存为.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u6d4b\\u8bd5\\u6587\\u6863_\\u53e6\\u5b58\\u4e3a.docx\"}"
        },
        "execution_time": 0.02029871940612793,
        "is_functional_test": true
      },
      {
        "case_name": "使用UNC网络路径进行保存",
        "purpose": "验证工具是否支持将文档保存到网络共享路径（UNC路径格式）。",
        "args": {
          "new_file_path": "\\\\127.0.0.1\\share\\test_output_network.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: '\\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\share\\\\\\\\test_output_network.docx'\"}"
        },
        "execution_time": 0.029680967330932617,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "复制当前打开的Word文档",
        "purpose": "验证create_document_copy工具能够成功复制当前打开的Word文档，并保存到指定路径。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output_happy_copied.docx\"}"
        },
        "execution_time": 0.018171310424804688,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符文件名进行文档复制",
        "purpose": "验证create_document_copy工具是否支持包含特殊字符的文件名进行复制操作。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\@#$_copied.docx\"}"
        },
        "execution_time": 0.023538827896118164,
        "is_functional_test": true
      },
      {
        "case_name": "尝试覆盖已存在的目标文件",
        "purpose": "验证create_document_copy在目标文件已存在时是否能正常覆盖或抛出合理错误。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output_happy.docx\"}"
        },
        "execution_time": 0.019014596939086914,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档至非法路径",
        "purpose": "验证create_document_copy工具在无效路径下是否能返回合理的错误信息。",
        "args": {
          "copy_file_path": "Z:\\invalid_drive\\nonexistent_folder\\test_output_happy_copied.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'Z:\\\\\\\\invalid_drive\\\\\\\\nonexistent_folder\\\\\\\\test_output_happy_copied.docx'\"}"
        },
        "execution_time": 0.003507375717163086,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档时传递空路径参数",
        "purpose": "验证create_document_copy是否对空字符串路径进行有效校验并返回错误信息。",
        "args": {
          "copy_file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: ''\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档时传递null路径",
        "purpose": "验证create_document_copy是否能处理null值并给出适当错误提示。",
        "args": {
          "copy_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006368875503540039,
        "is_functional_test": false
      },
      {
        "case_name": "使用超长文件路径进行文档复制",
        "purpose": "验证create_document_copy是否能处理超长文件路径并成功复制文档。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_filename_that_might_cause_issues_if_the_system_has_length_restrictions_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\this_is_a_very_long_filename_that_might_cause_issues_if_the_system_has_length_restrictions_copied.docx\"}"
        },
        "execution_time": 0.019202709197998047,
        "is_functional_test": true
      },
      {
        "case_name": "复制非UTF-8编码路径中的文档",
        "purpose": "验证create_document_copy是否支持Unicode路径下的文档复制。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b_copied.docx\"}"
        },
        "execution_time": 0.018018007278442383,
        "is_functional_test": true
      },
      {
        "case_name": "尝试复制未打开的文档",
        "purpose": "验证create_document_copy在没有打开任何文档的情况下是否能正确报错。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_doc_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\unopened_doc_copied.docx\"}"
        },
        "execution_time": 0.020825624465942383,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档时注入脚本路径",
        "purpose": "验证create_document_copy是否对潜在的脚本注入路径进行安全处理。",
        "args": {
          "copy_file_path": "<script>alert('xss')</script>.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 22] Invalid argument: \\\"<script>alert('xss')</script>.docx\\\"\"}"
        },
        "execution_time": 0.009574174880981445,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档时传递非字符串类型路径参数",
        "purpose": "验证create_document_copy是否对非字符串类型的路径参数进行有效校验并返回错误信息。",
        "args": {
          "copy_file_path": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_file_path\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004438877105712891,
        "is_functional_test": false
      },
      {
        "case_name": "复制文档到受保护系统路径",
        "purpose": "验证create_document_copy是否能检测并阻止写入操作系统关键目录（如Windows系统目录）。",
        "args": {
          "copy_file_path": "C:\\Windows\\test_output_happy_copied.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\test_output_happy_copied.docx'\"}"
        },
        "execution_time": 0.0043833255767822266,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "打开合法存在的Word文档",
        "purpose": "验证open_document工具能够成功打开一个合法且存在的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.023241519927978516,
        "is_functional_test": true
      },
      {
        "case_name": "尝试打开不存在的文件路径",
        "purpose": "验证当提供的文件路径不存在时，工具是否能正确处理并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx'\"}"
        },
        "execution_time": 0.009463787078857422,
        "is_functional_test": false
      },
      {
        "case_name": "尝试打开非Word格式的文件",
        "purpose": "验证当提供的文件不是Word文档（如PDF）时，工具是否能识别并拒绝操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\2023.nlposs-1.24.pdf'\"}"
        },
        "execution_time": 0.007449626922607422,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符命名的Word文件进行打开测试",
        "purpose": "验证工具能否正确处理包含特殊字符的文件名并成功打开该文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.023886919021606445,
        "is_functional_test": true
      },
      {
        "case_name": "尝试打开空文件路径",
        "purpose": "验证工具在未提供文件路径或路径为空字符串时的行为。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"Package not found at ''\"}"
        },
        "execution_time": 0.0051059722900390625,
        "is_functional_test": false
      },
      {
        "case_name": "尝试打开受保护的可执行文件",
        "purpose": "验证工具是否会阻止尝试打开潜在恶意或非法类型的文件（如.exe）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious.exe"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.027923583984375,
        "is_functional_test": false
      },
      {
        "case_name": "打开长文件名的Word文档",
        "purpose": "验证工具是否支持长文件名的Word文档打开操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_filename_that_might_cause_issues_if_the_system_has_length_restrictions.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.025752782821655273,
        "is_functional_test": true
      },
      {
        "case_name": "尝试传递null作为文件路径参数",
        "purpose": "验证工具对null值输入的处理能力，并返回适当的错误提示。",
        "args": {
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool open_document: 1 validation error for open_documentArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "尝试打开中文命名的Word文档",
        "purpose": "验证工具是否支持打开以中文命名的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.03361034393310547,
        "is_functional_test": true
      },
      {
        "case_name": "尝试打开隐藏或系统保留名称的文件",
        "purpose": "验证工具是否能处理尝试打开系统保留名称文件（如CON.docx）的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\CON.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.02002716064453125,
        "is_functional_test": false
      },
      {
        "case_name": "连续多次调用打开同一个文档",
        "purpose": "验证工具在短时间内重复打开同一文档时的稳定性和一致性。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_happy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.022052288055419922,
        "is_functional_test": true
      },
      {
        "case_name": "尝试打开被其他进程占用的文档",
        "purpose": "模拟文件被锁定情况，验证工具是否能优雅处理文件访问冲突。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_doc_copied.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully\"}"
        },
        "execution_time": 0.019025325775146484,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 98
}