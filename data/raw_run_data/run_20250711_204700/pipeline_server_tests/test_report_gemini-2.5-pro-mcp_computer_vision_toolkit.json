{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_computer_vision_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_computer_vision_toolkit/refined/server.py",
  "timestamp": "2025-07-11T21:11:14.962195",
  "tools": [
    {
      "name": "save_image",
      "description": "Saves an image from a source path to a destination path.\n    This function is useful for creating copies or changing the format of an image file.\n\n    Args:\n        source_path (str): The full path to the existing image file.\n        destination_path (str): The full path where the new image file will be saved.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path where the image was successfully saved, or an error message.\n\n    Example:\n        save_image(source_path=\"input/logo.png\", destination_path=\"output/logo_copy.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "save_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image",
      "description": "Changes the dimensions of an image to a specified width and height.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the resized image file.\n        width (int): The target width for the resized image in pixels.\n        height (int): The target height for the resized image in pixels.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created resized image, or an error message.\n\n    Example:\n        resize_image(input_path=\"input/photo.jpg\", output_path=\"output/photo_resized.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "width",
          "height"
        ],
        "title": "resize_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image",
      "description": "Extracts a rectangular region from an image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the cropped image file.\n        x (int): The x-coordinate of the top-left corner of the crop area.\n        y (int): The y-coordinate of the top-left corner of the crop area.\n        width (int): The width of the crop rectangle.\n        height (int): The height of the crop rectangle.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created cropped image, or an error message.\n\n    Example:\n        crop_image(input_path=\"input/scenery.png\", output_path=\"output/scenery_cropped.png\", x=100, y=150, width=300, height=200)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats",
      "description": "Retrieves basic statistical information about an image, such as its\n    dimensions and number of color channels.\n\n    Args:\n        input_path (str): The path to the image file to be analyzed.\n\n    Returns:\n        str: A JSON string containing the image's statistics: {'width': int, 'height': int, 'channels': int}, or an error message.\n\n    Example:\n        get_image_stats(input_path=\"input/image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          }
        },
        "required": [
          "input_path"
        ],
        "title": "get_image_statsArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter",
      "description": "Applies a pre-defined filter to an image. Supported filters are 'blur',\n    'grayscale', and 'sharpen'.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the filtered image file.\n        filter_type (str): The type of filter to apply. Must be one of 'blur', 'grayscale', or 'sharpen'.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created filtered image, or an error message.\n\n    Example:\n        apply_filter(input_path=\"input/portrait.jpg\", output_path=\"output/portrait_blurred.jpg\", filter_type=\"blur\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "filter_type"
        ],
        "title": "apply_filterArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges",
      "description": "Detects and highlights edges in an image using the Canny edge detection algorithm.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the resulting edge-detected image.\n        threshold1 (float): The first (lower) threshold for the hysteresis procedure.\n        threshold2 (float): The second (higher) threshold for the hysteresis procedure.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created edge-map image, or an error message.\n\n    Example:\n        detect_edges(input_path=\"input/building.jpg\", output_path=\"output/building_edges.jpg\", threshold1=100.0, threshold2=200.0)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edgesArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold",
      "description": "Applies a fixed-level binary threshold to a grayscale image.\n\n    Args:\n        input_path (str): The path to the source image file (will be converted to grayscale).\n        output_path (str): The path to save the thresholded image.\n        threshold_value (float): The pixel intensity value used as the threshold.\n        max_value (float): The value assigned to pixels that exceed the threshold (e.g., 255 for white).\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created thresholded image, or an error message.\n\n    Example:\n        apply_threshold(input_path=\"input/text.png\", output_path=\"output/text_binary.png\", threshold_value=127.0, max_value=255.0)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_thresholdArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours",
      "description": "Finds the contours of objects in a binary image and draws them onto a new image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the image with contours drawn on it.\n\n    Returns:\n        str: A JSON string with a confirmation message and the number of contours found, or an error message.\n\n    Example:\n        detect_contours(input_path=\"input/shapes.png\", output_path=\"output/shapes_contours.png\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path"
        ],
        "title": "detect_contoursArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes",
      "description": "A simplified shape detection tool that identifies and counts circles and rectangles in an image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the image with detected shapes drawn on it.\n\n    Returns:\n        str: A JSON string with a message and counts of detected circles and rectangles, or an error message.\n\n    Example:\n        find_shapes(input_path=\"input/geometry.jpg\", output_path=\"output/geometry_detected.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path"
        ],
        "title": "find_shapesArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具可以成功将图像从源路径保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_copy.png"
        },
        "response": {
          "result": "{\"message\": \"Image successfully saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_copy.png\"}"
        },
        "execution_time": 0.0349278450012207,
        "is_functional_test": true
      },
      {
        "case_name": "Image Format Conversion",
        "purpose": "验证工具是否支持更改图像格式（PNG -> JPG）",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\hit_converted.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.015508413314819336,
        "is_functional_test": true
      },
      {
        "case_name": "Save to Nested Path",
        "purpose": "验证工具能否正确处理嵌套目录的保存操作",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg"
        },
        "response": {
          "result": "{\"message\": \"Image successfully saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\xue_saved.jpg\"}"
        },
        "execution_time": 0.10175228118896484,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Destination",
        "purpose": "测试包含特殊字符的目标路径是否能被正确处理",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icons\\icon_月亮与星星.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\icon@#%&()_saved.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icons\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.010541439056396484,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具能否处理包含 Unicode 字符的文件名",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.pptx",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\智能软件工_副本.pptx"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u667a\\u80fd\\u8f6f\\u4ef6\\u5de5.pptx\"}"
        },
        "execution_time": 0.009512662887573242,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具是否能够处理长路径文件的保存",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\long_path_test.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_file_name_that_might_be_used_for_testing_purposes.txt"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\long_path_test.txt\"}"
        },
        "execution_time": 0.018518686294555664,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection in File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\icon_test_safe.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.030058622360229492,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Source File",
        "purpose": "测试当源文件不存在时工具的错误处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_icons\\icon_database_storage.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_source_test.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_icons\\\\icon_database_storage.png\"}"
        },
        "execution_time": 0.03504180908203125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Source Path",
        "purpose": "测试无效源路径输入时的参数验证机制",
        "args": {
          "source_path": "",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_source_empty.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.021195650100708008,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Destination Path",
        "purpose": "测试无效目标路径输入时的参数验证机制",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "destination_path": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.020015239715576172,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否允许覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.01650714874267578,
        "is_functional_test": true
      },
      {
        "case_name": "Save Without Extension",
        "purpose": "测试没有扩展名的目标路径是否能被正确处理",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\file_without_extension"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.01105952262878418,
        "is_functional_test": false
      }
    ],
    "get_image_stats": [
      {
        "case_name": "Basic Image Stats",
        "purpose": "验证工具可以成功获取图像的基本统计信息（宽度、高度、通道数）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"width\": 1080, \"height\": 715, \"channels\": 3}"
        },
        "execution_time": 0.014555692672729492,
        "is_functional_test": true
      },
      {
        "case_name": "Stats for JPG Image",
        "purpose": "验证工具能正确处理JPG格式图像并返回统计信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"width\": 1080, \"height\": 715, \"channels\": 3}"
        },
        "execution_time": 0.011517047882080078,
        "is_functional_test": true
      },
      {
        "case_name": "Stats for Nested Path Image",
        "purpose": "验证工具能否正确处理嵌套路径中的图像文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg"
        },
        "response": {
          "result": "{\"width\": 3568, \"height\": 2416, \"channels\": 3}"
        },
        "execution_time": 0.05487322807312012,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具是否支持包含 Unicode 字符的图像文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b.pdf\"}"
        },
        "execution_time": 0.0049896240234375,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Name",
        "purpose": "测试包含特殊字符的图像文件名是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.docx\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.docx\"}"
        },
        "execution_time": 0.0035152435302734375,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Image File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.005507707595825195,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径时的参数验证机制",
        "args": {
          "input_path": ""
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File Input",
        "purpose": "验证工具能否正确识别非图像文件并返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.0035104751586914062,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具是否能够处理长路径图像文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_might_be_used_for_testing_purposes.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_might_be_used_for_testing_purposes.png\"}"
        },
        "execution_time": 0.005519866943359375,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Extension File",
        "purpose": "测试没有扩展名的输入路径是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\file_without_extension"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\file_without_extension\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Resolution Image",
        "purpose": "测试工具能否处理高分辨率图像文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.jpg"
        },
        "response": {
          "result": "{\"width\": 1080, \"height\": 715, \"channels\": 3}"
        },
        "execution_time": 0.010093927383422852,
        "is_functional_test": true
      }
    ],
    "resize_image": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具可以成功将图像调整为指定的尺寸",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_resized.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_resized.png\"}"
        },
        "execution_time": 0.028973102569580078,
        "is_functional_test": true
      },
      {
        "case_name": "Resize and Convert Format",
        "purpose": "验证工具是否支持在调整大小的同时更改图像格式（PNG -> JPG）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_resized.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_resized.jpg\"}"
        },
        "execution_time": 0.019029855728149414,
        "is_functional_test": true
      },
      {
        "case_name": "Resize with Nested Output Path",
        "purpose": "验证工具能否正确处理嵌套目录的输出路径并调整图像大小",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_resized.jpg",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.06662416458129883,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具能否处理包含 Unicode 字符的文件名进行图像调整",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\智能软件工_resized.png",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u667a\\u80fd\\u8f6f\\u4ef6\\u5de5.png\"}"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Paths",
        "purpose": "测试包含特殊字符的输入和输出路径是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\icon@#%&()_resized.png",
          "width": 600,
          "height": 400
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.png\"}"
        },
        "execution_time": 0.0035049915313720703,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否允许覆盖已存在的目标文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\existing_file.png\"}"
        },
        "execution_time": 0.026059389114379883,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Zero Width",
        "purpose": "测试宽度为零时的错误处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\zero_width_resized.png",
          "width": 0,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive integers.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Negative Height",
        "purpose": "测试高度为负数时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\negative_height_resized.png",
          "width": 800,
          "height": -100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive integers.\"}"
        },
        "execution_time": 0.005042552947998047,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_resized.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.005073070526123047,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.01624584197998047,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in File Names",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\icon_sql_injection_resized.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.0042724609375,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Resolution Resize",
        "purpose": "测试工具能否处理高分辨率图像并调整大小",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\high_res_resized.jpg",
          "width": 4096,
          "height": 2160
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\high_res_resized.jpg\"}"
        },
        "execution_time": 0.03327536582946777,
        "is_functional_test": true
      }
    ],
    "crop_image": [
      {
        "case_name": "Basic Image Crop",
        "purpose": "验证工具可以成功从图像中裁剪出指定区域并保存到目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_cropped.png\"}"
        },
        "execution_time": 0.017519712448120117,
        "is_functional_test": true
      },
      {
        "case_name": "Crop and Convert Format",
        "purpose": "验证工具是否支持在裁剪时更改图像格式（PNG -> JPG）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_cropped.jpg",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_cropped.jpg\"}"
        },
        "execution_time": 0.013488292694091797,
        "is_functional_test": true
      },
      {
        "case_name": "Crop from Nested Path",
        "purpose": "验证工具能否正确处理嵌套目录中的图像裁剪操作",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_cropped.jpg",
          "x": 50,
          "y": 75,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.04890847206115723,
        "is_functional_test": true
      },
      {
        "case_name": "Crop with Special Characters in Output",
        "purpose": "测试包含特殊字符的目标路径是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\crop@#%&()_test.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\crop@#%&()_test.png\"}"
        },
        "execution_time": 0.018574953079223633,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具能否处理包含 Unicode 字符的文件名进行裁剪",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》.pdf",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\条例_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b.pdf\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具是否能够处理长路径文件的裁剪操作",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_might_be_used_for_testing_purposes.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\long_filename_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_might_be_used_for_testing_purposes.png\"}"
        },
        "execution_time": 0.006520271301269531,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection in File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\sql_injection_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.003988504409790039,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.004511117935180664,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径时的参数验证机制",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_empty.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.007044553756713867,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径输入时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.01548910140991211,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否允许覆盖已存在的目标文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\existing_file.png\"}"
        },
        "execution_time": 0.01702880859375,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Without Extension",
        "purpose": "测试没有扩展名的目标路径是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\file_without_extension",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\file_without_extension. Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.015596628189086914,
        "is_functional_test": false
      }
    ],
    "apply_filter": [
      {
        "case_name": "Basic Blur Filter Application",
        "purpose": "验证工具可以成功对图像应用 'blur' 滤镜并保存到指定路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_blurred.png",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"message\": \"Filter 'blur' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_blurred.png\"}"
        },
        "execution_time": 0.029155492782592773,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Grayscale Filter Application",
        "purpose": "验证工具可以成功对图像应用 'grayscale' 滤镜并保存到指定路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_grayscale.jpg",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"message\": \"Filter 'grayscale' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\xue_grayscale.jpg\"}"
        },
        "execution_time": 0.0825490951538086,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Sharpen Filter Application",
        "purpose": "验证工具可以成功对图像应用 'sharpen' 滤镜并保存到指定路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_resized.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_sharpened.jpg",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_resized.jpg\"}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Nested Path Image",
        "purpose": "验证工具能否正确处理嵌套目录中的源图像文件并应用滤镜",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_nested_filtered.jpg",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"message\": \"Filter 'blur' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\xue_nested_filtered.jpg\"}"
        },
        "execution_time": 0.08035469055175781,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter and Convert Format",
        "purpose": "验证工具是否支持在应用滤镜的同时更改图像格式（如 PNG -> JPG）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_jpg_version.jpg",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"message\": \"Filter 'grayscale' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_jpg_version.jpg\"}"
        },
        "execution_time": 0.01601123809814453,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling with Filter",
        "purpose": "验证工具能否处理包含 Unicode 字符的图像文件名并应用滤镜",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》.pdf",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\条例_灰度版.png",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b.pdf\"}"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Input File Name",
        "purpose": "测试包含特殊字符的输入文件名是否能被正确处理并应用滤镜",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.docx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\special_filtered_file.png",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.docx\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in File Name with Filter",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名并应用滤镜",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.docx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\safe_output.png",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.docx\"}"
        },
        "execution_time": 0.006509542465209961,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Source File for Filter",
        "purpose": "测试当源图像文件不存在时，工具是否能返回适当的错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_source_filter.png",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0037147998809814453,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path for Filter",
        "purpose": "测试无效输入路径时的参数验证机制",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_filter.png",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.0043604373931884766,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path for Filter",
        "purpose": "测试无效输出路径时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.020894289016723633,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter to Non-Image File",
        "purpose": "验证工具能否正确识别非图像文件并返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\filtered_text_file.png",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.004597663879394531,
        "is_functional_test": false
      }
    ],
    "detect_edges": [
      {
        "case_name": "Basic Edge Detection",
        "purpose": "验证工具可以成功对图像进行Canny边缘检测并保存结果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_edges.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_edges.jpg\"}"
        },
        "execution_time": 0.012533426284790039,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Default Thresholds",
        "purpose": "验证工具使用默认阈值参数执行Canny边缘检测的能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_edges_default_thresholds.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\xue_edges_default_thresholds.jpg\"}"
        },
        "execution_time": 0.10851454734802246,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on PNG Image",
        "purpose": "验证工具能否正确处理PNG格式图像并进行边缘检测",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_edges.png",
          "threshold1": 80.0,
          "threshold2": 180.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_edges.png\"}"
        },
        "execution_time": 0.022043466567993164,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling for Input",
        "purpose": "测试工具是否支持包含 Unicode 字符的输入文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.pptx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\edge_unicode_input.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u667a\\u80fd\\u8f6f\\u4ef6\\u5de5.pptx\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Input File Name",
        "purpose": "测试包含特殊字符的输入文件名是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.docx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\edge_special_chars_output.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.docx\"}"
        },
        "execution_time": 0.005034208297729492,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in Input File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的输入文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\safe_edge_output.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.005438566207885742,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_edge.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径时的参数验证机制",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_edge.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.005606651306152344,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.014525890350341797,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing Edge Map",
        "purpose": "验证工具是否允许覆盖已存在的目标边缘图文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\existing_file.jpg\"}"
        },
        "execution_time": 0.018788814544677734,
        "is_functional_test": true
      },
      {
        "case_name": "Zero Threshold Values",
        "purpose": "测试工具在阈值为0时的行为",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\zero_threshold_edges.jpg",
          "threshold1": 0.0,
          "threshold2": 0.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\zero_threshold_edges.jpg\"}"
        },
        "execution_time": 0.13767600059509277,
        "is_functional_test": true
      },
      {
        "case_name": "High Threshold Values",
        "purpose": "测试工具在高阈值下的边缘检测效果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\high_threshold_edges.jpg",
          "threshold1": 250.0,
          "threshold2": 300.0
        },
        "response": {
          "result": "{\"error\": \"Threshold values must be between 0 and 255.\"}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": true
      }
    ],
    "apply_threshold": [
      {
        "case_name": "Basic Threshold Application",
        "purpose": "验证工具可以成功对灰度图像应用二值化阈值处理并保存结果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_thresholded.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_thresholded.png\"}"
        },
        "execution_time": 0.016182899475097656,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with JPG Input",
        "purpose": "验证工具能正确处理JPG格式的输入图像并进行阈值处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_thresholded.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\nature_thresholded.jpg\"}"
        },
        "execution_time": 0.014024734497070312,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with Custom Max Value",
        "purpose": "验证工具支持使用非默认的 max_value（例如100）进行阈值处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_thresholded_custom_max.png",
          "threshold_value": 127.0,
          "max_value": 100.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\xue_thresholded_custom_max.png\"}"
        },
        "execution_time": 0.08397364616394043,
        "is_functional_test": true
      },
      {
        "case_name": "Low Threshold Value",
        "purpose": "验证工具在较低阈值下仍能正常工作（如 threshold_value = 10.0）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_cropped.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_low_threshold.png",
          "threshold_value": 10.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_cropped.png\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "High Threshold Value",
        "purpose": "验证工具在较高阈值下仍能正常工作（如 threshold_value = 245.0）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_resized.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_high_threshold.png",
          "threshold_value": 245.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.0058100223541259766,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具能否处理包含 Unicode 字符的文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.pptx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\智能软件工_thresholded.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u667a\\u80fd\\u8f6f\\u4ef6\\u5de5.pptx\"}"
        },
        "execution_time": 0.005463838577270508,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in Output File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的输出文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\icon_test';_DROP_TABLE_icons;--.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.018781423568725586,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_threshold.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径时的参数验证机制",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_threshold.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.0075151920318603516,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: . Reason: OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.01668858528137207,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否允许覆盖已存在的目标文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.png\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output File Name",
        "purpose": "测试包含特殊字符的输出文件名是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\crop@#%&()_test.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\thresholded@#%&()_output.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\crop@#%&()_test.png\"}"
        },
        "execution_time": 0.0035088062286376953,
        "is_functional_test": true
      }
    ],
    "detect_contours": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具能否正确检测二值图像中的轮廓并保存结果图像",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_contours_basic.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_thresholded.png\"}"
        },
        "execution_time": 0.006508350372314453,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection on JPG Image",
        "purpose": "验证工具是否支持JPG格式的输入图像进行轮廓检测",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_contours_jpg.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_thresholded.jpg\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Save Contours to Nested Path",
        "purpose": "验证工具能否将检测到的轮廓图像保存到嵌套目录路径中",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_thresholded.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_contours_saved.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Input",
        "purpose": "测试工具是否能处理包含 Unicode 字符的输入文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\shanghai_contours.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b.png\"}"
        },
        "execution_time": 0.00951075553894043,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试目标路径包含特殊字符时是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\contours@#%&()_saved.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.011059761047363281,
        "is_functional_test": true
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入图像文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_contours.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.010515451431274414,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径参数时的参数验证机制",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_empty.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.006995201110839844,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径参数时的参数验证机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.png",
          "output_path": ""
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_thresholded.png\"}"
        },
        "execution_time": 0.010029792785644531,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing Contour File",
        "purpose": "验证工具是否允许覆盖已存在的轮廓图像文件",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\existing_file.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_thresholded.png\"}"
        },
        "execution_time": 0.013444662094116211,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection in Output File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的输出文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\contours';_DROP_TABLE_contours;--.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.013630867004394531,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Handling for Contours",
        "purpose": "验证工具是否能够处理长路径图像文件的轮廓检测与保存",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_might_be_used_for_testing_purposes.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_output_file_name_for_contours_detection.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_might_be_used_for_testing_purposes.png\"}"
        },
        "execution_time": 0.011595010757446289,
        "is_functional_test": true
      },
      {
        "case_name": "No Extension in Output Path",
        "purpose": "测试没有扩展名的目标路径是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\contours_without_extension"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.013051509857177734,
        "is_functional_test": false
      }
    ],
    "find_shapes": [
      {
        "case_name": "Basic Shape Detection",
        "purpose": "验证工具可以正确检测并计数图像中的圆形和矩形",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_shapes_circle.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\detected_shapes_basic.jpg"
        },
        "response": {
          "result": "{\"message\": \"Shape detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\detected_shapes_basic.jpg\", \"circles_found\": 14, \"rectangles_found\": 26}"
        },
        "execution_time": 0.10166525840759277,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Shapes Detection",
        "purpose": "验证工具在包含多个形状的图像中能正确识别并分别计数圆形和矩形",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_shapes_rectangle.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\detected_multiple_shapes.jpg"
        },
        "response": {
          "result": "{\"message\": \"Shape detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\detected_multiple_shapes.jpg\", \"circles_found\": 40, \"rectangles_found\": 3}"
        },
        "execution_time": 0.585421085357666,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Image Detection",
        "purpose": "验证工具在空白图像上不会报告任何形状且不报错",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_contours_external_simple.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_shape_detection.jpg"
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgproc\\\\src\\\\color.simd_helpers.hpp:92: error: (-15:Bad number of channels) in function '__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x31bd3f7f::Set<1,-1,-1>,struct cv::impl::A0x31bd3f7f::Set<0,2,5>,4>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)'\\n> Invalid number of channels in input image:\\n>     'VScn::contains(scn)'\\n> where\\n>     'scn' is 1\\n\"}"
        },
        "execution_time": 0.019555091857910156,
        "is_functional_test": true
      },
      {
        "case_name": "Output Format Conversion",
        "purpose": "验证工具是否支持将输出图像保存为不同格式（如PNG）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\converted_output.png"
        },
        "response": {
          "result": "{\"message\": \"Shape detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\converted_output.png\", \"circles_found\": 39, \"rectangles_found\": 2}"
        },
        "execution_time": 0.6301834583282471,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode Input File Handling",
        "purpose": "验证工具能否处理带有Unicode字符的输入文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文测试文档.docx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\unicode_input_detected.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e2d\\u6587\\u6d4b\\u8bd5\\u6587\\u6863.docx\"}"
        },
        "execution_time": 0.012577056884765625,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试目标路径包含特殊字符时工具的行为",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\file@#%&()_detected.jpg"
        },
        "response": {
          "result": "{\"message\": \"Shape detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\file@#%&()_detected.jpg\", \"circles_found\": 39, \"rectangles_found\": 2}"
        },
        "execution_time": 0.6105318069458008,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input File",
        "purpose": "测试当输入文件不存在时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\missing_input_result.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.013584136962890625,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试无效输入路径参数时的工具响应",
        "args": {
          "input_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\invalid_input_result.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: \"}"
        },
        "execution_time": 0.010566473007202148,
        "is_functional_test": false
      },
      {
        "case_name": "Write to Read-Only Directory",
        "purpose": "验证工具写入只读目录时的错误处理机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\unwritable.jpg"
        },
        "response": {
          "result": "{\"message\": \"Shape detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\read_only_dir\\\\unwritable.jpg\", \"circles_found\": 39, \"rectangles_found\": 2}"
        },
        "execution_time": 0.6319501399993896,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection in File Name",
        "purpose": "测试工具是否安全地处理带有潜在SQL注入风险的文件名",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\safe_output.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.010079145431518555,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具是否能够处理长路径文件的形状检测",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_might_be_used_for_testing_purposes.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\long_file_path_result.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_might_be_used_for_testing_purposes.png\"}"
        },
        "execution_time": 0.009292125701904297,
        "is_functional_test": true
      },
      {
        "case_name": "No Extension in Input File",
        "purpose": "测试没有扩展名的源文件是否能被正确处理",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\file_without_extension",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\no_extension_result.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\file_without_extension\"}"
        },
        "execution_time": 0.01177978515625,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 108
}