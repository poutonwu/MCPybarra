{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_zotero_library_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_zotero_library_manager/refined/server.py",
  "timestamp": "2025-07-11T21:20:46.243425",
  "tools": [
    {
      "name": "get_item_metadata",
      "description": "\n    Fetch detailed metadata of a Zotero item using its unique item key.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A JSON string containing item metadata, such as title, creators, publication year, and other bibliographic details.\n            Example:\n            {\n                \"title\": \"Sample Title\",\n                \"creators\": [\"John Doe\", \"Jane Smith\"],\n                \"year\": 2023,\n                \"publisher\": \"Sample Publisher\",\n                \"DOI\": \"10.1234/sample.doi\"\n            }\n\n    Raises:\n        ValueError: If the item key is invalid.\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_metadataArguments",
        "type": "object"
      }
    },
    {
      "name": "get_item_fulltext",
      "description": "\n    Extract the full text content of a Zotero item. If the item contains a PDF, extract text from the PDF file.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A string containing the extracted full text content of the item.\n            Example: \"This is the extracted full text content of the PDF associated with the Zotero item.\"\n\n    Raises:\n        ValueError: If the item key is invalid or no PDF attachment is found.\n        Exception: If the Zotero API call or PDF extraction fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_fulltextArguments",
        "type": "object"
      }
    },
    {
      "name": "search_items",
      "description": "\n    Search the Zotero library based on specified criteria and return a list of formatted search results.\n\n    Args:\n        title (str, optional): Search by title.\n            Example: \"Sample Title\"\n        creators (str, optional): Search by creators.\n            Example: \"John Doe\"\n        year (int, optional): Search by publication year.\n            Example: 2023\n        fulltext (str, optional): Perform a full-text search.\n            Example: \"Keyword\"\n\n    Returns:\n        str: A JSON string containing a list of dictionaries, each containing metadata for a matching item.\n            Example:\n            [\n                {\n                    \"title\": \"Sample Title\",\n                    \"creators\": [\"John Doe\", \"Jane Smith\"],\n                    \"year\": 2023,\n                    \"DOI\": \"10.1234/sample.doi\"\n                },\n                {\n                    \"title\": \"Another Title\",\n                    \"creators\": [\"Alice Johnson\"],\n                    \"year\": 2022,\n                    \"DOI\": \"10.5678/another.doi\"\n                }\n            ]\n\n    Raises:\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "default": null,
            "title": "Title",
            "type": "string"
          },
          "creators": {
            "default": null,
            "title": "Creators",
            "type": "string"
          },
          "year": {
            "default": null,
            "title": "Year",
            "type": "integer"
          },
          "fulltext": {
            "default": null,
            "title": "Fulltext",
            "type": "string"
          }
        },
        "title": "search_itemsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_items": [
      {
        "case_name": "Basic Title Search",
        "purpose": "验证通过标题进行搜索的基本功能是否正常",
        "args": {
          "title": "Sample Title"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 2.6516530513763428,
        "is_functional_test": true
      },
      {
        "case_name": "Search By Creator",
        "purpose": "验证通过作者进行搜索的功能是否正常",
        "args": {
          "creators": "John Doe"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.5168328285217285,
        "is_functional_test": true
      },
      {
        "case_name": "Search By Year",
        "purpose": "验证通过年份进行搜索的功能是否正常",
        "args": {
          "year": 2023
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.9311285018920898,
        "is_functional_test": true
      },
      {
        "case_name": "Fulltext Search",
        "purpose": "验证全文搜索功能是否正常",
        "args": {
          "fulltext": "Keyword"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Research Assistants\", \"creators\": [\"Schmidgall\", \"Su\", \"Wang\", \"Sun\", \"Wu\", \"Yu\", \"Liu\", \"Moor\", \"Liu\", \"Barsoum\"], \"year\": \"2025-06-17\", \"DOI\": \"10.48550/arXiv.2501.04227\"}, {\"title\": \"AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors\", \"creators\": [\"Chen\", \"Su\", \"Zuo\", \"Yang\", \"Yuan\", \"Chan\", \"Yu\", \"Lu\", \"Hung\", \"Qian\", \"Qin\", \"Cong\", \"Xie\", \"Liu\", \"Sun\", \"Zhou\"], \"year\": \"2023-10-23\", \"DOI\": \"10.48550/arXiv.2308.10848\"}, {\"title\": \"ChatDev: Communicative Agents for Software Development\", \"creators\": [\"Qian\", \"Liu\", \"Liu\", \"Chen\", \"Dang\", \"Li\", \"Yang\", \"Chen\", \"Su\", \"Cong\", \"Xu\", \"Li\", \"Liu\", \"Sun\"], \"year\": \"2024-06-05\", \"DOI\": \"10.48550/arXiv.2307.07924\"}, {\"title\": \"CodeCoT: Tackling Code Syntax Errors in CoT Reasoning for Code Generation\", \"creators\": [\"Huang\", \"Bu\", \"Qing\", \"Cui\"], \"year\": \"2024-02-23\", \"DOI\": \"10.48550/arXiv.2308.08784\"}]}"
        },
        "execution_time": 1.9233934879302979,
        "is_functional_test": true
      },
      {
        "case_name": "Combined Search Criteria",
        "purpose": "验证同时使用多个搜索条件时工具是否能正确返回结果",
        "args": {
          "title": "Another Title",
          "creators": "Alice Johnson",
          "year": 2022
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.9780170917510986,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Returns Empty Result",
        "purpose": "验证不提供任何参数时工具是否返回空结果，而不是报错",
        "args": {},
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Research Assistants\", \"creators\": [\"Schmidgall\", \"Su\", \"Wang\", \"Sun\", \"Wu\", \"Yu\", \"Liu\", \"Moor\", \"Liu\", \"Barsoum\"], \"year\": \"2025-06-17\", \"DOI\": \"10.48550/arXiv.2501.04227\"}, {\"title\": \"AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors\", \"creators\": [\"Chen\", \"Su\", \"Zuo\", \"Yang\", \"Yuan\", \"Chan\", \"Yu\", \"Lu\", \"Hung\", \"Qian\", \"Qin\", \"Cong\", \"Xie\", \"Liu\", \"Sun\", \"Zhou\"], \"year\": \"2023-10-23\", \"DOI\": \"10.48550/arXiv.2308.10848\"}, {\"title\": \"ChatDev: Communicative Agents for Software Development\", \"creators\": [\"Qian\", \"Liu\", \"Liu\", \"Chen\", \"Dang\", \"Li\", \"Yang\", \"Chen\", \"Su\", \"Cong\", \"Xu\", \"Li\", \"Liu\", \"Sun\"], \"year\": \"2024-06-05\", \"DOI\": \"10.48550/arXiv.2307.07924\"}, {\"title\": \"CodeCoT: Tackling Code Syntax Errors in CoT Reasoning for Code Generation\", \"creators\": [\"Huang\", \"Bu\", \"Qing\", \"Cui\"], \"year\": \"2024-02-23\", \"DOI\": \"10.48550/arXiv.2308.08784\"}]}"
        },
        "execution_time": 1.6763601303100586,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Fulltext Search",
        "purpose": "验证全文搜索中特殊字符的处理能力",
        "args": {
          "fulltext": "@#%&*()_+=-"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Research Assistants\", \"creators\": [\"Schmidgall\", \"Su\", \"Wang\", \"Sun\", \"Wu\", \"Yu\", \"Liu\", \"Moor\", \"Liu\", \"Barsoum\"], \"year\": \"2025-06-17\", \"DOI\": \"10.48550/arXiv.2501.04227\"}, {\"title\": \"AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors\", \"creators\": [\"Chen\", \"Su\", \"Zuo\", \"Yang\", \"Yuan\", \"Chan\", \"Yu\", \"Lu\", \"Hung\", \"Qian\", \"Qin\", \"Cong\", \"Xie\", \"Liu\", \"Sun\", \"Zhou\"], \"year\": \"2023-10-23\", \"DOI\": \"10.48550/arXiv.2308.10848\"}, {\"title\": \"ChatDev: Communicative Agents for Software Development\", \"creators\": [\"Qian\", \"Liu\", \"Liu\", \"Chen\", \"Dang\", \"Li\", \"Yang\", \"Chen\", \"Su\", \"Cong\", \"Xu\", \"Li\", \"Liu\", \"Sun\"], \"year\": \"2024-06-05\", \"DOI\": \"10.48550/arXiv.2307.07924\"}, {\"title\": \"CodeCoT: Tackling Code Syntax Errors in CoT Reasoning for Code Generation\", \"creators\": [\"Huang\", \"Bu\", \"Qing\", \"Cui\"], \"year\": \"2024-02-23\", \"DOI\": \"10.48550/arXiv.2308.08784\"}]}"
        },
        "execution_time": 1.5408422946929932,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Year Input",
        "purpose": "验证年份参数输入非法值时是否能够优雅处理",
        "args": {
          "year": -1
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 2.3465867042541504,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Creator Search",
        "purpose": "验证搜索不存在的作者时是否返回空结果",
        "args": {
          "creators": "Unknown Author"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 2.134536027908325,
        "is_functional_test": true
      },
      {
        "case_name": "Zotero API Failure Simulation",
        "purpose": "验证当Zotero API调用失败时是否抛出异常并妥善处理",
        "args": {
          "title": "Trigger API Error"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 3.5100252628326416,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Chinese Keywords",
        "purpose": "验证中文关键词的搜索功能是否正常",
        "args": {
          "fulltext": "测试文档"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Research Assistants\", \"creators\": [\"Schmidgall\", \"Su\", \"Wang\", \"Sun\", \"Wu\", \"Yu\", \"Liu\", \"Moor\", \"Liu\", \"Barsoum\"], \"year\": \"2025-06-17\", \"DOI\": \"10.48550/arXiv.2501.04227\"}, {\"title\": \"AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors\", \"creators\": [\"Chen\", \"Su\", \"Zuo\", \"Yang\", \"Yuan\", \"Chan\", \"Yu\", \"Lu\", \"Hung\", \"Qian\", \"Qin\", \"Cong\", \"Xie\", \"Liu\", \"Sun\", \"Zhou\"], \"year\": \"2023-10-23\", \"DOI\": \"10.48550/arXiv.2308.10848\"}, {\"title\": \"ChatDev: Communicative Agents for Software Development\", \"creators\": [\"Qian\", \"Liu\", \"Liu\", \"Chen\", \"Dang\", \"Li\", \"Yang\", \"Chen\", \"Su\", \"Cong\", \"Xu\", \"Li\", \"Liu\", \"Sun\"], \"year\": \"2024-06-05\", \"DOI\": \"10.48550/arXiv.2307.07924\"}, {\"title\": \"CodeCoT: Tackling Code Syntax Errors in CoT Reasoning for Code Generation\", \"creators\": [\"Huang\", \"Bu\", \"Qing\", \"Cui\"], \"year\": \"2024-02-23\", \"DOI\": \"10.48550/arXiv.2308.08784\"}]}"
        },
        "execution_time": 1.480508804321289,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Year Value Boundary",
        "purpose": "验证最大可能年份值（如9999）是否被正确处理",
        "args": {
          "year": 9999
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.0281858444213867,
        "is_functional_test": false
      }
    ],
    "get_item_metadata": [
      {
        "case_name": "Basic Item Metadata Retrieval",
        "purpose": "验证使用有效的item_key可以成功获取Zotero条目的详细元数据",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0045092105865478516,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Item Key Format",
        "purpose": "验证当提供无效的item_key格式时是否抛出ValueError",
        "args": {
          "item_key": "invalid_key_123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key_123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.010523796081542969,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证当提供空字符串作为item_key时是否抛出ValueError",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.01051640510559082,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "验证包含特殊字符的item_key是否被正确识别或拒绝",
        "args": {
          "item_key": "AB@#%&*()_=C123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'AB@#%&*()_=C123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.005503654479980469,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Item Key",
        "purpose": "验证当提供一个格式正确但不存在的item_key时是否返回空结果或异常",
        "args": {
          "item_key": "NONEXISTENTKEY"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXISTENTKEY'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": true
      },
      {
        "case_name": "Zotero API Failure Handling",
        "purpose": "验证当Zotero API调用失败时是否能正确抛出Exception并妥善处理",
        "args": {
          "item_key": "TRIGGER_API_ERROR"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'TRIGGER_API_ERROR'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0065135955810546875,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Length Item Key",
        "purpose": "验证最大长度的item_key是否被正确处理",
        "args": {
          "item_key": "A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Length Item Key",
        "purpose": "验证最短有效item_key是否被正确处理",
        "args": {
          "item_key": "A1"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004514455795288086,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode Character in Item Key",
        "purpose": "验证包含Unicode字符的item_key是否被安全拒绝",
        "args": {
          "item_key": "A1B2中XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1B2中XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key with Leading/Trailing Whitespace",
        "purpose": "验证带有前后空格的item_key是否被自动清理或拒绝",
        "args": {
          "item_key": " ABC123XYZ "
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ' ABC123XYZ '. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004164218902587891,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Consecutive Special Characters in Item Key",
        "purpose": "验证连续多个特殊字符的item_key是否被正确处理",
        "args": {
          "item_key": "AB$$##@@XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'AB$$##@@XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key from Test File Metadata",
        "purpose": "验证从测试文件中提取的item_key是否能成功获取对应元数据",
        "args": {
          "item_key": "TESTITEMKEY123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'TESTITEMKEY123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.006509065628051758,
        "is_functional_test": true
      }
    ],
    "get_item_fulltext": [
      {
        "case_name": "Basic Fulltext Extraction",
        "purpose": "验证使用有效的item_key可以成功提取Zotero条目的全文内容（含PDF）",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.005503416061401367,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Item Key Format",
        "purpose": "验证当提供无效的item_key格式时是否抛出ValueError",
        "args": {
          "item_key": "invalid_key_123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key_123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.005009651184082031,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证当提供空字符串作为item_key时是否抛出ValueError",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.008296966552734375,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key with Special Characters",
        "purpose": "验证包含特殊字符的item_key是否被安全拒绝",
        "args": {
          "item_key": "AB@#%&*()_=C123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'AB@#%&*()_=C123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Item Key",
        "purpose": "验证当提供一个格式正确但不存在的item_key时是否返回错误信息",
        "args": {
          "item_key": "NONEXISTENTKEY"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXISTENTKEY'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.007024288177490234,
        "is_functional_test": true
      },
      {
        "case_name": "Zotero API Failure Handling",
        "purpose": "验证当Zotero API调用失败时是否能正确抛出Exception并妥善处理",
        "args": {
          "item_key": "TRIGGER_API_ERROR"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'TRIGGER_API_ERROR'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Length Item Key",
        "purpose": "验证最短有效item_key是否被正确处理",
        "args": {
          "item_key": "A1"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.005398750305175781,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode Character in Item Key",
        "purpose": "验证包含Unicode字符的item_key是否被安全拒绝",
        "args": {
          "item_key": "A1B2中XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'A1B2中XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004510641098022461,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key with Leading/Trailing Whitespace",
        "purpose": "验证带有前后空格的item_key是否被自动清理或拒绝",
        "args": {
          "item_key": " ABC123XYZ "
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ' ABC123XYZ '. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Consecutive Special Characters in Item Key",
        "purpose": "验证连续多个特殊字符的item_key是否被正确处理",
        "args": {
          "item_key": "AB$$##@@XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'AB$$##@@XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0065310001373291016,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key from Test File Metadata",
        "purpose": "验证从测试文件中提取的item_key是否能成功获取对应全文内容",
        "args": {
          "item_key": "TESTITEMKEY123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'TESTITEMKEY123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Fulltext from PDF File",
        "purpose": "验证工具能够正确从指定item关联的PDF文件中提取全文内容",
        "args": {
          "item_key": "PDFITEM456"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'PDFITEM456'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004062652587890625,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 36
}