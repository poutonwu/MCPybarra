{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_opencv_image_processing",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_opencv_image_processing/refined/server.py",
  "timestamp": "2025-07-11T21:11:04.915395",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "Saves an image to the file system in the desired format.\n\n    Args:\n        image_path (str): Path to the input image file.\n        output_path (str): Path to save the output image file.\n\n    Returns:\n        bool: True if the image is successfully saved, otherwise False.\n\n    Raises:\n        FileNotFoundError: If the input image file doesn't exist\n        ValueError: If the image can't be loaded or saved\n\n    Example:\n        save_image_tool(\"input.jpg\", \"output.png\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "Resizes the image to specific dimensions.\n\n    Args:\n        image_path (str): Path to the input image file.\n        width (int): The new width of the image. Must be positive.\n        height (int): The new height of the image. Must be positive.\n\n    Returns:\n        str: Path to the resized image file.\n\n    Raises:\n        ValueError: If width or height are not positive integers\n\n    Example:\n        resize_image_tool(\"input.jpg\", 800, 600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "Crops a specific rectangular region from the image.\n\n    Args:\n        image_path (str): Path to the input image file.\n        x (int): The x-coordinate of the top-left corner of the crop box.\n        y (int): The y-coordinate of the top-left corner of the crop box.\n        width (int): The width of the crop box. Must be positive.\n        height (int): The height of the crop box. Must be positive.\n\n    Returns:\n        str: Path to the cropped image file.\n\n    Raises:\n        ValueError: If any dimension parameters are invalid\n\n    Example:\n        crop_image_tool(\"input.jpg\", 10, 10, 100, 100)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "Retrieves basic statistics about the image, including dimensions and pixel intensity histograms.\n\n    Args:\n        image_path (str): Path to the input image file.\n\n    Returns:\n        str: JSON string containing dimensions and histogram data.\n\n    Example:\n        get_image_stats_tool(\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "Applies a specified filter to the image (e.g., Gaussian blur, median blur).\n\n    Args:\n        image_path (str): Path to the input image file.\n        filter_type (str): The type of filter to apply (\"gaussian\", \"median\", etc.).\n        kernel_size (int): The size of the kernel used for filtering. Must be odd and positive.\n\n    Returns:\n        str: Path to the filtered image file.\n\n    Raises:\n        ValueError: If filter_type is unsupported or kernel_size is invalid\n\n    Example:\n        apply_filter_tool(\"input.jpg\", \"gaussian\", 5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "Detects edges in the image using OpenCV's Canny edge detection algorithm.\n\n    Args:\n        image_path (str): Path to the input image file.\n        threshold1 (float): The first threshold for the hysteresis procedure.\n        threshold2 (float): The second threshold for the hysteresis procedure.\n\n    Returns:\n        str: Path to the edge-detected image file.\n\n    Example:\n        detect_edges_tool(\"input.jpg\", 50.0, 150.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "Applies a thresholding operation to the image.\n\n    Args:\n        image_path (str): Path to the input grayscale image file.\n        threshold_value (float): The threshold value.\n        max_value (float): The maximum value to assign to pixels exceeding the threshold.\n\n    Returns:\n        str: Path to the thresholded binary image file.\n\n    Example:\n        apply_threshold_tool(\"input.jpg\", 127.0, 255.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "Detects contours in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of contours.\n\n    Example:\n        detect_contours_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "Identifies and classifies simple geometric shapes (e.g., circles, squares) in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of detected shapes.\n\n    Example:\n        find_shapes_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具能够成功将图像保存为指定格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.04012942314147949,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Different Format",
        "purpose": "验证工具能够将图像保存为与原始不同的格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.jpg"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.02467036247253418,
        "is_functional_test": true
      },
      {
        "case_name": "Save to Nested Path",
        "purpose": "验证工具能够将图像保存到深层嵌套路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\test_nested_output.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.039011478424072266,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name",
        "purpose": "验证工具能够处理带有Unicode字符的文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_月亮与星星.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.02302718162536621,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证工具能够处理输出路径中的特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.019894123077392578,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path",
        "purpose": "验证工具能够处理长文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\long_path_test.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\long_path_test_output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\long_path_test.txt\"}"
        },
        "execution_time": 0.012957572937011719,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection in Output Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test_output';_DROP_TABLE_icons;--.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.012509584426879883,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_nonexistent.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.028769493103027344,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_format_output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.02025771141052246,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": "",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input_output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.026758193969726562,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Output Path",
        "purpose": "验证工具在输出路径为空时正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.016077518463134766,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具可以覆盖已存在的文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.02567148208618164,
        "is_functional_test": true
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Statistics",
        "purpose": "验证工具能够正确获取图像的基本统计信息，包括尺寸和直方图数据",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [715, 1080, 3], \"histogram\": [9321.0, 1209.0, 1103.0, 1206.0, 1094.0, 1173.0, 1208.0, 1112.0, 1120.0, 1106.0, 1149.0, 1085.0, 1185.0, 1160.0, 1135.0, 1138.0, 1119.0, 1137.0, 1145.0, 1179.0, 1245.0, 1274.0, 1237.0, 1251.0, 1338.0, 1315.0, 1392.0, 1377.0, 1336.0, 1472.0, 1459.0, 1423.0, 1423.0, 1533.0, 1608.0, 1651.0, 1609.0, 1696.0, 1718.0, 1694.0, 1721.0, 1827.0, 1854.0, 1815.0, 1892.0, 1892.0, 1948.0, 2051.0, 2064.0, 2089.0, 2106.0, 2167.0, 2152.0, 2199.0, 2259.0, 2298.0, 2276.0, 2383.0, 2357.0, 2481.0, 2501.0, 2407.0, 2561.0, 2568.0, 2574.0, 2752.0, 2642.0, 2659.0, 2689.0, 2896.0, 2737.0, 2846.0, 2952.0, 2976.0, 2892.0, 2999.0, 2869.0, 2921.0, 2920.0, 2978.0, 2908.0, 3024.0, 2956.0, 2946.0, 3072.0, 2837.0, 3024.0, 2900.0, 2976.0, 2915.0, 2868.0, 2847.0, 2849.0, 2742.0, 2643.0, 2653.0, 2472.0, 2552.0, 2441.0, 2463.0, 2288.0, 2108.0, 2188.0, 2021.0, 2010.0, 1869.0, 1795.0, 1690.0, 1581.0, 1580.0, 1447.0, 1417.0, 1333.0, 1239.0, 1178.0, 1082.0, 1057.0, 969.0, 974.0, 916.0, 933.0, 808.0, 785.0, 759.0, 708.0, 755.0, 685.0, 634.0, 687.0, 689.0, 620.0, 622.0, 586.0, 567.0, 572.0, 560.0, 581.0, 545.0, 529.0, 532.0, 514.0, 522.0, 535.0, 538.0, 524.0, 570.0, 520.0, 455.0, 503.0, 559.0, 512.0, 499.0, 535.0, 517.0, 525.0, 528.0, 570.0, 523.0, 520.0, 536.0, 482.0, 501.0, 519.0, 545.0, 521.0, 568.0, 541.0, 541.0, 548.0, 570.0, 566.0, 591.0, 612.0, 617.0, 594.0, 596.0, 552.0, 611.0, 615.0, 606.0, 622.0, 652.0, 610.0, 636.0, 642.0, 645.0, 650.0, 660.0, 665.0, 630.0, 726.0, 672.0, 664.0, 707.0, 715.0, 748.0, 749.0, 736.0, 728.0, 765.0, 809.0, 814.0, 797.0, 873.0, 841.0, 835.0, 864.0, 864.0, 862.0, 945.0, 946.0, 884.0, 948.0, 922.0, 993.0, 979.0, 1024.0, 1037.0, 1098.0, 1182.0, 1133.0, 1203.0, 1303.0, 1207.0, 1282.0, 1311.0, 1349.0, 1458.0, 1441.0, 1528.0, 1625.0, 1758.0, 1833.0, 2403.0, 3118.0, 8209.0, 16086.0, 23223.0, 28877.0, 56472.0, 52703.0, 64543.0, 69720.0, 42635.0, 18508.0, 17978.0, 34533.0, 3403.0, 85.0, 25.0, 3.0, 7.0, 2.0, 1.0, 1.0, 2.0]}"
        },
        "execution_time": 0.014508247375488281,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for PNG Format",
        "purpose": "验证工具能够处理PNG格式图像并返回正确的统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"dimensions\": [715, 1080, 3], \"histogram\": [9321.0, 1209.0, 1103.0, 1206.0, 1094.0, 1173.0, 1208.0, 1112.0, 1120.0, 1106.0, 1149.0, 1085.0, 1185.0, 1160.0, 1135.0, 1138.0, 1119.0, 1137.0, 1145.0, 1179.0, 1245.0, 1274.0, 1237.0, 1251.0, 1338.0, 1315.0, 1392.0, 1377.0, 1336.0, 1472.0, 1459.0, 1423.0, 1423.0, 1533.0, 1608.0, 1651.0, 1609.0, 1696.0, 1718.0, 1694.0, 1721.0, 1827.0, 1854.0, 1815.0, 1892.0, 1892.0, 1948.0, 2051.0, 2064.0, 2089.0, 2106.0, 2167.0, 2152.0, 2199.0, 2259.0, 2298.0, 2276.0, 2383.0, 2357.0, 2481.0, 2501.0, 2407.0, 2561.0, 2568.0, 2574.0, 2752.0, 2642.0, 2659.0, 2689.0, 2896.0, 2737.0, 2846.0, 2952.0, 2976.0, 2892.0, 2999.0, 2869.0, 2921.0, 2920.0, 2978.0, 2908.0, 3024.0, 2956.0, 2946.0, 3072.0, 2837.0, 3024.0, 2900.0, 2976.0, 2915.0, 2868.0, 2847.0, 2849.0, 2742.0, 2643.0, 2653.0, 2472.0, 2552.0, 2441.0, 2463.0, 2288.0, 2108.0, 2188.0, 2021.0, 2010.0, 1869.0, 1795.0, 1690.0, 1581.0, 1580.0, 1447.0, 1417.0, 1333.0, 1239.0, 1178.0, 1082.0, 1057.0, 969.0, 974.0, 916.0, 933.0, 808.0, 785.0, 759.0, 708.0, 755.0, 685.0, 634.0, 687.0, 689.0, 620.0, 622.0, 586.0, 567.0, 572.0, 560.0, 581.0, 545.0, 529.0, 532.0, 514.0, 522.0, 535.0, 538.0, 524.0, 570.0, 520.0, 455.0, 503.0, 559.0, 512.0, 499.0, 535.0, 517.0, 525.0, 528.0, 570.0, 523.0, 520.0, 536.0, 482.0, 501.0, 519.0, 545.0, 521.0, 568.0, 541.0, 541.0, 548.0, 570.0, 566.0, 591.0, 612.0, 617.0, 594.0, 596.0, 552.0, 611.0, 615.0, 606.0, 622.0, 652.0, 610.0, 636.0, 642.0, 645.0, 650.0, 660.0, 665.0, 630.0, 726.0, 672.0, 664.0, 707.0, 715.0, 748.0, 749.0, 736.0, 728.0, 765.0, 809.0, 814.0, 797.0, 873.0, 841.0, 835.0, 864.0, 864.0, 862.0, 945.0, 946.0, 884.0, 948.0, 922.0, 993.0, 979.0, 1024.0, 1037.0, 1098.0, 1182.0, 1133.0, 1203.0, 1303.0, 1207.0, 1282.0, 1311.0, 1349.0, 1458.0, 1441.0, 1528.0, 1625.0, 1758.0, 1833.0, 2403.0, 3118.0, 8209.0, 16086.0, 23223.0, 28877.0, 56472.0, 52703.0, 64543.0, 69720.0, 42635.0, 18508.0, 17978.0, 34533.0, 3403.0, 85.0, 25.0, 3.0, 7.0, 2.0, 1.0, 1.0, 2.0]}"
        },
        "execution_time": 0.019028663635253906,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Nested Path",
        "purpose": "验证工具能够从深层嵌套路径加载图像并生成统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\hit.png\"}"
        },
        "execution_time": 0.003505706787109375,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Image Path",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能够处理输入路径中的特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.png\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具能够处理长文件路径作为输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\long_path_test.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\long_path_test.png\"}"
        },
        "execution_time": 0.007166147232055664,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.004050493240356445,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.007523059844970703,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Large Image File",
        "purpose": "验证工具能够处理大尺寸图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [66449.0, 24135.0, 28989.0, 31987.0, 25351.0, 24979.0, 25093.0, 28098.0, 30404.0, 32103.0, 33634.0, 34111.0, 34061.0, 33373.0, 32463.0, 33134.0, 33960.0, 34462.0, 35118.0, 34764.0, 34467.0, 34037.0, 35288.0, 36703.0, 37421.0, 37711.0, 38083.0, 38862.0, 38937.0, 39134.0, 39363.0, 39281.0, 39151.0, 38616.0, 38342.0, 37450.0, 37351.0, 37107.0, 36286.0, 36033.0, 35227.0, 34519.0, 33534.0, 32225.0, 31377.0, 30946.0, 31134.0, 31265.0, 31628.0, 32517.0, 32672.0, 32660.0, 32572.0, 32711.0, 31900.0, 31975.0, 31818.0, 31995.0, 31707.0, 31601.0, 31842.0, 31695.0, 31413.0, 31280.0, 31320.0, 31127.0, 30985.0, 30407.0, 30445.0, 30446.0, 30051.0, 29870.0, 29379.0, 28556.0, 27915.0, 27562.0, 27367.0, 26848.0, 26997.0, 26958.0, 26838.0, 27237.0, 26879.0, 26981.0, 26312.0, 25951.0, 25730.0, 25728.0, 25690.0, 25379.0, 24663.0, 24807.0, 24633.0, 23987.0, 23995.0, 24198.0, 23919.0, 23176.0, 23304.0, 23198.0, 23163.0, 22764.0, 22716.0, 22751.0, 22473.0, 22280.0, 22037.0, 22105.0, 21863.0, 21430.0, 21257.0, 21438.0, 21238.0, 21043.0, 20819.0, 20565.0, 20231.0, 20231.0, 20370.0, 19970.0, 19967.0, 19767.0, 19719.0, 19104.0, 18888.0, 18938.0, 18643.0, 18716.0, 18379.0, 18273.0, 17961.0, 17833.0, 17936.0, 17594.0, 17854.0, 17654.0, 17954.0, 18134.0, 17955.0, 18329.0, 17865.0, 18136.0, 18077.0, 18371.0, 18249.0, 18573.0, 18324.0, 18385.0, 18067.0, 17833.0, 17330.0, 17085.0, 16840.0, 16546.0, 16621.0, 16979.0, 17084.0, 17207.0, 17198.0, 17072.0, 16604.0, 16218.0, 16069.0, 16127.0, 16772.0, 17719.0, 18108.0, 18249.0, 18236.0, 16797.0, 15894.0, 16817.0, 17177.0, 16959.0, 18217.0, 17230.0, 16410.0, 16192.0, 15333.0, 14665.0, 15169.0, 14770.0, 15316.0, 15343.0, 15684.0, 15294.0, 15723.0, 16354.0, 17158.0, 17921.0, 18674.0, 19345.0, 19480.0, 19362.0, 20244.0, 21253.0, 22142.0, 23153.0, 24287.0, 24714.0, 24483.0, 25002.0, 25223.0, 24789.0, 25414.0, 25454.0, 25463.0, 25340.0, 25667.0, 25619.0, 26620.0, 26692.0, 26902.0, 27306.0, 28605.0, 29358.0, 30589.0, 31268.0, 32334.0, 32445.0, 32049.0, 32207.0, 31464.0, 32105.0, 33535.0, 32339.0, 33135.0, 34670.0, 36428.0, 35577.0, 36319.0, 36994.0, 35864.0, 35403.0, 35278.0, 35739.0, 32961.0, 32583.0, 33955.0, 34067.0, 33579.0, 35225.0, 39079.0, 33138.0, 33955.0, 39888.0, 42510.0, 36889.0, 33408.0, 32785.0, 25465.0, 20460.0, 15938.0, 18296.0, 15747.0, 1929976.0]}"
        },
        "execution_time": 0.06815958023071289,
        "is_functional_test": true
      },
      {
        "case_name": "Non-Image File Input",
        "purpose": "验证工具在传入非图像文件时能正确报错",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\2023.nlposs-1.24.pdf\"}"
        },
        "execution_time": 0.004437685012817383,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具能够成功将图像调整为指定尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.018836259841918945,
        "is_functional_test": true
      },
      {
        "case_name": "Resize PNG Image",
        "purpose": "验证工具能够处理PNG格式并正确调整尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.0180208683013916,
        "is_functional_test": true
      },
      {
        "case_name": "Resize with Nested Path",
        "purpose": "验证工具能够从深层嵌套路径加载图像并调整大小",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.05047488212585449,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Resize",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名进行缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\《上海市道路交通管理条例》.pdf",
          "width": 640,
          "height": 480
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u300a\\u4e0a\\u6d77\\u5e02\\u9053\\u8def\\u4ea4\\u901a\\u7ba1\\u7406\\u6761\\u4f8b\\u300b.pdf\"}"
        },
        "execution_time": 0.0050201416015625,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path Resize",
        "purpose": "验证工具能够处理输入路径中的特殊字符进行缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.docx",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.docx\"}"
        },
        "execution_time": 0.0038700103759765625,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Resize",
        "purpose": "验证工具能够处理长文件路径作为输入进行缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_copy.png",
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.012507438659667969,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Image Path Resize",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）在resize操作中",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.docx",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.docx\"}"
        },
        "execution_time": 0.00752711296081543,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found Resize",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format Resize",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\2023.nlposs-1.24.pdf\"}"
        },
        "execution_time": 0.0060274600982666016,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path Resize",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": "",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Width Resize",
        "purpose": "验证工具在宽度为负数时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "width": -100,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=-100, height=600\"}"
        },
        "execution_time": 0.003802061080932617,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Height Resize",
        "purpose": "验证工具在高度为零时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "width": 800,
          "height": 0
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=800, height=0\"}"
        },
        "execution_time": 0.004006862640380859,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop",
        "purpose": "验证工具能够成功裁剪指定矩形区域的图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 10,
          "y": 10,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.010064840316772461,
        "is_functional_test": true
      },
      {
        "case_name": "Crop from PNG Image",
        "purpose": "验证工具能够处理PNG格式图像并正确裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "x": 20,
          "y": 20,
          "width": 400,
          "height": 400
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.015022754669189453,
        "is_functional_test": true
      },
      {
        "case_name": "Crop with Zero Coordinates",
        "purpose": "验证工具能够从图像左上角(0,0)开始裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 0,
          "y": 0,
          "width": 300,
          "height": 300
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.011513948440551758,
        "is_functional_test": true
      },
      {
        "case_name": "Full Image Crop",
        "purpose": "验证工具能够裁剪整个图像（即不改变图像尺寸）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 0,
          "y": 0,
          "width": 1080,
          "height": 715
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.013515472412109375,
        "is_functional_test": true
      },
      {
        "case_name": "Crop to Nested Output Path",
        "purpose": "验证工具能够将裁剪后的图像保存到深层嵌套路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 50,
          "y": 50,
          "width": 300,
          "height": 300
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.008660078048706055,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Input",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.0070040225982666016,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证工具能够处理输出路径中的特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.008508920669555664,
        "is_functional_test": true
      },
      {
        "case_name": "Large Image Crop",
        "purpose": "验证工具能够处理大尺寸图像并进行裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 100,
          "y": 100,
          "width": 1000,
          "height": 1000
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.06573081016540527,
        "is_functional_test": true
      },
      {
        "case_name": "Negative X Coordinate",
        "purpose": "验证工具在X坐标为负数时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": -10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Coordinates cannot be negative. Received: x=-10, y=10\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Width or Height",
        "purpose": "验证工具在宽度或高度为零时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 10,
          "y": 10,
          "width": 0,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=100\"}"
        },
        "execution_time": 0.0065157413482666016,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Out of Bounds",
        "purpose": "验证工具在裁剪区域超出图像边界时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 1000,
          "y": 1000,
          "width": 200,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1146: error: (-215:Assertion failed) !_img.empty() in function 'cv::imwrite'\\n\"}"
        },
        "execution_time": 0.012033462524414062,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.00450444221496582,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Gaussian Blur Application",
        "purpose": "验证工具能够成功对图像应用高斯模糊滤镜（使用默认常见参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.016511201858520508,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Median Blur Application",
        "purpose": "验证工具能够成功对图像应用中值模糊滤镜（使用默认常见参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.02007150650024414,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Large Image",
        "purpose": "验证工具能够处理大尺寸图像并正确应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 7
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.08775687217712402,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Nested Path Image",
        "purpose": "验证工具能够从深层嵌套路径加载图像并应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_resized.jpg",
          "filter_type": "median",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.005510807037353516,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name with Filter",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名并应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png",
          "filter_type": "gaussian",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.002997875213623047,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Image Path with Filter",
        "purpose": "验证工具能够处理包含特殊字符的图像路径并应用滤镜",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png",
          "filter_type": "median",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.png\"}"
        },
        "execution_time": 0.0035080909729003906,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "filter_type": "gaussian",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0065195560455322266,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": "",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.004617452621459961,
        "is_functional_test": false
      },
      {
        "case_name": "Unsupported Filter Type",
        "purpose": "验证工具在传入不支持的滤镜类型时报错",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "filter_type": "bilateral",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Unsupported filter type 'bilateral'. Supported filters: ['gaussian', 'median']\"}"
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": false
      },
      {
        "case_name": "Even Kernel Size Rejection",
        "purpose": "验证工具拒绝偶数大小的核并抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"error\": \"Kernel size should be odd for OpenCV filters. Received: 4\"}"
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection",
        "purpose": "验证工具能够使用默认阈值成功检测图像边缘",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.01676321029663086,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with PNG Image",
        "purpose": "验证工具能够处理PNG格式图像并进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.024531841278076172,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Custom Thresholds",
        "purpose": "验证工具能够使用自定义阈值进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 30.0,
          "threshold2": 90.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.11382627487182617,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Large Image",
        "purpose": "验证工具能够处理大尺寸图像并进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.11067914962768555,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Input Path",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.004508256912231445,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Input Path",
        "purpose": "验证工具能够处理输入路径中的特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.png\"}"
        },
        "execution_time": 0.0044078826904296875,
        "is_functional_test": true
      },
      {
        "case_name": "Nested Path Input Image",
        "purpose": "验证工具能够从深层嵌套路径加载图像并进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_resized.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.010446310043334961,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Input Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时正确报错",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.0045130252838134766,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": "",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.006324291229248047,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Values",
        "purpose": "验证工具是否能正确处理负数阈值参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold1": -10.0,
          "threshold2": -50.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.01751112937927246,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Threshold Application",
        "purpose": "验证工具能够成功对图像应用阈值处理并生成二值图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.015694856643676758,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to PNG Image",
        "purpose": "验证工具能够处理PNG格式图像并正确应用阈值操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.022581100463867188,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold Value Equals Max Value",
        "purpose": "验证当阈值等于最大值时，工具是否仍能正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 255.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.07485723495483398,
        "is_functional_test": true
      },
      {
        "case_name": "Low Threshold Value",
        "purpose": "验证低阈值（如0）是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_cropped.jpg",
          "threshold_value": 0.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.0041294097900390625,
        "is_functional_test": true
      },
      {
        "case_name": "Max Value Less Than Threshold",
        "purpose": "验证当max_value小于threshold_value时的行为是否符合预期",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_median_filtered.png",
          "threshold_value": 127.0,
          "max_value": 100.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.015510082244873047,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Input",
        "purpose": "验证工具能够处理带有Unicode字符的输入文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_月亮与星星.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_\\u6708\\u4eae\\u4e0e\\u661f\\u661f.png\"}"
        },
        "execution_time": 0.007518768310546875,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能够处理输入路径中的特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#%&()_file.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#%&()_file.png\"}"
        },
        "execution_time": 0.005104541778564453,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.005517005920410156,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.005995035171508789,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": "",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.003451108932495117,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value",
        "purpose": "验证负数阈值是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "threshold_value": -10.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": true
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具能够成功检测图像中的轮廓并返回有效的JSON格式结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 714]], [[1079, 714]], [[1079, 0]]]]}"
        },
        "execution_time": 0.00950765609741211,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection on PNG Image",
        "purpose": "验证工具能够处理PNG格式的图像并正确检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.png"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 714]], [[1079, 714]], [[1079, 0]]]]}"
        },
        "execution_time": 0.017742156982421875,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Grayscale Image",
        "purpose": "验证工具能够处理灰度图像并检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_grayscale.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.05961108207702637,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours in Cropped Image",
        "purpose": "验证工具能够对裁剪后的图像进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\nature_cropped.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 199]], [[299, 199]], [[299, 0]]]]}"
        },
        "execution_time": 0.005478620529174805,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection in Filtered Image",
        "purpose": "验证工具能够对经过滤波处理的图像进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_nested_filtered.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.047455787658691406,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name in Contour Detection",
        "purpose": "验证工具能够处理带有Unicode字符的文件名作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文测试文档.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e2d\\u6587\\u6d4b\\u8bd5\\u6587\\u6863.docx\"}"
        },
        "execution_time": 0.003996372222900391,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Input Path",
        "purpose": "验证工具能够处理包含特殊字符的输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\crop@#%&()_test.png"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 199]], [[299, 199]], [[299, 0]]]]}"
        },
        "execution_time": 0.0045092105865478516,
        "is_functional_test": false
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.png\"}"
        },
        "execution_time": 0.008006572723388672,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0032210350036621094,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载非图像文件时抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\2023.nlposs-1.24.pdf\"}"
        },
        "execution_time": 0.0065152645111083984,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.003995180130004883,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具能够处理长文件路径作为输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\very_long_file_name_that_exceeds_windows_max_path_limit_which_is_260_characters_but_this_will_be_padded_to_make_it_even_more_extreme.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\very_long_file_name_that_exceeds_windows_max_path_limit_which_is_260_characters_but_this_will_be_padded_to_make_it_even_more_extreme.docx\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection",
        "purpose": "验证工具能够成功检测图像中的几何形状并返回结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"unknown\", \"contour\": [[[972, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[916, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[887, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[879, 714]], [[880, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[772, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[732, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[383, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[362, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[268, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[200, 714]], [[201, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[1024, 713]], [[1025, 714]]]}, {\"shape\": \"circle\", \"contour\": [[[897, 713]], [[896, 714]], [[895, 714]], [[896, 714]], [[897, 713]], [[898, 713]]]}, {\"shape\": \"circle\", \"contour\": [[[882, 713]], [[882, 714]], [[885, 714]], [[885, 713]], [[884, 714]], [[883, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[220, 713]], [[221, 714]]]}, {\"shape\": \"rectangle\", \"contour\": [[[1046, 712]], [[1047, 713]], [[1047, 714]], [[1047, 713]]]}, {\"shape\": \"unknown\", \"contour\": [[[1022, 712]], [[1022, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[880, 712]]]}, {\"shape\": \"circle\", \"contour\": [[[738, 712]], [[739, 713]], [[739, 714]], [[742, 714]], [[743, 713]], [[743, 712]], [[741, 712]], [[740, 713]], [[739, 713]]]}, {\"shape\": \"unknown\", \"contour\": [[[1054, 711]]]}, {\"shape\": \"unknown\", \"contour\": [[[1025, 711]]]}, {\"shape\": \"unknown\", \"contour\": [[[870, 711]], [[870, 712]]]}, {\"shape\": \"unknown\", \"contour\": [[[197, 711]]]}, {\"shape\": \"unknown\", \"contour\": [[[500, 710]]]}, {\"shape\": \"unknown\", \"contour\": [[[404, 710]], [[404, 714]]]}, {\"shape\": \"circle\", \"contour\": [[[166, 710]], [[166, 712]], [[164, 714]], [[163, 714]], [[162, 713]], [[163, 712]], [[162, 713]], [[161, 713]], [[162, 713]], [[163, 714]], [[166, 714]], [[167, 713]], [[167, 712]], [[168, 711]], [[167, 711]]]}, {\"shape\": \"circle\", \"contour\": [[[503, 709]], [[503, 710]], [[504, 711]], [[505, 710]], [[504, 709]]]}, {\"shape\": \"rectangle\", \"contour\": [[[1008, 708]], [[1008, 709]], [[1009, 710]], [[1008, 709]]]}, {\"shape\": \"unknown\", \"contour\": [[[999, 708]]]}, {\"shape\": \"unknown\", \"contour\": [[[501, 708]]]}, {\"shape\": \"unknown\", \"contour\": [[[132, 708]], [[133, 708]]]}, {\"shape\": \"circle\", \"contour\": [[[1060, 706]], [[1058, 708]], [[1057, 708]], [[1056, 709]], [[1056, 710]], [[1057, 710]], [[1058, 711]], [[1056, 709]], [[1057, 708]], [[1058, 708]], [[1059, 709]], [[1058, 708]], [[1060, 706]], [[1061, 706]]]}, {\"shape\": \"circle\", \"contour\": [[[937, 706]], [[937, 707]], [[936, 708]], [[937, 709]], [[936, 710]], [[937, 709]], [[938, 710]], [[938, 711]], [[938, 710]], [[940, 708]], [[939, 708]], [[938, 707]], [[938, 706]]]}, {\"shape\": \"rectangle\", \"contour\": [[[506, 706]], [[505, 707]], [[507, 709]], [[505, 707]]]}, {\"shape\": \"unknown\", \"contour\": [[[132, 706]]]}, {\"shape\": \"unknown\", \"contour\": [[[1064, 705]]]}, {\"shape\": \"unknown\", \"contour\": [[[910, 705]]]}, {\"shape\": \"unknown\", \"contour\": [[[898, 705]], [[899, 705]]]}, {\"shape\": \"unknown\", \"contour\": [[[1055, 704]]]}, {\"shape\": \"unknown\", \"contour\": [[[938, 704]]]}, {\"shape\": \"unknown\", \"contour\": [[[914, 704]]]}, {\"shape\": \"unknown\", \"contour\": [[[484, 704]]]}, {\"shape\": \"unknown\", \"contour\": [[[288, 704]], [[288, 705]]]}, {\"shape\": \"unknown\", \"contour\": [[[165, 704]], [[165, 706]]]}, {\"shape\": \"unknown\", \"contour\": [[[0, 703]]]}, {\"shape\": \"circle\", \"contour\": [[[973, 702]], [[971, 704]], [[971, 705]], [[971, 704]], [[973, 702]], [[975, 704]]]}, {\"shape\": \"unknown\", \"contour\": [[[735, 701]]]}, {\"shape\": \"unknown\", \"contour\": [[[888, 700]]]}, {\"shape\": \"unknown\", \"contour\": [[[157, 700]], [[156, 701]]]}, {\"shape\": \"unknown\", \"contour\": [[[744, 699]]]}, {\"shape\": \"unknown\", \"contour\": [[[271, 698]]]}, {\"shape\": \"unknown\", \"contour\": [[[888, 697]], [[889, 698]]]}, {\"shape\": \"unknown\", \"contour\": [[[749, 697]]]}, {\"shape\": \"unknown\", \"contour\": [[[745, 696]], [[744, 697]]]}, {\"shape\": \"unknown\", \"contour\": [[[882, 694]], [[881, 695]]]}, {\"shape\": \"circle\", \"contour\": [[[881, 688]], [[880, 689]], [[881, 690]], [[880, 691]], [[881, 691]], [[882, 692]], [[881, 691]], [[881, 690]], [[880, 689]]]}, {\"shape\": \"unknown\", \"contour\": [[[153, 688]]]}, {\"shape\": \"circle\", \"contour\": [[[741, 684]], [[741, 686]], [[742, 687]], [[743, 686]], [[743, 685]], [[742, 684]]]}, {\"shape\": \"unknown\", \"contour\": [[[752, 683]]]}, {\"shape\": \"unknown\", \"contour\": [[[754, 681]]]}, {\"shape\": \"unknown\", \"contour\": [[[728, 681]]]}, {\"shape\": \"unknown\", \"contour\": [[[751, 679]], [[752, 680]]]}, {\"shape\": \"unknown\", \"contour\": [[[728, 679]]]}, {\"shape\": \"circle\", \"contour\": [[[746, 677]], [[746, 678]], [[745, 679]], [[744, 678]], [[745, 679]], [[746, 678]], [[747, 678]], [[748, 679]], [[747, 678]], [[747, 677]]]}, {\"shape\": \"unknown\", \"contour\": [[[728, 677]], [[729, 677]]]}, {\"shape\": \"unknown\", \"contour\": [[[744, 676]]]}, {\"shape\": \"unknown\", \"contour\": [[[744, 672]]]}, {\"shape\": \"circle\", \"contour\": [[[752, 666]], [[753, 667]], [[753, 668]], [[752, 669]], [[753, 668]], [[753, 667]], [[754, 666]], [[753, 667]]]}, {\"shape\": \"rectangle\", \"contour\": [[[755, 664]], [[756, 665]], [[756, 666]], [[756, 665]]]}, {\"shape\": \"unknown\", \"contour\": [[[735, 664]]]}, {\"shape\": \"rectangle\", \"contour\": [[[735, 660]], [[734, 661]], [[735, 662]], [[734, 661]]]}, {\"shape\": \"unknown\", \"contour\": [[[732, 659]], [[733, 659]]]}, {\"shape\": \"unknown\", \"contour\": [[[735, 657]]]}, {\"shape\": \"unknown\", \"contour\": [[[760, 656]]]}, {\"shape\": \"unknown\", \"contour\": [[[744, 655]]]}, {\"shape\": \"circle\", \"contour\": [[[734, 649]], [[733, 650]], [[734, 651]], [[733, 652]], [[733, 654]], [[732, 655]], [[731, 655]], [[732, 655]], [[733, 656]], [[732, 657]], [[733, 657]], [[733, 656]], [[735, 654]], [[734, 655]], [[733, 654]], [[733, 653]], [[734, 652]], [[734, 651]], [[735, 650]]]}, {\"shape\": \"circle\", \"contour\": [[[744, 648]], [[746, 650]], [[745, 651]], [[744, 651]], [[745, 651]], [[746, 650]], [[747, 651]], [[747, 652]], [[746, 653]], [[744, 653]], [[745, 653]], [[747, 655]], [[748, 654]], [[749, 655]], [[750, 654]], [[...[截断]，共计42119字符，剩余36119字符"
        },
        "execution_time": 0.01800847053527832,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Shapes in PNG Format",
        "purpose": "验证工具能够处理PNG格式图像并正确识别其中的几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_thresholded.png"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"unknown\", \"contour\": [[[1005, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[879, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[136, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[130, 714]], [[131, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[0, 714]]]}, {\"shape\": \"unknown\", \"contour\": [[[285, 713]], [[285, 714]]]}, {\"shape\": \"triangle\", \"contour\": [[[153, 713]], [[153, 714]], [[154, 714]]]}, {\"shape\": \"rectangle\", \"contour\": [[[882, 712]], [[882, 714]], [[885, 714]], [[883, 712]]]}, {\"shape\": \"unknown\", \"contour\": [[[289, 712]], [[289, 714]]]}, {\"shape\": \"rectangle\", \"contour\": [[[491, 711]], [[490, 712]], [[490, 714]], [[491, 714]]]}, {\"shape\": \"rectangle\", \"contour\": [[[995, 709]], [[995, 714]], [[996, 714]], [[996, 713]], [[995, 712]]]}, {\"shape\": \"unknown\", \"contour\": [[[284, 709]], [[284, 711]]]}, {\"shape\": \"circle\", \"contour\": [[[888, 708]], [[887, 709]], [[887, 710]], [[887, 709]], [[888, 708]], [[889, 709]], [[889, 714]], [[891, 714]], [[890, 713]], [[891, 712]], [[890, 711]], [[890, 709]], [[889, 709]]]}, {\"shape\": \"rectangle\", \"contour\": [[[279, 708]], [[277, 710]], [[277, 711]], [[276, 712]], [[276, 714]], [[281, 714]], [[281, 711]], [[280, 710]], [[280, 708]]]}, {\"shape\": \"unknown\", \"contour\": [[[142, 708]]]}, {\"shape\": \"circle\", \"contour\": [[[149, 707]], [[147, 709]], [[147, 710]], [[146, 711]], [[146, 713]], [[148, 711]], [[149, 711]], [[149, 710]], [[150, 709]], [[149, 708]]]}, {\"shape\": \"rectangle\", \"contour\": [[[212, 705]], [[211, 706]], [[210, 706]], [[210, 707]], [[207, 710]], [[206, 710]], [[205, 711]], [[205, 712]], [[203, 714]], [[205, 714]], [[206, 713]], [[206, 712]], [[208, 710]], [[208, 709]], [[209, 708]], [[210, 708]], [[211, 707]], [[212, 707]], [[212, 706]], [[213, 705]]]}, {\"shape\": \"triangle\", \"contour\": [[[197, 705]], [[196, 706]], [[197, 706]]]}, {\"shape\": \"unknown\", \"contour\": [[[941, 704]]]}, {\"shape\": \"circle\", \"contour\": [[[884, 704]], [[883, 705]], [[883, 707]], [[884, 708]], [[885, 707]], [[884, 706]], [[884, 705]], [[885, 704]]]}, {\"shape\": \"rectangle\", \"contour\": [[[281, 701]], [[282, 702]], [[282, 704]], [[283, 705]], [[283, 706]], [[283, 704]], [[282, 703]], [[282, 701]]]}, {\"shape\": \"unknown\", \"contour\": [[[881, 697]], [[881, 698]]]}, {\"shape\": \"unknown\", \"contour\": [[[935, 696]]]}, {\"shape\": \"rectangle\", \"contour\": [[[888, 693]], [[887, 694]], [[887, 695]], [[884, 698]], [[884, 700]], [[885, 701]], [[885, 698]], [[887, 696]], [[887, 694]]]}, {\"shape\": \"rectangle\", \"contour\": [[[743, 692]], [[743, 693]], [[739, 697]], [[739, 698]], [[740, 699]], [[742, 699]], [[743, 698]]]}, {\"shape\": \"rectangle\", \"contour\": [[[939, 691]], [[938, 692]], [[938, 693]], [[937, 694]], [[937, 695]], [[938, 696]], [[938, 695]], [[939, 694]]]}, {\"shape\": \"rectangle\", \"contour\": [[[750, 682]], [[750, 684]], [[751, 684]], [[751, 682]]]}, {\"shape\": \"rectangle\", \"contour\": [[[741, 680]], [[740, 681]], [[738, 681]], [[738, 683]], [[742, 683]], [[744, 681]], [[744, 680]]]}, {\"shape\": \"triangle\", \"contour\": [[[734, 673]], [[733, 674]], [[733, 675]], [[732, 676]], [[732, 678]], [[731, 679]], [[731, 680]], [[730, 681]], [[730, 682]], [[731, 683]], [[730, 684]], [[730, 688]], [[731, 689]], [[731, 694]], [[730, 695]], [[730, 697]], [[729, 698]], [[729, 700]], [[728, 701]], [[728, 704]], [[726, 706]], [[726, 714]], [[730, 714]], [[730, 713]], [[731, 712]], [[731, 707]], [[732, 706]], [[732, 702]], [[733, 701]], [[732, 700]], [[732, 696]], [[733, 695]], [[733, 688]], [[732, 687]], [[732, 686]], [[734, 684]], [[734, 683]], [[735, 682]], [[735, 681]], [[734, 680]], [[734, 678]], [[735, 677]], [[735, 674]]]}, {\"shape\": \"unknown\", \"contour\": [[[743, 655]]]}, {\"shape\": \"circle\", \"contour\": [[[741, 646]], [[741, 649]], [[742, 650]], [[743, 649]], [[743, 647]], [[742, 646]]]}, {\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 477]], [[1, 478]], [[1, 482]], [[0, 483]], [[0, 700]], [[2, 702]], [[2, 704]], [[1, 705]], [[0, 704]], [[0, 711]], [[0, 710]], [[1, 709]], [[2, 710]], [[2, 714]], [[32, 714]], [[33, 713]], [[33, 711]], [[35, 709]], [[36, 710]], [[36, 711]], [[35, 712]], [[35, 714]], [[36, 714]], [[37, 713]], [[37, 709]], [[39, 707]], [[39, 706]], [[40, 705]], [[41, 706]], [[42, 706]], [[43, 707]], [[43, 709]], [[42, 710]], [[42, 711]], [[41, 712]], [[41, 713]], [[40, 714]], [[42, 714]], [[43, 713]], [[44, 714]], [[87, 714]], [[88, 713]], [[87, 714]], [[85, 712]], [[87, 710]], [[86, 709]], [[86, 706]], [[87, 705]], [[88, 706]], [[88, 708]], [[88, 696]], [[89, 695]], [[90, 696]], [[90, 697]], [[90, 696]], [[91, 695]], [[92, 696]], [[92, 699]], [[91, 700]], [[91, 704]], [[90, 705]], [[90, 707]], [[91, 707]], [[92, 708]], [[92, 711]], [[91, 712]], [[91, 714]], [[94, 714]], [[94, 711]], [[96, 709]], [[97, 710]], [[97, 714]], [[99, 714]], [[99, 712]], [[100, 711]], [[101, 712]], [[101, 714]], [[102, 713]], [[102, 712]], [[101, 711]], [[101, 708]], [[102, 707]], [[104, 707]], [[105, 708]], [[105, 714]], [[118, 714]], [[119, 713]], [[119, 712]], [[120, 711]], [[119, 710]], [[119, 709]], [[120, 708]], [[120, 707]], [[121, 706]], [[121, 701]], [[123, 699]], [[123, 696]], [[122, 695]], [[122, 693]], [[123, 692]], [[124, 692]], [[126, 694]], [[127, 693]], [[127, 692]], [[128, 691]], [[130, 693]], [[130, 694]], [[131, 695]], [[126, 700]], [[126, 701]], [[123, 704]], [[123, 707]], [[122, 708]], [[122, 709]], [[123, 708]], [[124, 708]], [[125, 709]], [[125, 710]], [[124, 711]], [[125, 710]], [[126, 711]], [[126, 713]], [[126, 711]], [[127, 710]], [[129, 712]], [[130, 712]], [[129, 711]], [[129, 710]], [[130, 709]], [[129, 708]], [[129, 707]], [[131, 705]], [[132, 705]], [[132, 703]], [[133, 702]], [[133, 701]], [[134, 700]], [[132, 698]], [[132, 696]], [[134, 694]], [[134, 691]], [[133, 690]], [[134, 689]], [[134, 686]], [[135, 685]], [[135, 684]], [[136, 683]], [[136, 679]], [[138, 677]], [[139, 677]], [[140, 676]], [[141, 676]], [[141, 675]], [[140, 676]], [[138, 676]], [[137, 675]], [[140, 672]], [[140, 670]], [[139, 669]], [[140, 668]], [[140, 667]], [[141, 666]], [[143, 668]]...[截断]，共计26784字符，剩余20784字符"
        },
        "execution_time": 0.014191150665283203,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with Nested Path",
        "purpose": "验证工具能够从深层嵌套路径加载图像并识别形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\xue_saved.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\xue_saved.jpg\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode File Name Handling",
        "purpose": "验证工具能够处理带有Unicode字符的文件名并进行形状识别",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文测试文档_shape.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e2d\\u6587\\u6d4b\\u8bd5\\u6587\\u6863_shape.png\"}"
        },
        "execution_time": 0.007025718688964844,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能够处理输入路径中的特殊字符并识别形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\crop@#%&()_test.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\crop@#%&()_test.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具能够处理长文件路径作为输入并识别形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\deep\\nested\\path\\very_long_file_name_that_exceeds_windows_max_path_limit_which_is_260_characters_but_this_will_be_padded_to_make_it_even_more_extreme.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\deep\\\\nested\\\\path\\\\very_long_file_name_that_exceeds_windows_max_path_limit_which_is_260_characters_but_this_will_be_padded_to_make_it_even_more_extreme.jpg\"}"
        },
        "execution_time": 0.003077983856201172,
        "is_functional_test": true
      },
      {
        "case_name": "SQL Injection Attempt in Image Path",
        "purpose": "验证工具不会执行恶意代码注入（如SQL注入）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_test';_DROP_TABLE_icons;--.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_test';_DROP_TABLE_icons;--.jpg\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.007508277893066406,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Format",
        "purpose": "验证工具在无法加载图像时抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.txt\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "验证工具在输入路径为空时正确处理错误",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Binary Image File",
        "purpose": "验证工具在传入非二值化图像文件时能正确报错",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 714]], [[1079, 714]], [[1079, 0]]]}]}"
        },
        "execution_time": 0.011281013488769531,
        "is_functional_test": false
      },
      {
        "case_name": "Large Binary Image File",
        "purpose": "验证工具能够处理大尺寸二值化图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\xue_grayscale.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]}]}"
        },
        "execution_time": 0.05662083625793457,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 108
}