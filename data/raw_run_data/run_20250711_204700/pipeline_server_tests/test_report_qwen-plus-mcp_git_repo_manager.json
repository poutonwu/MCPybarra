{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_git_repo_manager",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_git_repo_manager/refined/server.py",
  "timestamp": "2025-07-11T21:23:47.965338",
  "tools": [
    {
      "name": "write_to_temp_file",
      "description": "\n    将内容写入指定文件路径。\n\n    Args:\n        file_path: 要写入的文件路径 (必填)。\n        content: 要写入的内容 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        IOError: 如果文件写入失败。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "write_to_temp_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "git_init",
      "description": "\n    初始化一个新的Git仓库。\n\n    Args:\n        repo_path: 新仓库的文件路径 (必填)。\n\n    Returns:\n        包含初始化状态的字典，包括仓库路径和初始化成功状态。\n\n    Raises:\n        ValueError: 如果提供的路径无效或已存在。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_initArguments",
        "type": "object"
      }
    },
    {
      "name": "git_status",
      "description": "\n    获取仓库当前状态。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含仓库状态信息的字典，如当前分支、修改文件列表等。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_statusArguments",
        "type": "object"
      }
    },
    {
      "name": "git_add",
      "description": "\n    将文件添加到暂存区。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要添加的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_addArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_unstaged",
      "description": "\n    查看未暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含未暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_unstagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_staged",
      "description": "\n    查看已暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含已暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_stagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff",
      "description": "\n    比较分支或提交。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit1: 第一个比较的提交哈希或分支名 (必填)。\n        commit2: 第二个比较的提交哈希或分支名 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含两个提交之间差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit1": {
            "title": "Commit1",
            "type": "string"
          },
          "commit2": {
            "title": "Commit2",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit1",
          "commit2"
        ],
        "title": "git_diffArguments",
        "type": "object"
      }
    },
    {
      "name": "git_commit",
      "description": "\n    提交更改。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        message: 提交信息 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交结果的字典，包括提交哈希和消息。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "title": "git_commitArguments",
        "type": "object"
      }
    },
    {
      "name": "git_reset",
      "description": "\n    取消暂存文件。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要取消暂存的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或文件信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_resetArguments",
        "type": "object"
      }
    },
    {
      "name": "git_log",
      "description": "\n    查看提交历史。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交历史的列表，每个条目包含提交哈希、作者、日期和消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_logArguments",
        "type": "object"
      }
    },
    {
      "name": "git_create_branch",
      "description": "\n    创建新分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 新分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_create_branchArguments",
        "type": "object"
      }
    },
    {
      "name": "git_checkout",
      "description": "\n    切换分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 要切换到的分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_checkoutArguments",
        "type": "object"
      }
    },
    {
      "name": "git_show",
      "description": "\n    显示提交的详细内容。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit_hash: 要显示的提交哈希 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交详细信息的字符串，包括元数据和差异内容。\n\n    Raises:\n        ValueError: 如果提供的路径或提交哈希无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit_hash": {
            "title": "Commit Hash",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit_hash"
        ],
        "title": "git_showArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "write_to_temp_file": [
      {
        "case_name": "基本写入功能测试",
        "purpose": "验证工具能够将指定内容写入一个临时文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt",
          "content": "This is a basic test content for write_to_temp_file."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt\", \"content_length\": 52}}"
        },
        "execution_time": 0.005281686782836914,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的写入测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确写入文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\skip_dependent_write_test.txt",
          "content": "Content with skip_dependent_steps flag enabled.",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\skip_dependent_write_test.txt\", \"content_length\": 47}}"
        },
        "execution_time": 0.013512372970581055,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径写入测试",
        "purpose": "验证工具支持在包含中文字符的路径中创建并写入文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文写入测试.txt",
          "content": "这是用于测试中文路径的文本内容。"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u8f93\\u51fa\\\\\\u4e2d\\u6587\\u5199\\u5165\\u6d4b\\u8bd5.txt\", \"content_length\": 16}}"
        },
        "execution_time": 0.008640289306640625,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径写入测试",
        "purpose": "验证工具是否能处理包含特殊字符的文件路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_write_test.txt",
          "content": "File path contains special characters like @, #, %, & etc."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_write_test.txt\", \"content_length\": 58}}"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": true
      },
      {
        "case_name": "空内容写入测试",
        "purpose": "验证工具是否允许写入空内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\empty_content_write_test.txt",
          "content": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\empty_content_write_test.txt\", \"content_length\": 0}}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 写入受保护系统路径",
        "purpose": "验证工具是否阻止写入操作系统关键目录，如 C:\\Windows",
        "args": {
          "file_path": "C:\\Windows\\temp\\security_test.txt",
          "content": "Security test attempt to write into system protected directory."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"C:\\\\Windows\\\\temp\\\\security_test.txt\", \"content_length\": 63}}"
        },
        "execution_time": 0.007445812225341797,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径写入测试",
        "purpose": "验证工具对非法或不存在的路径抛出 ValueError 异常",
        "args": {
          "file_path": "invalid:/path/to/file.txt",
          "content": "Test content for invalid file path."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"IOError\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u5931\\u8d25: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'invalid:'\"}"
        },
        "execution_time": 0.0035011768341064453,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录写入测试",
        "purpose": "验证工具在目标路径不可写时抛出 IOError",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "content": "Trying to write into read-only location."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\", \"content_length\": 40}}"
        },
        "execution_time": 0.004003286361694336,
        "is_functional_test": false
      },
      {
        "case_name": "超长路径写入测试",
        "purpose": "验证工具是否支持 Windows 最大路径长度限制（MAX_PATH）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_saving_screenshot_1234567890_extra_long_name.txt",
          "content": "Testing very long file path writing capability."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_saving_screenshot_1234567890_extra_long_name.txt\", \"content_length\": 47}}"
        },
        "execution_time": 0.0065233707427978516,
        "is_functional_test": true
      },
      {
        "case_name": "重复写入同一文件测试",
        "purpose": "验证多次调用写入同一文件不会导致异常，并覆盖原有内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\duplicate_write_test.txt",
          "content": "Overwriting previous content in the same file."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\duplicate_write_test.txt\", \"content_length\": 46}}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "多线程并发写入测试",
        "purpose": "模拟多个线程同时尝试写入同一个文件，验证工具的并发控制能力",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_write_test.txt",
          "content": "Concurrent write access test by multiple threads."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_write_test.txt\", \"content_length\": 49}}"
        },
        "execution_time": 0.003504514694213867,
        "is_functional_test": false
      }
    ],
    "git_init": [
      {
        "case_name": "基本Git仓库初始化测试",
        "purpose": "验证工具能够成功在指定路径下初始化一个新的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\", \"initialized\": true}}"
        },
        "execution_time": 0.15289306640625,
        "is_functional_test": true
      },
      {
        "case_name": "带特殊字符的路径初始化测试",
        "purpose": "验证工具是否支持在包含特殊字符的路径中初始化Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\", \"initialized\": true}}"
        },
        "execution_time": 0.2077181339263916,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径Git初始化测试",
        "purpose": "验证工具是否支持在包含中文字符的路径中创建Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u8f93\\u51fa\\\\\\u4e2d\\u6587git\\u521d\\u59cb\\u5316\\u6d4b\\u8bd5\", \"initialized\": true}}"
        },
        "execution_time": 0.14877939224243164,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径Git初始化测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中初始化Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\", \"initialized\": true}}"
        },
        "execution_time": 0.14534473419189453,
        "is_functional_test": true
      },
      {
        "case_name": "重复初始化已存在目录测试",
        "purpose": "验证工具是否阻止对已存在且非空的目录进行Git仓库重复初始化",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt\"}"
        },
        "execution_time": 0.005002260208129883,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径Git初始化测试",
        "purpose": "验证工具是否正确处理非法或格式错误的路径输入",
        "args": {
          "repo_path": "invalid:/path/to/git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'invalid:'\"}"
        },
        "execution_time": 0.004504680633544922,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录Git初始化测试",
        "purpose": "验证工具是否能检测并拒绝尝试在只读目录中初始化Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.0076143741607666016,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 在系统保护目录初始化Git仓库",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中创建Git仓库",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"C:\\\\Windows\\\\temp\\\\security_git_init_test\", \"initialized\": true}}"
        },
        "execution_time": 0.2134861946105957,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数测试",
        "purpose": "验证工具是否对空字符串路径抛出ValueError异常",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84\"}"
        },
        "execution_time": 0.004502058029174805,
        "is_functional_test": false
      },
      {
        "case_name": "使用现有Git仓库目录初始化",
        "purpose": "验证工具是否识别并拒绝尝试在已有.git目录的路径中重新初始化Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\.git\"}"
        },
        "execution_time": 0.0035088062286376953,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程Git初始化测试",
        "purpose": "模拟多个线程同时尝试在相同路径下初始化Git仓库，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\", \"initialized\": true}}"
        },
        "execution_time": 0.23683738708496094,
        "is_functional_test": false
      }
    ],
    "git_status": [
      {
        "case_name": "基本Git状态获取测试",
        "purpose": "验证工具能够成功获取已初始化仓库的当前状态信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.4460773468017578,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的状态获取测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确获取仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.3360116481781006,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径仓库状态获取测试",
        "purpose": "验证工具是否支持在包含中文字符的路径中获取Git仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.42406678199768066,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径状态获取测试",
        "purpose": "验证工具是否能处理包含特殊字符的仓库路径并获取状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径仓库状态获取测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中获取Git仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.5501928329467773,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 获取系统保护目录仓库状态",
        "purpose": "验证工具是否阻止尝试读取操作系统关键目录（如C:\\Windows）中的Git仓库状态",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.4333631992340088,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径仓库状态获取测试",
        "purpose": "验证工具对非法或格式错误的仓库路径输入抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/git_repo\"}"
        },
        "execution_time": 0.004513263702392578,
        "is_functional_test": false
      },
      {
        "case_name": "非Git仓库路径状态获取测试",
        "purpose": "验证工具是否能识别指定路径不是有效的Git仓库并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数测试",
        "purpose": "验证工具是否对空字符串路径抛出ValueError异常",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.004507541656494141,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录仓库状态获取测试",
        "purpose": "验证工具是否能检测并拒绝尝试从只读目录中获取Git仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程仓库状态获取测试",
        "purpose": "模拟多个线程同时尝试获取相同仓库的状态，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.3991110324859619,
        "is_functional_test": false
      },
      {
        "case_name": "无权限目录仓库状态获取测试",
        "purpose": "验证工具是否能正确处理用户没有访问权限的仓库路径",
        "args": {
          "repo_path": "C:\\Program Files\\Common Files"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: C:\\\\Program Files\\\\Common Files\"}"
        },
        "execution_time": 0.004506826400756836,
        "is_functional_test": false
      }
    ],
    "git_add": [
      {
        "case_name": "基本git_add功能测试",
        "purpose": "验证工具能够将指定文件添加到Git暂存区（正常路径）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.03453946113586426,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps标志的git_add测试",
        "purpose": "验证在 skip_dependent_steps=True 情况下仍能正确执行 git add 操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\skip_dependent_write_test.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径文件git_add测试",
        "purpose": "验证工具支持将包含中文字符路径下的文件添加到Git暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文写入测试.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Absolute path 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\\\u8f93\\u51fa\\\\\\\\\\u4e2d\\u6587\\u5199\\u5165\\u6d4b\\u8bd5.txt' is not in git repository at 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\\\u8f93\\u51fa\\\\\\\\\\u4e2d\\u6587git\\u521d\\u59cb\\u5316\\u6d4b\\u8bd5'\"}"
        },
        "execution_time": 0.005083560943603516,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径文件git_add测试",
        "purpose": "验证工具是否能处理包含特殊字符的文件路径并成功添加到Git暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径文件git_add测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中添加文件到Git暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_saving_screenshot_1234567890_extra_long_name.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "重复添加同一文件测试",
        "purpose": "验证多次调用 git add 同一文件不会导致异常，并能正确更新暂存区状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\duplicate_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0035085678100585938,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 添加系统保护目录文件",
        "purpose": "验证工具是否阻止尝试将操作系统关键目录中的文件添加到Git暂存区",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "file_path": "C:\\Windows\\system32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Absolute path 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\drivers\\\\\\\\etc\\\\\\\\hosts' is not in git repository at 'C:\\\\\\\\Windows\\\\\\\\temp\\\\\\\\security_git_init_test'\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径git_add测试",
        "purpose": "验证当提供的 repo_path 不存在或无效时，工具抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.006527423858642578,
        "is_functional_test": false
      },
      {
        "case_name": "无效文件路径git_add测试",
        "purpose": "验证当提供的 file_path 不存在或无效时，工具抛出 ValueError 异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "invalid:/path/to/file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "空参数git_add测试",
        "purpose": "验证当未提供必要参数时，工具抛出 ValueError 异常",
        "args": {
          "repo_path": "",
          "file_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.005511283874511719,
        "is_functional_test": false
      },
      {
        "case_name": "只读文件git_add测试",
        "purpose": "验证工具是否能检测并拒绝尝试添加只读文件到Git暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.006503105163574219,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程git_add测试",
        "purpose": "模拟多个线程同时尝试添加文件到同一个Git仓库，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      }
    ],
    "git_diff_unstaged": [
      {
        "case_name": "基本未暂存差异测试",
        "purpose": "验证工具能够正确获取一个已初始化Git仓库中未暂存的文件修改差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.015140056610107422,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的未暂存差异测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\skip_dependent_write_test.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\skip_dependent_write_test.txt\"}"
        },
        "execution_time": 0.011524200439453125,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径未暂存差异测试",
        "purpose": "验证工具支持在包含中文字符的路径中获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.3188505172729492,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径未暂存差异测试",
        "purpose": "验证工具是否能处理包含特殊字符的仓库路径并获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径未暂存差异测试",
        "purpose": "验证工具是否支持在超过常规长度限制的仓库路径中获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.005525350570678711,
        "is_functional_test": true
      },
      {
        "case_name": "空路径参数未暂存差异测试",
        "purpose": "验证工具是否对空字符串路径抛出ValueError异常",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.004995107650756836,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径未暂存差异测试",
        "purpose": "验证工具是否正确处理非法或格式错误的仓库路径输入",
        "args": {
          "repo_path": "invalid:/path/to/git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/git_repo\"}"
        },
        "execution_time": 0.006776571273803711,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录未暂存差异测试",
        "purpose": "验证工具是否能检测并拒绝尝试在只读目录中获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.005026340484619141,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 系统保护目录未暂存差异获取",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中获取Git未暂存差异",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.26421475410461426,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程未暂存差异获取测试",
        "purpose": "模拟多个线程同时尝试在相同仓库路径下获取未暂存差异，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.003762483596801758,
        "is_functional_test": false
      },
      {
        "case_name": "无修改仓库的未暂存差异测试",
        "purpose": "验证在一个没有任何未暂存修改的干净仓库中，工具返回空差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.004006147384643555,
        "is_functional_test": true
      },
      {
        "case_name": "存在未暂存修改的差异获取测试",
        "purpose": "验证工具能否正确识别并返回实际存在的未暂存文件修改差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\duplicate_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\duplicate_write_test.txt\"}"
        },
        "execution_time": 0.006512165069580078,
        "is_functional_test": true
      }
    ],
    "git_diff_staged": [
      {
        "case_name": "基本暂存差异查看测试",
        "purpose": "验证工具能够成功获取已初始化仓库中暂存的文件差异内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0065174102783203125,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的暂存差异查看测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确获取暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\skip_dependent_write_test.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\skip_dependent_write_test.txt\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径Git仓库查看暂存差异测试",
        "purpose": "验证工具是否支持在包含中文字符的路径中获取暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.010086536407470703,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径Git仓库查看暂存差异测试",
        "purpose": "验证工具是否支持在包含特殊字符的路径中获取暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.007954835891723633,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径Git仓库查看暂存差异测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中获取暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.004515647888183594,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径查看暂存差异测试",
        "purpose": "验证工具是否对非法或格式错误的路径输入抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/git_repo\"}"
        },
        "execution_time": 0.007533550262451172,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录查看暂存差异测试",
        "purpose": "验证工具是否拒绝尝试从只读目录中获取暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 系统保护目录查看暂存差异",
        "purpose": "验证工具是否阻止从操作系统关键目录（如C:\\Windows）中获取暂存差异",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.006510496139526367,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数查看暂存差异测试",
        "purpose": "验证工具是否对空字符串路径抛出ValueError异常",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": false
      },
      {
        "case_name": "使用已有.git目录但未添加任何暂存内容查看差异测试",
        "purpose": "验证工具在没有暂存内容时返回空差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5df2\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u627e\\u5230\\u5df2\\u6682\\u5b58\\u7684\\u66f4\\u6539\\u3002\"}"
        },
        "execution_time": 0.24678587913513184,
        "is_functional_test": true
      },
      {
        "case_name": "并发多线程查看暂存差异测试",
        "purpose": "模拟多个线程同时尝试查看相同仓库的暂存差异，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.003314495086669922,
        "is_functional_test": false
      },
      {
        "case_name": "查看暂存差异与实际修改文件结合测试",
        "purpose": "验证工具在有真实修改并暂存的情况下能否正确显示差异内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      }
    ],
    "git_commit": [
      {
        "case_name": "基本提交功能测试",
        "purpose": "验证git_commit工具能够成功提交更改到已初始化的Git仓库，使用基本参数和默认skip_dependent_steps值",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "message": "Initial commit for basic test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.005507230758666992,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的提交测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确执行提交操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "message": "Commit with skip_dependent_steps flag enabled",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径提交测试",
        "purpose": "验证工具支持在包含中文字符的仓库路径中执行提交操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "message": "提交信息包含中文内容"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6ca1\\u6709\\u9700\\u8981\\u63d0\\u4ea4\\u7684\\u66f4\\u6539\"}"
        },
        "execution_time": 0.2761368751525879,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径提交测试",
        "purpose": "验证工具是否能处理包含特殊字符的仓库路径并执行提交",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "message": "Commit message with special characters like @, #, %, & etc."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.003996610641479492,
        "is_functional_test": true
      },
      {
        "case_name": "空提交信息测试",
        "purpose": "验证工具是否允许提交空消息（如果Git允许）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "message": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.003958225250244141,
        "is_functional_test": true
      },
      {
        "case_name": "超长提交信息测试",
        "purpose": "验证工具是否支持非常长的提交信息文本",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "message": "This is a very long commit message that exceeds the typical length limit to test if the tool can handle it properly. This is just a test and no actual harm should be done to the system or repository."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.004418849945068359,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径提交测试",
        "purpose": "验证工具对非法或不存在的仓库路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repo.git",
          "message": "Test commit on invalid repo path"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo.git\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "未初始化仓库提交测试",
        "purpose": "验证工具尝试向未初始化的目录提交时抛出 GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\uninitialized_repo",
          "message": "Trying to commit to uninitialized repository"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\uninitialized_repo\"}"
        },
        "execution_time": 0.004506826400756836,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 提交到系统保护目录",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中进行Git提交",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "message": "Security test attempt to commit into system protected directory"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6ca1\\u6709\\u9700\\u8981\\u63d0\\u4ea4\\u7684\\u66f4\\u6539\"}"
        },
        "execution_time": 0.3091113567352295,
        "is_functional_test": false
      },
      {
        "case_name": "只读仓库提交测试",
        "purpose": "验证工具在目标仓库不可写时抛出 GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "message": "Trying to commit into read-only repository location"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程提交测试",
        "purpose": "模拟多个线程同时尝试提交到同一个仓库，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test",
          "message": "Concurrent commit access test by multiple threads"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "重复提交测试",
        "purpose": "验证多次调用提交命令不会导致异常，并生成新的提交哈希",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "message": "Repeated commit to verify new hash generation"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0064449310302734375,
        "is_functional_test": true
      }
    ],
    "git_log": [
      {
        "case_name": "基本提交历史查看测试",
        "purpose": "验证工具能够成功获取指定Git仓库的提交历史记录",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0075151920318603516,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的提交历史查看测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确获取提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0072519779205322266,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径提交历史查看测试",
        "purpose": "验证工具是否支持在包含中文字符的路径中读取提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Reference at 'refs/heads/master' does not exist\"}"
        },
        "execution_time": 0.010520219802856445,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径提交历史查看测试",
        "purpose": "验证工具是否支持在包含特殊字符的路径中读取提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.0064465999603271484,
        "is_functional_test": true
      },
      {
        "case_name": "超长路径提交历史查看测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中读取提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.0060040950775146484,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 查看系统保护目录中的提交历史",
        "purpose": "验证工具是否阻止访问操作系统关键目录（如C:\\Windows）中的Git仓库提交历史",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Reference at 'refs/heads/master' does not exist\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径提交历史查看测试",
        "purpose": "验证工具是否对非法或不存在的路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/git_repo\"}"
        },
        "execution_time": 0.007528066635131836,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录提交历史查看测试",
        "purpose": "验证工具是否能检测并拒绝尝试读取只读目录中的Git提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.00551295280456543,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数提交历史查看测试",
        "purpose": "验证工具是否对空字符串路径抛出ValueError异常",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "无.git目录的普通文件路径测试",
        "purpose": "验证工具是否对非Git仓库路径抛出 GitCommandError 异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt\"}"
        },
        "execution_time": 0.007526397705078125,
        "is_functional_test": false
      },
      {
        "case_name": "并发多线程提交历史查看测试",
        "purpose": "模拟多个线程同时尝试读取同一Git仓库的提交历史，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.0045468807220458984,
        "is_functional_test": false
      }
    ],
    "git_diff": [
      {
        "case_name": "基本Git差异比较测试",
        "purpose": "验证git_diff工具能够正确比较两个提交之间的差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.004500150680541992,
        "is_functional_test": true
      },
      {
        "case_name": "带跳过依赖步骤标志的Git差异测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确执行Git差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit1": "HEAD~1",
          "commit2": "HEAD",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.005011558532714844,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径Git差异测试",
        "purpose": "验证工具支持在包含中文字符的路径中执行Git差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: HEAD~1\"}"
        },
        "execution_time": 0.007523536682128906,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径Git差异测试",
        "purpose": "验证工具是否能处理包含特殊字符的仓库路径进行Git差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.0054967403411865234,
        "is_functional_test": true
      },
      {
        "case_name": "使用分支名称比较Git差异测试",
        "purpose": "验证工具能够使用分支名而非提交哈希进行差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit1": "main",
          "commit2": "develop"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0071125030517578125,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证工具对非法或不存在的仓库路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.0063550472259521484,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希测试",
        "purpose": "验证工具对无效的提交哈希值抛出 GitCommandError 异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit1": "invalid_commit_hash",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.004503726959228516,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 系统关键目录Git差异测试",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中执行Git差异比较",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: HEAD~1\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "空参数测试",
        "purpose": "验证工具是否对空字符串参数抛出ValueError异常",
        "args": {
          "repo_path": "",
          "commit1": "",
          "commit2": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "超长路径Git差异测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中执行Git差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "并发多线程Git差异测试",
        "purpose": "模拟多个线程同时尝试执行Git差异比较，验证其并发控制能力",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\concurrent_git_init_test",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\concurrent_git_init_test\"}"
        },
        "execution_time": 0.00507354736328125,
        "is_functional_test": false
      },
      {
        "case_name": "只读仓库Git差异测试",
        "purpose": "验证工具是否能检测并拒绝尝试在只读仓库中执行Git差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.007511138916015625,
        "is_functional_test": false
      }
    ],
    "git_reset": [
      {
        "case_name": "基本取消暂存功能测试",
        "purpose": "验证工具能够在标准路径下成功取消暂存一个已添加到暂存区的文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.00450897216796875,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的取消暂存测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下仍能正确执行 git reset 取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\duplicate_write_test.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.003001689910888672,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径仓库取消暂存测试",
        "purpose": "验证工具是否支持在包含中文字符的仓库路径中执行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文写入测试.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径取消暂存测试",
        "purpose": "验证工具是否能处理在包含特殊字符的仓库路径中执行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.00850677490234375,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 在系统保护目录取消暂存",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中执行Git取消暂存操作",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "file_path": "C:\\Windows\\temp\\security_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.004433155059814453,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证工具对非法或不存在的仓库路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.007521629333496094,
        "is_functional_test": false
      },
      {
        "case_name": "非Git仓库路径测试",
        "purpose": "验证工具是否拒绝对未初始化为Git仓库的路径执行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_write_test.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_write_test.txt \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 0.3452260494232178,
        "is_functional_test": false
      },
      {
        "case_name": "超长路径取消暂存测试",
        "purpose": "验证工具是否支持在超过常规长度限制的路径中执行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_saving_screenshot_1234567890_extra_long_name.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": true
      }
    ],
    "git_create_branch": [
      {
        "case_name": "基本分支创建功能测试",
        "purpose": "验证工具能够成功在指定仓库路径下创建新分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "branch_name": "feature/basic_branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": true
      },
      {
        "case_name": "带特殊字符的分支名称测试",
        "purpose": "验证工具是否支持包含特殊字符的新分支名称创建",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "branch_name": "feature@#%&()_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.006339073181152344,
        "is_functional_test": true
      },
      {
        "case_name": "中文分支名称创建测试",
        "purpose": "验证工具是否支持使用中文作为新分支名称",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "branch_name": "特性/中文功能测试"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.0064961910247802734,
        "is_functional_test": true
      },
      {
        "case_name": "超长分支名称创建测试",
        "purpose": "验证工具是否支持创建超过常规长度限制的分支名称",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name",
          "branch_name": "very_long_branch_name_that_still_works_for_creating_a_new_branch_1234567890_extra_long_name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_init_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.006012916564941406,
        "is_functional_test": true
      },
      {
        "case_name": "已存在分支重复创建测试",
        "purpose": "验证工具是否能正确处理尝试创建已存在的分支的情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\.git",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f master \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.006514787673950195,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径创建分支测试",
        "purpose": "验证工具对非法或不存在的仓库路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repository",
          "branch_name": "new-feature"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repository\"}"
        },
        "execution_time": 0.007514238357543945,
        "is_functional_test": false
      },
      {
        "case_name": "只读目录创建分支测试",
        "purpose": "验证工具是否能检测并拒绝尝试在只读目录中创建分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "branch_name": "readonly-check"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\info\\\\exclude\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 在系统保护目录创建Git分支",
        "purpose": "验证工具是否阻止在操作系统关键目录（如C:\\Windows）中创建Git分支",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "branch_name": "security-test-branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: Ref 'HEAD' did not resolve to an object\"}"
        },
        "execution_time": 0.006522655487060547,
        "is_functional_test": false
      }
    ],
    "git_checkout": [
      {
        "case_name": "基本分支切换测试",
        "purpose": "验证工具能够成功在指定的Git仓库路径下切换到指定分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": true
      },
      {
        "case_name": "带特殊字符的分支名称切换测试",
        "purpose": "验证工具是否支持切换到包含特殊字符的分支（如 feature@#%&()_test）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\.git",
          "branch_name": "feature@#%&()_test"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6210\\u529f\\u5207\\u6362\\u5230\\u5206\\u652f feature@#%&()_test\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\.git\", \"branch_name\": \"feature@#%&()_test\", \"checked_out\": true}}"
        },
        "execution_time": 0.1486494541168213,
        "is_functional_test": true
      },
      {
        "case_name": "中文分支切换测试",
        "purpose": "验证工具是否支持切换到包含中文字符的分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "branch_name": "功能测试-中文分支"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f \\u529f\\u80fd\\u6d4b\\u8bd5-\\u4e2d\\u6587\\u5206\\u652f \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.006390571594238281,
        "is_functional_test": true
      },
      {
        "case_name": "超长分支名称切换测试",
        "purpose": "验证工具是否支持切换到超过常规长度限制的分支名称",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\.git",
          "branch_name": "very_long_branch_name_that_still_works_for_creating_a_new_branch_1234567890"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6210\\u529f\\u5207\\u6362\\u5230\\u5206\\u652f very_long_branch_name_that_still_works_for_creating_a_new_branch_1234567890\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\.git\", \"branch_name\": \"very_long_branch_name_that_still_works_for_creating_a_new_branch_1234567890\", \"checked_out\": true}}"
        },
        "execution_time": 0.14297938346862793,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证工具是否对非法或不存在的仓库路径抛出 ValueError 异常",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.003161191940307617,
        "is_functional_test": false
      },
      {
        "case_name": "无效分支名称测试",
        "purpose": "验证工具是否对非法或不存在的分支名称抛出 GitCommandError 异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "branch_name": "nonexistent_branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 切换系统保护目录中的分支",
        "purpose": "验证工具是否阻止尝试在操作系统关键目录（如C:\\Windows）中执行分支切换操作",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f master \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.005059719085693359,
        "is_functional_test": false
      },
      {
        "case_name": "空参数测试",
        "purpose": "验证工具是否对空字符串路径和分支名抛出 ValueError 异常",
        "args": {
          "repo_path": "",
          "branch_name": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      }
    ],
    "git_show": [
      {
        "case_name": "基本git_show功能测试",
        "purpose": "验证git_show工具能够成功显示指定提交的详细信息（使用有效仓库路径和提交哈希）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit_hash": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.0055141448974609375,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的git_show测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，git_show仍能正确执行并返回提交详情",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit_hash": "HEAD",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.006520748138427734,
        "is_functional_test": true
      },
      {
        "case_name": "中文路径下的git_show测试",
        "purpose": "验证git_show工具支持在包含中文字符的路径中显示提交详情",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\输出\\中文git初始化测试",
          "commit_hash": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: HEAD\"}"
        },
        "execution_time": 0.011839628219604492,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符路径下的git_show测试",
        "purpose": "验证git_show工具是否能处理包含特殊字符的仓库路径并显示提交详情",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\path@#%&()_with_special_chars\\special_char_git_init_test",
          "commit_hash": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\path@#%&()_with_special_chars\\\\special_char_git_init_test\"}"
        },
        "execution_time": 0.009175300598144531,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证git_show在提供非法或不存在的仓库路径时抛出ValueError异常",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "commit_hash": "abc1234"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.006140470504760742,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希测试",
        "purpose": "验证git_show在提供无效的commit_hash时抛出ValueError或GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\basic_git_init_test",
          "commit_hash": "invalid_commit_hash"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\basic_git_init_test\"}"
        },
        "execution_time": 0.009099721908569336,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 系统关键目录git_show",
        "purpose": "验证git_show不能在操作系统关键目录（如C:\\Windows）中执行Git命令",
        "args": {
          "repo_path": "C:\\Windows\\temp\\security_git_init_test",
          "commit_hash": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: HEAD\"}"
        },
        "execution_time": 0.009519815444946289,
        "is_functional_test": false
      },
      {
        "case_name": "超长路径git_show测试",
        "purpose": "验证git_show是否支持超过常规长度限制的仓库路径",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\very_long_path_that_still_works_for_git_show_1234567890_extra_long_name",
          "commit_hash": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output\\\\very_long_path_that_still_works_for_git_show_1234567890_extra_long_name\"}"
        },
        "execution_time": 0.005056858062744141,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 137
}