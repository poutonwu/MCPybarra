{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_opencv_image_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_opencv_image_processor/refined/server.py",
  "timestamp": "2025-07-14T21:04:40.505702",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    Saves an image file from the given source path to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to be saved.\n        destination_path (str): The file path where the image will be saved.\n\n    Returns:\n        str: The file path of the newly saved image.\n\n    Raises:\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    Resizes an image located at the source path and saves it to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to resize.\n        destination_path (str): The file path where the resized image will be saved.\n        width (int): The desired width for the resized image.\n        height (int): The desired height for the resized image.\n\n    Returns:\n        str: The file path of the resized image.\n\n    Raises:\n        ValueError: If width or height are not positive integers.\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "source_path",
          "destination_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    Crops an image located at the source path and saves it to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to crop.\n        destination_path (str): The file path where the cropped image will be saved.\n        x (int): The x-coordinate of the top-left corner of the cropping rectangle.\n        y (int): The y-coordinate of the top-left corner of the cropping rectangle.\n        width (int): The width of the cropping rectangle.\n        height (int): The height of the cropping rectangle.\n\n    Returns:\n        str: The file path of the cropped image.\n\n    Raises:\n        ValueError: If width or height are not positive integers or coordinates are invalid.\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "source_path",
          "destination_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    Retrieves statistical information about an image and returns the result as a string.\n\n    Args:\n        source_path (str): The file path of the image to analyze.\n\n    Returns:\n        str: A string containing the statistical information about the image.\n\n    Raises:\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          }
        },
        "required": [
          "source_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    Applies a specified filter to an image and saves the filtered image to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to apply the filter on.\n        destination_path (str): The file path where the filtered image will be saved.\n        filter_type (str): The type of filter to apply (e.g., 'blur', 'sharpen').\n\n    Returns:\n        str: The file path of the filtered image.\n\n    Raises:\n        ValueError: If the filter type is not supported.\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path",
          "filter_type"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    Detects edges in an image using edge detection algorithms and saves the result to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to detect edges.\n        destination_path (str): The file path where the edge-detected image will be saved.\n\n    Returns:\n        str: The file path of the edge-detected image.\n\n    Raises:\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    Applies a threshold to an image, converting it to a binary image, and saves the result to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to apply the threshold on.\n        destination_path (str): The file path where the thresholded image will be saved.\n        threshold_value (int): The threshold value for binarization.\n\n    Returns:\n        str: The file path of the thresholded image.\n\n    Raises:\n        ValueError: If the threshold value is out of valid range.\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "integer"
          }
        },
        "required": [
          "source_path",
          "destination_path",
          "threshold_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    Detects contours in an image and saves the contour-detected image to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to detect contours.\n        destination_path (str): The file path where the contour-detected image will be saved.\n\n    Returns:\n        str: The file path of the contour-detected image.\n\n    Raises:\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    Finds shapes in an image using contour detection and saves the shape-detected image to a new destination path.\n\n    Args:\n        source_path (str): The file path of the image to find shapes.\n        destination_path (str): The file path where the shape-detected image will be saved.\n\n    Returns:\n        str: The file path of the shape-detected image.\n\n    Raises:\n        FileNotFoundError: If the source file does not exist.\n        IOError: If there is an issue reading or writing the image.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Save Image Successfully",
        "purpose": "验证工具能够成功将一个存在的图像文件从源路径复制到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_hit.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_hit.png"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Nested Directory",
        "purpose": "验证工具能否正确保存图像到嵌套目录结构中",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png"
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Save Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_nonexistent_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: An error occurred while saving the image: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\icon_saved.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: An error occurred while saving the image: [WinError 183] 当文件已存在时，无法创建该文件。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_append.txt'"
        },
        "execution_time": 0.003994464874267578,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Invalid Destination Path",
        "purpose": "验证写入无效路径时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\invalid\\path\\that\\does\\not\\exist\\saved_nature.jpeg"
        },
        "response": {
          "result": "D:\\invalid\\path\\that\\does\\not\\exist\\saved_nature.jpeg"
        },
        "execution_time": 0.3139352798461914,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具是否可以覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: An error occurred while saving the image: OpenCV(4.12.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.09002304077148438,
        "is_functional_test": true
      },
      {
        "case_name": "Save Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_large_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: An error occurred while saving the image: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf'."
        },
        "execution_time": 0.007002830505371094,
        "is_functional_test": true
      },
      {
        "case_name": "Save Empty File as Image",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_empty_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: An error occurred while saving the image: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt'."
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Get Image Stats Successfully",
        "purpose": "验证工具能够成功获取一个存在的图像文件的统计信息",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"shape\": [187, 714, 3], \"mean\": [214.9783999161162, 214.9783999161162, 214.9783999161162], \"std_dev\": [83.36461844956308, 83.36461844956308, 83.36461844956308]}"
        },
        "execution_time": 0.011005163192749023,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Get Stats for Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: An error occurred while retrieving image statistics: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Get Stats for Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: An error occurred while retrieving image statistics: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf'."
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": true
      },
      {
        "case_name": "Get Stats for Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: An error occurred while retrieving image statistics: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt'."
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": false
      },
      {
        "case_name": "Get Stats with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png"
        },
        "response": {
          "result": "{\"shape\": [1, 1, 3], \"mean\": [255.0, 55.0, 55.0], \"std_dev\": [0.0, 0.0, 0.0]}"
        },
        "execution_time": 0.003692626953125,
        "is_functional_test": true
      },
      {
        "case_name": "Read Stats from Nested Directory",
        "purpose": "验证工具能否正确从嵌套目录结构中读取图像统计信息",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png"
        },
        "response": {
          "result": "{\"shape\": [64, 64, 3], \"mean\": [255.0, 8.22607421875, 8.22607421875], \"std_dev\": [0.0, 38.35545313223228, 38.35545313223228]}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Get Stats for Invalid Image Format",
        "purpose": "验证工具在尝试读取非图像文件时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: An error occurred while retrieving image statistics: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt'."
        },
        "execution_time": 0.009001016616821289,
        "is_functional_test": false
      },
      {
        "case_name": "Get Stats for Corrupted Image File",
        "purpose": "验证工具在尝试读取损坏的图像文件时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: An error occurred while retrieving image statistics: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.png' does not exist."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Resize Image Successfully",
        "purpose": "验证工具能够成功将一个存在的图像文件从源路径调整大小并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_hit.png",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_hit.png"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image to Nested Directory",
        "purpose": "验证工具能否正确将调整后的图像保存到嵌套目录结构中",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\resized_icon.png",
          "width": 128,
          "height": 128
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\resized_icon.png"
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Resize Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_nonexistent_image.png",
          "width": 500,
          "height": 500
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\resized_icon.png",
          "width": 100,
          "height": 100
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: [WinError 183] 当文件已存在时，无法创建该文件。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_append.txt'"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image to Invalid Destination Path",
        "purpose": "验证写入无效路径时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\invalid\\path\\that\\does\\not\\exist\\resized_nature.jpeg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "D:\\invalid\\path\\that\\does\\not\\exist\\resized_nature.jpeg"
        },
        "execution_time": 0.1930077075958252,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File During Resize",
        "purpose": "验证工具是否可以覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "width": 400,
          "height": 300
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: OpenCV(4.12.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.09099245071411133,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_large_image.png",
          "width": 1920,
          "height": 1080
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf'."
        },
        "execution_time": 0.008954286575317383,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Empty File as Image",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_empty_image.png",
          "width": 200,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt'."
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Zero Width",
        "purpose": "验证宽度为零时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_zero_width.png",
          "width": 0,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: Width and height must be positive integers."
        },
        "execution_time": 0.01000070571899414,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Negative Height",
        "purpose": "验证负高度值是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_negative_height.png",
          "width": 128,
          "height": -1
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: An error occurred while resizing the image: Width and height must be positive integers."
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Crop Image Successfully",
        "purpose": "验证工具能够成功裁剪一个存在的图像文件并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_hit.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_hit.png"
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image from Nested Directory",
        "purpose": "验证工具能否正确从嵌套目录中裁剪图像并保存到新路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_icon_nested.png",
          "x": 0,
          "y": 0,
          "width": 32,
          "height": 32
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_icon_nested.png"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Crop Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_nonexistent_image.png",
          "x": 0,
          "y": 0,
          "width": 50,
          "height": 50
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: An error occurred while cropping the image: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Invalid Width",
        "purpose": "验证当width为0或负数时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_width_cropped.png",
          "x": 0,
          "y": 0,
          "width": -10,
          "height": 50
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: An error occurred while cropping the image: Width and height must be positive integers."
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Invalid Height",
        "purpose": "验证当height为0或负数时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_height_cropped.png",
          "x": 0,
          "y": 0,
          "width": 50,
          "height": 0
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: An error occurred while cropping the image: Width and height must be positive integers."
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Out-of-Bounds Coordinates",
        "purpose": "验证裁剪区域超出图像尺寸时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\out_of_bounds_cropped.png",
          "x": 70,
          "y": 70,
          "width": 50,
          "height": 50
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: An error occurred while cropping the image: Crop rectangle exceeds image boundaries."
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\cropped_icon.png",
          "x": 0,
          "y": 0,
          "width": 1,
          "height": 1
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: An error occurred while cropping the image: [WinError 183] 当文件已存在时，无法创建该文件。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_append.txt'"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_large_image.png",
          "x": 100,
          "y": 100,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_large_image.png"
        },
        "execution_time": 0.1900005340576172,
        "is_functional_test": true
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Apply Blur Filter Successfully",
        "purpose": "验证工具能够成功将指定图像应用blur滤镜并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\blurred_hit.png",
          "filter_type": "blur"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\blurred_hit.png"
        },
        "execution_time": 0.010998010635375977,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Sharpen Filter Successfully",
        "purpose": "验证工具能够成功将指定图像应用sharpen滤镜并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sharpened_nature.jpeg",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sharpened_nature.jpeg"
        },
        "execution_time": 0.3166344165802002,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Nested Directory",
        "purpose": "验证工具能否正确将图像滤镜应用于嵌套目录结构中的图像并保存",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\filtered_icon.png",
          "filter_type": "blur"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\filtered_icon.png"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Apply Filter on Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\filtered_nonexistent_image.png",
          "filter_type": "sharpen"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: An error occurred while applying the filter: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Unsupported Filter Type",
        "purpose": "验证使用不支持的滤镜类型是否会抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_filter_image.jpg",
          "filter_type": "sketch"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: An error occurred while applying the filter: Unsupported filter type: 'sketch'. Supported types are 'blur' and 'sharpen'."
        },
        "execution_time": 0.08942699432373047,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\filtered_icon.png",
          "filter_type": "blur"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: An error occurred while applying the filter: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png' does not exist."
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_large_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\filtered_large_image.png",
          "filter_type": "sharpen"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: An error occurred while applying the filter: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_large_image.png' does not exist."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\filtered_empty_image.png",
          "filter_type": "blur"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: An error occurred while applying the filter: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt'."
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Detect Edges Successfully",
        "purpose": "验证工具能够成功对一个存在的图像文件进行边缘检测并保存结果",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edges_hit.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edges_hit.png"
        },
        "execution_time": 0.006999969482421875,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges in Nested Directory Image",
        "purpose": "验证工具能否正确处理嵌套目录中的图像并进行边缘检测",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\edges_icon.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\saved_icon.png' does not exist."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Edge Detection on Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edges_nonexistent_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.004036903381347656,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\edges_icon.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png' does not exist."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection to Invalid Destination Path",
        "purpose": "验证写入无效路径时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\invalid\\path\\that\\does\\not\\exist\\edges_nature.jpeg"
        },
        "response": {
          "result": "D:\\invalid\\path\\that\\does\\not\\exist\\edges_nature.jpeg"
        },
        "execution_time": 0.20975852012634277,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File During Edge Detection",
        "purpose": "验证工具是否可以覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: OpenCV(4.12.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.08700013160705566,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges in Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edges_large_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf'."
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges in Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edges_empty_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: An error occurred while detecting edges: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt'."
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Apply Threshold Successfully",
        "purpose": "验证工具能够成功对一个存在的图像应用阈值并保存为二值图像",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_hit.png",
          "threshold_value": 128
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_hit.png"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to Nested Directory",
        "purpose": "验证工具能否正确将阈值处理后的图像保存到嵌套目录结构中",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\thresholded_nature.jpeg",
          "threshold_value": 100
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\thresholded_nature.jpeg"
        },
        "execution_time": 0.19240760803222656,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Apply Threshold on Non-Existent Image",
        "purpose": "验证当源图像不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_nonexistent_image.png",
          "threshold_value": 200
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold with Invalid Value (Too Low)",
        "purpose": "验证传入低于有效范围的阈值时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_xue_low.png",
          "threshold_value": -10
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Threshold value must be between 0 and 255."
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold with Invalid Value (Too High)",
        "purpose": "验证传入高于有效范围的阈值时是否抛出ValueError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_xue_high.png",
          "threshold_value": 300
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Threshold value must be between 0 and 255."
        },
        "execution_time": 0.007999420166015625,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold to Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#%_chars\\thresholded_icon.png",
          "threshold_value": 150
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_64x64.png' does not exist."
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_empty_image.png",
          "threshold_value": 128
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt' does not exist."
        },
        "execution_time": 0.0034797191619873047,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold to Invalid File Format",
        "purpose": "验证工具在尝试处理非图像文件时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_txt_file.png",
          "threshold_value": 128
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: An error occurred while applying the threshold: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt' does not exist."
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Detect Contours Successfully",
        "purpose": "验证工具能够成功检测图像的轮廓并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_hit.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_hit.png"
        },
        "execution_time": 0.008987903594970703,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours in Nested Directory",
        "purpose": "验证工具能否正确从嵌套目录读取图像并检测轮廓，同时保存至嵌套目录结构中",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\thresholded_nature.jpeg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\contoured_thresholded_nature.jpeg"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\contoured_thresholded_nature.jpeg"
        },
        "execution_time": 1.406750202178955,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Detect Contours on Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_nonexistent_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: An error occurred while detecting contours: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Contours with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\contoured_hit.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\contoured_hit.png"
        },
        "execution_time": 0.012000322341918945,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours to Invalid Destination Path",
        "purpose": "验证写入无效路径时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\invalid\\path\\that\\does\\not\\exist\\contoured_nature.jpeg"
        },
        "response": {
          "result": "D:\\invalid\\path\\that\\does\\not\\exist\\contoured_nature.jpeg"
        },
        "execution_time": 2.845224618911743,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing File During Contour Detection",
        "purpose": "验证工具是否可以覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: An error occurred while detecting contours: OpenCV(4.12.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.09383726119995117,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours in Very Large Image",
        "purpose": "测试工具对大尺寸图像文件的处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_large_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: An error occurred while detecting contours: Failed to read image from 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf'."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours in Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_empty_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: An error occurred while detecting contours: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt' does not exist."
        },
        "execution_time": 0.007013797760009766,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Find Shapes Successfully",
        "purpose": "验证工具能够成功对一个存在的图像文件进行形状检测并保存结果",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\shapes_hit.png"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\shapes_hit.png"
        },
        "execution_time": 0.009998321533203125,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes in Nested Directory",
        "purpose": "验证工具能否正确从嵌套目录结构中读取图像并保存形状检测结果到嵌套目录",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\thresholded_nature.jpeg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\shapes_nature.jpeg"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\newdir1\\newdir2\\shapes_nature.jpeg"
        },
        "execution_time": 1.4982171058654785,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes on Image with Existing Contours",
        "purpose": "验证工具能否正确对已包含轮廓的图像进行形状检测",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\shapes_contoured_hit.png"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: An error occurred while finding shapes: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_hit.png' does not exist."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Find Shapes on Non-Existent Image",
        "purpose": "验证当源文件不存在时是否抛出FileNotFoundError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\shapes_nonexistent_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: An error occurred while finding shapes: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png' does not exist."
        },
        "execution_time": 0.012003898620605469,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes to Invalid Destination Path",
        "purpose": "验证写入无效路径时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "destination_path": "D:\\invalid\\path\\that\\does\\not\\exist\\shapes_nature.jpeg"
        },
        "response": {
          "result": "D:\\invalid\\path\\that\\does\\not\\exist\\shapes_nature.jpeg"
        },
        "execution_time": 2.6102211475372314,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_append.txt\\shapes_icon.png"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: An error occurred while finding shapes: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_1x1.png' does not exist."
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing File During Shape Detection",
        "purpose": "验证工具是否可以覆盖已存在的目标文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: An error occurred while finding shapes: OpenCV(4.12.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.09456515312194824,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes in Empty File",
        "purpose": "验证尝试读取空文件作为图像时是否抛出IOError",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\shapes_empty_image.png"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: An error occurred while finding shapes: Source file 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt' does not exist."
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 74
}