{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-14T20:57:43.854995",
  "tools": [
    {
      "name": "create_document",
      "description": "Create a new Word document.\n\n    Returns:\n        A string indicating the successful creation of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Open an existing Word document.\n\n    Args:\n        file_path: (str) The path to the file to open.\n\n    Returns:\n        A string indicating the successful opening of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Save the current Word document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Save the current Word document with a new name or location.\n\n    Args:\n        file_path: (str) The new file path to save the document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Create a copy of the current Word document.\n\n    Args:\n        file_path: (str) The destination path for the document copy.\n\n    Returns:\n        A string indicating the successful creation of the document copy.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Add a paragraph of text to the document.\n\n    Args:\n        text: (str) The text content of the paragraph.\n\n    Returns:\n        A string indicating the successful addition of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Add a heading to the document.\n\n    Args:\n        text: (str) The text of the heading.\n        level: (int) The level of the heading (e.g., 1 for main heading).\n\n    Returns:\n        A string indicating the successful addition of the heading.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Add a table to the document.\n\n    Args:\n        rows: (int) Number of rows in the table.\n        cols: (int) Number of columns in the table.\n\n    Returns:\n        A string indicating the successful addition of the table.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Add a page break to the document.\n\n    Returns:\n        A string indicating the successful addition of the page break.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieve information about the current document.\n\n    Returns:\n        A dictionary containing various pieces of document information.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Search for specific text within the document.\n\n    Args:\n        search_string: (str) The text to search for.\n\n    Returns:\n        A list of positions where the text is found.\n    ",
      "args_schema": {
        "properties": {
          "search_string": {
            "title": "Search String",
            "type": "string"
          }
        },
        "required": [
          "search_string"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Find and replace specific text within the document.\n\n    Args:\n        find_string: (str) The text to find.\n        replace_string: (str) The text to replace it with.\n\n    Returns:\n        A string indicating the number of replacements made.\n    ",
      "args_schema": {
        "properties": {
          "find_string": {
            "title": "Find String",
            "type": "string"
          },
          "replace_string": {
            "title": "Replace String",
            "type": "string"
          }
        },
        "required": [
          "find_string",
          "replace_string"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Delete a specified paragraph from the document.\n\n    Args:\n        paragraph_index: (int) The index of the paragraph to delete.\n\n    Returns:\n        A string indicating the successful deletion of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Delete all instances of a specified text from the document.\n\n    Args:\n        text: (str) The text to delete.\n\n    Returns:\n        A string indicating the number of deletions made.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Add a row to a specified table in the document.\n\n    Args:\n        table_index: (int) The index of the table to add a row to.\n\n    Returns:\n        A string indicating the successful addition of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Delete a specified row from a table in the document.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row to delete.\n\n    Returns:\n        A string indicating the successful deletion of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edit the content of a specified cell in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row.\n        col_index: (int) The index of the column.\n        new_content: (str) The new content for the cell.\n\n    Returns:\n        A string indicating the successful editing of the cell.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merge specified cells in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        start_row: (int) The starting row index for the merge.\n        end_row: (int) The ending row index for the merge.\n        start_col: (int) The starting column index for the merge.\n        end_col: (int) The ending column index for the merge.\n\n    Returns:\n        A string indicating the successful merging of cells.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "end_row",
          "start_col",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Split a table into two tables at a specified row.\n\n    Args:\n        table_index: (int) The index of the table to split.\n        row_index: (int) The row index at which to split the table.\n\n    Returns:\n        A string indicating the successful splitting of the table.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Set the margins for the pages in the document.\n\n    Args:\n        top: (float) The top margin size in inches.\n        right: (float) The right margin size in inches.\n        bottom: (float) The bottom margin size in inches.\n        left: (float) The left margin size in inches.\n\n    Returns:\n        A string indicating the successful setting of page margins.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          }
        },
        "required": [
          "top",
          "right",
          "bottom",
          "left"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replace the content of a section based on the heading.\n\n    Args:\n        heading: (str) The heading of the section to replace.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful replacement of the section.\n    ",
      "args_schema": {
        "properties": {
          "heading": {
            "title": "Heading",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "heading",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edit the content of a section based on a keyword.\n\n    Args:\n        keyword: (str) The keyword to locate the section.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful editing of the section.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create Document with Default Parameters",
        "purpose": "验证使用默认参数成功创建Word文档的基本功能",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014005422592163086,
        "is_functional_test": true
      }
    ],
    "open_document": [
      {
        "case_name": "Open Valid Word Document",
        "purpose": "验证工具能够成功打开一个存在的Word文档（.docx）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\soft.docx"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\soft.docx.\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Non-Existent File",
        "purpose": "验证工具在尝试打开不存在的文件时是否能正确处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx\"}"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Open Invalid File Type",
        "purpose": "验证工具是否拒绝非Word类型的文件（如PDF）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer\\\\testSystem\\\\testFiles\\\\sample1.pdf\"}"
        },
        "execution_time": 0.009998083114624023,
        "is_functional_test": false
      },
      {
        "case_name": "Open Word Document with Special Characters in Path",
        "purpose": "验证工具能否处理包含特殊字符路径的Word文档",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc.\"}"
        },
        "execution_time": 0.04499506950378418,
        "is_functional_test": true
      },
      {
        "case_name": "Open Word Document from Hidden or Temporary File",
        "purpose": "验证工具是否可以处理隐藏或临时生成的Word文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\~$ample1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\~$ample1.pdf'\"}"
        },
        "execution_time": 0.008998394012451172,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Access Restricted System File",
        "purpose": "验证工具是否阻止访问系统级受保护文件",
        "args": {
          "file_path": "C:\\Windows\\System32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts'\"}"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Empty File Path",
        "purpose": "验证工具是否能正确处理空文件路径输入",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined\\\\\\\\[Content_Types].xml'\"}"
        },
        "execution_time": 0.009012460708618164,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document After Creating New One",
        "purpose": "验证在创建新文档后调用 save_document 能成功保存文档",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.024508953094482422,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Opening Valid File",
        "purpose": "验证打开一个有效 Word 文档后，调用 save_document 可以成功保存该文档",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.028582334518432617,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Any Changes",
        "purpose": "验证未对文档进行任何修改的情况下调用 save_document 是否能正常处理",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.02674269676208496,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document in Read-Only Mode",
        "purpose": "验证尝试保存只读模式下的文档是否会正确处理错误",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.02224254608154297,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Save to Restricted System Directory",
        "purpose": "验证工具是否阻止将文档保存到系统级受保护目录（如 C:\\Windows）",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.02700185775756836,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Attempt to Save Unopened Document",
        "purpose": "验证在没有打开或创建文档的情况下调用 save_document 是否会返回合理错误",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.02399921417236328,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Save with Maximum Allowed File Size",
        "purpose": "验证保存最大允许大小的文档时工具的行为",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.026000261306762695,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in Path",
        "purpose": "验证保存路径中包含特殊字符时是否能正确处理",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.024000167846679688,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document to Valid New Location",
        "purpose": "验证当前打开的Word文档可以成功以新名称保存到有效路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_soft_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_soft_copy.docx.\"}"
        },
        "execution_time": 0.022000551223754883,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Special Characters in File Path",
        "purpose": "验证工具是否能够处理包含特殊字符的文件保存路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new!@#_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new!@#_document.docx.\"}"
        },
        "execution_time": 0.023000001907348633,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Save to System Protected Directory",
        "purpose": "验证工具是否阻止将文档保存到系统级受保护目录（如C:\\Windows）",
        "args": {
          "file_path": "C:\\Windows\\Temp\\malicious_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to C:\\\\Windows\\\\Temp\\\\malicious_document.docx.\"}"
        },
        "execution_time": 0.029001235961914062,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid File Extension",
        "purpose": "验证工具在提供非.docx扩展名时是否能正确拒绝并返回错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_extension.txt"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_extension.txt.\"}"
        },
        "execution_time": 0.02499866485595703,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null or Empty File Path",
        "purpose": "验证工具在空文件路径参数下能否优雅地处理错误",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.007002115249633789,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Hidden or Temporary Directory",
        "purpose": "验证工具是否可以将文档保存到隐藏或临时目录中",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\~$aved_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\~$aved_document.docx.\"}"
        },
        "execution_time": 0.024999141693115234,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Save Without Opened Document",
        "purpose": "验证在没有打开任何文档的情况下调用save_as_document是否会正确处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unopened_save.docx"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\unopened_save.docx.\"}"
        },
        "execution_time": 0.03277230262756348,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Copy Document to Valid Destination",
        "purpose": "验证工具能够将当前打开的Word文档成功复制到指定的有效路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_soft_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_soft_copy.docx.\"}"
        },
        "execution_time": 0.02299952507019043,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Copy Document to Non-Existent Directory",
        "purpose": "验证工具在目标路径不存在时是否能正确处理错误",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_folder\\saved_soft_copy.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\nonexistent_folder\\\\\\\\saved_soft_copy.docx'\"}"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document with Special Characters in File Path",
        "purpose": "验证工具是否能处理包含特殊字符的目标路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted!@#_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\converted!@#_document.docx.\"}"
        },
        "execution_time": 0.02700042724609375,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Save Document in System Protected Directory",
        "purpose": "验证工具是否阻止将文档复制到系统级受保护目录",
        "args": {
          "file_path": "C:\\Windows\\System32\\drivers\\etc\\soft_copy.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\drivers\\\\\\\\etc\\\\\\\\soft_copy.docx'\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Empty File Path",
        "purpose": "验证工具是否能正确处理空文件路径输入",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Existing File",
        "purpose": "验证工具是否能正确处理覆盖现有文件的情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\soft.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\soft.docx.\"}"
        },
        "execution_time": 0.027997493743896484,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Hidden or Temporary File Path",
        "purpose": "验证工具是否可以将文档复制到隐藏或临时路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\~$aved_document.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\~$aved_document.docx.\"}"
        },
        "execution_time": 0.027003049850463867,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document to Invalid File Type Path",
        "purpose": "验证工具是否拒绝将文档复制到无效扩展名路径",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_extension.txt"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_extension.txt.\"}"
        },
        "execution_time": 0.025834083557128906,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Valid Text",
        "purpose": "验证向已打开的文档中添加一个有效段落的基本功能",
        "args": {
          "text": "This is a test paragraph added to the document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "验证工具是否能处理空文本输入的情况",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.007002830505371094,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具是否支持包含特殊字符的段落内容",
        "args": {
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|;':\",./<>?"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.006997585296630859,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Null Input",
        "purpose": "验证工具是否能正确处理null作为输入参数的情况",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph Containing System Command Injection Attempt",
        "purpose": "验证工具是否安全地处理潜在的系统命令注入尝试",
        "args": {
          "text": "This is a test paragraph with potential command injection attempt: ; rm -rf /"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.007999658584594727,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Leading and Trailing Whitespace",
        "purpose": "验证工具是否保留段落前后的空白字符",
        "args": {
          "text": "   This paragraph has leading and trailing spaces.   "
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Multiline Text",
        "purpose": "验证工具是否支持多行文本段落的添加",
        "args": {
          "text": "Line 1\nLine 2\nLine 3"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Main Heading with Default Level",
        "purpose": "验证在未指定级别时，使用默认级别1添加主标题的基本功能",
        "args": {
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.004839658737182617,
        "is_functional_test": true
      },
      {
        "case_name": "Add Subheading with Level 2",
        "purpose": "验证添加二级子标题的基本功能",
        "args": {
          "text": "Background",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.008925676345825195,
        "is_functional_test": true
      },
      {
        "case_name": "Add Deep Nested Heading with Level 6",
        "purpose": "验证添加六级标题的基本功能",
        "args": {
          "text": "Implementation Details",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Special Characters",
        "purpose": "验证添加包含特殊字符的标题是否正常",
        "args": {
          "text": "Test Heading !@#$%^&*()",
          "level": 3
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "验证添加空文本标题时是否能正确处理错误",
        "args": {
          "text": "",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level - Zero",
        "purpose": "验证添加标题时级别为0是否能正确处理错误",
        "args": {
          "text": "Invalid Level",
          "level": 0
        },
        "response": {
          "result": "{\"error\": \"Heading level must be between 1 and 9.\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Invalid Level - Greater than 6",
        "purpose": "验证添加标题时级别超过6是否能正确处理错误",
        "args": {
          "text": "Too Deep Heading",
          "level": 7
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Long Text",
        "purpose": "验证添加非常长的标题文本是否正常",
        "args": {
          "text": "This is a very long heading text that exceeds typical length limits and should still be handled gracefully by the system without causing any errors or truncations.",
          "level": 4
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.007999420166015625,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Dimensions",
        "purpose": "验证在文档中使用默认行和列参数添加表格的基本功能",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Rows and Columns",
        "purpose": "验证工具能否处理最小边界值（1行1列）",
        "args": {
          "rows": 1,
          "cols": 1
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.010099649429321289,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Allowed Rows and Columns",
        "purpose": "验证工具是否能处理高行数和列数的表格（如100行100列）",
        "args": {
          "rows": 100,
          "cols": 100
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.02900075912475586,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Table with Zero Rows",
        "purpose": "验证工具是否能正确处理无效参数（0行）",
        "args": {
          "rows": 0,
          "cols": 3
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Zero Columns",
        "purpose": "验证工具是否能正确处理无效参数（0列）",
        "args": {
          "rows": 3,
          "cols": 0
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Rows",
        "purpose": "验证工具是否拒绝负整数作为行数",
        "args": {
          "rows": -5,
          "cols": 4
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Columns",
        "purpose": "验证工具是否拒绝负整数作为列数",
        "args": {
          "rows": 4,
          "cols": -5
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Add Large Table in Document",
        "purpose": "验证工具是否能安全处理大尺寸表格而不引发系统资源耗尽或崩溃",
        "args": {
          "rows": 1000,
          "cols": 1000
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 1.7276813983917236,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Opened Document",
        "purpose": "验证在成功打开的Word文档中添加分页符的基本功能",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Page Break Without Opening Document",
        "purpose": "验证在未打开文档时尝试添加分页符是否能正确处理错误",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Document with Special Characters",
        "purpose": "验证工具能否在包含特殊字符路径的文档中添加分页符",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.007999420166015625,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Add Page Break in System Protected Location",
        "purpose": "验证在受系统保护的路径下添加分页符是否被拒绝",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Hidden or Temporary File",
        "purpose": "验证工具是否能在隐藏或临时生成的文档中添加分页符",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005990743637084961,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Add Multiple Page Breaks Sequentially",
        "purpose": "验证连续多次添加分页符的行为是否稳定",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Invalid Document State",
        "purpose": "验证当文档处于不可写状态时添加分页符是否能正确报错",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.008004903793334961,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Newly Created Document",
        "purpose": "验证在新创建的空白文档中添加分页符的功能",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info After Creating New Document",
        "purpose": "验证在新建文档后获取文档信息的基本功能是否正常",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info After Opening Valid Word Document",
        "purpose": "验证打开一个有效Word文档（.docx）后能否正确获取文档信息",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Get Info Without Document Open",
        "purpose": "验证在未打开任何文档时尝试获取文档信息的安全性处理",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.007999658584594727,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Document State",
        "purpose": "验证当文档处于无效状态时工具是否能正确处理错误",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Document With Special Characters in Path",
        "purpose": "验证工具能否处理包含特殊字符路径的文档信息获取",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Access System-Level Document",
        "purpose": "验证工具是否阻止访问系统级受保护文档的信息获取",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Corrupted or Incomplete Document",
        "purpose": "验证工具在尝试获取损坏或不完整文档信息时是否能优雅地处理错误",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Document Properties",
        "purpose": "验证文档属性达到极限值时，工具是否仍能正确返回信息",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.007997989654541016,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Search for Existing Text in Document",
        "purpose": "验证工具能够在已打开的Word文档中成功搜索到存在的文本",
        "args": {
          "search_string": "introduction"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-Existent Text in Document",
        "purpose": "验证工具在文档中搜索不存在的文本时是否返回空结果而不报错",
        "args": {
          "search_string": "xyz123_nonexistent_text"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.007008075714111328,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Search Sensitive Pattern",
        "purpose": "验证工具是否阻止对敏感系统模式（如密码、账户信息等）的搜索行为",
        "args": {
          "search_string": "password123"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.008049726486206055,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Search String",
        "purpose": "验证工具在提供空字符串作为搜索内容时能否正确处理错误或返回合理响应",
        "args": {
          "search_string": ""
        },
        "response": {
          "result": "{\"positions\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]}"
        },
        "execution_time": 0.008002281188964844,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Search String",
        "purpose": "验证工具能否正确处理包含特殊字符的搜索字符串",
        "args": {
          "search_string": "!@#$%^&*()_+=-`~[]{}|\\;':\",./<>?"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.006001710891723633,
        "is_functional_test": true
      },
      {
        "case_name": "Functional Test - Case-Sensitive Search",
        "purpose": "验证工具是否支持区分大小写的搜索功能",
        "args": {
          "search_string": "Important"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.008998632431030273,
        "is_functional_test": true
      },
      {
        "case_name": "Functional Test - Multi-Word Phrase Search",
        "purpose": "验证工具是否能正确搜索多词短语，包括带空格和标点的组合",
        "args": {
          "search_string": "This is a test phrase."
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.0060002803802490234,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace Success",
        "purpose": "验证在文档中成功进行基本查找和替换功能",
        "args": {
          "find_string": "old_text",
          "replace_string": "new_text"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": true
      },
      {
        "case_name": "Replace All Occurrences in Document",
        "purpose": "验证工具是否能替换文档中所有匹配的字符串",
        "args": {
          "find_string": "test",
          "replace_string": "demo"
        },
        "response": {
          "result": "{\"replacements\": 2}"
        },
        "execution_time": 0.017390727996826172,
        "is_functional_test": true
      },
      {
        "case_name": "No Match Found - Return Zero Replacement",
        "purpose": "验证当未找到匹配文本时返回0替换",
        "args": {
          "find_string": "nonexistent_text",
          "replace_string": "replacement"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.013991594314575195,
        "is_functional_test": true
      },
      {
        "case_name": "Replace with Empty String",
        "purpose": "验证使用空字符串作为替换值时的正确处理",
        "args": {
          "find_string": "remove_this",
          "replace_string": ""
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.011998891830444336,
        "is_functional_test": true
      },
      {
        "case_name": "Find with Special Characters",
        "purpose": "验证包含特殊字符的查找字符串能否正确处理",
        "args": {
          "find_string": "!@#$%^&*()",
          "replace_string": "special_chars_replaced"
        },
        "response": {
          "result": "{\"replacements\": 3}"
        },
        "execution_time": 0.013000726699829102,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious String",
        "purpose": "验证工具是否能安全处理潜在恶意输入（如路径遍历或脚本注入）",
        "args": {
          "find_string": "../../../etc/passwd",
          "replace_string": "malicious_input"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Find String",
        "purpose": "验证当查找字符串为null时的错误处理",
        "args": {
          "find_string": null,
          "replace_string": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.010741949081420898,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Valid Paragraph by Index",
        "purpose": "验证工具能够成功删除文档中指定索引的段落",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Out of Bounds Index",
        "purpose": "验证工具在尝试删除超出范围的段落索引时是否能正确处理错误",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Negative Index",
        "purpose": "验证工具是否拒绝负数段落索引输入",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Delete System Document Paragraph",
        "purpose": "验证工具是否阻止对系统受保护文档段落的删除操作",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete First Paragraph",
        "purpose": "验证工具能否正确删除文档中的第一个段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0030019283294677734,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Last Paragraph",
        "purpose": "验证工具能否正确删除文档中的最后一个段落",
        "args": {
          "paragraph_index": 4
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Invalid Paragraph Index Type",
        "purpose": "验证工具是否拒绝非整型段落索引输入",
        "args": {
          "paragraph_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - No Document Opened for Deletion",
        "purpose": "验证在未打开文档的情况下尝试删除段落是否会返回适当错误",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Specific Text Successfully",
        "purpose": "验证工具能够正确删除文档中指定的文本，并返回删除次数",
        "args": {
          "text": "test content"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.0060808658599853516,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Non-Existent Text",
        "purpose": "验证当指定文本在文档中不存在时，工具是否能正确处理并返回0次删除",
        "args": {
          "text": "nonexistent_text"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text with Special Characters",
        "purpose": "验证工具能否正确删除包含特殊字符的文本内容",
        "args": {
          "text": "!@#$%^&*()_+{}|:\"<>?"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证工具对空字符串参数的处理行为",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"deletions\": 30}"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Delete System Reserved Text",
        "purpose": "验证工具是否阻止尝试删除系统保留或敏感文本（如Windows路径）",
        "args": {
          "text": "C:\\Windows\\System32"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Delete Null Text",
        "purpose": "验证工具是否能正确处理null值作为文本输入的情况",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Functional Test - Delete Repeated Text Instances",
        "purpose": "验证工具是否能正确删除文档中多个重复出现的指定文本",
        "args": {
          "text": "duplicate text"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table at Index 0",
        "purpose": "验证工具能够成功向文档中索引为0的表格添加一行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.004958629608154297,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table at Maximum Index",
        "purpose": "验证工具能否处理表格索引的最大有效值（假设文档中存在多个表格）",
        "args": {
          "table_index": 5
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0052263736724853516,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Row to Non-Existent Table",
        "purpose": "验证工具在指定的表格索引不存在时是否能正确处理错误",
        "args": {
          "table_index": 10
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Modify Protected Document",
        "purpose": "验证工具是否阻止对受保护文档进行修改操作",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.017509937286376953,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Negative Table Index",
        "purpose": "验证工具是否能正确处理负数表格索引输入",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0065233707427978516,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Data Type for Table Index",
        "purpose": "验证工具是否拒绝非整型参数作为表格索引",
        "args": {
          "table_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.01950812339782715,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Table with Special Characters in Document",
        "purpose": "验证工具能否在包含特殊字符路径的文档中添加行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table in Recently Created Document",
        "purpose": "验证工具能否在最新创建的空白文档中添加表格行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Row from Table in Valid Document",
        "purpose": "验证能够成功从文档中的指定表格删除指定行",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.005442380905151367,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Invalid Table Index",
        "purpose": "验证工具在 table_index 为负数时是否能正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Invalid Row Index",
        "purpose": "验证工具在 row_index 为负数时是否能正确处理错误",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.006771564483642578,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Non-Existent Table",
        "purpose": "验证工具在 table_index 超出文档实际表格数量时是否能正确处理错误",
        "args": {
          "table_index": 999,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.010004758834838867,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Table with Large Indices",
        "purpose": "验证工具能否处理较大的 table_index 和 row_index 值",
        "args": {
          "table_index": 100,
          "row_index": 50
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.004996299743652344,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Delete Row from System Protected Document",
        "purpose": "验证工具是否阻止对系统级受保护文档的操作",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.008999109268188477,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Special Characters in Document Path",
        "purpose": "验证工具能否处理包含特殊字符路径的文档中表格行的删除操作",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.008167028427124023,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row from Hidden or Temporary File",
        "purpose": "验证工具是否可以处理隐藏或临时生成的Word文件中的表格行删除",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": true
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Valid Cell in Existing Table",
        "purpose": "验证工具可以成功编辑Word文档中表格的指定单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 1,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Edit Cell with Invalid Table Index",
        "purpose": "验证当提供无效的表格索引时，工具是否能正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Invalid Table Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Edit Cell with Out of Bounds Row Index",
        "purpose": "验证当行索引超出范围时工具是否能正确处理错误",
        "args": {
          "table_index": 0,
          "row_index": 999,
          "col_index": 0,
          "new_content": "Out of Bounds Row Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.0040531158447265625,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Edit Cell with Out of Bounds Column Index",
        "purpose": "验证当列索引超出范围时工具是否能正确处理错误",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 999,
          "new_content": "Out of Bounds Column Index Test"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Content",
        "purpose": "验证工具是否能安全地处理可能包含恶意内容的输入",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "<script>alert('xss')</script>"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.0062198638916015625,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Edit First Cell",
        "purpose": "验证工具能否正确处理最小边界值（第一行第一列）的单元格编辑",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "First Cell Updated"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.007996320724487305,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Edit Cell with Maximum Indices",
        "purpose": "验证工具能否处理最大有效索引值的单元格编辑",
        "args": {
          "table_index": 2,
          "row_index": 5,
          "col_index": 3,
          "new_content": "Max Index Cell Updated"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.005112886428833008,
        "is_functional_test": true
      },
      {
        "case_name": "Special Character Handling in New Content",
        "purpose": "验证工具是否能正确处理包含特殊字符的新单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 2,
          "new_content": "Special!@#$%^&*() Characters"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Cells in a Single Table",
        "purpose": "验证工具能够成功合并表格中指定范围的单元格（基本正向测试）",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "end_row": 2,
          "start_col": 1,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.0038487911224365234,
        "is_functional_test": true
      },
      {
        "case_name": "Merge All Cells in a Table",
        "purpose": "验证工具能否将整个表格的所有单元格合并",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 5,
          "start_col": 0,
          "end_col": 3
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "验证工具在起始和结束行列相同时是否能正确处理单个单元格合并请求",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "end_row": 2,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Merge Cells with Invalid Table Index",
        "purpose": "验证工具在无效表格索引时是否能正确处理错误",
        "args": {
          "table_index": -1,
          "start_row": 1,
          "end_row": 2,
          "start_col": 1,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.009055137634277344,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Merge Cells with Start Greater Than End Row",
        "purpose": "验证工具是否能正确处理起始行大于结束行的错误情况",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "end_row": 1,
          "start_col": 1,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.004996538162231445,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Merge Cells with Start Greater Than End Column",
        "purpose": "验证工具是否能正确处理起始列大于结束列的错误情况",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "end_row": 2,
          "start_col": 3,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells at Boundary Conditions (Row 0 to Max)",
        "purpose": "验证工具是否能处理边界条件下的最大行合并",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 99,
          "start_col": 0,
          "end_col": 0
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Access Out-of-Bounds Memory via Large Indices",
        "purpose": "验证工具是否能阻止通过超大索引访问非法内存区域",
        "args": {
          "table_index": 0,
          "start_row": 1000000,
          "end_row": 1000001,
          "start_col": 1000000,
          "end_col": 1000001
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Split Table at Valid Row Index",
        "purpose": "验证在指定行索引成功将表格拆分为两个表格的基本功能",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table with First Row as Split Point",
        "purpose": "验证工具能否正确处理以第一行为分割点的表格拆分",
        "args": {
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0070037841796875,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table with Last Row as Split Point",
        "purpose": "验证工具能否正确处理以最后一行为分割点的表格拆分",
        "args": {
          "table_index": 2,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Split Non-Existent Table",
        "purpose": "验证工具在尝试拆分不存在的表格时是否能正确处理错误",
        "args": {
          "table_index": 99,
          "row_index": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.003511667251586914,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Split Table with Invalid Row Index",
        "purpose": "验证工具在使用超出表格范围的行索引时是否能正确处理错误",
        "args": {
          "table_index": 1,
          "row_index": 10
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Split Sensitive System Table",
        "purpose": "验证工具是否阻止对系统级敏感表格的操作",
        "args": {
          "table_index": -1,
          "row_index": 0
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Split Table with Minimum Row Index",
        "purpose": "验证工具是否能正确处理最小行索引值（负数）的情况",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Split Table with Maximum Row Index",
        "purpose": "验证工具是否能正确处理最大行索引值（如接近整型上限）的情况",
        "args": {
          "table_index": 0,
          "row_index": 2147483647
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004995822906494141,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证使用默认页面边距值能否成功设置文档的页边距",
        "args": {
          "top": 1.0,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Page Margins",
        "purpose": "验证使用自定义数值能否成功设置文档的上下左右页边距",
        "args": {
          "top": 0.5,
          "right": 0.75,
          "bottom": 1.25,
          "left": 1.5
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins",
        "purpose": "验证将所有边距设为零时工具是否能正确处理",
        "args": {
          "top": 0.0,
          "right": 0.0,
          "bottom": 0.0,
          "left": 0.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Set Negative Margins",
        "purpose": "验证工具是否拒绝接受负数作为页边距输入",
        "args": {
          "top": -0.5,
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Set Extremely Large Margins",
        "purpose": "验证工具是否能够处理极端大的页边距值以防止资源滥用或崩溃",
        "args": {
          "top": 100.0,
          "right": 100.0,
          "bottom": 100.0,
          "left": 100.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Margin Type (String)",
        "purpose": "验证工具在传入字符串而非浮点数时是否能正确抛出错误",
        "args": {
          "top": "invalid",
          "right": 1.0,
          "bottom": 1.0,
          "left": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Small Margins",
        "purpose": "验证工具是否支持非常小的页边距值（接近于零）",
        "args": {
          "top": 0.001,
          "right": 0.001,
          "bottom": 0.001,
          "left": 0.001
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.00400233268737793,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Maximum Allowed Margins",
        "purpose": "验证工具是否支持最大合理页边距值（例如10英寸）",
        "args": {
          "top": 10.0,
          "right": 10.0,
          "bottom": 10.0,
          "left": 10.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      }
    ],
    "replace_section": [
      {
        "case_name": "Replace Section with Valid Heading and Content",
        "purpose": "验证使用有效标题和新内容成功替换文档中指定章节的功能",
        "args": {
          "heading": "Introduction",
          "new_content": "This is the updated introduction content."
        },
        "response": {
          "result": "{\"message\": \"Section replaced successfully.\"}"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Replace Non-Existent Section",
        "purpose": "验证工具在尝试替换不存在的章节时是否能正确处理错误",
        "args": {
          "heading": "NonExistentSection",
          "new_content": "This section should not be replaced."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.008844614028930664,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Empty New Content",
        "purpose": "验证工具能否处理空的新内容输入并正确替换目标章节",
        "args": {
          "heading": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Heading",
        "purpose": "验证工具是否阻止带有潜在恶意字符的标题替换请求",
        "args": {
          "heading": "<script>alert('xss')</script>",
          "new_content": "Malicious content injection attempt"
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Heading Parameter",
        "purpose": "验证工具是否能正确处理缺少必填heading参数的情况",
        "args": {
          "new_content": "This should fail due to missing heading."
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nheading\n  Field required [type=missing, input_value={'new_content': 'This sho...ue to missing heading.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005506277084350586,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing New Content Parameter",
        "purpose": "验证工具是否能正确处理缺少必填new_content参数的情况",
        "args": {
          "heading": "Executive Summary"
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nnew_content\n  Field required [type=missing, input_value={'heading': 'Executive Summary'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006531953811645508,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Replace Section with Long Heading",
        "purpose": "验证工具能否处理超长标题的替换请求",
        "args": {
          "heading": "A_very_long_heading_that_exceeds_normal_length_and_may_cause_buffer_overflow_in_poorly_implemented_systems",
          "new_content": "This is test content for a long heading replacement."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.01199650764465332,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Replace Section with Special Characters in Heading",
        "purpose": "验证工具能否处理包含特殊字符的标题替换请求",
        "args": {
          "heading": "Section@#With$Special*Chars",
          "new_content": "Content for section with special characters in heading"
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": true
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Edit Section with Valid Keyword and Content",
        "purpose": "验证使用有效关键词和新内容能成功编辑文档中的对应段落",
        "args": {
          "keyword": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Non-Existent Keyword",
        "purpose": "验证当提供的关键词在文档中不存在时工具是否能正确处理错误",
        "args": {
          "keyword": "NonExistentSection",
          "new_content": "This content should not be applied."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.005002021789550781,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Inject Malicious Keyword",
        "purpose": "验证工具是否安全地处理包含潜在恶意内容的关键词（如系统命令或特殊字符）",
        "args": {
          "keyword": "${system('rm -rf')}",
          "new_content": "Malicious content injection attempt"
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Keyword Input",
        "purpose": "验证工具是否能正确处理空关键词输入",
        "args": {
          "keyword": "",
          "new_content": "This content should not be applied due to empty keyword."
        },
        "response": {
          "result": "{\"message\": \"Section edited successfully.\"}"
        },
        "execution_time": 0.005997419357299805,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Keyword Input",
        "purpose": "验证工具对超长关键词的处理能力",
        "args": {
          "keyword": "A_very_long_keyword_that_exceeds_normal_length_requirements_and_may_cause_buffer_overflow_in_poorly_implemented_systems",
          "new_content": "Content for long keyword test."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Special Characters in Keyword",
        "purpose": "验证工具是否能够正确处理包含特殊字符的关键词",
        "args": {
          "keyword": "!@#$%^&*()_+=-`~[]{}|\\:;\"',./<>?",
          "new_content": "Content for special characters keyword test."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证工具是否能检测并拒绝缺少必要参数的请求",
        "args": {
          "new_content": "Missing keyword parameter"
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 1 validation error for edit_section_by_keywordArguments\nkeyword\n  Field required [type=missing, input_value={'new_content': 'Missing keyword parameter'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "Basic Functional Test - Edit Section with Default-Like Scenario",
        "purpose": "验证最基础的编辑功能，使用默认风格的关键词和内容更新段落",
        "args": {
          "keyword": "Summary",
          "new_content": "Default summary content updated successfully."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 163
}