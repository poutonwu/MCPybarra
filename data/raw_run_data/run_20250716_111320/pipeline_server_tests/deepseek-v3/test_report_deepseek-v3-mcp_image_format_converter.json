{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_image_format_converter",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_image_format_converter/refined/server.py",
  "timestamp": "2025-07-16T11:13:23.093756",
  "tools": [
    {
      "name": "convert_image",
      "description": "\n    Converts an image file from one format to another, handling transparency and color space conversion.\n    \n    Args:\n        source_path (str): Path to the source image file.\n        target_format (str): Desired output format (e.g., \"PNG\", \"JPEG\", \"BMP\", \"GIF\").\n        output_dir (str): Directory where the converted image will be saved.\n        preserve_alpha (bool, optional): Whether to preserve transparency (default: True).\n        quality (int, optional): Compression quality for lossy formats like JPEG (default: 95).\n    \n    Returns:\n        dict: Contains the following keys:\n            - status (str): \"success\" or \"error\".\n            - message (str): Detailed status or error message.\n            - output_path (str): Path to the converted image file (only on success).\n    \n    Raises:\n        ValueError: For invalid input paths or unsupported formats.\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "target_format": {
            "title": "Target Format",
            "type": "string"
          },
          "output_dir": {
            "title": "Output Dir",
            "type": "string"
          },
          "preserve_alpha": {
            "default": true,
            "title": "Preserve Alpha",
            "type": "boolean"
          },
          "quality": {
            "default": 95,
            "title": "Quality",
            "type": "integer"
          }
        },
        "required": [
          "source_path",
          "target_format",
          "output_dir"
        ],
        "title": "convert_imageArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "convert_image": [
      {
        "case_name": "Basic PNG to JPEG Conversion",
        "purpose": "验证convert_image工具可以成功将PNG图像转换为JPEG格式，并使用默认参数保留透明度和质量设置。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "target_format": "JPEG",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Image converted successfully\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.jpeg\"\n}"
        },
        "execution_time": 0.015929460525512695,
        "is_functional_test": true
      },
      {
        "case_name": "Preserve Alpha Channel in PNG to BMP Conversion",
        "purpose": "测试在将PNG图像转换为BMP时，是否能够正确保留Alpha通道（透明度）。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "target_format": "BMP",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\",
          "preserve_alpha": true
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Image converted successfully\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue.bmp\"\n}"
        },
        "execution_time": 0.2342524528503418,
        "is_functional_test": true
      },
      {
        "case_name": "JPEG Quality Setting Test",
        "purpose": "验证quality参数是否能正确应用于JPEG格式的输出文件，确保压缩质量可调。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.jpeg",
          "target_format": "JPEG",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\",
          "quality": 75
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Image converted successfully\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.jpeg\"\n}"
        },
        "execution_time": 0.007490634918212891,
        "is_functional_test": true
      },
      {
        "case_name": "Convert GIF to PNG Without Transparency",
        "purpose": "测试GIF图像转换为PNG格式时，是否可以禁用Alpha通道保留。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250507-151716.png",
          "target_format": "PNG",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\",
          "preserve_alpha": false
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Image converted successfully\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\20250507-151716.png\"\n}"
        },
        "execution_time": 0.008053064346313477,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Source File Path",
        "purpose": "测试当提供的源文件路径无效时，工具是否能优雅地处理错误并返回适当的错误信息。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.png",
          "target_format": "PNG",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.png\",\n  \"output_path\": null\n}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Unsupported Target Format",
        "purpose": "测试当目标格式不被支持时是否抛出ValueError异常。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "target_format": "WEBP",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Unsupported target format: WEBP. Supported formats: ['PNG', 'JPEG', 'BMP', 'GIF']\",\n  \"output_path\": null\n}"
        },
        "execution_time": 0.004022121429443359,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Directory",
        "purpose": "测试输出目录包含特殊字符时工具的行为。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "target_format": "BMP",
          "output_dir": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@special#dir\\"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Image converted successfully\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\@special#dir\\\\hit.bmp\"\n}"
        },
        "execution_time": 0.01006770133972168,
        "is_functional_test": true
      },
      {
        "case_name": "Write Protected Output Directory",
        "purpose": "测试当输出目录不可写时是否能正确报告错误。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "target_format": "PNG",
          "output_dir": "C:\\Windows\\System32\\"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\hit.png'\",\n  \"output_path\": null\n}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 8
}