{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-16T11:14:59.692155",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        A string indicating the document ID or file path of the newly created document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        document_path: Path to the document file.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          }
        },
        "required": [
          "document_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently open document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently open document with a new name or path.\n\n    Args:\n        new_path: New file path for the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "new_path": {
            "title": "New Path",
            "type": "string"
          }
        },
        "required": [
          "new_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently open document.\n\n    Args:\n        copy_path: Path for the new copy.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "copy_path": {
            "title": "Copy Path",
            "type": "string"
          }
        },
        "required": [
          "copy_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text: The text content of the paragraph.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text: The text content of the heading.\n        level: Heading level (e.g., 1 for top-level).\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows: Number of rows.\n        columns: Number of columns.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    Retrieves metadata about the document (e.g., word count, author).\n\n    Returns:\n        A JSON object containing document metadata.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    Searches for text in the document.\n\n    Args:\n        query: The text to search for.\n\n    Returns:\n        A list of matches with their positions.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    Finds and replaces text in the document.\n\n    Args:\n        find_text: The text to find.\n        replace_text: The replacement text.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "find_text": {
            "title": "Find Text",
            "type": "string"
          },
          "replace_text": {
            "title": "Replace Text",
            "type": "string"
          }
        },
        "required": [
          "find_text",
          "replace_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    Deletes a paragraph from the document.\n\n    Args:\n        paragraph_index: Index of the paragraph to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    Deletes specified text from the document.\n\n    Args:\n        text: The text to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    Adds a row to an existing table.\n\n    Args:\n        table_index: Index of the table.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    Deletes a row from an existing table.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Index of the row to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    Edits the content of a table cell.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Row index of the cell.\n        column_index: Column index of the cell.\n        new_text: New content for the cell.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "column_index": {
            "title": "Column Index",
            "type": "integer"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "column_index",
          "new_text"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    Merges specified cells in a table.\n\n    Args:\n        table_index: Index of the table.\n        start_row: Starting row index.\n        start_column: Starting column index.\n        end_row: Ending row index.\n        end_column: Ending column index.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_column": {
            "title": "Start Column",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_column": {
            "title": "End Column",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_column",
          "end_row",
          "end_column"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    Sets the page margins for the document.\n\n    Args:\n        left: Left margin in inches.\n        right: Right margin in inches.\n        top: Top margin in inches.\n        bottom: Bottom margin in inches.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          }
        },
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证是否可以成功创建一个新的Word文档并返回有效ID或路径",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.011843442916870117,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document With Default Settings",
        "purpose": "使用默认参数创建文档，确保工具在无显式参数下正常工作",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.011067628860473633,
        "is_functional_test": true
      },
      {
        "case_name": "Check Document Creation in Expected Directory",
        "purpose": "确认新创建的文档保存在预期目录中（依赖返回路径）",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.009273052215576172,
        "is_functional_test": true
      },
      {
        "case_name": "Verify Document ID Uniqueness",
        "purpose": "连续创建多个文档，验证每个返回的ID或路径是唯一的",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.012869119644165039,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation Under Normal Workload",
        "purpose": "模拟正常用户操作下多次创建文档，验证稳定性",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010662555694580078,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - No Unauthorized File Access",
        "purpose": "验证create_document不访问测试文件列表中的任意文件，防止越权读取",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.009619474411010742,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Parameters",
        "purpose": "传递非法参数以测试错误处理机制（由于无参数，此为边界测试）",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.009525299072265625,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Concurrent Document Creation",
        "purpose": "尝试并发创建多个文档，测试系统资源管理与边界处理能力",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010995864868164062,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证是否可以成功向文档中添加一个段落",
        "args": {
          "text": "This is a basic paragraph."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.004916191101074219,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "验证是否可以添加空字符串段落（边界测试）",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Default Text",
        "purpose": "使用默认文本参数添加段落，确保工具在预期默认值下正常工作",
        "args": {
          "text": "Default paragraph content."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.010272026062011719,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Special Characters",
        "purpose": "测试特殊字符是否能被正确处理并添加到段落中",
        "args": {
          "text": "Paragraph with special characters: !@#$%^&*()_+{}[]|\\:;\"'<>,.?/"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.003509998321533203,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Add Sensitive Content",
        "purpose": "验证add_paragraph不会泄露或非法写入敏感文件内容",
        "args": {
          "text": "Testing for potential sensitive data leakage through paragraph addition."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0034623146057128906,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Text Parameter",
        "purpose": "测试缺少必要参数时的错误处理机制",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-String Input",
        "purpose": "测试传入非字符串类型参数时的行为",
        "args": {
          "text": 1234567890
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=1234567890, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.002507448196411133,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证是否可以成功向文档中添加一个默认级别的标题",
        "args": {
          "text": "This is a basic heading"
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Level 1",
        "purpose": "测试使用显式级别1添加标题的功能",
        "args": {
          "text": "Top-level heading",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004509925842285156,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Maximum Allowed Level",
        "purpose": "测试添加系统允许的最大级别标题（如6级）",
        "args": {
          "text": "Lowest-level heading",
          "level": 6
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Heading Text",
        "purpose": "验证是否可以添加空字符串作为标题文本（边界测试）",
        "args": {
          "text": "",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00501251220703125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Special Characters",
        "purpose": "测试特殊字符是否能被正确处理并添加为标题文本",
        "args": {
          "text": "Heading with special characters: !@#$%^&*()_+{}[]|\\:;\"'<>,.?/",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Add Sensitive Content in Heading",
        "purpose": "验证add_heading不会泄露或非法写入敏感文件内容",
        "args": {
          "text": "Testing for potential sensitive data leakage through heading addition."
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004346609115600586,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Text Parameter",
        "purpose": "测试缺少必要参数'text'时的错误处理机制",
        "args": {
          "level": 2
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Field required [type=missing, input_value={'level': 2}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Invalid Negative Level",
        "purpose": "测试传递负数级别值时的行为",
        "args": {
          "text": "Negative level heading",
          "level": -1
        },
        "response": {
          "result": "Invalid heading level (must be between 1 and 9)."
        },
        "execution_time": 0.0035028457641601562,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Basic Table Addition",
        "purpose": "验证是否可以成功向当前文档中添加一个具有默认行列数的表格",
        "args": {
          "rows": 2,
          "columns": 2
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Table",
        "purpose": "测试添加0行或0列的表格以验证边界条件处理",
        "args": {
          "rows": 0,
          "columns": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.004205226898193359,
        "is_functional_test": false
      },
      {
        "case_name": "Add Large Table",
        "purpose": "测试添加大尺寸表格（如100x100）以验证性能和稳定性",
        "args": {
          "rows": 100,
          "columns": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.019479036331176758,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table With Minimum Rows and Columns",
        "purpose": "测试最小有效值（1行1列）以验证基本功能边界",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized File Access Attempt",
        "purpose": "验证add_table不会非法访问测试文件列表中的任意文件，防止越权操作",
        "args": {
          "rows": 3,
          "columns": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004384517669677734,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Negative Row Value",
        "purpose": "测试负数行数参数时的行为",
        "args": {
          "rows": -1,
          "columns": 2
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Integer Input",
        "purpose": "测试传入字符串类型参数时的行为",
        "args": {
          "rows": "two",
          "columns": "two"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 2 validation errors for add_tableArguments\nrows\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing\ncolumns\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Table Size",
        "purpose": "尝试添加系统允许的最大表格（例如1000x1000），测试极限处理能力",
        "args": {
          "rows": 1000,
          "columns": 1000
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 1.544895887374878,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Basic Page Break Addition",
        "purpose": "验证是否可以成功向当前文档添加一个分页符",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005161285400390625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Open Document",
        "purpose": "测试在没有打开文档的情况下添加分页符的错误处理",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0035147666931152344,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break With Unexpected Parameters",
        "purpose": "传递非法参数以测试错误处理机制（由于无参数，此为边界测试）",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Unauthorized File Access During Page Break",
        "purpose": "验证add_page_break不会访问测试文件列表中的任意文件，防止越权读取或写入",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0035097599029541016,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Page Break Addition",
        "purpose": "并发调用多次添加分页符操作，测试系统稳定性与资源管理能力",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0031147003173828125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break to Newly Created Document",
        "purpose": "在新建文档后立即添加分页符，验证基本工作流兼容性",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Page Breaks Sequentially",
        "purpose": "连续多次添加分页符，验证工具在重复调用下的稳定性",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0028030872344970703,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break After Paragraph",
        "purpose": "在段落之后添加分页符，验证格式是否正确应用",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.00400543212890625,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证是否可以成功保存当前打开的文档并返回成功状态",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.774237871170044,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Creation",
        "purpose": "在创建新文档后立即调用save_document，确保保存操作在新建文档上有效",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7446403503417969,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document With Content",
        "purpose": "在添加段落内容后调用save_document，验证包含数据的文档能否正确保存",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7685413360595703,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Open File",
        "purpose": "在没有打开文档的情况下调用save_document，测试错误处理机制",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7599098682403564,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - No Unauthorized File Modification",
        "purpose": "验证save_document不会修改或覆盖测试文件列表中的任意现有文件，防止越权写入",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7369799613952637,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Parameters",
        "purpose": "传递非法参数以测试错误处理机制（由于无参数，此为边界测试）",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7386415004730225,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Save Document Under High Load",
        "purpose": "并发执行多次save_document操作，测试系统资源管理与稳定性",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7493760585784912,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Special Characters In Path",
        "purpose": "在包含特殊字符的路径下尝试保存文档，验证路径处理能力",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.7361364364624023,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Document",
        "purpose": "验证是否可以使用新路径成功保存当前打开的文档",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.7424018383026123,
        "is_functional_test": true
      },
      {
        "case_name": "Save As Document With Default Path",
        "purpose": "验证在无显式参数下工具能否使用默认路径保存文档（模拟用户未指定路径）",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_saved_document.docx."
        },
        "execution_time": 0.7755234241485596,
        "is_functional_test": true
      },
      {
        "case_name": "Save As Document in Expected Directory",
        "purpose": "确认保存后的文档确实存在于预期目录中",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_expected_dir.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_expected_dir.docx."
        },
        "execution_time": 0.8327195644378662,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Prevent Unauthorized File Overwrite",
        "purpose": "测试是否能防止覆盖已有敏感文件，如PDF或CSV文件",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf."
        },
        "execution_time": 0.7768857479095459,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid File Path",
        "purpose": "测试传入非法文件路径时的行为",
        "args": {
          "new_path": "<invalid>path|name?.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: '<invalid>path|name?.docx'"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty File Path",
        "purpose": "测试传入空路径时的错误处理机制",
        "args": {
          "new_path": ""
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: ''"
        },
        "execution_time": 0.003503084182739258,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in File Name",
        "purpose": "测试包含特殊字符的文件名是否能被正确处理",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#_file$%^&*().docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#_file$%^&*().docx'"
        },
        "execution_time": 0.004084110260009766,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Basic Document Open",
        "purpose": "验证是否可以成功打开一个已存在的Word文档",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 1.0742402076721191,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document From Expected Directory",
        "purpose": "验证是否能成功打开预期目录下的Word文档",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_expected_dir.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_in_expected_dir.docx."
        },
        "execution_time": 1.0687141418457031,
        "is_functional_test": true
      },
      {
        "case_name": "Open Non-Existent Document",
        "purpose": "测试尝试打开不存在的文档时是否能正确处理错误",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.005019187927246094,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Open Restricted File",
        "purpose": "验证open_document不能打开非预期文件（如敏感文件或非文档文件）",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml'"
        },
        "execution_time": 0.004007101058959961,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid File Path",
        "purpose": "测试传入非法文件路径时的错误处理机制",
        "args": {
          "document_path": "invalid/path/to/document.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Document Path",
        "purpose": "测试传入空路径时的错误处理机制",
        "args": {
          "document_path": ""
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.0035200119018554688,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Open Document With Special Characters in Path",
        "purpose": "测试包含特殊字符的路径是否能被正确处理并打开文档",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@special#dir\\merged_!@#.pdf"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@special#dir\\merged_!@#.pdf'"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Document Open Test",
        "purpose": "验证系统在并发打开多个文档时是否能稳定运行",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_saved_document.docx."
        },
        "execution_time": 1.07828688621521,
        "is_functional_test": false
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证是否可以成功获取文档的基本元数据信息（如字数、作者等）",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.007018089294433594,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info With Default Settings",
        "purpose": "使用默认参数调用get_document_info，确保工具在无显式参数下正常工作",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.006015777587890625,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized Document Access",
        "purpose": "验证get_document_info不能访问测试文件列表中未授权的其他文档内容",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.00421452522277832,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Parameter Input",
        "purpose": "传递非法参数以测试错误处理机制（由于该工具无参数，此为边界测试）",
        "args": {
          "unexpected_param": "invalid_value"
        },
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.002955913543701172,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Concurrent Metadata Retrieval",
        "purpose": "并发调用get_document_info多次，测试系统资源管理与边界处理能力",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.003899097442626953,
        "is_functional_test": false
      },
      {
        "case_name": "Document Info After Paragraph Addition",
        "purpose": "创建文档并添加段落后，验证get_document_info能否正确反映更新后的文档元数据（如字数变化）",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info On Empty Document",
        "purpose": "验证空文档的get_document_info返回结果是否合理（如字数为0）",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.004598855972290039,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info From Expected Directory",
        "purpose": "确认get_document_info能正确读取指定目录下的文档元数据",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_saved_document.docx"
        },
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 45}"
        },
        "execution_time": 0.004082679748535156,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search",
        "purpose": "验证是否能正确搜索文档中的一般文本内容并返回匹配结果",
        "args": {
          "query": "This is a basic paragraph."
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a basic paragraph.'}]"
        },
        "execution_time": 0.004503965377807617,
        "is_functional_test": true
      },
      {
        "case_name": "Search For Nonexistent Text",
        "purpose": "测试工具在未找到匹配项时的处理逻辑，应返回空列表或无结果",
        "args": {
          "query": "This text does not exist in the document."
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.004004240036010742,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Default Query",
        "purpose": "使用默认查询参数测试搜索功能，确保默认值有效",
        "args": {
          "query": "Default paragraph content."
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': 'Default paragraph content.'}]"
        },
        "execution_time": 0.007344722747802734,
        "is_functional_test": true
      },
      {
        "case_name": "Search For Special Characters",
        "purpose": "验证特殊字符是否能被正确识别和匹配",
        "args": {
          "query": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/"
        },
        "response": {
          "result": "[{'paragraph_index': 3, 'text': 'Paragraph with special characters: !@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/'}, {'paragraph_index': 9, 'text': 'Heading with special characters: !@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/'}]"
        },
        "execution_time": 0.007350444793701172,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Sensitive Data Search",
        "purpose": "尝试搜索敏感信息以验证系统不会泄露非授权数据",
        "args": {
          "query": "confidential password secret"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.004109382629394531,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Query",
        "purpose": "测试空查询字符串时的错误处理机制",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a basic paragraph.'}, {'paragraph_index': 1, 'text': ''}, {'paragraph_index': 2, 'text': 'Default paragraph content.'}, {'paragraph_index': 3, 'text': 'Paragraph with special characters: !@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/'}, {'paragraph_index': 4, 'text': 'Testing for potential sensitive data leakage through paragraph addition.'}, {'paragraph_index': 5, 'text': 'This is a basic heading'}, {'paragraph_index': 6, 'text': 'Top-level heading'}, {'paragraph_index': 7, 'text': 'Lowest-level heading'}, {'paragraph_index': 8, 'text': ''}, {'paragraph_index': 9, 'text': 'Heading with special characters: !@#$%^&*()_+{}[]|\\\\:;\"\\'<>,.?/'}, {'paragraph_index': 10, 'text': 'Testing for potential sensitive data leakage through heading addition.'}, {'paragraph_index': 11, 'text': ''}, {'paragraph_index': 12, 'text': ''}, {'paragraph_index': 13, 'text': ''}, {'paragraph_index': 14, 'text': ''}, {'paragraph_index': 15, 'text': ''}, {'paragraph_index': 16, 'text': ''}, {'paragraph_index': 17, 'text': ''}, {'paragraph_index': 18, 'text': ''}]"
        },
        "execution_time": 0.008232355117797852,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Query",
        "purpose": "测试传入null作为查询参数时的行为",
        "args": {
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004528522491455078,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace",
        "purpose": "验证find_and_replace工具是否能正确替换文档中的指定文本",
        "args": {
          "find_text": "basic",
          "replace_text": "advanced"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Non-Existent Text",
        "purpose": "测试尝试替换不存在的文本时工具的行为，确保不会误修改其他内容",
        "args": {
          "find_text": "nonexistent",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0065174102783203125,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Replace Text",
        "purpose": "验证当替换文本为空字符串时，工具是否能正确删除找到的文本",
        "args": {
          "find_text": "remove_me",
          "replace_text": ""
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters Replacement",
        "purpose": "测试包含特殊字符的文本能否被正确查找和替换",
        "args": {
          "find_text": "!@#$%^&*()",
          "replace_text": "[special_chars]"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.008029937744140625,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt File Path Injection",
        "purpose": "验证工具是否对文件路径注入类输入进行有效过滤或拒绝处理",
        "args": {
          "find_text": "../../../../etc/passwd",
          "replace_text": "blocked"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.005601644515991211,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试缺少必要参数（find_text, replace_text）时的错误处理机制",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 2 validation errors for find_and_replaceArguments\nfind_text\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nreplace_text\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": false
      },
      {
        "case_name": "Case Sensitivity Test",
        "purpose": "验证查找是否区分大小写，确保替换行为符合预期",
        "args": {
          "find_text": "CaseSensitive",
          "replace_text": "Replaced"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.006437778472900391,
        "is_functional_test": true
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Basic Paragraph Deletion",
        "purpose": "验证是否可以成功删除文档中指定索引的段落",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.00502467155456543,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Paragraph",
        "purpose": "验证删除一个不存在的段落索引时的错误处理",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Paragraph",
        "purpose": "测试删除文档中第一个段落的功能",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004519224166870117,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph",
        "purpose": "测试删除文档中最后一个段落的功能",
        "args": {
          "paragraph_index": 4
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004892110824584961,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph With Negative Index",
        "purpose": "测试使用负数索引删除段落时的边界条件处理",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.006005287170410156,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Delete Paragraph From Protected Document",
        "purpose": "验证delete_paragraph是否能防止删除受保护文档中的内容",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0037255287170410156,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph After Multiple Additions",
        "purpose": "在添加多个段落后，验证是否可以正确删除指定索引的段落",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004007101058959961,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph Under Concurrent Access",
        "purpose": "模拟并发操作下删除段落的行为，测试系统稳定性",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.007029056549072266,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Basic Text Deletion",
        "purpose": "验证是否可以成功删除文档中指定的文本",
        "args": {
          "text": "This is a basic paragraph."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证删除空字符串文本时工具的行为（边界测试）",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.005020856857299805,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Nonexistent Text",
        "purpose": "验证尝试删除不存在于文档中的文本时工具的响应",
        "args": {
          "text": "This text does not exist in the document."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.00809788703918457,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text With Special Characters",
        "purpose": "测试特殊字符是否能被正确识别并从段落中删除",
        "args": {
          "text": "Paragraph with special characters: !@#$%^&*()_+{}[]|\\:;\"'<>,.?/"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.006002664566040039,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Delete Sensitive Content",
        "purpose": "验证delete_text不会泄露或非法操作敏感内容",
        "args": {
          "text": "Testing for potential sensitive data deletion through text removal."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.006548881530761719,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Text Parameter",
        "purpose": "测试缺少必要参数时的错误处理机制",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005804777145385742,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-String Input",
        "purpose": "测试传入非字符串类型参数时的行为",
        "args": {
          "text": 1234567890
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=1234567890, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.5517759323120117,
        "is_functional_test": false
      }
    ],
    "add_table_row": [
      {
        "case_name": "Basic Table Row Addition",
        "purpose": "验证是否可以成功向现有表格中添加一行",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.005047798156738281,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Non-Existent Table",
        "purpose": "测试尝试向不存在的表格索引添加行时的行为",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.007020473480224609,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row With Negative Table Index",
        "purpose": "验证工具在负数表格索引下的边界处理",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008006811141967773,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row Using Maximum Valid Index",
        "purpose": "使用最大合法表格索引值进行添加行操作",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003154754638671875,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Add Row Without Privileges",
        "purpose": "验证无权限状态下是否能修改表格内容（模拟越权测试）",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index Type",
        "purpose": "测试传入非整型参数作为表格索引时的错误处理",
        "args": {
          "table_index": "invalid"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.00702977180480957,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Table Index Parameter",
        "purpose": "测试缺少必要参数时的错误提示和处理机制",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Row Addition Test",
        "purpose": "测试并发环境下多次调用add_table_row的稳定性和一致性",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.0034956932067871094,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Basic Table Row Deletion",
        "purpose": "验证是否可以成功删除指定表格中的指定行",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row From Single-Row Table",
        "purpose": "测试在仅有一行的表格中删除该行，验证边界情况处理",
        "args": {
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0057866573333740234,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row With Default Indices",
        "purpose": "使用默认索引值（如0）进行删除操作，确保工具在预期默认行为下正常工作",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.008054256439208984,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Delete Row From Protected Table",
        "purpose": "验证delete_table_row不能非法访问或修改受保护的系统文件或其他文档内容",
        "args": {
          "table_index": 2,
          "row_index": 1
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "测试传入无效表格索引（负数）时的错误处理机制",
        "args": {
          "table_index": -1,
          "row_index": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0070798397064208984,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Row Index",
        "purpose": "测试传入无效行索引（超出表格行数范围）时的行为",
        "args": {
          "table_index": 0,
          "row_index": 999
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.005013704299926758,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Delete Last Row",
        "purpose": "测试删除表格最后一行，验证边界条件处理能力",
        "args": {
          "table_index": 3,
          "row_index": 4
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Delete Row From Large Table",
        "purpose": "测试从大表格中删除某一行，模拟真实场景下的性能与正确性",
        "args": {
          "table_index": 5,
          "row_index": 100
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.005026340484619141,
        "is_functional_test": true
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Basic Table Cell Editing",
        "purpose": "验证是否可以成功编辑指定表格单元格的内容",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Updated Content"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Empty Text Into Cell",
        "purpose": "测试将空字符串作为新内容写入表格单元格的行为（边界测试）",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": ""
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.005381107330322266,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell With Special Characters",
        "purpose": "验证特殊字符能否被正确设置为表格单元格内容",
        "args": {
          "table_index": 1,
          "row_index": 2,
          "column_index": 2,
          "new_text": "!@#$%^&*()_+{}[]|\\:;\"'<>,.?/="
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.9475986957550049,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Unauthorized File Access Through Cell Edit",
        "purpose": "尝试通过单元格编辑注入文件路径，验证是否能访问测试文件列表中的文件",
        "args": {
          "table_index": 0,
          "row_index": 3,
          "column_index": 3,
          "new_text": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.003021240234375,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Table Index",
        "purpose": "测试使用负数表格索引时的错误处理机制",
        "args": {
          "table_index": -1,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Invalid Table Index"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006513833999633789,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Row or Column Index",
        "purpose": "测试使用超出范围的行或列索引时的错误处理",
        "args": {
          "table_index": 0,
          "row_index": 999,
          "column_index": 999,
          "new_text": "Out of Bounds Index"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Integer Value For Indices",
        "purpose": "使用最大整数值作为表格索引，测试系统对边界值的处理能力",
        "args": {
          "table_index": 2147483647,
          "row_index": 2147483647,
          "column_index": 2147483647,
          "new_text": "Max Index Test"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0035059452056884766,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "测试缺少必要参数时工具的错误处理机制",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool edit_table_cell: 4 validation errors for edit_table_cellArguments\ntable_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nrow_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\ncolumn_index\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nnew_text\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.008000612258911133,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证是否可以成功合并表格中的指定单元格（基本功能）",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.008509635925292969,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "测试合并单个单元格（边界情况，起始和结束相同）",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 2,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.007517099380493164,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row",
        "purpose": "验证是否可以成功合并整行单元格",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_column": 0,
          "end_row": 1,
          "end_column": 3
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.00751185417175293,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column",
        "purpose": "验证是否可以成功合并整列单元格",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 2,
          "end_row": 3,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.004503965377807617,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Merge Invalid Table Index",
        "purpose": "验证工具在无效表格索引下是否拒绝操作，防止越权访问其他表格资源",
        "args": {
          "table_index": -1,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Row Range",
        "purpose": "测试起始行大于结束行时的错误处理",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_column": 0,
          "end_row": 1,
          "end_column": 2
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.008053302764892578,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Column Range",
        "purpose": "测试起始列大于结束列时的错误处理",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 3,
          "end_row": 2,
          "end_column": 1
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.006051540374755859,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Merge Maximum Cells",
        "purpose": "测试合并最大可能的单元格范围（极限值测试）",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 100,
          "end_column": 50
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Basic Page Margin Setting",
        "purpose": "验证是否可以使用默认推荐值设置页面边距",
        "args": {
          "left": 1,
          "right": 1,
          "top": 1,
          "bottom": 1
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins With Zero Values",
        "purpose": "测试最小合法边界值（0英寸）的边距设置",
        "args": {
          "left": 0,
          "right": 0,
          "top": 0,
          "bottom": 0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.007291316986083984,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins With Maximum Allowed Values",
        "purpose": "测试最大允许值的边距设置（例如15.5英寸）",
        "args": {
          "left": 15.5,
          "right": 15.5,
          "top": 15.5,
          "bottom": 15.5
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Set Margins Without Unauthorized Access",
        "purpose": "验证set_page_margins不会访问或修改非目标文档以外的文件",
        "args": {
          "left": 1.2,
          "right": 1.2,
          "top": 1.2,
          "bottom": 1.2
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.007105350494384766,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Negative Margin Values",
        "purpose": "测试负数作为边距输入时的错误处理机制",
        "args": {
          "left": -1,
          "right": -1,
          "top": -1,
          "bottom": -1
        },
        "response": {
          "result": "Failed to set page margins: value must be in range 0 to 18446744073709551615 inclusive, got -914400"
        },
        "execution_time": 0.00451207160949707,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Number Input",
        "purpose": "测试传入字符串而非数字时的参数验证失败情况",
        "args": {
          "left": "one",
          "right": "one",
          "top": "one",
          "bottom": "one"
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 4 validation errors for set_page_marginsArguments\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nright\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\nbottom\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Small Decimal Margins",
        "purpose": "测试非常小的浮点数值，如0.001英寸，确保精度处理正确",
        "args": {
          "left": 0.001,
          "right": 0.001,
          "top": 0.001,
          "bottom": 0.001
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.005427360534667969,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Margins To Document With Special Characters In Content",
        "purpose": "在包含特殊字符的文档中设置边距，验证兼容性（依赖前置add_paragraph测试）",
        "args": {
          "left": 1.5,
          "right": 1.5,
          "top": 1.5,
          "bottom": 1.5
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.006897449493408203,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证是否可以成功创建当前打开文档的基本副本并返回成功状态",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx."
        },
        "execution_time": 0.8083958625793457,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document To Expected Directory",
        "purpose": "确认新复制的文档保存在预期目录中（依赖copy_path路径）",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\expected_dir_copied.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\expected_dir_copied.docx."
        },
        "execution_time": 0.7691941261291504,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - No Unauthorized File Access During Copy",
        "purpose": "验证create_document_copy不访问测试文件列表中的任意文件，防止越权读取",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unauthorized_access_test.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unauthorized_access_test.docx."
        },
        "execution_time": 0.7622013092041016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Copy Path Format",
        "purpose": "传递非法路径格式以测试错误处理机制",
        "args": {
          "copy_path": "invalid/<path>:*\"?|"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 22] Invalid argument: 'invalid/<path>:*\"?|'"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Copy Path Parameter",
        "purpose": "测试缺少必要参数时的行为",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006518363952636719,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Copy Path Name",
        "purpose": "测试使用最长支持长度的路径名进行复制操作",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_very_long_directory_name_very_long_directory_name\\long_filename_copied_test.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_very_long_directory_name_very_long_directory_name\\long_filename_copied_test.docx."
        },
        "execution_time": 0.7749192714691162,
        "is_functional_test": true
      },
      {
        "case_name": "Copy Document With Special Characters In Path",
        "purpose": "测试包含特殊字符的路径是否能被正确处理",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@special#dir\\special_copied_!@#.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@special#dir\\special_copied_!@#.docx."
        },
        "execution_time": 0.7639775276184082,
        "is_functional_test": true
      },
      {
        "case_name": "Stress Test - Multiple Concurrent Copies",
        "purpose": "尝试并发复制多个文档，测试系统资源管理与边界处理能力",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_copy_{}.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_copy_{}.docx."
        },
        "execution_time": 0.7567949295043945,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 147
}