{
  "server_name": "server",
  "parent_dir": "mongodb_mcp_server_operations_refined",
  "report_name": "mongodb_mcp_server_operations_refined-server",
  "server_path": "workspace\\refinement\\mongodb_mcp_server_operations_refined\\server.py",
  "timestamp": "2025-07-01T17:07:02.812518",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON格式字符串。\n\n    示例:\n        >>> mcp_list_databases()\n        '{\"databases\": [\"test_db\", \"admin\", \"local\"]}'\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库名称无效或不存在。\n\n    示例:\n        >>> mcp_list_collections(database_name=\"test_db\")\n        '{\"collections\": [\"users\", \"orders\"]}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        document: 要插入的文档数据，必须是一个字典 (必填)。\n\n    Returns:\n        一个包含插入结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或文档不是字典。\n\n    示例:\n        >>> mcp_insert_document(database_name=\"test_db\", collection_name=\"users\", \n        ...                     document={\"name\": \"Alice\", \"age\": 30})\n        '{\"inserted_id\": \"5f9d1b3b9c9d6e1d9c9d6e1d\"}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 查询过滤条件，一个字典 (可选，默认为None，即返回所有文档)。\n        projection: 投影字段，指定要返回的字段 (可选，默认为None，即返回所有字段)。\n        limit: 结果数量限制，0表示无限制 (可选，默认为0)。\n\n    Returns:\n        一个包含查询结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_find_documents(database_name=\"test_db\", collection_name=\"users\",\n        ...                   filter={\"age\": {\"$gt\": 25}}, projection={\"name\": 1}, limit=2)\n        '[{\"_id\": \"5f9d1b3b9c9d6e1d9c9d6e1d\", \"name\": \"Alice\"}]'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "default": null,
            "title": "Filter",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 更新过滤条件，一个字典 (必填)。\n        update: 更新操作符和值，一个字典 (必填)。\n        multi: 是否更新多个文档 (可选，默认为False，即只更新第一个匹配的文档)。\n\n    Returns:\n        一个包含更新结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_update_document(database_name=\"test_db\", collection_name=\"users\",\n        ...                     filter={\"name\": \"Alice\"}, update={\"$set\": {\"age\": 31}}, multi=False)\n        '{\"matched_count\": 1, \"modified_count\": 1}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "title": "Filter",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "filter",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 删除过滤条件，一个字典 (必填)。\n        multi: 是否删除多个文档 (可选，默认为False，即只删除第一个匹配的文档)。\n\n    Returns:\n        一个包含删除结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_delete_document(database_name=\"test_db\", collection_name=\"users\",\n        ...                     filter={\"name\": \"Alice\"}, multi=False)\n        '{\"deleted_count\": 1}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "title": "Filter",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "filter"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "List Databases Successfully",
        "purpose": "验证工具可以成功列出MongoDB服务器上的所有数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": true
      },
      {
        "case_name": "Verify Default Parameter Handling",
        "purpose": "确认工具在没有提供参数的情况下使用默认行为并正常工作。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": true
      },
      {
        "case_name": "Check Database List Format",
        "purpose": "验证返回的数据库列表是否为有效的JSON格式且包含正确的字段。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.008997440338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Database List",
        "purpose": "测试当MongoDB中没有任何数据库时，工具是否能正确返回空数组。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.005998373031616211,
        "is_functional_test": true
      },
      {
        "case_name": "Database Name with Special Characters",
        "purpose": "确保工具能够正确处理数据库名称中包含特殊字符的情况。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.009001016616821289,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized Access",
        "purpose": "模拟无权限访问MongoDB的情况，确认工具不会暴露敏感信息或引发安全问题。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - MongoDB Not Running",
        "purpose": "测试当MongoDB服务未运行时，工具能否优雅地处理连接失败错误。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.00600743293762207,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Connection String",
        "purpose": "验证工具在连接字符串无效时是否能正确报告错误而不是崩溃。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.00799703598022461,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Database Count",
        "purpose": "测试工具在MongoDB中存在大量数据库时的处理能力。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.01100611686706543,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.009001731872558594,
        "is_functional_test": false
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "List Collections Successfully",
        "purpose": "验证工具可以成功列出指定数据库中的所有集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it\", \"test_collection\", \"invalid/collection*name\", \"user_profiles\", \"special_chars_collection\", \"nonexistent_collection\", \"a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues\", \"users\"]}"
        },
        "execution_time": 0.017517805099487305,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Collection List",
        "purpose": "测试当指定数据库中没有任何集合时，工具是否能正确返回空数组。",
        "args": {
          "database_name": "empty_db"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'empty_db' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.010512590408325195,
        "is_functional_test": true
      },
      {
        "case_name": "Check Collection List Format",
        "purpose": "验证返回的集合列表是否为有效的JSON格式且包含正确的字段。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it\", \"test_collection\", \"invalid/collection*name\", \"user_profiles\", \"special_chars_collection\", \"nonexistent_collection\", \"a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues\", \"users\"]}"
        },
        "execution_time": 0.007991552352905273,
        "is_functional_test": true
      },
      {
        "case_name": "Database Name with Special Characters",
        "purpose": "确保工具能够正确处理数据库名称中包含特殊字符的情况。",
        "args": {
          "database_name": "db_with_@special#chars"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'db_with_@special#chars' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized Access",
        "purpose": "模拟无权限访问MongoDB数据库的情况，确认工具不会暴露敏感信息或引发安全问题。",
        "args": {
          "database_name": "restricted_db"
        },
        "response": {
          "result": "{\"collections\": [\"restricted_collection\"]}"
        },
        "execution_time": 0.007987737655639648,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Database Name",
        "purpose": "验证工具在数据库名称无效时是否能正确报告错误而不是崩溃。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.011001110076904297,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Database",
        "purpose": "测试当指定数据库不存在时，工具能否优雅地处理并返回错误信息。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"users\", \"test_collection\"]}"
        },
        "execution_time": 0.011005401611328125,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {
          "database_name": "a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.008998632431030273,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Collection Count",
        "purpose": "测试工具在数据库中存在大量集合时的处理能力。",
        "args": {
          "database_name": "large_db"
        },
        "response": {
          "result": "{\"collections\": [\"large_collection\"]}"
        },
        "execution_time": 0.014013528823852539,
        "is_functional_test": false
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "Insert Document Successfully",
        "purpose": "验证工具能够成功向指定数据库和集合中插入新文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": {
            "name": "Alice",
            "age": 30
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb647908\"}"
        },
        "execution_time": 0.017003297805786133,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Empty Database Name",
        "purpose": "测试当数据库名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "document": {
            "name": "Bob",
            "age": 25
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.018001317977905273,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Empty Collection Name",
        "purpose": "测试当集合名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "name": "Charlie",
            "age": 40
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.015008211135864258,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Non-Dictionary Document",
        "purpose": "测试当提供的文档不是字典类型时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": "This is not a dictionary"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value='This is not a dictionary', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.017998695373535156,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document into Nonexistent Database",
        "purpose": "验证工具能否在目标数据库不存在的情况下仍然成功插入文档（自动创建数据库）。",
        "args": {
          "database_name": "new_db",
          "collection_name": "users",
          "document": {
            "name": "David",
            "age": 35
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: \\u6570\\u636e\\u5e93 'new_db' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.02299809455871582,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Special Characters in Database Name",
        "purpose": "确保工具能够处理包含特殊字符的数据库名称并成功插入文档。",
        "args": {
          "database_name": "db_with_@special#chars",
          "collection_name": "users",
          "document": {
            "name": "Eve",
            "age": 28
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: \\u6570\\u636e\\u5e93 'db_with_@special#chars' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.01451253890991211,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Special Characters in Collection Name",
        "purpose": "确保工具能够处理包含特殊字符的集合名称并成功插入文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "invalid/collection*name",
          "document": {
            "name": "Frank",
            "age": 45
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb647909\"}"
        },
        "execution_time": 0.027951955795288086,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized Insert Attempt",
        "purpose": "模拟无权限访问MongoDB数据库的情况，确认工具不会暴露敏感信息或引发安全问题。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "document": {
            "name": "Guest",
            "age": 50
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb64790a\"}"
        },
        "execution_time": 0.04199814796447754,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - MongoDB Not Running",
        "purpose": "测试当MongoDB服务未运行时，工具能否优雅地处理连接失败错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": {
            "name": "Grace",
            "age": 60
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb64790b\"}"
        },
        "execution_time": 0.021998167037963867,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {
          "database_name": "a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway",
          "collection_name": "users",
          "document": {
            "name": "Helen",
            "age": 29
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.023006200790405273,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Long Collection Name",
        "purpose": "验证工具是否能正确处理集合名称长度接近系统限制的情况。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it",
          "document": {
            "name": "Ian",
            "age": 31
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb64790c\"}"
        },
        "execution_time": 0.020612716674804688,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Chinese Keys",
        "purpose": "验证工具是否支持中文键名的文档插入。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": {
            "姓名": "李华",
            "年龄": 27
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"6863a58dbf8d3e1acb64790d\"}"
        },
        "execution_time": 0.013997316360473633,
        "is_functional_test": true
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "Basic Find All Documents",
        "purpose": "验证在指定数据库和集合中能够成功查询所有文档（使用默认参数）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users"
        },
        "response": {
          "result": "[{\"_id\": \"6863a58dbf8d3e1acb647908\", \"name\": \"Alice\", \"age\": 30}, {\"_id\": \"6863a58dbf8d3e1acb64790b\", \"name\": \"Grace\", \"age\": 60}, {\"_id\": \"6863a58dbf8d3e1acb64790d\", \"\\u59d3\\u540d\": \"\\u674e\\u534e\", \"\\u5e74\\u9f84\": 27}]"
        },
        "execution_time": 0.00859975814819336,
        "is_functional_test": true
      },
      {
        "case_name": "Find With Filter Criteria",
        "purpose": "验证使用过滤条件可以正确筛选出符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$gt": 25
            }
          }
        },
        "response": {
          "result": "[{\"_id\": \"6863a58dbf8d3e1acb647908\", \"name\": \"Alice\", \"age\": 30}, {\"_id\": \"6863a58dbf8d3e1acb64790b\", \"name\": \"Grace\", \"age\": 60}]"
        },
        "execution_time": 0.016000032424926758,
        "is_functional_test": true
      },
      {
        "case_name": "Find With Projection Fields",
        "purpose": "验证使用投影字段可以控制返回的字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": {
          "result": "[{\"name\": \"Alice\"}, {\"name\": \"Grace\"}, {}]"
        },
        "execution_time": 0.011344432830810547,
        "is_functional_test": true
      },
      {
        "case_name": "Find With Limit Parameter",
        "purpose": "验证限制结果数量参数可以有效控制返回的文档数量。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "limit": 2
        },
        "response": {
          "result": "[{\"_id\": \"6863a58dbf8d3e1acb647908\", \"name\": \"Alice\", \"age\": 30}, {\"_id\": \"6863a58dbf8d3e1acb64790b\", \"name\": \"Grace\", \"age\": 60}]"
        },
        "execution_time": 0.0149993896484375,
        "is_functional_test": true
      },
      {
        "case_name": "Find With Empty Database Name",
        "purpose": "测试当数据库名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "",
          "collection_name": "users"
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.014003992080688477,
        "is_functional_test": false
      },
      {
        "case_name": "Find With Empty Collection Name",
        "purpose": "测试当集合名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.01400303840637207,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Unauthorized Access to Restricted Collection",
        "purpose": "模拟无权限访问MongoDB集合的情况，确认工具不会暴露敏感信息或引发安全问题。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection"
        },
        "response": {
          "result": "[{\"_id\": \"6862968254d99b844f558b8e\", \"data\": \"modified unauthorized data\"}, {\"_id\": \"68629b068d98df9ef5445681\", \"name\": \"UnauthorizedInsert\"}, {\"_id\": \"6863a58dbf8d3e1acb64790a\", \"name\": \"Guest\", \"age\": 50}]"
        },
        "execution_time": 0.011995792388916016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Database",
        "purpose": "测试当指定数据库不存在时，工具能否优雅地处理并返回错误信息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "users"
        },
        "response": {
          "result": "[{\"_id\": \"686283db7aa9857b67610a72\", \"name\": \"Eve\", \"age\": 35}]"
        },
        "execution_time": 0.013002872467041016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Filter Format",
        "purpose": "测试当提供的filter参数格式不合法时，工具是否能正确报错。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.01050877571105957,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {
          "database_name": "a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway",
          "collection_name": "users"
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.011994600296020508,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Long Collection Name",
        "purpose": "验证工具是否能正确处理集合名称长度接近系统限制的情况。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it"
        },
        "response": {
          "result": "[{\"_id\": \"686283db7aa9857b67610a71\", \"key\": \"value\"}, {\"_id\": \"6863a58dbf8d3e1acb64790c\", \"name\": \"Ian\", \"age\": 31}]"
        },
        "execution_time": 0.010996103286743164,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Database Name",
        "purpose": "确保工具能够处理包含特殊字符的数据库名称并正常工作。",
        "args": {
          "database_name": "db_with_@special#chars",
          "collection_name": "users"
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: \\u6570\\u636e\\u5e93 'db_with_@special#chars' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.015000104904174805,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Collection Name",
        "purpose": "确保工具能够处理包含特殊字符的集合名称并正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "invalid/collection*name"
        },
        "response": {
          "result": "[{\"_id\": \"68626d54029e5cd2f7c9b28d\", \"title\": \"\\u6d4b\\u8bd5\\u6587\\u6863\"}, {\"_id\": \"6863a58dbf8d3e1acb647909\", \"name\": \"Frank\", \"age\": 45}]"
        },
        "execution_time": 0.01299905776977539,
        "is_functional_test": true
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "Update Single Document Successfully",
        "purpose": "验证工具能够成功更新指定数据库和集合中的第一个匹配文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.03715634346008301,
        "is_functional_test": true
      },
      {
        "case_name": "Update Multiple Documents Successfully",
        "purpose": "验证工具能够更新所有匹配的文档，当multi参数设置为True时。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$lt": 40
            }
          },
          "update": {
            "$inc": {
              "age": 1
            }
          },
          "multi": true
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.026588916778564453,
        "is_functional_test": true
      },
      {
        "case_name": "Update With Empty Database Name",
        "purpose": "测试当数据库名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.016010284423828125,
        "is_functional_test": false
      },
      {
        "case_name": "Update With Empty Collection Name",
        "purpose": "测试当集合名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.031002044677734375,
        "is_functional_test": false
      },
      {
        "case_name": "Update With Invalid Filter Type",
        "purpose": "测试当filter参数不是字典类型时，工具是否能正确报错。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string",
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.032999277114868164,
        "is_functional_test": false
      },
      {
        "case_name": "Update With Invalid Update Type",
        "purpose": "测试当update参数不是字典类型时，工具是否能正确报错。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": "invalid_update_string",
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nupdate\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_update_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.034514427185058594,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Unauthorized Update Attempt",
        "purpose": "模拟无权限访问MongoDB集合的情况，确认工具不会执行更新操作也不会暴露敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "filter": {
            "name": "Guest"
          },
          "update": {
            "$set": {
              "age": 51
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.03135967254638672,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Database",
        "purpose": "测试当目标数据库不存在时，工具能否优雅地处理并返回错误信息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 0, \"modified_count\": 0}"
        },
        "execution_time": 0.02700042724609375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {
          "database_name": "a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.04729199409484863,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Database Name",
        "purpose": "确保工具能够处理包含特殊字符的数据库名称并正常工作。",
        "args": {
          "database_name": "db_with_@special#chars",
          "collection_name": "users",
          "filter": {
            "name": "Eve"
          },
          "update": {
            "$set": {
              "age": 29
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: \\u6570\\u636e\\u5e93 'db_with_@special#chars' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.03876233100891113,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Collection Name",
        "purpose": "确保工具能够处理包含特殊字符的集合名称并正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "invalid/collection*name",
          "filter": {
            "name": "Frank"
          },
          "update": {
            "$set": {
              "age": 46
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.015999794006347656,
        "is_functional_test": true
      },
      {
        "case_name": "Update Document with Chinese Keys",
        "purpose": "验证工具是否支持中文键名的文档更新。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "姓名": "李华"
          },
          "update": {
            "$set": {
              "年龄": 28
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.02462601661682129,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "Delete Single Document Successfully",
        "purpose": "验证工具能够成功删除指定数据库和集合中的第一个匹配文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.017001867294311523,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Multiple Documents Successfully",
        "purpose": "验证当multi参数为True时，工具能够删除所有匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$lt": 40
            }
          },
          "multi": true
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.015133857727050781,
        "is_functional_test": true
      },
      {
        "case_name": "Delete With Empty Database Name",
        "purpose": "测试当数据库名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.012510538101196289,
        "is_functional_test": false
      },
      {
        "case_name": "Delete With Empty Collection Name",
        "purpose": "测试当集合名称为空时，工具是否能正确抛出错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "filter": {
            "name": "Alice"
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.013999223709106445,
        "is_functional_test": false
      },
      {
        "case_name": "Delete With Invalid Filter Type",
        "purpose": "测试当filter参数不是字典类型时，工具是否能正确报错。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 1 validation error for mcp_delete_documentArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.02999567985534668,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Unauthorized Delete Attempt",
        "purpose": "模拟无权限访问MongoDB集合的情况，确认工具不会执行删除操作也不会暴露敏感信息。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "filter": {
            "name": "Guest"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.014752864837646484,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Database",
        "purpose": "测试当目标数据库不存在时，工具能否优雅地处理并返回错误信息。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.014609098434448242,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Database Name",
        "purpose": "验证工具是否能正确处理数据库名称长度接近系统限制的情况。",
        "args": {
          "database_name": "a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_may_reach_system_limits_and_cause_errors_but_we_need_to_test_it_anyway' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.012998819351196289,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Database Name",
        "purpose": "确保工具能够处理包含特殊字符的数据库名称并正常工作。",
        "args": {
          "database_name": "db_with_@special#chars",
          "collection_name": "users",
          "filter": {
            "name": "Eve"
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: \\u6570\\u636e\\u5e93 'db_with_@special#chars' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.023283004760742188,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Collection Name",
        "purpose": "确保工具能够处理包含特殊字符的集合名称并正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "invalid/collection*name",
          "filter": {
            "name": "Frank"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.01400136947631836,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Document with Chinese Keys",
        "purpose": "验证工具是否支持中文键名的文档删除。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "姓名": "李华"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.04750633239746094,
        "is_functional_test": true
      },
      {
        "case_name": "Delete From Empty Collection",
        "purpose": "测试当集合中没有任何文档时，工具是否能优雅地处理这种情况。",
        "args": {
          "database_name": "test_db",
          "collection_name": "empty_collection",
          "filter": {
            "name": "NonExistentUser"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.019000530242919922,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 68
}