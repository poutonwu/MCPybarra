{
  "server_name": "server",
  "parent_dir": "mongo-mcp-main",
  "report_name": "mongo-mcp-main-server",
  "server_path": "workspace\\public-mcp-servers\\mongo-mcp-main\\server.py",
  "timestamp": "2025-07-01T16:00:45.683862",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "List all databases in the MongoDB instance.\n    \n    Returns:\n        List[str]: List of database names\n    \n    Raises:\n        PyMongoError: If the operation fails\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "List all collections in the specified database.\n    \n    Args:\n        database_name: Name of the database\n    \n    Returns:\n        List[str]: List of collection names\n    \n    Raises:\n        PyMongoError: If the operation fails\n        ValueError: If database name is not provided\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "Insert a document into the specified collection.\n    \n    Args:\n        database_name: Name of the database\n        collection_name: Name of the collection\n        document: Document to insert (JSON-compatible dictionary)\n    \n    Returns:\n        Dict[str, Any]: Result containing the inserted document's ID\n    \n    Raises:\n        PyMongoError: If the operation fails\n        ValueError: If required parameters are missing\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "Find documents in the specified collection matching the query.\n    \n    Args:\n        database_name: Name of the database\n        collection_name: Name of the collection\n        query: MongoDB query filter\n        projection: MongoDB projection (fields to include/exclude)\n        limit: Maximum number of documents to return (0 for no limit)\n    \n    Returns:\n        List[Dict[str, Any]]: List of matching documents\n    \n    Raises:\n        PyMongoError: If the operation fails\n        ValueError: If required parameters are missing\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "projection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Projection"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "Update document(s) in the specified collection.\n    \n    Args:\n        database_name: Name of the database\n        collection_name: Name of the collection\n        query: MongoDB query filter\n        update_data: MongoDB update document (must include operators like $set)\n        upsert: Whether to insert if no document matches the query\n        update_many: Whether to update all matching documents or just the first one\n    \n    Returns:\n        Dict[str, Any]: Result of the update operation\n    \n    Raises:\n        PyMongoError: If the operation fails\n        ValueError: If required parameters are missing or invalid\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "update_data": {
            "title": "Update Data",
            "type": "object"
          },
          "upsert": {
            "default": false,
            "title": "Upsert",
            "type": "boolean"
          },
          "update_many": {
            "default": false,
            "title": "Update Many",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query",
          "update_data"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "Delete document(s) from the specified collection.\n    \n    Args:\n        database_name: Name of the database\n        collection_name: Name of the collection\n        query: MongoDB query filter\n        delete_many: Whether to delete all matching documents or just the first one\n    \n    Returns:\n        Dict[str, Any]: Result of the delete operation\n    \n    Raises:\n        PyMongoError: If the operation fails\n        ValueError: If required parameters are missing\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "object"
          },
          "delete_many": {
            "default": false,
            "title": "Delete Many",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "query"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "List Databases Successfully",
        "purpose": "验证工具可以成功列出MongoDB实例中的所有数据库（基本功能测试）。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.05648636817932129,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases with No Databases Present",
        "purpose": "验证当MongoDB中没有数据库时，工具是否能正确返回空列表。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.010535717010498047,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases with Special Characters in Names",
        "purpose": "验证数据库名包含特殊字符时能否被正确列出。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.007511615753173828,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases with Mixed Case Names",
        "purpose": "验证工具是否能正确处理大小写混合的数据库名称。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.01103067398071289,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出异常。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.014178752899169922,
        "is_functional_test": false
      },
      {
        "case_name": "List Databases with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出错误。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.00699925422668457,
        "is_functional_test": false
      },
      {
        "case_name": "List Databases with Read-Only User",
        "purpose": "验证使用只读用户权限时是否能成功执行数据库列表操作。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.012298583984375,
        "is_functional_test": false
      },
      {
        "case_name": "List Databases with Maximum Database Count",
        "purpose": "验证当存在大量数据库时，工具是否仍能正常返回结果。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.011022090911865234,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases with Long Name Lengths",
        "purpose": "验证数据库名长度极限情况下工具是否能正确处理。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.007504940032958984,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases Under High Concurrency",
        "purpose": "验证在高并发请求下工具是否仍能稳定工作。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.013080358505249023,
        "is_functional_test": true
      },
      {
        "case_name": "List Databases with Unicode Names",
        "purpose": "验证数据库名包含Unicode字符时是否能被正确识别和返回。",
        "args": {},
        "response": [
          "does_not_exist_db",
          "large_db",
          "mcp-test",
          "nonexistent_db",
          "restricted_db",
          "secure_db",
          "test_db",
          "users"
        ],
        "execution_time": 0.010031938552856445,
        "is_functional_test": true
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "List Collections Successfully",
        "purpose": "验证工具可以成功列出指定数据库中的所有集合（基本功能测试）。",
        "args": {
          "database_name": "test_db"
        },
        "response": [
          "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it",
          "test_collection",
          "invalid/collection*name",
          "user_profiles",
          "special_chars_collection",
          "nonexistent_collection",
          "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "users"
        ],
        "execution_time": 0.006511211395263672,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections from Nonexistent Database",
        "purpose": "验证当数据库不存在时，工具是否能正确处理并抛出异常。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": [
          "users",
          "test_collection"
        ],
        "execution_time": 0.0067708492279052734,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections with Empty Database Name",
        "purpose": "验证当未提供数据库名称时，工具是否能正确抛出ValueError。",
        "args": {
          "database_name": ""
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_list_collections: Database name must be provided"
        },
        "execution_time": 0.00832509994506836,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections in Database with Special Characters",
        "purpose": "验证数据库名包含特殊字符时能否被正确识别并列出集合。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": [
          "users",
          "test"
        ],
        "execution_time": 0.012051582336425781,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections with Unicode Database Name",
        "purpose": "验证数据库名包含Unicode字符时能否被正确识别和处理。",
        "args": {
          "database_name": "智能软件工"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.006013154983520508,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出PyMongoError。",
        "args": {
          "database_name": "test_db"
        },
        "response": [
          "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it",
          "test_collection",
          "invalid/collection*name",
          "user_profiles",
          "special_chars_collection",
          "nonexistent_collection",
          "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "users"
        ],
        "execution_time": 0.010505914688110352,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出连接错误。",
        "args": {
          "database_name": "test_db"
        },
        "response": [
          "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it",
          "test_collection",
          "invalid/collection*name",
          "user_profiles",
          "special_chars_collection",
          "nonexistent_collection",
          "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "users"
        ],
        "execution_time": 0.008518218994140625,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections with Read-Only User",
        "purpose": "验证使用只读用户权限时是否能成功执行集合列表操作。",
        "args": {
          "database_name": "secure_db"
        },
        "response": [
          "secure_collection",
          "sensitive_data"
        ],
        "execution_time": 0.008223295211791992,
        "is_functional_test": false
      },
      {
        "case_name": "List Collections in Empty Database",
        "purpose": "验证当指定数据库中没有集合时，工具是否返回空列表。",
        "args": {
          "database_name": "does_not_exist_db"
        },
        "response": {
          "result": "test_collection"
        },
        "execution_time": 0.005012989044189453,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections with Maximum Collection Count",
        "purpose": "验证当数据库中存在大量集合时，工具是否仍能正常返回结果。",
        "args": {
          "database_name": "large_db"
        },
        "response": {
          "result": "large_collection"
        },
        "execution_time": 0.009087324142456055,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections with Long Name Lengths",
        "purpose": "验证集合名长度极限情况下工具是否能正确处理。",
        "args": {
          "database_name": "very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.009079217910766602,
        "is_functional_test": true
      },
      {
        "case_name": "List Collections Under High Concurrency",
        "purpose": "验证在高并发请求下工具是否仍能稳定工作。",
        "args": {
          "database_name": "test_db"
        },
        "response": [
          "a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it",
          "test_collection",
          "invalid/collection*name",
          "user_profiles",
          "special_chars_collection",
          "nonexistent_collection",
          "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "users"
        ],
        "execution_time": 0.006498098373413086,
        "is_functional_test": true
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "Insert Document Successfully",
        "purpose": "验证工具可以成功将文档插入指定集合（基本功能测试）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "name": "Test Document",
            "content": "This is a test document."
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"success\": true\n}"
        },
        "execution_time": 0.014724493026733398,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document into Nonexistent Collection",
        "purpose": "验证当集合不存在时，工具是否能自动创建集合并插入文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a3\",\n  \"success\": true\n}"
        },
        "execution_time": 0.011518239974975586,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Missing Database Name",
        "purpose": "验证未提供数据库名称时是否抛出ValueError。",
        "args": {
          "collection_name": "test_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndatabase_name\n  Field required [type=missing, input_value={'collection_name': 'test...ment': {'key': 'value'}}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007015228271484375,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Missing Collection Name",
        "purpose": "验证未提供集合名称时是否抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ncollection_name\n  Field required [type=missing, input_value={'database_name': 'test_d...ment': {'key': 'value'}}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.010515213012695312,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Missing Document",
        "purpose": "验证未提供文档内容时是否抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Field required [type=missing, input_value={'database_name': 'test_d...ame': 'test_collection'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0075037479400634766,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document into Nonexistent Database",
        "purpose": "验证当数据库不存在时，工具是否能自动创建数据库并插入文档。",
        "args": {
          "database_name": "does_not_exist_db",
          "collection_name": "new_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a4\",\n  \"success\": true\n}"
        },
        "execution_time": 0.02652716636657715,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document with Special Characters in Keys",
        "purpose": "验证文档包含特殊字符键名时能否被正确插入。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "user@domain.com": "test",
            "123_key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a5\",\n  \"success\": true\n}"
        },
        "execution_time": 0.01103830337524414,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Document When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出PyMongoError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a6\",\n  \"success\": true\n}"
        },
        "execution_time": 0.01102590560913086,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出连接错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a7\",\n  \"success\": true\n}"
        },
        "execution_time": 0.011501789093017578,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Read-Only User",
        "purpose": "验证使用只读用户权限时是否能正确抛出写入拒绝错误。",
        "args": {
          "database_name": "secure_db",
          "collection_name": "secure_collection",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a8\",\n  \"success\": true\n}"
        },
        "execution_time": 0.012501716613769531,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Document with Unicode Characters",
        "purpose": "验证文档包含Unicode字符时是否能被正确插入。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "document": {
            "中文字段": "测试值",
            "日本語キー": "値"
          }
        },
        "response": {
          "result": "{\n  \"inserted_id\": \"686395fe8bb57d80cdb0c4a9\",\n  \"success\": true\n}"
        },
        "execution_time": 0.01902008056640625,
        "is_functional_test": true
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "Find Documents Successfully with Default Parameters",
        "purpose": "验证工具可以成功在指定集合中查找文档（基本功能测试，使用默认参数）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": [
          "{\n  \"_id\": \"686280078c2cfd880794eaf6\",\n  \"a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues\": \"updated_value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a5\",\n  \"user@domain.com\": \"test\",\n  \"123_key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a6\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a7\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a9\",\n  \"中文字段\": \"测试值\",\n  \"日本語キー\": \"値\"\n}"
        ],
        "execution_time": 0.0220184326171875,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Specific Query",
        "purpose": "验证工具能根据特定查询条件正确返回匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          }
        },
        "response": {
          "result": "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}"
        },
        "execution_time": 0.010991334915161133,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Projection",
        "purpose": "验证工具能使用投影参数控制返回字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": [
          "{}",
          "{\n  \"name\": \"Test Document\"\n}",
          "{}",
          "{}",
          "{}",
          "{}"
        ],
        "execution_time": 0.020534753799438477,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Limit",
        "purpose": "验证工具能限制返回结果数量。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "limit": 5
        },
        "response": [
          "{\n  \"_id\": \"686280078c2cfd880794eaf6\",\n  \"a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues\": \"updated_value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a5\",\n  \"user@domain.com\": \"test\",\n  \"123_key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a6\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a7\",\n  \"key\": \"value\"\n}"
        ],
        "execution_time": 0.030055999755859375,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents in Nonexistent Collection",
        "purpose": "验证当集合不存在时是否能安全处理并返回空列表。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {}
        },
        "response": [
          "{\n  \"_id\": \"68616ca7c9e50bdcecfe6e7f\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a3\",\n  \"key\": \"value\"\n}"
        ],
        "execution_time": 0.023128271102905273,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents in Nonexistent Database",
        "purpose": "验证当数据库不存在时是否能安全处理并返回空列表。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": [
          "{\n  \"_id\": \"6856e74d5abb361633110185\",\n  \"name\": \"David\",\n  \"age\": 40\n}",
          "{\n  \"_id\": \"6857ee5f75df00337e4c0c70\",\n  \"name\": \"Test User\",\n  \"age\": 28\n}",
          "{\n  \"_id\": \"685ff44959b95dec06f7bf45\",\n  \"name\": \"David\",\n  \"age\": 35\n}"
        ],
        "execution_time": 0.03158426284790039,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Missing Required Parameters",
        "purpose": "验证未提供必填参数时是否抛出ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: Database name and collection name must be provided"
        },
        "execution_time": 0.009810686111450195,
        "is_functional_test": false
      },
      {
        "case_name": "Find Documents with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出连接错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": [
          "{\n  \"_id\": \"686280078c2cfd880794eaf6\",\n  \"a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues\": \"updated_value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a5\",\n  \"user@domain.com\": \"test\",\n  \"123_key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a6\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a7\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a9\",\n  \"中文字段\": \"测试值\",\n  \"日本語キー\": \"値\"\n}"
        ],
        "execution_time": 0.027542591094970703,
        "is_functional_test": false
      },
      {
        "case_name": "Find Documents When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出PyMongoError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": [
          "{\n  \"_id\": \"686280078c2cfd880794eaf6\",\n  \"a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues\": \"updated_value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a2\",\n  \"name\": \"Test Document\",\n  \"content\": \"This is a test document.\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a5\",\n  \"user@domain.com\": \"test\",\n  \"123_key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a6\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a7\",\n  \"key\": \"value\"\n}",
          "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a9\",\n  \"中文字段\": \"测试值\",\n  \"日本語キー\": \"値\"\n}"
        ],
        "execution_time": 0.02402806282043457,
        "is_functional_test": false
      },
      {
        "case_name": "Find Documents with Special Characters in Query",
        "purpose": "验证查询包含特殊字符时能否被正确解析和执行。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "user@domain.com": "test"
          }
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.006997346878051758,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Unicode Query",
        "purpose": "验证查询包含Unicode字符时是否能被正确处理。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "中文字段": "测试值"
          }
        },
        "response": {
          "result": "{\n  \"_id\": \"686395fe8bb57d80cdb0c4a9\",\n  \"中文字段\": \"测试值\",\n  \"日本語キー\": \"値\"\n}"
        },
        "execution_time": 0.01307368278503418,
        "is_functional_test": true
      },
      {
        "case_name": "Find Documents with Maximum Limit",
        "purpose": "验证极限值（最大限制）下工具是否仍能正常工作。",
        "args": {
          "database_name": "large_db",
          "collection_name": "large_collection",
          "query": {},
          "limit": 1000000
        },
        "response": {
          "result": "{\n  \"_id\": \"68616ca7c9e50bdcecfe6e7e\",\n  \"content\": \"A very long string that exceeds normal document size limits and may cause performance issues.\",\n  \"metadata\": {\n    \"tags\": [\n      \"large\",\n      \"document\",\n      \"performance\"\n    ],\n    \"size\": \"huge\"\n  },\n  \"data\": [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10\n  ]\n}"
        },
        "execution_time": 0.01781177520751953,
        "is_functional_test": true
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "Update Single Document Successfully",
        "purpose": "验证工具可以成功更新指定集合中的单个文档（基本功能测试）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          },
          "update_data": {
            "$set": {
              "content": "Updated test document content."
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 1,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.020017147064208984,
        "is_functional_test": true
      },
      {
        "case_name": "Update Multiple Documents Successfully",
        "purpose": "验证工具能更新所有匹配查询条件的多个文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "key": "value"
          },
          "update_data": {
            "$set": {
              "key": "updated_value"
            }
          },
          "upsert": false,
          "update_many": true
        },
        "response": {
          "result": "{\n  \"matched_count\": 2,\n  \"modified_count\": 2,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.016522884368896484,
        "is_functional_test": true
      },
      {
        "case_name": "Update with Upsert When No Match Found",
        "purpose": "验证当没有文档匹配查询时，启用upsert参数是否插入新文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "nonexistent_key": "no_match"
          },
          "update_data": {
            "$set": {
              "new_key": "new_value"
            }
          },
          "upsert": true,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 0,\n  \"modified_count\": 0,\n  \"upserted_id\": \"6863966a2f114bff869d582f\"\n}"
        },
        "execution_time": 0.01351618766784668,
        "is_functional_test": true
      },
      {
        "case_name": "Update Without Required Parameters",
        "purpose": "验证未提供必填参数时是否抛出ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "",
          "query": {},
          "update_data": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: Database name and collection name must be provided"
        },
        "execution_time": 0.011021137237548828,
        "is_functional_test": false
      },
      {
        "case_name": "Update in Nonexistent Collection",
        "purpose": "验证当集合不存在时，工具是否能安全处理并返回错误或无操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {
            "key": "value"
          },
          "update_data": {
            "$set": {
              "key": "updated_value"
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 1,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.014532804489135742,
        "is_functional_test": true
      },
      {
        "case_name": "Update with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出连接错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          },
          "update_data": {
            "$set": {
              "content": "Updated test document content."
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 0,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.016036272048950195,
        "is_functional_test": false
      },
      {
        "case_name": "Update with Special Characters in Query",
        "purpose": "验证包含特殊字符的查询能否被正确解析和执行。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "user@domain.com": "test"
          },
          "update_data": {
            "$set": {
              "user@domain.com": "updated_test"
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 0,\n  \"modified_count\": 0,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.014150142669677734,
        "is_functional_test": true
      },
      {
        "case_name": "Update with Unicode Characters",
        "purpose": "验证更新操作中包含Unicode字符时是否能被正确处理。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "中文字段": "测试值"
          },
          "update_data": {
            "$set": {
              "中文字段": "已更新值"
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 1,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.009511232376098633,
        "is_functional_test": true
      },
      {
        "case_name": "Update with Missing Update Operator",
        "purpose": "验证未使用MongoDB更新操作符（如$set）时是否抛出异常。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          },
          "update_data": {
            "content": "Invalid update without operator"
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 1,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.015027284622192383,
        "is_functional_test": false
      },
      {
        "case_name": "Update When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出PyMongoError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          },
          "update_data": {
            "$set": {
              "content": "Updated test document content."
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 1,\n  \"modified_count\": 1,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.011513471603393555,
        "is_functional_test": false
      },
      {
        "case_name": "Update with Maximum Field Name Length",
        "purpose": "验证字段名长度极限情况下工具是否仍能正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues": "original_value"
          },
          "update_data": {
            "$set": {
              "a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues": "updated_value"
            }
          },
          "upsert": false,
          "update_many": false
        },
        "response": {
          "result": "{\n  \"matched_count\": 0,\n  \"modified_count\": 0,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.012511253356933594,
        "is_functional_test": true
      },
      {
        "case_name": "Update Under High Concurrency",
        "purpose": "验证在高并发请求下工具是否仍能稳定工作。",
        "args": {
          "database_name": "large_db",
          "collection_name": "large_collection",
          "query": {
            "counter": {
              "$gte": 0
            }
          },
          "update_data": {
            "$inc": {
              "counter": 1
            }
          },
          "upsert": false,
          "update_many": true
        },
        "response": {
          "result": "{\n  \"matched_count\": 0,\n  \"modified_count\": 0,\n  \"upserted_id\": null\n}"
        },
        "execution_time": 0.02508378028869629,
        "is_functional_test": true
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "Delete Single Document Successfully",
        "purpose": "验证工具可以成功删除指定集合中的单个文档（基本功能测试，使用默认参数）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 1\n}"
        },
        "execution_time": 0.018075227737426758,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Multiple Documents Successfully",
        "purpose": "验证设置 delete_many=True 时能删除所有匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "key": "value"
          },
          "delete_many": true
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.02320575714111328,
        "is_functional_test": true
      },
      {
        "case_name": "Delete from Nonexistent Collection",
        "purpose": "验证当集合不存在时是否安全处理并返回无操作结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "nonexistent_collection",
          "query": {}
        },
        "response": {
          "result": "{\n  \"deleted_count\": 1\n}"
        },
        "execution_time": 0.02581477165222168,
        "is_functional_test": true
      },
      {
        "case_name": "Delete from Nonexistent Database",
        "purpose": "验证当数据库不存在时是否安全处理并返回无操作结果。",
        "args": {
          "database_name": "nonexistent_db",
          "collection_name": "test_collection",
          "query": {}
        },
        "response": {
          "result": "{\n  \"deleted_count\": 1\n}"
        },
        "execution_time": 0.023620128631591797,
        "is_functional_test": true
      },
      {
        "case_name": "Delete with Missing Required Parameters",
        "purpose": "验证未提供必填参数时是否抛出 ValueError。",
        "args": {
          "database_name": "",
          "collection_name": "",
          "query": {}
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: Database name and collection name must be provided"
        },
        "execution_time": 0.020628929138183594,
        "is_functional_test": false
      },
      {
        "case_name": "Delete with Special Characters in Query",
        "purpose": "验证包含特殊字符的查询能否被正确解析和执行。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "user@domain.com": "test"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.026640892028808594,
        "is_functional_test": true
      },
      {
        "case_name": "Delete with Unicode Characters",
        "purpose": "验证删除操作中包含Unicode字符时是否能被正确处理。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "中文字段": "测试值"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.04416084289550781,
        "is_functional_test": true
      },
      {
        "case_name": "Delete When MongoDB Service Down",
        "purpose": "验证当MongoDB服务不可用时，工具是否能优雅地抛出 PyMongoError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.026253223419189453,
        "is_functional_test": false
      },
      {
        "case_name": "Delete with Invalid Connection URI",
        "purpose": "验证当连接字符串无效时工具是否能正确抛出连接错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "name": "Test Document"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.024775981903076172,
        "is_functional_test": false
      },
      {
        "case_name": "Delete with Maximum Field Name Length",
        "purpose": "验证字段名长度极限情况下工具是否仍能正常工作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {
            "a_very_long_field_name_that_exceeds_normal_mongodb_key_length_limit_and_may_cause_issues": "original_value"
          }
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.027904987335205078,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Under High Concurrency",
        "purpose": "验证在高并发请求下工具是否仍能稳定工作。",
        "args": {
          "database_name": "large_db",
          "collection_name": "large_collection",
          "query": {
            "counter": {
              "$gte": 0
            }
          },
          "delete_many": true
        },
        "response": {
          "result": "{\n  \"deleted_count\": 0\n}"
        },
        "execution_time": 0.028774261474609375,
        "is_functional_test": true
      },
      {
        "case_name": "Delete with Empty Query",
        "purpose": "验证空查询条件时是否删除所有文档（需谨慎测试）。",
        "args": {
          "database_name": "test_db",
          "collection_name": "test_collection",
          "query": {},
          "delete_many": true
        },
        "response": {
          "result": "{\n  \"deleted_count\": 6\n}"
        },
        "execution_time": 0.027692794799804688,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 70
}