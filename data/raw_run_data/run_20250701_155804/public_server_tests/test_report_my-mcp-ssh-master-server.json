{
  "server_name": "server",
  "parent_dir": "my-mcp-ssh-master",
  "report_name": "my-mcp-ssh-master-server",
  "server_path": "workspace\\public-mcp-servers\\my-mcp-ssh-master\\server.py",
  "timestamp": "2025-07-01T16:00:59.307967",
  "tools": [
    {
      "name": "connect",
      "description": "Connect to SSH server\n    \n    Args:\n        session_id: Session ID, will be automatically generated if not provided（默认的服务器是10.70.0.133，已经配置了免密登录，特别说明）\n        host: SSH server hostname or IP address, defaults to SSH_HOST environment variable\n        port: SSH server port, defaults to SSH_PORT environment variable or 22\n        username: SSH username, defaults to SSH_USERNAME environment variable\n        password: SSH password, defaults to SSH_PASSWORD environment variable\n        key_path: SSH private key file path, defaults to SSH_KEY_PATH environment variable or ~/.ssh/id_rsa\n        key_passphrase: SSH private key passphrase, defaults to SSH_KEY_PASSPHRASE environment variable\n    \n    Returns:\n        Connection status\n    ",
      "args_schema": {
        "properties": {
          "host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "10.70.0.133",
            "title": "Host"
          },
          "port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": "26002",
            "title": "Port"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "pengbocheng",
            "title": "Username"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "Password"
          },
          "key_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Key Path"
          },
          "key_passphrase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Key Passphrase"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "Disconnect from SSH server\n    \n    Args:\n        session_id: Session ID to disconnect\n    \n    Returns:\n        Disconnection status\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "List all active SSH sessions\n    \n    Returns:\n        List containing information about all sessions\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "Execute command on SSH server\n    \n    Args:\n        session_id: Session ID\n        command: Command to execute\n        stdin: Input string to provide to the command, defaults to None\n        timeout: Command timeout in seconds, defaults to 60 seconds\n    \n    Returns:\n        Command output (stdout and stderr) and exit status\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "default": "",
            "title": "Stdin",
            "type": "string"
          },
          "timeout": {
            "default": 60,
            "title": "Timeout",
            "type": "integer"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "Upload file to SSH server\n    \n    Args:\n        session_id: Session ID\n        local_path: Local file path\n        remote_path: Remote file path\n    \n    Returns:\n        Dictionary containing upload status information\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "Download file from SSH server\n    \n    Args:\n        session_id: Session ID\n        remote_path: Remote file path\n        local_path: Local file path\n    \n    Returns:\n        Dictionary containing download status information\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "Connect With Default Parameters",
        "purpose": "验证使用默认参数是否可以成功连接SSH服务器",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.35199546813964844,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Custom Host And Port",
        "purpose": "验证使用自定义主机和端口是否可以成功连接SSH服务器",
        "args": {
          "host": "192.168.1.100",
          "port": 22,
          "username": "testuser"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。\"\n}"
        },
        "execution_time": 21.24118423461914,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With SSH Key Authentication",
        "purpose": "验证使用SSH密钥认证方式是否可以成功连接",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "key_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.ssh\\id_rsa"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\.ssh\\\\\\\\id_rsa'\"\n}"
        },
        "execution_time": 0.007499217987060547,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Password Authentication",
        "purpose": "验证使用密码认证是否可以成功连接",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "password": "secure_password_123"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.3363194465637207,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Invalid Host",
        "purpose": "验证提供无效的主机地址时是否能正确处理错误",
        "args": {
          "host": "invalid_host_xyz",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 11001] getaddrinfo failed\"\n}"
        },
        "execution_time": 1.25111985206604,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Invalid Port",
        "purpose": "验证提供无效端口号时是否能正确处理连接失败",
        "args": {
          "host": "10.70.0.133",
          "port": 99999,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno None] Unable to connect to port 34463 on 10.70.0.133\"\n}"
        },
        "execution_time": 2.290179491043091,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Wrong Username",
        "purpose": "验证提供错误用户名时是否能正确处理认证失败",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "wrong_user"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: Authentication failed.\"\n}"
        },
        "execution_time": 0.6181793212890625,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Invalid Private Key",
        "purpose": "验证提供无效私钥路径时是否能正确处理错误",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "key_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.ssh\\invalid_key"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\.ssh\\\\\\\\invalid_key'\"\n}"
        },
        "execution_time": 0.005998373031616211,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Special Characters In Username",
        "purpose": "验证用户名中包含特殊字符时是否能正常处理",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "user@special!chars"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: Authentication failed.\"\n}"
        },
        "execution_time": 0.5554184913635254,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Empty Host",
        "purpose": "验证空主机名是否被正确拒绝",
        "args": {
          "host": "",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.34337639808654785,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Maximum Port Value",
        "purpose": "验证最大有效端口（65535）是否支持",
        "args": {
          "host": "10.70.0.133",
          "port": 65535,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno None] Unable to connect to port 65535 on 10.70.0.133\"\n}"
        },
        "execution_time": 2.311030149459839,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Minimum Port Value",
        "purpose": "验证最小有效端口（1）是否支持",
        "args": {
          "host": "10.70.0.133",
          "port": 1,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno None] Unable to connect to port 1 on 10.70.0.133\"\n}"
        },
        "execution_time": 2.2999308109283447,
        "is_functional_test": true
      }
    ],
    "list_sessions": [
      {
        "case_name": "List Sessions Successfully",
        "purpose": "验证在存在活动SSH会话时能否正确列出所有会话信息",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"53.9s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.3s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.3s\"\n}"
        ],
        "execution_time": 0.0070037841796875,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions With No Active Session",
        "purpose": "验证没有活动SSH会话时工具是否能返回空列表而不报错",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.3s\"\n}"
        ],
        "execution_time": 0.012032032012939453,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions After Connecting New Session",
        "purpose": "验证新建立的SSH连接是否会出现在会话列表中",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.3s\"\n}"
        ],
        "execution_time": 0.009144306182861328,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions With Special Characters In Session ID",
        "purpose": "验证包含特殊字符的Session ID是否能被正确处理并显示",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.3s\"\n}"
        ],
        "execution_time": 0.011407852172851562,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions From Unauthorized User",
        "purpose": "验证非管理员用户尝试获取会话列表时是否被拒绝访问",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.3s\"\n}"
        ],
        "execution_time": 0.017018556594848633,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions When Session Data Corrupted",
        "purpose": "验证当会话数据损坏或无法解析时，工具是否能优雅处理错误",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.4s\"\n}"
        ],
        "execution_time": 0.016036033630371094,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions With Maximum Concurrent Sessions",
        "purpose": "验证最大并发SSH连接数下，会话列表是否能完整列出所有连接",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.4s\"\n}"
        ],
        "execution_time": 0.011525392532348633,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions With Empty Parameters",
        "purpose": "验证空参数调用工具时是否能正常处理并返回有效结果",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.0s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.4s\"\n}"
        ],
        "execution_time": 0.010520458221435547,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions From Multiple Threads Simultaneously",
        "purpose": "验证多线程并发调用list_sessions时是否能保持数据一致性",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.1s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.4s\"\n}"
        ],
        "execution_time": 0.019535303115844727,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions After Server Restart",
        "purpose": "验证SSH服务器重启后，list_sessions是否能正确反映当前会话状态",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"jpgunPeJ\",\n  \"idle_time\": \"54.1s\"\n}",
          "{\n  \"session_id\": \"Bi6K6w4y\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"hKIgL8yw\",\n  \"idle_time\": \"27.4s\"\n}"
        ],
        "execution_time": 0.011834383010864258,
        "is_functional_test": true
      }
    ],
    "execute": [
      {
        "case_name": "Execute Command Successfully",
        "purpose": "验证使用有效的session_id和命令是否可以成功执行命令并返回输出",
        "args": {
          "session_id": "jpgunPeJ",
          "command": "echo 'Hello World'"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"Hello World\\n\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.02202320098876953,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command With Stdin Input",
        "purpose": "验证当提供stdin输入时，命令能否正确接收输入并执行",
        "args": {
          "session_id": "Bi6K6w4y",
          "command": "cat",
          "stdin": "This is standard input"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"This is standard input\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04510045051574707,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Long Running Command With Timeout",
        "purpose": "验证长时间运行的命令在指定超时时间内是否能被正确中断",
        "args": {
          "session_id": "hKIgL8yw",
          "command": "sleep 10",
          "timeout": 5
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 10.024149656295776,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Invalid Session ID",
        "purpose": "验证使用无效的session_id时是否能正确处理错误",
        "args": {
          "session_id": "invalid_session_123",
          "command": "ls"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.004502534866333008,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Empty Command",
        "purpose": "验证空命令是否能被正确拒绝",
        "args": {
          "session_id": "jpgunPeJ",
          "command": ""
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.03063225746154785,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command With Special Characters",
        "purpose": "验证包含特殊字符的命令是否能被正确执行",
        "args": {
          "session_id": "Bi6K6w4y",
          "command": "echo \"Special@!#Chars$%^\""
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"Special@!#Chars$%^\\n\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.02576136589050293,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Malicious Command",
        "purpose": "验证执行潜在危险命令（如删除文件）时工具是否进行适当限制或记录",
        "args": {
          "session_id": "hKIgL8yw",
          "command": "rm -rf /tmp/test_dir"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.026601314544677734,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command With Zero Timeout",
        "purpose": "验证设置为0秒的超时值是否能被正确处理",
        "args": {
          "session_id": "Bi6K6w4y",
          "command": "sleep 5",
          "timeout": 0
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 5.048151016235352,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command Without Session ID",
        "purpose": "验证缺少必要session_id参数时是否能正确报错",
        "args": {
          "command": "whoami"
        },
        "response": {
          "error": "ToolException: Error executing tool execute: 1 validation error for executeArguments\nsession_id\n  Field required [type=missing, input_value={'command': 'whoami'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006504535675048828,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command On Disconnected Session",
        "purpose": "验证已断开连接的会话尝试执行命令时是否能正确处理",
        "args": {
          "session_id": "disconnected_sess",
          "command": "pwd"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: disconnected_sess\"\n}"
        },
        "execution_time": 0.0070111751556396484,
        "is_functional_test": false
      }
    ],
    "upload": [
      {
        "case_name": "Upload File With Valid Session And Paths",
        "purpose": "验证使用有效的session_id、本地路径和远程路径是否可以成功上传文件",
        "args": {
          "session_id": "jpgunPeJ",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image.jpg\",\n  \"remote_path\": \"/home/pengbocheng/uploaded_nature_image.jpg\",\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.1314256191253662,
        "is_functional_test": true
      },
      {
        "case_name": "Upload With Invalid Session ID",
        "purpose": "验证使用无效的session_id时上传操作是否失败并返回错误信息",
        "args": {
          "session_id": "invalid_session_123",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.02211308479309082,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Nonexistent Local File",
        "purpose": "验证尝试上传不存在的本地文件时是否能正确处理错误",
        "args": {
          "session_id": "jpgunPeJ",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "remote_path": "/home/pengbocheng/nonexistent_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\nonexistent_file.txt'\"\n}"
        },
        "execution_time": 0.017644882202148438,
        "is_functional_test": false
      },
      {
        "case_name": "Upload To Unwritable Remote Directory",
        "purpose": "验证尝试上传到不可写的远程目录时是否能正确处理错误",
        "args": {
          "session_id": "Bi6K6w4y",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": "/root/protected_dir/uploaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [Errno 13] Permission denied\"\n}"
        },
        "execution_time": 0.09252166748046875,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Empty File",
        "purpose": "验证上传空文件时是否能正常处理而不报错",
        "args": {
          "session_id": "hKIgL8yw",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_empty_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unwritable_file.txt\",\n  \"remote_path\": \"/home/pengbocheng/uploaded_empty_file.txt\",\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.1156778335571289,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Large File",
        "purpose": "验证大文件上传功能是否正常",
        "args": {
          "session_id": "Bi6K6w4y",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\multi_merged_output.zip",
          "remote_path": "/home/pengbocheng/large_file_upload.zip"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\multi_merged_output.zip\",\n  \"remote_path\": \"/home/pengbocheng/large_file_upload.zip\",\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.04444098472595215,
        "is_functional_test": true
      },
      {
        "case_name": "Upload With Special Characters In File Name",
        "purpose": "验证包含特殊字符的文件名能否被正确上传",
        "args": {
          "session_id": "jpgunPeJ",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx",
          "remote_path": "/home/pengbocheng/uploaded_文件#1@2025.docx"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\new_文件#1@2025.docx\",\n  \"remote_path\": \"/home/pengbocheng/uploaded_文件#1@2025.docx\",\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.06599783897399902,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Executable Binary File",
        "purpose": "验证可执行二进制文件上传后是否保持完整性",
        "args": {
          "session_id": "hKIgL8yw",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "remote_path": "/home/pengbocheng/uploaded_app.exe"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\",\n  \"remote_path\": \"/home/pengbocheng/uploaded_app.exe\",\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.06840705871582031,
        "is_functional_test": true
      },
      {
        "case_name": "Upload To Deeply Nested Remote Path",
        "purpose": "验证上传到深层嵌套的远程路径时是否能正确处理",
        "args": {
          "session_id": "Bi6K6w4y",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_file.txt",
          "remote_path": "/home/pengbocheng/projects/data/files/reports/archive/uploaded_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.08675765991210938,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Without Session ID",
        "purpose": "验证缺少必要session_id参数时是否能正确拒绝请求",
        "args": {
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: 1 validation error for uploadArguments\nsession_id\n  Field required [type=missing, input_value={'local_path': 'D:\\\\devWo...oaded_nature_image.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.02060675621032715,
        "is_functional_test": false
      },
      {
        "case_name": "Upload With Empty Remote Path",
        "purpose": "验证空远程路径参数是否能被正确拒绝",
        "args": {
          "session_id": "hKIgL8yw",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": ""
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.04446744918823242,
        "is_functional_test": false
      }
    ],
    "download": [
      {
        "case_name": "Download File With Valid Session And Paths",
        "purpose": "验证使用有效的session_id、远程路径和本地路径是否可以成功下载文件",
        "args": {
          "session_id": "jpgunPeJ",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_nature_image.jpg\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_nature_image.jpg\",\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.10775613784790039,
        "is_functional_test": true
      },
      {
        "case_name": "Download With Invalid Session ID",
        "purpose": "验证使用无效的session_id时下载操作是否失败并返回错误信息",
        "args": {
          "session_id": "invalid_session_123",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.02512812614440918,
        "is_functional_test": false
      },
      {
        "case_name": "Download Nonexistent Remote File",
        "purpose": "验证尝试下载不存在的远程文件时是否能正确处理错误",
        "args": {
          "session_id": "jpgunPeJ",
          "remote_path": "/home/pengbocheng/nonexistent_file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nonexistent_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.04922747611999512,
        "is_functional_test": false
      },
      {
        "case_name": "Download To Unwritable Local Directory",
        "purpose": "验证尝试下载到不可写的本地目录时是否能正确处理错误",
        "args": {
          "session_id": "Bi6K6w4y",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_nature_image.jpg\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unwritable_file.txt\",\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.12696623802185059,
        "is_functional_test": false
      },
      {
        "case_name": "Download Empty File",
        "purpose": "验证下载空文件时是否能正常处理而不报错",
        "args": {
          "session_id": "hKIgL8yw",
          "remote_path": "/home/pengbocheng/uploaded_empty_file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_empty_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_empty_file.txt\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_empty_file.txt\",\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.0617525577545166,
        "is_functional_test": true
      },
      {
        "case_name": "Download Large File",
        "purpose": "验证大文件下载功能是否正常",
        "args": {
          "session_id": "Bi6K6w4y",
          "remote_path": "/home/pengbocheng/large_file_upload.zip",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_large_file.zip"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/large_file_upload.zip\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_large_file.zip\",\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.09083700180053711,
        "is_functional_test": true
      },
      {
        "case_name": "Download With Special Characters In File Name",
        "purpose": "验证包含特殊字符的远程文件名能否被正确下载",
        "args": {
          "session_id": "jpgunPeJ",
          "remote_path": "/home/pengbocheng/uploaded_文件#1@2025.docx",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_文件#1@2025.docx"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_文件#1@2025.docx\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_文件#1@2025.docx\",\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.10520386695861816,
        "is_functional_test": true
      },
      {
        "case_name": "Download Executable Binary File",
        "purpose": "验证可执行二进制文件下载后是否保持完整性",
        "args": {
          "session_id": "hKIgL8yw",
          "remote_path": "/home/pengbocheng/uploaded_app.exe",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_app.exe"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_app.exe\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_app.exe\",\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.0883932113647461,
        "is_functional_test": true
      },
      {
        "case_name": "Download To Deeply Nested Local Path",
        "purpose": "验证下载到深层嵌套的本地路径时是否能正确处理",
        "args": {
          "session_id": "Bi6K6w4y",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_download.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/home/pengbocheng/uploaded_nature_image.jpg\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nested\\\\dir\\\\structure\\\\deeply_nested_download.jpg\",\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.1606006622314453,
        "is_functional_test": true
      },
      {
        "case_name": "Download Without Session ID",
        "purpose": "验证缺少必要session_id参数时是否能正确拒绝请求",
        "args": {
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nature_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 1 validation error for downloadArguments\nsession_id\n  Field required [type=missing, input_value={'remote_path': '/home/pe...oaded_nature_image.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.02693653106689453,
        "is_functional_test": false
      },
      {
        "case_name": "Download With Empty Local Path",
        "purpose": "验证空本地路径参数是否能被正确拒绝",
        "args": {
          "session_id": "hKIgL8yw",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": ""
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file or directory: ''\"\n}"
        },
        "execution_time": 0.026060104370117188,
        "is_functional_test": false
      },
      {
        "case_name": "Download With Special Characters In Session ID",
        "purpose": "验证包含特殊字符的Session ID是否能被正确处理",
        "args": {
          "session_id": "session_with_!@#$%^&*",
          "remote_path": "/home/pengbocheng/uploaded_nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_special_session.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: session_with_!@#$%^&*\"\n}"
        },
        "execution_time": 0.023940563201904297,
        "is_functional_test": false
      }
    ],
    "disconnect": [
      {
        "case_name": "Disconnect With Valid Session ID",
        "purpose": "验证使用有效的session_id是否可以成功断开SSH连接",
        "args": {
          "session_id": "jpgunPeJ"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"jpgunPeJ\"\n}"
        },
        "execution_time": 0.01151275634765625,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect With Invalid Session ID",
        "purpose": "验证使用无效的session_id时是否能正确处理断开失败的情况",
        "args": {
          "session_id": "invalid_session_123"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.007515907287597656,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Without Session ID",
        "purpose": "验证缺少必要session_id参数时是否能正确拒绝请求并返回错误信息",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool disconnect: 1 validation error for disconnectArguments\nsession_id\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.009503602981567383,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Multiple Sessions Sequentially",
        "purpose": "验证连续断开多个有效session_id时是否都能成功执行",
        "args": {
          "session_id": "Bi6K6w4y"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"Bi6K6w4y\"\n}"
        },
        "execution_time": 0.016044139862060547,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect Already Disconnected Session",
        "purpose": "验证尝试断开已经断开的会话时是否能正确处理错误",
        "args": {
          "session_id": "disconnected_sess"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: disconnected_sess\"\n}"
        },
        "execution_time": 0.021799564361572266,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect With Special Characters In Session ID",
        "purpose": "验证包含特殊字符的Session ID是否能被正确拒绝或处理",
        "args": {
          "session_id": "session_with_!@#$%^&*"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: session_with_!@#$%^&*\"\n}"
        },
        "execution_time": 0.024023771286010742,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Long Idle Session",
        "purpose": "验证长时间空闲的会话是否仍可正常断开",
        "args": {
          "session_id": "hKIgL8yw"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"hKIgL8yw\"\n}"
        },
        "execution_time": 0.015039920806884766,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect After Server Restart",
        "purpose": "验证服务器重启后，原有会话是否能被正确识别并断开",
        "args": {
          "session_id": "jpgunPeJ"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: jpgunPeJ\"\n}"
        },
        "execution_time": 0.008615255355834961,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 63
}