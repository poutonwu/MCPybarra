{
  "server_name": "server",
  "parent_dir": "mcp-server-data-exploration-main",
  "report_name": "mcp-server-data-exploration-main-server",
  "server_path": "workspace\\public-mcp-servers\\mcp-server-data-exploration-main\\server.py",
  "timestamp": "2025-07-01T15:58:08.289848",
  "tools": [
    {
      "name": "load_csv",
      "description": "\nLoad CSV File Tool\n\nPurpose:\nLoad a local CSV file into a DataFrame.\n\nUsage Notes:\n\t•\tIf a df_name is not provided, the tool will automatically assign names sequentially as df_1, df_2, and so on.\n",
      "args_schema": {
        "properties": {
          "csv_path": {
            "title": "Csv Path",
            "type": "string"
          },
          "df_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Df Name"
          }
        },
        "required": [
          "csv_path"
        ],
        "title": "LoadCsv",
        "type": "object"
      }
    },
    {
      "name": "run_script",
      "description": "\nPython Script Execution Tool\n\nPurpose:\nExecute Python scripts for specific data analytics tasks.\n\nAllowed Actions\n\t1.\tPrint Results: Output will be displayed as the script's stdout.\n\t2.\t[Optional] Save DataFrames: Store DataFrames in memory for future use by specifying a save_to_memory name.\n\nProhibited Actions\n\t1.\tOverwriting Original DataFrames: Do not modify existing DataFrames to preserve their integrity for future tasks.\n\t2.\tCreating Charts: Chart generation is not permitted.\n",
      "args_schema": {
        "properties": {
          "script": {
            "title": "Script",
            "type": "string"
          },
          "save_to_memory": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Save To Memory"
          }
        },
        "required": [
          "script"
        ],
        "title": "RunScript",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "load_csv": [
      {
        "case_name": "Load CSV with valid path and default df_name",
        "purpose": "验证工具能够使用默认的df_name成功加载一个有效的CSV文件",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv"
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'df_1'"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Load CSV with valid path and custom df_name",
        "purpose": "验证工具可以使用用户提供的自定义df_name加载CSV文件",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
          "df_name": "custom_df"
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'custom_df'"
        },
        "execution_time": 0.0035102367401123047,
        "is_functional_test": true
      },
      {
        "case_name": "Sequential df_name assignment after previous load",
        "purpose": "验证当不提供df_name时，系统能自动分配递增名称（如df_1, df_2等）",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv"
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'df_3'"
        },
        "execution_time": 0.002000570297241211,
        "is_functional_test": true
      },
      {
        "case_name": "Load non-existent CSV file",
        "purpose": "测试工具对不存在的CSV路径的错误处理能力",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.csv"
        },
        "response": {
          "error": "ToolException: Error loading CSV: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.csv'"
        },
        "execution_time": 0.0020470619201660156,
        "is_functional_test": false
      },
      {
        "case_name": "Load CSV with invalid file format",
        "purpose": "验证工具在传入非CSV文件路径时能否正确报错",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "error": "ToolException: Error loading CSV: 'utf-8' codec can't decode byte 0xab in position 11: invalid start byte"
        },
        "execution_time": 0.0019991397857666016,
        "is_functional_test": false
      },
      {
        "case_name": "Load CSV with special characters in df_name",
        "purpose": "测试工具是否支持或正确处理包含特殊字符的df_name",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
          "df_name": "df_@#%&"
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'df_@#%&'"
        },
        "execution_time": 0.003513336181640625,
        "is_functional_test": true
      },
      {
        "case_name": "Load CSV with empty df_name",
        "purpose": "验证工具在df_name为空字符串时的行为是否合理（应使用默认命名）",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
          "df_name": ""
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'df_7'"
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to load a CSV file with restricted permissions",
        "purpose": "测试工具对权限受限的CSV文件的处理能力",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\restricted.csv"
        },
        "response": {
          "error": "ToolException: Error loading CSV: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\restricted.csv'"
        },
        "execution_time": 0.0024542808532714844,
        "is_functional_test": false
      },
      {
        "case_name": "Load very large CSV file",
        "purpose": "验证工具是否能处理大体积CSV文件而不崩溃",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_data.csv"
        },
        "response": {
          "error": "ToolException: Error loading CSV: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_data.csv'"
        },
        "execution_time": 0.0019998550415039062,
        "is_functional_test": true
      },
      {
        "case_name": "Load CSV with null df_name parameter",
        "purpose": "验证工具在显式传递null作为df_name时的行为是否与默认一致",
        "args": {
          "csv_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
          "df_name": null
        },
        "response": {
          "result": "Successfully loaded CSV into dataframe 'df_10'"
        },
        "execution_time": 0.0021643638610839844,
        "is_functional_test": true
      },
      {
        "case_name": "Load CSV from protected system directory",
        "purpose": "测试工具是否允许从受保护的操作系统目录加载CSV文件（安全边界测试）",
        "args": {
          "csv_path": "C:\\Windows\\system32\\drivers\\etc\\hosts"
        },
        "response": {
          "error": "ToolException: Error loading CSV: Error tokenizing data. C error: Expected 1 fields in line 11, saw 2\n"
        },
        "execution_time": 0.0035245418548583984,
        "is_functional_test": false
      }
    ],
    "run_script": [
      {
        "case_name": "Basic Script Execution with Print",
        "purpose": "验证run_script工具能否正确执行一个简单的Python脚本并输出结果",
        "args": {
          "script": "print('Hello, World!')"
        },
        "response": {
          "result": "print out result: Hello, World!\n"
        },
        "execution_time": 0.0035071372985839844,
        "is_functional_test": true
      },
      {
        "case_name": "Script Execution with DataFrame Saving",
        "purpose": "测试工具是否能够成功执行脚本并将DataFrame保存到内存中",
        "args": {
          "script": "import pandas as pd\ndata = {'col1': [1, 2], 'col2': [3, 4]}\ndf = pd.DataFrame(data)\ndf",
          "save_to_memory": [
            "test_df"
          ]
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.003011465072631836,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple DataFrame Saving in One Script",
        "purpose": "验证工具是否支持在同一个脚本中保存多个DataFrame到内存",
        "args": {
          "script": "import pandas as pd\ndf1 = pd.DataFrame({'a': [1, 2]})\ndf2 = pd.DataFrame({'b': [3, 4]})\ndf1, df2",
          "save_to_memory": [
            "df1",
            "df2"
          ]
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": true
      },
      {
        "case_name": "Script Execution without Saving DataFrame",
        "purpose": "验证不指定save_to_memory时脚本能正常执行但不保存DataFrame",
        "args": {
          "script": "import pandas as pd\ndata = {'col1': [1, 2], 'col2': [3, 4]}\ndf = pd.DataFrame(data)\ndf.shape"
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.006603240966796875,
        "is_functional_test": true
      },
      {
        "case_name": "Script with Invalid Syntax",
        "purpose": "测试工具对语法错误的Python脚本的处理能力",
        "args": {
          "script": "print('Missing closing quote"
        },
        "response": {
          "error": "ToolException: Error running script: unterminated string literal (detected at line 1) (<string>, line 1)"
        },
        "execution_time": 0.00554966926574707,
        "is_functional_test": false
      },
      {
        "case_name": "Script Attempting to Modify Original DataFrame",
        "purpose": "验证工具是否能防止脚本修改原始DataFrame（禁止行为）",
        "args": {
          "script": "import pandas as pd\ndata = {'col1': [1, 2], 'col2': [3, 4]}\ndf = pd.DataFrame(data)\ndf['col1'] = [99, 100]\ndf",
          "save_to_memory": [
            "modified_df"
          ]
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.005051136016845703,
        "is_functional_test": true
      },
      {
        "case_name": "Script Generating a Chart",
        "purpose": "测试工具是否能阻止生成图表（禁止行为）",
        "args": {
          "script": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [5, 7, 4])\nplt.show()"
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 3.663067102432251,
        "is_functional_test": false
      },
      {
        "case_name": "Script Using Special Characters in Variable Names",
        "purpose": "验证工具是否支持使用包含特殊字符的变量名",
        "args": {
          "script": "import pandas as pd\n数据框 = pd.DataFrame({'列1': [1, 2]})\n数据框"
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.009080648422241211,
        "is_functional_test": true
      },
      {
        "case_name": "Script with Long Execution Time",
        "purpose": "测试工具对长时间运行脚本的处理能力",
        "args": {
          "script": "import time\ntime.sleep(10)\nprint('Done sleeping')"
        },
        "response": {
          "result": "print out result: Done sleeping\n"
        },
        "execution_time": 10.004406929016113,
        "is_functional_test": true
      },
      {
        "case_name": "Script Accessing Restricted System Resources",
        "purpose": "测试工具是否能限制脚本访问系统资源（安全性测试）",
        "args": {
          "script": "import os\nos.listdir('/')"
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Script with Very Large Output",
        "purpose": "验证工具是否能处理脚本产生大量输出的情况",
        "args": {
          "script": "for i in range(100000):\n    print(f'Line {i}')"
        },
        "response": {
          "result": "print out result: Line 0\nLine 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10\nLine 11\nLine 12\nLine 13\nLine 14\nLine 15\nLine 16\nLine 17\nLine 18\nLine 19\nLine 20\nLine 21\nLine 22\nLine 23\nLine 24\nLine 25\nLine 26\nLine 27\nLine 28\nLine 29\nLine 30\nLine 31\nLine 32\nLine 33\nLine 34\nLine 35\nLine 36\nLine 37\nLine 38\nLine 39\nLine 40\nLine 41\nLine 42\nLine 43\nLine 44\nLine 45\nLine 46\nLine 47\nLine 48\nLine 49\nLine 50\nLine 51\nLine 52\nLine 53\nLine 54\nLine 55\nLine 56\nLine 57\nLine 58\nLine 59\nLine 60\nLine 61\nLine 62\nLine 63\nLine 64\nLine 65\nLine 66\nLine 67\nLine 68\nLine 69\nLine 70\nLine 71\nLine 72\nLine 73\nLine 74\nLine 75\nLine 76\nLine 77\nLine 78\nLine 79\nLine 80\nLine 81\nLine 82\nLine 83\nLine 84\nLine 85\nLine 86\nLine 87\nLine 88\nLine 89\nLine 90\nLine 91\nLine 92\nLine 93\nLine 94\nLine 95\nLine 96\nLine 97\nLine 98\n...[截断]，共计1088908字符，剩余1088108字符"
        },
        "execution_time": 0.11655259132385254,
        "is_functional_test": true
      },
      {
        "case_name": "Script with Null SaveToMemory Parameter",
        "purpose": "验证显式传递null作为save_to_memory参数时的行为是否与默认一致",
        "args": {
          "script": "import pandas as pd\ndf = pd.DataFrame({'col1': [1, 2]})\ndf",
          "save_to_memory": null
        },
        "response": {
          "result": "print out result: No output"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 23
}