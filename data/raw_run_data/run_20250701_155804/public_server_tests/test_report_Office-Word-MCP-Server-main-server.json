{
  "server_name": "server",
  "parent_dir": "Office-Word-MCP-Server-main",
  "report_name": "Office-Word-MCP-Server-main-server",
  "server_path": "workspace\\public-mcp-servers\\Office-Word-MCP-Server-main\\server.py",
  "timestamp": "2025-07-01T16:02:53.548159",
  "tools": [
    {
      "name": "create_document",
      "description": "Create a new Word document with optional metadata.\n    \n    Args:\n        filename: Name of the document to create (with or without .docx extension)\n        title: Optional title for the document metadata\n        author: Optional author for the document metadata\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Title"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Author"
          }
        },
        "required": [
          "filename"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_text",
      "description": "Extract all text from a Word document.\n    \n    Args:\n        filename: Path to the Word document\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          }
        },
        "required": [
          "filename"
        ],
        "title": "get_document_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Add a paragraph to a Word document.\n    \n    Args:\n        filename: Path to the Word document\n        text: Paragraph text\n        style: Optional paragraph style name\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Style"
          }
        },
        "required": [
          "filename",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Add a heading to a Word document.\n    \n    Args:\n        filename: Path to the Word document\n        text: Heading text\n        level: Heading level (1-9, where 1 is the highest level)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "filename",
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "Create a custom style in the document.\n    \n    Args:\n        filename: Path to the Word document\n        style_name: Name for the new style\n        bold: Set text bold (True/False)\n        italic: Set text italic (True/False)\n        font_size: Font size in points\n        font_name: Font name/family\n        color: Text color (e.g., 'red', 'blue')\n        base_style: Optional existing style to base this on\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "bold": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Bold"
          },
          "italic": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Italic"
          },
          "font_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Font Size"
          },
          "font_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Font Name"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Color"
          },
          "base_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Base Style"
          }
        },
        "required": [
          "filename",
          "style_name"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "Format a specific range of text within a paragraph.\n    \n    Args:\n        filename: Path to the Word document\n        paragraph_index: Index of the paragraph (0-based)\n        start_pos: Start position within the paragraph text\n        end_pos: End position within the paragraph text\n        bold: Set text bold (True/False)\n        italic: Set text italic (True/False)\n        underline: Set text underlined (True/False)\n        color: Text color (e.g., 'red', 'blue', etc.)\n        font_size: Font size in points\n        font_name: Font name/family\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          },
          "start_pos": {
            "title": "Start Pos",
            "type": "integer"
          },
          "end_pos": {
            "title": "End Pos",
            "type": "integer"
          },
          "bold": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Bold"
          },
          "italic": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Italic"
          },
          "underline": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Underline"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Color"
          },
          "font_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Font Size"
          },
          "font_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Font Name"
          }
        },
        "required": [
          "filename",
          "paragraph_index",
          "start_pos",
          "end_pos"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "Add password protection to a Word document.\n\n    Args:\n        filename: Path to the Word document\n        password: Password to protect the document with\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "Add a footnote to a specific paragraph in a Word document.\n    \n    Args:\n        filename: Path to the Word document\n        paragraph_index: Index of the paragraph to add footnote to (0-based)\n        footnote_text: Text content of the footnote\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          },
          "footnote_text": {
            "title": "Footnote Text",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "paragraph_index",
          "footnote_text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_paragraph_text_from_document",
      "description": "Get text from a specific paragraph in a Word document.\n    \n    Args:\n        filename: Path to the Word document\n        paragraph_index: Index of the paragraph to retrieve (0-based)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "filename",
          "paragraph_index"
        ],
        "title": "get_paragraph_text_from_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "find_text_in_document",
      "description": "Find occurrences of specific text in a Word document.\n    \n    Args:\n        filename: Path to the Word document\n        text_to_find: Text to search for in the document\n        match_case: Whether to match case (True) or ignore case (False)\n        whole_word: Whether to match whole words only (True) or substrings (False)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text_to_find": {
            "title": "Text To Find",
            "type": "string"
          },
          "match_case": {
            "default": true,
            "title": "Match Case",
            "type": "boolean"
          },
          "whole_word": {
            "default": false,
            "title": "Whole Word",
            "type": "boolean"
          }
        },
        "required": [
          "filename",
          "text_to_find"
        ],
        "title": "find_text_in_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create document with minimal required parameters",
        "purpose": "验证使用最小必要参数创建文档的基本功能",
        "args": {
          "filename": "basic_document.docx"
        },
        "response": {
          "result": "Document basic_document.docx created successfully"
        },
        "execution_time": 0.040068626403808594,
        "is_functional_test": true
      },
      {
        "case_name": "Create document with title metadata",
        "purpose": "验证可以成功创建包含标题元数据的文档",
        "args": {
          "filename": "document_with_title.docx",
          "title": "Test Document Title"
        },
        "response": {
          "result": "Document document_with_title.docx created successfully"
        },
        "execution_time": 0.03605461120605469,
        "is_functional_test": true
      },
      {
        "case_name": "Create document with author metadata",
        "purpose": "验证可以成功创建包含作者元数据的文档",
        "args": {
          "filename": "document_with_author.docx",
          "author": "John Doe"
        },
        "response": {
          "result": "Document document_with_author.docx created successfully"
        },
        "execution_time": 0.04811453819274902,
        "is_functional_test": true
      },
      {
        "case_name": "Create document with both title and author metadata",
        "purpose": "验证可以同时设置标题和作者元数据的功能",
        "args": {
          "filename": "document_with_both_metadata.docx",
          "title": "Important Report",
          "author": "Jane Smith"
        },
        "response": {
          "result": "Document document_with_both_metadata.docx created successfully"
        },
        "execution_time": 0.03563380241394043,
        "is_functional_test": true
      },
      {
        "case_name": "Create document without .docx extension",
        "purpose": "验证工具能自动处理不带扩展名的文件名",
        "args": {
          "filename": "no_extension_document"
        },
        "response": {
          "result": "Document no_extension_document.docx created successfully"
        },
        "execution_time": 0.039581298828125,
        "is_functional_test": true
      },
      {
        "case_name": "Create document in nested directory structure",
        "purpose": "验证可以在嵌套目录中创建文档",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx created successfully"
        },
        "execution_time": 0.030541419982910156,
        "is_functional_test": true
      },
      {
        "case_name": "Create document with Chinese filename",
        "purpose": "验证支持中文文件名的文档创建",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文新文档.docx"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文新文档.docx created successfully"
        },
        "execution_time": 0.03403496742248535,
        "is_functional_test": true
      },
      {
        "case_name": "Create document with special characters",
        "purpose": "验证特殊字符在文件名中的处理能力",
        "args": {
          "filename": "special_#file@name!.docx"
        },
        "response": {
          "result": "Document special_#file@name!.docx created successfully"
        },
        "execution_time": 0.055106163024902344,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to create document in read-only directory",
        "purpose": "验证在只读目录下创建文档时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx created successfully"
        },
        "execution_time": 0.027420759201049805,
        "is_functional_test": false
      },
      {
        "case_name": "Create document with empty filename",
        "purpose": "验证空文件名输入的错误处理",
        "args": {
          "filename": ""
        },
        "response": {
          "result": "Document .docx created successfully"
        },
        "execution_time": 0.031073570251464844,
        "is_functional_test": false
      },
      {
        "case_name": "Create document with null title and author",
        "purpose": "验证显式传递null作为可选参数的行为",
        "args": {
          "filename": "null_metadata_document.docx",
          "title": null,
          "author": null
        },
        "response": {
          "result": "Document null_metadata_document.docx created successfully"
        },
        "execution_time": 0.03345751762390137,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite existing file",
        "purpose": "验证覆盖现有文件的能力或行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx created successfully"
        },
        "execution_time": 0.03713631629943848,
        "is_functional_test": true
      }
    ],
    "get_document_text": [
      {
        "case_name": "Extract text from existing Word document",
        "purpose": "验证从现有Word文档中提取文本的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.019179105758666992,
        "is_functional_test": true
      },
      {
        "case_name": "Extract text from empty Word document",
        "purpose": "验证从空的Word文档中提取文本的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_file.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.05133223533630371,
        "is_functional_test": true
      },
      {
        "case_name": "Extract text from document with Chinese content",
        "purpose": "验证支持中文内容的文档文本提取",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.028083324432373047,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to extract text from non-existent file",
        "purpose": "验证尝试从不存在的文件中提取文本时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx does not exist"
        },
        "execution_time": 0.011133193969726562,
        "is_functional_test": false
      },
      {
        "case_name": "Extract text from read-only document",
        "purpose": "验证从只读文档中提取文本的能力或行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.02959728240966797,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to extract text from invalid file format",
        "purpose": "验证尝试从非Word格式文件中提取文本时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf.docx does not exist"
        },
        "execution_time": 0.011044979095458984,
        "is_functional_test": false
      },
      {
        "case_name": "Extract text from deeply nested directory document",
        "purpose": "验证可以从深层嵌套目录结构中的Word文档提取文本",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.020569324493408203,
        "is_functional_test": true
      },
      {
        "case_name": "Extract text from document with special characters in filename",
        "purpose": "验证特殊字符在文件名中的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0220491886138916,
        "is_functional_test": true
      },
      {
        "case_name": "Extract text from very large document",
        "purpose": "验证工具处理大文件的能力和性能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4.docx does not exist"
        },
        "execution_time": 0.012033939361572266,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to extract text with empty filename",
        "purpose": "验证空文件名输入的错误处理",
        "args": {
          "filename": ""
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.043630123138427734,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add paragraph to new document with minimal parameters",
        "purpose": "验证使用最小必要参数向新文档添加段落的基本功能",
        "args": {
          "filename": "basic_paragraph.docx",
          "text": "This is a basic paragraph."
        },
        "response": {
          "result": "Document basic_paragraph.docx does not exist"
        },
        "execution_time": 0.01216745376586914,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph with style to new document",
        "purpose": "验证可以成功创建带段落样式的文档",
        "args": {
          "filename": "styled_paragraph.docx",
          "text": "This is a styled paragraph.",
          "style": "Heading 1"
        },
        "response": {
          "result": "Document styled_paragraph.docx does not exist"
        },
        "execution_time": 0.012705802917480469,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph to existing document",
        "purpose": "验证可以向现有文档追加段落",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text": "Appending a new paragraph to an existing document."
        },
        "response": {
          "result": "Paragraph added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "execution_time": 0.052839040756225586,
        "is_functional_test": true
      },
      {
        "case_name": "Add multiple paragraphs to document",
        "purpose": "验证连续多次添加段落的功能",
        "args": {
          "filename": "multi_paragraph.docx",
          "text": "First paragraph."
        },
        "response": {
          "result": "Document multi_paragraph.docx does not exist"
        },
        "execution_time": 0.027629613876342773,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph with Chinese text",
        "purpose": "验证支持中文文本的段落添加",
        "args": {
          "filename": "chinese_paragraph.docx",
          "text": "这是一个包含中文的段落。"
        },
        "response": {
          "result": "Document chinese_paragraph.docx does not exist"
        },
        "execution_time": 0.009513139724731445,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph with special characters",
        "purpose": "验证特殊字符在段落文本中的处理能力",
        "args": {
          "filename": "special_char_paragraph.docx",
          "text": "Special characters: #, @, !, $, %, ^, &"
        },
        "response": {
          "result": "Document special_char_paragraph.docx does not exist"
        },
        "execution_time": 0.016568660736083984,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph to read-only document",
        "purpose": "验证尝试向只读文档中添加段落时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "text": "Attempting to add a paragraph to a read-only document."
        },
        "response": {
          "result": "Paragraph added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.038350582122802734,
        "is_functional_test": false
      },
      {
        "case_name": "Add paragraph with empty text",
        "purpose": "验证空文本输入的行为",
        "args": {
          "filename": "empty_text_paragraph.docx",
          "text": ""
        },
        "response": {
          "result": "Document empty_text_paragraph.docx does not exist"
        },
        "execution_time": 0.01351618766784668,
        "is_functional_test": false
      },
      {
        "case_name": "Add paragraph with null style",
        "purpose": "验证显式传递null作为样式参数的行为",
        "args": {
          "filename": "null_style_paragraph.docx",
          "text": "Paragraph with null style",
          "style": null
        },
        "response": {
          "result": "Document null_style_paragraph.docx does not exist"
        },
        "execution_time": 0.015552759170532227,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph to deeply nested directory document",
        "purpose": "验证可以在深层嵌套目录结构中添加段落",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "text": "Adding a paragraph to a deeply nested document."
        },
        "response": {
          "result": "Paragraph added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx"
        },
        "execution_time": 0.03846240043640137,
        "is_functional_test": true
      },
      {
        "case_name": "Add paragraph with invalid filename",
        "purpose": "验证无效文件名输入的错误处理",
        "args": {
          "filename": "<invalid>:file|name?.docx",
          "text": "Trying to add paragraph with invalid filename"
        },
        "response": {
          "result": "Document <invalid>:file|name?.docx does not exist"
        },
        "execution_time": 0.03525137901306152,
        "is_functional_test": false
      }
    ],
    "add_heading": [
      {
        "case_name": "Add heading to existing document with default level",
        "purpose": "验证使用默认级别向现有文档添加标题的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text": "Default Level Heading"
        },
        "response": {
          "result": "Heading 'Default Level Heading' (level 1) added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "execution_time": 0.05425095558166504,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading with specified level to existing document",
        "purpose": "验证可以向现有文档添加指定级别的标题",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "text": "Level 2 Heading",
          "level": 2
        },
        "response": {
          "result": "Heading 'Level 2 Heading' (level 2) added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx"
        },
        "execution_time": 0.0419921875,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading to new document",
        "purpose": "验证可以创建新文档并添加标题",
        "args": {
          "filename": "new_document_with_heading.docx",
          "text": "New Document Main Heading",
          "level": 1
        },
        "response": {
          "result": "Document new_document_with_heading.docx does not exist"
        },
        "execution_time": 0.011122465133666992,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading with minimal required parameters",
        "purpose": "验证仅使用必需参数添加标题的功能",
        "args": {
          "filename": "minimal_heading.docx",
          "text": "Minimal Heading"
        },
        "response": {
          "result": "Document minimal_heading.docx does not exist"
        },
        "execution_time": 0.017039775848388672,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading with special characters in text",
        "purpose": "验证标题文本中特殊字符的处理能力",
        "args": {
          "filename": "special_char_heading.docx",
          "text": "Special #Heading@Text!$%^&*",
          "level": 3
        },
        "response": {
          "result": "Document special_char_heading.docx does not exist"
        },
        "execution_time": 0.013562679290771484,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading with Chinese text",
        "purpose": "验证支持中文标题文本的添加",
        "args": {
          "filename": "chinese_heading.docx",
          "text": "这是一个中文标题",
          "level": 2
        },
        "response": {
          "result": "Document chinese_heading.docx does not exist"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading to read-only document",
        "purpose": "验证尝试向只读文档添加标题时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "text": "Attempting to add heading to read-only file",
          "level": 1
        },
        "response": {
          "result": "Heading 'Attempting to add heading to read-only file' (level 1) added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.0356903076171875,
        "is_functional_test": false
      },
      {
        "case_name": "Add heading with invalid level (0)",
        "purpose": "验证无效标题级别(0)的错误处理",
        "args": {
          "filename": "invalid_level_heading.docx",
          "text": "Invalid Level 0 Heading",
          "level": 0
        },
        "response": {
          "result": "Invalid heading level: 0. Level must be between 1 and 9."
        },
        "execution_time": 0.012029170989990234,
        "is_functional_test": false
      },
      {
        "case_name": "Add heading with invalid level (10)",
        "purpose": "验证无效标题级别(10)的错误处理",
        "args": {
          "filename": "invalid_level_heading.docx",
          "text": "Invalid Level 10 Heading",
          "level": 10
        },
        "response": {
          "result": "Invalid heading level: 10. Level must be between 1 and 9."
        },
        "execution_time": 0.012513160705566406,
        "is_functional_test": false
      },
      {
        "case_name": "Add heading with empty text",
        "purpose": "验证空标题文本输入的行为",
        "args": {
          "filename": "empty_heading.docx",
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Document empty_heading.docx does not exist"
        },
        "execution_time": 0.01404571533203125,
        "is_functional_test": false
      },
      {
        "case_name": "Add heading to deeply nested directory document",
        "purpose": "验证可以在深层嵌套目录结构中添加标题",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "text": "Deeply Nested Directory Heading",
          "level": 2
        },
        "response": {
          "result": "Heading 'Deeply Nested Directory Heading' (level 2) added to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx"
        },
        "execution_time": 0.03457975387573242,
        "is_functional_test": true
      },
      {
        "case_name": "Add heading with very long filename",
        "purpose": "验证长文件名的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\very_long_filename_that_exceeds_normal_length_expectations_for_testing_purposes.docx",
          "text": "Long Filename Test Heading",
          "level": 3
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\very_long_filename_that_exceeds_normal_length_expectations_for_testing_purposes.docx does not exist"
        },
        "execution_time": 0.012045621871948242,
        "is_functional_test": true
      }
    ],
    "create_custom_style": [
      {
        "case_name": "Create custom style with minimal required parameters",
        "purpose": "验证使用最小必要参数创建自定义样式的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "style_name": "CustomStyle1"
        },
        "response": {
          "result": "Style 'CustomStyle1' created successfully."
        },
        "execution_time": 0.04405045509338379,
        "is_functional_test": true
      },
      {
        "case_name": "Create custom style with all formatting options enabled",
        "purpose": "验证可以成功创建包含所有文本格式设置的自定义样式",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "style_name": "FormattedStyle",
          "bold": true,
          "italic": true,
          "font_size": 14,
          "font_name": "Arial",
          "color": "blue"
        },
        "response": {
          "result": "Style 'FormattedStyle' created successfully."
        },
        "execution_time": 0.030229568481445312,
        "is_functional_test": true
      },
      {
        "case_name": "Create custom style based on existing style",
        "purpose": "验证基于现有样式创建新样式的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "style_name": "DerivedStyle",
          "base_style": "Heading 1"
        },
        "response": {
          "result": "Style 'DerivedStyle' created successfully."
        },
        "execution_time": 0.0347292423248291,
        "is_functional_test": true
      },
      {
        "case_name": "Create multiple custom styles in same document",
        "purpose": "验证可以在同一文档中创建多个自定义样式",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "style_name": "MultiStyle1"
        },
        "response": {
          "result": "Style 'MultiStyle1' created successfully."
        },
        "execution_time": 0.04007673263549805,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to create style in non-existent file",
        "purpose": "验证尝试在不存在的文件中创建样式时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "style_name": "TestStyle"
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.008326530456542969,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to create duplicate style name",
        "purpose": "验证重复样式名称的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "style_name": "Normal"
        },
        "response": {
          "result": "Style 'Normal' created successfully."
        },
        "execution_time": 0.038570404052734375,
        "is_functional_test": false
      },
      {
        "case_name": "Create style with invalid font size",
        "purpose": "验证字体大小边界值测试（负数）",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "style_name": "InvalidFontSizeStyle",
          "font_size": -12
        },
        "response": {
          "result": "Style 'InvalidFontSizeStyle' created successfully."
        },
        "execution_time": 0.04481148719787598,
        "is_functional_test": false
      },
      {
        "case_name": "Create style with special characters in style name",
        "purpose": "验证样式名称中特殊字符的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "style_name": "Special#Style@Name!"
        },
        "response": {
          "result": "Style 'Special#Style@Name!' created successfully."
        },
        "execution_time": 0.03873729705810547,
        "is_functional_test": true
      },
      {
        "case_name": "Create style in read-only document",
        "purpose": "验证尝试在只读文档中创建样式时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "style_name": "ReadOnlyStyle"
        },
        "response": {
          "result": "Style 'ReadOnlyStyle' created successfully."
        },
        "execution_time": 0.04387235641479492,
        "is_functional_test": false
      },
      {
        "case_name": "Create style with Chinese style name",
        "purpose": "验证支持中文样式名称的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "style_name": "中文样式"
        },
        "response": {
          "result": "Style '中文样式' created successfully."
        },
        "execution_time": 0.03506326675415039,
        "is_functional_test": true
      },
      {
        "case_name": "Create style with empty style name",
        "purpose": "验证空样式名称输入的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "style_name": ""
        },
        "response": {
          "result": "Style '' created successfully."
        },
        "execution_time": 0.029738426208496094,
        "is_functional_test": false
      },
      {
        "case_name": "Create style with very long style name",
        "purpose": "验证长样式名称的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "style_name": "ThisIsAVeryLongStyleNameThatExceedsTheNormalLengthExpectationsForTestingPurposes"
        },
        "response": {
          "result": "Style 'ThisIsAVeryLongStyleNameThatExceedsTheNormalLengthExpectationsForTestingPurposes' created successfully."
        },
        "execution_time": 0.04632830619812012,
        "is_functional_test": true
      }
    ],
    "format_text": [
      {
        "case_name": "Format text with minimal required parameters",
        "purpose": "验证使用最小必要参数对文本进行格式化的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 0,
          "end_pos": 5
        },
        "response": {
          "result": "Text 'Appen' formatted successfully in paragraph 0."
        },
        "execution_time": 0.02885293960571289,
        "is_functional_test": true
      },
      {
        "case_name": "Format text with bold and italic",
        "purpose": "验证同时设置粗体和斜体格式的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 5,
          "end_pos": 10,
          "bold": true,
          "italic": true
        },
        "response": {
          "result": "Text 'ding ' formatted successfully in paragraph 0."
        },
        "execution_time": 0.04411888122558594,
        "is_functional_test": true
      },
      {
        "case_name": "Format text with underline and color",
        "purpose": "验证下划线和颜色格式设置功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 10,
          "end_pos": 15,
          "underline": true,
          "color": "red"
        },
        "response": {
          "result": "Text 'a new' formatted successfully in paragraph 0."
        },
        "execution_time": 0.03562664985656738,
        "is_functional_test": true
      },
      {
        "case_name": "Format text with font size and name",
        "purpose": "验证字体大小和字体名称设置功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 15,
          "end_pos": 20,
          "font_size": 14,
          "font_name": "Arial"
        },
        "response": {
          "result": "Text ' para' formatted successfully in paragraph 0."
        },
        "execution_time": 0.0409853458404541,
        "is_functional_test": true
      },
      {
        "case_name": "Format text with all formatting options",
        "purpose": "验证所有格式选项同时生效的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 20,
          "end_pos": 25,
          "bold": true,
          "italic": true,
          "underline": true,
          "color": "blue",
          "font_size": 16,
          "font_name": "Times New Roman"
        },
        "response": {
          "result": "Text 'graph' formatted successfully in paragraph 0."
        },
        "execution_time": 0.047316789627075195,
        "is_functional_test": true
      },
      {
        "case_name": "Format text in non-existent document",
        "purpose": "验证尝试在不存在的文档中格式化文本时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "paragraph_index": 0,
          "start_pos": 0,
          "end_pos": 5
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.009592056274414062,
        "is_functional_test": false
      },
      {
        "case_name": "Format text in read-only document",
        "purpose": "验证尝试在只读文档中格式化文本时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "paragraph_index": 0,
          "start_pos": 0,
          "end_pos": 5
        },
        "response": {
          "result": "Text 'Attem' formatted successfully in paragraph 0."
        },
        "execution_time": 0.03309988975524902,
        "is_functional_test": false
      },
      {
        "case_name": "Format text with invalid paragraph index",
        "purpose": "验证段落索引超出范围时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": -1,
          "start_pos": 0,
          "end_pos": 5
        },
        "response": {
          "result": "Invalid paragraph index. Document has 2 paragraphs (0-1)."
        },
        "execution_time": 0.03009486198425293,
        "is_functional_test": false
      },
      {
        "case_name": "Format text with invalid position range",
        "purpose": "验证起始位置大于结束位置时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 10,
          "end_pos": 5
        },
        "response": {
          "result": "Invalid text positions. Paragraph has 50 characters."
        },
        "execution_time": 0.022272109985351562,
        "is_functional_test": false
      },
      {
        "case_name": "Format text with special characters",
        "purpose": "验证特殊字符位置的文本格式化功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx",
          "paragraph_index": 0,
          "start_pos": 3,
          "end_pos": 8
        },
        "response": {
          "result": "Invalid paragraph index. Document has 0 paragraphs (0--1)."
        },
        "execution_time": 0.0186312198638916,
        "is_functional_test": true
      },
      {
        "case_name": "Format text at boundary positions",
        "purpose": "验证边界位置（开始和结束）的文本格式化功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "start_pos": 0,
          "end_pos": 1000
        },
        "response": {
          "result": "Invalid text positions. Paragraph has 50 characters."
        },
        "execution_time": 0.024122238159179688,
        "is_functional_test": true
      },
      {
        "case_name": "Format text with Chinese content",
        "purpose": "验证中文内容的文本格式化功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "paragraph_index": 0,
          "start_pos": 2,
          "end_pos": 7
        },
        "response": {
          "result": "Invalid paragraph index. Document has 0 paragraphs (0--1)."
        },
        "execution_time": 0.049855947494506836,
        "is_functional_test": true
      }
    ],
    "protect_document": [
      {
        "case_name": "Protect document with valid password",
        "purpose": "验证使用有效密码保护文档的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "password": "SecurePass123"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx encrypted successfully with password."
        },
        "execution_time": 0.19512128829956055,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document with empty password",
        "purpose": "验证空密码输入的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "password": ""
        },
        "response": {
          "result": "Failed to encrypt document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx: No key specified. Original file restored."
        },
        "execution_time": 0.01707148551940918,
        "is_functional_test": false
      },
      {
        "case_name": "Protect non-existent document",
        "purpose": "验证尝试保护不存在的文档时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "password": "TestPass"
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.015589475631713867,
        "is_functional_test": false
      },
      {
        "case_name": "Protect read-only document",
        "purpose": "验证尝试保护只读文档时的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "password": "ReadOnlyPass"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx encrypted successfully with password."
        },
        "execution_time": 0.10688185691833496,
        "is_functional_test": false
      },
      {
        "case_name": "Protect document with special characters in filename",
        "purpose": "验证特殊字符在文件名中的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx",
          "password": "SpecialFilePass"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx encrypted successfully with password."
        },
        "execution_time": 0.11287760734558105,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document with Chinese password",
        "purpose": "验证支持中文密码的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "password": "中文密码123"
        },
        "response": {
          "result": "Failed to encrypt document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx: File is already encrypted. Original file restored."
        },
        "execution_time": 0.11124348640441895,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document with very long password",
        "purpose": "验证长密码的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "password": "ThisIsAVeryLongPasswordThatExceedsTheNormalLengthExpectationsForTestingPurposes1234567890"
        },
        "response": {
          "result": "Failed to encrypt document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx: File is already encrypted. Original file restored."
        },
        "execution_time": 0.11783552169799805,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document with minimal required parameters",
        "purpose": "验证使用最小必要参数保护文档的基本功能",
        "args": {
          "filename": "basic_document.docx",
          "password": "MinPass123"
        },
        "response": {
          "result": "Document basic_document.docx encrypted successfully with password."
        },
        "execution_time": 0.1094045639038086,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document in nested directory",
        "purpose": "验证可以在深层嵌套目录中保护文档",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "password": "NestedPass123"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx encrypted successfully with password."
        },
        "execution_time": 0.10346555709838867,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document without .docx extension",
        "purpose": "验证工具能自动处理不带扩展名的文件名",
        "args": {
          "filename": "no_extension_document",
          "password": "NoExtPass123"
        },
        "response": {
          "result": "Document no_extension_document.docx encrypted successfully with password."
        },
        "execution_time": 0.11462974548339844,
        "is_functional_test": true
      },
      {
        "case_name": "Protect document with invalid filename characters",
        "purpose": "验证无效文件名字符的处理",
        "args": {
          "filename": "<invalid>:file|name?.docx",
          "password": "InvalidFilePass"
        },
        "response": {
          "result": "Document <invalid>:file|name?.docx does not exist"
        },
        "execution_time": 0.015338659286499023,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to protect document with null password",
        "purpose": "验证显式传递null作为密码参数的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "password": null
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\npassword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.012033700942993164,
        "is_functional_test": false
      }
    ],
    "add_footnote_to_document": [
      {
        "case_name": "Add footnote to existing document with minimal parameters",
        "purpose": "验证使用最小必要参数向现有文档添加脚注的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "footnote_text": "This is a basic footnote."
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx'"
        },
        "execution_time": 0.12360668182373047,
        "is_functional_test": true
      },
      {
        "case_name": "Add footnote to deeply nested directory document",
        "purpose": "验证可以在深层嵌套目录结构中添加脚注",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "paragraph_index": 1,
          "footnote_text": "Footnote in nested directory document"
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx'"
        },
        "execution_time": 0.05398726463317871,
        "is_functional_test": true
      },
      {
        "case_name": "Add footnote to paragraph with Chinese text",
        "purpose": "验证在包含中文的段落中添加脚注的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "paragraph_index": 2,
          "footnote_text": "这是一个中文段落的脚注"
        },
        "response": {
          "result": "Invalid paragraph index. Document has 0 paragraphs (0--1)."
        },
        "execution_time": 0.06065559387207031,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to add footnote to non-existent file",
        "purpose": "验证尝试向不存在的文档添加脚注时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "paragraph_index": 0,
          "footnote_text": "Trying to add footnote to non-existent file"
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.10443830490112305,
        "is_functional_test": false
      },
      {
        "case_name": "Add footnote to read-only document",
        "purpose": "验证尝试向只读文档中添加脚注时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "paragraph_index": 0,
          "footnote_text": "Attempting to add a footnote to a read-only document"
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx'"
        },
        "execution_time": 0.0566098690032959,
        "is_functional_test": false
      },
      {
        "case_name": "Add footnote with special characters in text",
        "purpose": "验证脚注文本中特殊字符的处理能力",
        "args": {
          "filename": "special_char_footnote.docx",
          "paragraph_index": 0,
          "footnote_text": "Special characters: #, @, !, $, %, ^, &"
        },
        "response": {
          "result": "Document special_char_footnote.docx does not exist"
        },
        "execution_time": 0.11189079284667969,
        "is_functional_test": true
      },
      {
        "case_name": "Add footnote to invalid paragraph index (-1)",
        "purpose": "验证负数段落索引的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": -1,
          "footnote_text": "Footnote for negative paragraph index"
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx'"
        },
        "execution_time": 0.12263321876525879,
        "is_functional_test": false
      },
      {
        "case_name": "Add footnote to out-of-range paragraph index",
        "purpose": "验证超出范围的段落索引的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 100,
          "footnote_text": "Footnote for out-of-range paragraph index"
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx'"
        },
        "execution_time": 0.0664668083190918,
        "is_functional_test": false
      },
      {
        "case_name": "Add footnote with empty footnote text",
        "purpose": "验证空脚注文本输入的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0,
          "footnote_text": ""
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx'"
        },
        "execution_time": 0.06872344017028809,
        "is_functional_test": false
      },
      {
        "case_name": "Add footnote with special characters in filename",
        "purpose": "验证特殊字符在文件名中的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx",
          "paragraph_index": 1,
          "footnote_text": "Footnote in special character filename"
        },
        "response": {
          "result": "Failed to add footnote: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx'"
        },
        "execution_time": 0.09120798110961914,
        "is_functional_test": true
      },
      {
        "case_name": "Add footnote to very long filename document",
        "purpose": "验证长文件名的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\very_long_filename_that_exceeds_normal_length_expectations_for_testing_purposes.docx",
          "paragraph_index": 0,
          "footnote_text": "Footnote in long filename document"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\very_long_filename_that_exceeds_normal_length_expectations_for_testing_purposes.docx does not exist"
        },
        "execution_time": 0.07266688346862793,
        "is_functional_test": true
      },
      {
        "case_name": "Add footnote with null parameters",
        "purpose": "验证显式传递null作为参数的行为",
        "args": {
          "filename": null,
          "paragraph_index": null,
          "footnote_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 3 validation errors for add_footnote_to_documentArguments\nfilename\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nparagraph_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type\nfootnote_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.07567071914672852,
        "is_functional_test": false
      }
    ],
    "get_paragraph_text_from_document": [
      {
        "case_name": "Get text from first paragraph of existing document",
        "purpose": "验证从现有Word文档中获取特定段落文本的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to get paragraph text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.00651240348815918,
        "is_functional_test": true
      },
      {
        "case_name": "Get text from last paragraph of existing document",
        "purpose": "验证从现有Word文档最后一个段落获取文本的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 1
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to get paragraph text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.009504556655883789,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to get text from non-existent file",
        "purpose": "验证尝试从不存在的文件中获取段落文本时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.00852203369140625,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to get text with negative paragraph index",
        "purpose": "验证负数段落索引的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid parameter: paragraph_index must be a non-negative integer"
        },
        "execution_time": 0.006514549255371094,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to get text with out-of-range paragraph index",
        "purpose": "验证超出范围的段落索引的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "paragraph_index": 100
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to get paragraph text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.007326364517211914,
        "is_functional_test": false
      },
      {
        "case_name": "Get text from document in nested directory",
        "purpose": "验证可以从深层嵌套目录结构中的Word文档获取段落文本",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx does not exist"
        },
        "execution_time": 0.007534980773925781,
        "is_functional_test": true
      },
      {
        "case_name": "Get text from read-only document",
        "purpose": "验证从只读文档中获取段落文本的能力或行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx does not exist"
        },
        "execution_time": 0.004578828811645508,
        "is_functional_test": true
      },
      {
        "case_name": "Get text from document with special characters in filename",
        "purpose": "验证特殊字符在文件名中的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\new_文件#1@2025.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to get paragraph text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\new_\\u6587\\u4ef6#1@2025.docx'\"\n}"
        },
        "execution_time": 0.0076596736907958984,
        "is_functional_test": true
      },
      {
        "case_name": "Get text from document with Chinese content",
        "purpose": "验证支持中文内容的文档段落提取",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid paragraph index: 0. Document has 0 paragraphs.\"\n}"
        },
        "execution_time": 0.014539957046508789,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to get text with empty filename",
        "purpose": "验证空文件名输入的错误处理",
        "args": {
          "filename": "",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid paragraph index: 0. Document has 0 paragraphs.\"\n}"
        },
        "execution_time": 0.014575004577636719,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to get text from invalid file format",
        "purpose": "验证尝试从非Word格式文件中获取段落文本时的错误处理",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf",
          "paragraph_index": 0
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf.docx does not exist"
        },
        "execution_time": 0.007025480270385742,
        "is_functional_test": false
      },
      {
        "case_name": "Get text from very large document",
        "purpose": "验证工具处理大文件的能力和性能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4",
          "paragraph_index": 0
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4.docx does not exist"
        },
        "execution_time": 0.005518436431884766,
        "is_functional_test": false
      }
    ],
    "find_text_in_document": [
      {
        "case_name": "Basic text search in existing document",
        "purpose": "验证在现有文档中搜索特定文本的基本功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "new"
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.0045070648193359375,
        "is_functional_test": true
      },
      {
        "case_name": "Case-sensitive text search with match_case=True",
        "purpose": "验证区分大小写的文本搜索功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "New",
          "match_case": true
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.01651787757873535,
        "is_functional_test": true
      },
      {
        "case_name": "Whole word match search",
        "purpose": "验证整词匹配搜索功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "new",
          "whole_word": true
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.0060214996337890625,
        "is_functional_test": true
      },
      {
        "case_name": "Search for non-existent text",
        "purpose": "验证搜索不存在的文本时的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "nonexistent_text"
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.007506847381591797,
        "is_functional_test": true
      },
      {
        "case_name": "Search in non-existent file",
        "purpose": "验证尝试在不存在的文件中搜索文本时的错误处理",
        "args": {
          "filename": "nonexistent_document.docx",
          "text_to_find": "test"
        },
        "response": {
          "result": "Document nonexistent_document.docx does not exist"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": false
      },
      {
        "case_name": "Search with empty search text",
        "purpose": "验证空搜索文本输入的行为",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": ""
        },
        "response": {
          "result": "Search text cannot be empty"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      },
      {
        "case_name": "Search in read-only document",
        "purpose": "验证在只读文档中搜索文本的功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "text_to_find": "read"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx does not exist"
        },
        "execution_time": 0.0074138641357421875,
        "is_functional_test": true
      },
      {
        "case_name": "Search with special characters in text",
        "purpose": "验证特殊字符在搜索文本中的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "#@!$%^&*"
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.004507541656494141,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Chinese text",
        "purpose": "验证支持中文文本的搜索功能",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "text_to_find": "中文"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx does not exist"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Search with very long text",
        "purpose": "验证长文本搜索的处理能力",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx",
          "text_to_find": "ThisIsAVeryLongTextThatExceedsTheNormalLengthExpectationsForTestingPurposes"
        },
        "response": {
          "result": "{\n  \"error\": \"Failed to search for text: Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u4e13\\u52291_\\u526f\\u672c.docx'\"\n}"
        },
        "execution_time": 0.004949331283569336,
        "is_functional_test": true
      },
      {
        "case_name": "Search with invalid filename characters",
        "purpose": "验证无效文件名字符的处理",
        "args": {
          "filename": "<invalid>:file|name?.docx",
          "text_to_find": "test"
        },
        "response": {
          "result": "Document <invalid>:file|name?.docx does not exist"
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": false
      },
      {
        "case_name": "Search in deeply nested directory document",
        "purpose": "验证可以在深层嵌套目录结构中搜索文本",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx",
          "text_to_find": "nested"
        },
        "response": {
          "result": "Document D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\new_document.docx does not exist"
        },
        "execution_time": 0.004513740539550781,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 117
}