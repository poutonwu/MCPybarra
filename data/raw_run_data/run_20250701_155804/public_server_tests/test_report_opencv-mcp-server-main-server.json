{
  "server_name": "server",
  "parent_dir": "opencv-mcp-server-main",
  "report_name": "opencv-mcp-server-main-server",
  "server_path": "workspace\\public-mcp-servers\\opencv-mcp-server-main\\server.py",
  "timestamp": "2025-07-01T16:03:12.506614",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    Save an image to a file\n    \n    Args:\n        path_in: Path to input image\n        path_out: Output file path\n        \n    Returns:\n        Dict: Status information\n    ",
      "args_schema": {
        "properties": {
          "path_in": {
            "title": "Path In",
            "type": "string"
          },
          "path_out": {
            "title": "Path Out",
            "type": "string"
          }
        },
        "required": [
          "path_in",
          "path_out"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    Resize an image to specific dimensions\n    \n    Args:\n        image_path: Path to the image file\n        width: Target width in pixels\n        height: Target height in pixels\n        interpolation: Interpolation method\n        \n    Returns:\n        Dict: Resized image information and path\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "interpolation": {
            "default": "INTER_LINEAR",
            "title": "Interpolation",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    Crop a region from an image\n    \n    Args:\n        image_path: Path to the image file\n        x: X-coordinate of top-left corner\n        y: Y-coordinate of top-left corner\n        width: Width of crop region\n        height: Height of crop region\n        \n    Returns:\n        Dict: Cropped image information and path\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    Get statistical information about an image\n    \n    Args:\n        image_path: Path to the image file\n        channels: Whether to calculate stats per channel\n        \n    Returns:\n        Dict: Image statistics and paths\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "channels": {
            "default": true,
            "title": "Channels",
            "type": "boolean"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    Apply various filters to an image\n    \n    Args:\n        image_path: Path to the image file\n        filter_type: Type of filter ('blur', 'gaussian', 'median', 'bilateral')\n        kernel_size: Size of the kernel, should be odd (e.g., 3, 5, 7)\n        sigma: Standard deviation for Gaussian filter\n        sigma_color: Filter sigma in the color space for bilateral filter\n        sigma_space: Filter sigma in the coordinate space for bilateral filter\n        \n    Returns:\n        Dict: Filtered image and filter information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ],
            "title": "Kernel Size"
          },
          "sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma"
          },
          "sigma_color": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma Color"
          },
          "sigma_space": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma Space"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    Detect edges in an image\n    \n    Args:\n        image_path: Path to the image file\n        method: Edge detection method ('canny', 'sobel', 'laplacian', 'scharr')\n        threshold1: First threshold for Canny detector\n        threshold2: Second threshold for Canny detector\n        aperture_size: Aperture size for Canny and Laplacian\n        l2gradient: Flag for L2 gradient in Canny\n        ksize: Kernel size for Sobel and Laplacian\n        scale: Scale factor for Sobel, Laplacian, and Scharr\n        delta: Delta value added to results for Sobel, Laplacian, and Scharr\n        \n    Returns:\n        Dict: Edge-detected image and method information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "default": "canny",
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "default": 100.0,
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "default": 200.0,
            "title": "Threshold2",
            "type": "number"
          },
          "aperture_size": {
            "default": 3,
            "title": "Aperture Size",
            "type": "integer"
          },
          "l2gradient": {
            "default": false,
            "title": "L2Gradient",
            "type": "boolean"
          },
          "ksize": {
            "default": 3,
            "title": "Ksize",
            "type": "integer"
          },
          "scale": {
            "default": 1.0,
            "title": "Scale",
            "type": "number"
          },
          "delta": {
            "default": 0.0,
            "title": "Delta",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    Apply threshold to an image\n    \n    Args:\n        image_path: Path to the image file\n        threshold_type: Type of thresholding ('binary', 'binary_inv', 'trunc', 'tozero', 'tozero_inv', 'adaptive')\n        threshold_value: Threshold value for global thresholding\n        max_value: Maximum value to use with the THRESH_BINARY and THRESH_BINARY_INV types\n        adaptive_method: Adaptive method for adaptive thresholding ('mean', 'gaussian')\n        block_size: Size of a pixel neighborhood for adaptive thresholding\n        c: Constant subtracted from the mean or weighted mean for adaptive thresholding\n        \n    Returns:\n        Dict: Thresholded image and threshold information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_type": {
            "default": "binary",
            "title": "Threshold Type",
            "type": "string"
          },
          "threshold_value": {
            "default": 127.0,
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "default": 255.0,
            "title": "Max Value",
            "type": "number"
          },
          "adaptive_method": {
            "default": "gaussian",
            "title": "Adaptive Method",
            "type": "string"
          },
          "block_size": {
            "default": 11,
            "title": "Block Size",
            "type": "integer"
          },
          "c": {
            "default": 2.0,
            "title": "C",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    Detect and optionally draw contours in an image\n    \n    Args:\n        image_path: Path to the image file\n        mode: Contour retrieval mode ('external', 'list', 'ccomp', 'tree')\n        method: Contour approximation method ('none', 'simple', 'tc89_l1', 'tc89_kcos')\n        draw: Whether to draw the contours on the image\n        thickness: Thickness of contour lines\n        color: Color for drawing contours (BGR format)\n        threshold_value: Threshold for binary conversion before contour detection\n        \n    Returns:\n        Dict: Image with contours and contour information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "default": "external",
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "default": "simple",
            "title": "Method",
            "type": "string"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "thickness": {
            "default": 1,
            "title": "Thickness",
            "type": "integer"
          },
          "color": {
            "default": [
              0,
              255,
              0
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          },
          "threshold_value": {
            "default": 127.0,
            "title": "Threshold Value",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    Find basic shapes in an image\n    \n    Args:\n        image_path: Path to the image file\n        shape_type: Type of shape to find ('circles', 'lines', 'lines_p')\n        param1: First method-specific parameter (depends on shape_type)\n        param2: Second method-specific parameter (depends on shape_type)\n        min_radius: Minimum circle radius (for circles)\n        max_radius: Maximum circle radius (for circles)\n        min_dist: Minimum distance between detected circles\n        threshold: Threshold for Hough transform (for lines)\n        min_line_length: Minimum line length (for probabilistic Hough transform)\n        max_line_gap: Maximum gap between line segments (for probabilistic Hough transform)\n        draw: Whether to draw the detected shapes\n        thickness: Thickness of the drawn shapes\n        color: Color for drawing shapes (BGR format)\n        \n    Returns:\n        Dict: Image with shapes and shape information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          },
          "param1": {
            "default": 100.0,
            "title": "Param1",
            "type": "number"
          },
          "param2": {
            "default": 30.0,
            "title": "Param2",
            "type": "number"
          },
          "min_radius": {
            "default": 0,
            "title": "Min Radius",
            "type": "integer"
          },
          "max_radius": {
            "default": 0,
            "title": "Max Radius",
            "type": "integer"
          },
          "min_dist": {
            "default": 50,
            "title": "Min Dist",
            "type": "integer"
          },
          "threshold": {
            "default": 150.0,
            "title": "Threshold",
            "type": "number"
          },
          "min_line_length": {
            "default": 50.0,
            "title": "Min Line Length",
            "type": "number"
          },
          "max_line_gap": {
            "default": 10.0,
            "title": "Max Line Gap",
            "type": "number"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "thickness": {
            "default": 2,
            "title": "Thickness",
            "type": "integer"
          },
          "color": {
            "default": [
              0,
              0,
              255
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "match_template_tool",
      "description": "\n    Find a template in an image\n    \n    Args:\n        image_path: Path to the source image file\n        template_path: Path to the template image file\n        method: Template matching method\n        threshold: Threshold for good matches\n        draw: Whether to draw rectangle around matches\n        color: Color for drawing rectangles (BGR format)\n        thickness: Thickness of the rectangle\n        \n    Returns:\n        Dict: Image with matches and match information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "template_path": {
            "title": "Template Path",
            "type": "string"
          },
          "method": {
            "default": "ccoeff_normed",
            "title": "Method",
            "type": "string"
          },
          "threshold": {
            "default": 0.8,
            "title": "Threshold",
            "type": "number"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "color": {
            "default": [
              0,
              255,
              0
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          },
          "thickness": {
            "default": 2,
            "title": "Thickness",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "template_path"
        ],
        "title": "match_template_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具可以正常保存图像文件",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_image_save_20250701_160355.jpg\",\n  \"size_bytes\": 166387,\n  \"size_mb\": 0.16,\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_image_save_20250701_160355.jpg\"\n}"
        },
        "execution_time": 0.297135591506958,
        "is_functional_test": true
      },
      {
        "case_name": "Save PNG Image",
        "purpose": "验证工具支持PNG格式图像的保存",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.png"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_image_save_20250701_160355.png\",\n  \"size_bytes\": 218066,\n  \"size_mb\": 0.21,\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_image_save_20250701_160355.png\"\n}"
        },
        "execution_time": 0.15228819847106934,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing File",
        "purpose": "验证工具能够覆盖已存在的输出文件",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg"
        },
        "execution_time": 0.017400026321411133,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Input Path",
        "purpose": "测试输入路径不存在时的错误处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.014101982116699219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path",
        "purpose": "测试无效输出路径时的错误处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": "D:\\invalid\\path\\output_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\invalid\\\\path\\\\output_image_save_20250701_160355.jpg\",\n  \"size_bytes\": 166387,\n  \"size_mb\": 0.16,\n  \"output_path\": \"D:\\\\invalid\\\\path\\\\output_image_save_20250701_160355.jpg\"\n}"
        },
        "execution_time": 0.18428945541381836,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Input Path",
        "purpose": "测试缺少输入路径参数时的错误处理",
        "args": {
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: 1 validation error for save_image_toolArguments\npath_in\n  Field required [type=missing, input_value={'path_out': 'D:\\\\devWork...iles\\\\output_image.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.015033721923828125,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Output Path",
        "purpose": "测试缺少输出路径参数时的错误处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: 1 validation error for save_image_toolArguments\npath_out\n  Field required [type=missing, input_value={'path_in': 'D:\\\\devWorks...iles\\\\nature_image.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.016065359115600586,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "测试空输入路径时的行为",
        "args": {
          "path_in": "",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.03343367576599121,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Output Path",
        "purpose": "测试空输出路径时的行为",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": ""
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:836: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.031656742095947266,
        "is_functional_test": false
      },
      {
        "case_name": "Read-Only Output Directory",
        "purpose": "测试写入只读目录时的行为",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:836: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.033376216888427734,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Paths",
        "purpose": "验证工具能否正确处理包含特殊字符的路径",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_文件@2025.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.026134490966796875,
        "is_functional_test": true
      },
      {
        "case_name": "Deeply Nested Paths",
        "purpose": "测试工具对深层嵌套路径的支持",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_file.txt",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_output.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_file.txt"
        },
        "execution_time": 0.017719745635986328,
        "is_functional_test": true
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Statistics",
        "purpose": "验证工具可以正常获取图像的基本统计信息（默认通道参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"min\": 0.0,\n  \"max\": 255.0,\n  \"mean\": 202.76201329534663,\n  \"stddev\": 62.567381000930084,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 178.46773763273762,\n      \"stddev\": 83.17233451706119\n    },\n    {\n      \"channel\": 1,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 208.031632996633,\n      \"stddev\": 49.655518978358174\n    },\n    {\n      \"channel\": 2,\n      \"min\": 21.0,\n      \"max\": 255.0,\n      \"mean\": 221.78666925666926,\n      \"stddev\": 37.15919059539518\n    }\n  ],\n  \"histogram\": [\n    [\n      9321.0,\n      1209.0,\n      1103.0,\n      1206.0,\n      1094.0,\n      1173.0,\n      1208.0,\n     ...[截断]，共计11311字符，剩余10511字符"
        },
        "execution_time": 0.28810763359069824,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics with Channel Breakdown",
        "purpose": "验证工具在启用通道统计时能正确返回每通道的统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "channels": true
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"min\": 1.0,\n  \"max\": 255.0,\n  \"mean\": 213.13655000939323,\n  \"stddev\": 65.69821359454926,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 22.0,\n      \"max\": 255.0,\n      \"mean\": 214.63475001527817,\n      \"stddev\": 66.68847409619703\n    },\n    {\n      \"channel\": 1,\n      \"min\": 21.0,\n      \"max\": 255.0,\n      \"mean\": 222.23061540446395,\n      \"stddev\": 63.95532241715608\n    },\n    {\n      \"channel\": 2,\n      \"min\": 1.0,\n      \"max\": 255.0,\n      \"mean\": 202.5442846084376,\n      \"stddev\": 64.9152312696472\n    }\n  ],\n  \"histogram\": [\n    [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      ...[截断]，共计10654字符，剩余9854字符"
        },
        "execution_time": 0.41284871101379395,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics without Channel Breakdown",
        "purpose": "验证工具在禁用通道统计时仅返回整体图像统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "channels": false
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"min\": 0.0,\n  \"max\": 255.0,\n  \"mean\": 202.76201329534663,\n  \"stddev\": 62.567381000930084,\n  \"histogram\": [\n    [\n      9321.0,\n      1209.0,\n      1103.0,\n      1206.0,\n      1094.0,\n      1173.0,\n      1208.0,\n      1112.0,\n      1120.0,\n      1106.0,\n      1149.0,\n      1085.0,\n      1185.0,\n      1160.0,\n      1135.0,\n      1138.0,\n      1119.0,\n      1137.0,\n      1145.0,\n      1179.0,\n      1245.0,\n      1274.0,\n      1237.0,\n      1251.0,\n      1338.0,\n      1315.0,\n      1392.0,\n      1377.0,\n      1336.0,\n      1472.0,\n      1459.0,\n      1423.0,\n      1423.0,\n      1533.0,\n      1608.0,\n      1651.0,\n      1609.0,\n      1696.0,\n      17...[截断]，共计10874字符，剩余10074字符"
        },
        "execution_time": 0.6111905574798584,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.01317143440246582,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: "
        },
        "execution_time": 0.010114192962646484,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File Input",
        "purpose": "验证工具对非图像文件输入的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "execution_time": 0.011981725692749023,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.014091014862060547,
        "is_functional_test": true
      },
      {
        "case_name": "Deeply Nested Image Path",
        "purpose": "测试工具对深层嵌套图像路径的支持",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nested\\dir\\structure\\deeply_nested_file.txt"
        },
        "execution_time": 0.009013652801513672,
        "is_functional_test": true
      },
      {
        "case_name": "Missing Required Parameter",
        "purpose": "测试缺少必填参数 image_path 时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: 1 validation error for get_image_stats_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.012079000473022461,
        "is_functional_test": false
      },
      {
        "case_name": "Unsupported File Format",
        "purpose": "验证工具对不支持的图像格式的处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4"
        },
        "execution_time": 0.012080907821655273,
        "is_functional_test": false
      },
      {
        "case_name": "Read-Only Image File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.013593435287475586,
        "is_functional_test": false
      },
      {
        "case_name": "Corrupted Image File",
        "purpose": "验证工具对损坏图像文件的处理能力",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_merge_output.pdf"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_merge_output.pdf"
        },
        "execution_time": 0.013078927993774414,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具可以正常调整图像尺寸（使用默认插值方法）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": 500,
          "height": 300
        },
        "response": {
          "result": "{\n  \"width\": 500,\n  \"height\": 300,\n  \"interpolation\": \"INTER_LINEAR\",\n  \"info\": {\n    \"width\": 500,\n    \"height\": 300,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 450000,\n    \"size_mb\": 0.43\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_500x300_20250701_160507.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_500x300_20250701_160507.jpg\"\n}"
        },
        "execution_time": 0.15934014320373535,
        "is_functional_test": true
      },
      {
        "case_name": "Resize PNG Image",
        "purpose": "验证工具支持PNG格式图像的尺寸调整",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\n  \"width\": 800,\n  \"height\": 600,\n  \"interpolation\": \"INTER_LINEAR\",\n  \"info\": {\n    \"width\": 800,\n    \"height\": 600,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1440000,\n    \"size_mb\": 1.37\n  },\n  \"original_info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_resize_800x600_20250701_160507.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_resize_800x600_20250701_160507.png\"\n}"
        },
        "execution_time": 0.2648191452026367,
        "is_functional_test": true
      },
      {
        "case_name": "Resize with Custom Interpolation",
        "purpose": "验证工具支持指定插值方法进行图像缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": 640,
          "height": 480,
          "interpolation": "INTER_AREA"
        },
        "response": {
          "result": "{\n  \"width\": 640,\n  \"height\": 480,\n  \"interpolation\": \"INTER_AREA\",\n  \"info\": {\n    \"width\": 640,\n    \"height\": 480,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 921600,\n    \"size_mb\": 0.88\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_640x480_20250701_160507.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_640x480_20250701_160507.jpg\"\n}"
        },
        "execution_time": 0.2555551528930664,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.017569780349731445,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.015855073928833008,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters",
        "purpose": "测试缺少必填参数时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: 3 validation errors for resize_image_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nwidth\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nheight\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.018612146377563477,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Width Resize",
        "purpose": "测试宽度为0时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": 0,
          "height": 300
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\resize.cpp:4211: error: (-215:Assertion failed) inv_scale_x > 0 in function 'cv::resize'\n"
        },
        "execution_time": 0.03030538558959961,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Height Resize",
        "purpose": "测试高度为0时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": 500,
          "height": 0
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\resize.cpp:4211: error: (-215:Assertion failed) inv_scale_x > 0 in function 'cv::resize'\n"
        },
        "execution_time": 0.020552396774291992,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Dimensions",
        "purpose": "测试负数尺寸参数时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": -100,
          "height": -200
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\resize.cpp:4211: error: (-215:Assertion failed) inv_scale_x > 0 in function 'cv::resize'\n"
        },
        "execution_time": 0.02356100082397461,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "width": 600,
          "height": 400
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.02858757972717285,
        "is_functional_test": true
      },
      {
        "case_name": "Read-Only Input File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.021013498306274414,
        "is_functional_test": false
      },
      {
        "case_name": "Unsupported File Format",
        "purpose": "验证工具对不支持的图像格式的处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\工业问答.mp4"
        },
        "execution_time": 0.029691696166992188,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop",
        "purpose": "验证工具可以正常裁剪图像的基本功能（使用默认参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\n  \"x\": 100,\n  \"y\": 100,\n  \"width\": 300,\n  \"height\": 200,\n  \"info\": {\n    \"width\": 300,\n    \"height\": 200,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 180000,\n    \"size_mb\": 0.17\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_100_100_300_200_20250701_160604.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_100_100_300_200_20250701_160604.jpg\"\n}"
        },
        "execution_time": 0.12318587303161621,
        "is_functional_test": true
      },
      {
        "case_name": "Crop PNG Image",
        "purpose": "验证工具支持PNG格式图像的裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "x": 50,
          "y": 50,
          "width": 400,
          "height": 300
        },
        "response": {
          "result": "{\n  \"x\": 50,\n  \"y\": 50,\n  \"width\": 400,\n  \"height\": 300,\n  \"info\": {\n    \"width\": 400,\n    \"height\": 300,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 360000,\n    \"size_mb\": 0.34\n  },\n  \"original_info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_50_50_400_300_20250701_160604.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_50_50_400_300_20250701_160604.png\"\n}"
        },
        "execution_time": 0.16165447235107422,
        "is_functional_test": true
      },
      {
        "case_name": "Crop at Origin",
        "purpose": "测试从图像左上角(0,0)开始裁剪的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 0,
          "y": 0,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\n  \"x\": 0,\n  \"y\": 0,\n  \"width\": 500,\n  \"height\": 500,\n  \"info\": {\n    \"width\": 500,\n    \"height\": 500,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 750000,\n    \"size_mb\": 0.72\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_0_0_500_500_20250701_160604.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_0_0_500_500_20250701_160604.jpg\"\n}"
        },
        "execution_time": 0.20084214210510254,
        "is_functional_test": true
      },
      {
        "case_name": "Crop with Zero Coordinates",
        "purpose": "测试坐标为0时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\n  \"x\": 0,\n  \"y\": 0,\n  \"width\": 100,\n  \"height\": 100,\n  \"info\": {\n    \"width\": 100,\n    \"height\": 100,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 30000,\n    \"size_mb\": 0.03\n  },\n  \"original_info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_0_0_100_100_20250701_160604.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_0_0_100_100_20250701_160604.png\"\n}"
        },
        "execution_time": 0.18047094345092773,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.0070514678955078125,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.009531259536743164,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters",
        "purpose": "测试缺少必填参数时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: 5 validation errors for crop_image_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nx\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\ny\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nwidth\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nheight\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.008554458618164062,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Coordinates",
        "purpose": "测试负数坐标参数时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": -50,
          "y": -50,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Crop region (-50, -50, 200, 150) is outside image bounds (1080, 715)"
        },
        "execution_time": 0.021674394607543945,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Width Crop",
        "purpose": "测试宽度为0时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 100,
          "y": 100,
          "width": 0,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:929: error: (-215:Assertion failed) !_img.empty() in function 'cv::imwrite'\n"
        },
        "execution_time": 0.022850751876831055,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Height Crop",
        "purpose": "测试高度为0时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 0
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:929: error: (-215:Assertion failed) !_img.empty() in function 'cv::imwrite'\n"
        },
        "execution_time": 0.023507356643676758,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.0186002254486084,
        "is_functional_test": true
      },
      {
        "case_name": "Read-Only Input File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.014081239700317383,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Apply Blur Filter",
        "purpose": "验证工具可以正常应用模糊滤波器（使用默认参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "result": "{\n  \"filter\": {\n    \"type\": \"blur\",\n    \"kernel_size\": [\n      3,\n      3\n    ]\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_filter_blur_20250701_160642.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_filter_blur_20250701_160642.jpg\"\n}"
        },
        "execution_time": 0.14442157745361328,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Gaussian Filter",
        "purpose": "验证工具可以正常应用高斯滤波器（提供必要参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "gaussian",
          "kernel_size": 5,
          "sigma": 1.5
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.011595010757446289,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Median Filter",
        "purpose": "验证工具可以正常应用中值滤波器（提供必要参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "median",
          "kernel_size": 7
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "execution_time": 0.009516716003417969,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Bilateral Filter",
        "purpose": "验证工具可以正常应用双边滤波器（提供完整参数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "bilateral",
          "kernel_size": 9,
          "sigma_color": 75,
          "sigma_space": 75
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.011025667190551758,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Filter Type",
        "purpose": "测试无效的滤波器类型时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "invalid_filter",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "execution_time": 0.009099483489990234,
        "is_functional_test": false
      },
      {
        "case_name": "Even Kernel Size",
        "purpose": "测试偶数大小的核是否被正确拒绝",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "blur",
          "kernel_size": 4
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.011553287506103516,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters",
        "purpose": "测试缺少必填参数时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: 3 validation errors for apply_filter_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nfilter_type\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nkernel_size\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007514238357543945,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: "
        },
        "execution_time": 0.01612234115600586,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.013872861862182617,
        "is_functional_test": true
      },
      {
        "case_name": "Read-Only Input File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.01801776885986328,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File Input",
        "purpose": "验证工具对非图像文件输入的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "execution_time": 0.011082172393798828,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Kernel Size",
        "purpose": "测试核尺寸为0时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "blur",
          "kernel_size": 0
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "execution_time": 0.014137506484985352,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Canny Edge Detection",
        "purpose": "验证工具可以使用默认Canny方法进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "canny"
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"canny\",\n    \"threshold1\": 100.0,\n    \"threshold2\": 200.0,\n    \"aperture_size\": 3,\n    \"l2gradient\": false\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_160725.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_160725.jpg\"\n}"
        },
        "execution_time": 0.13507819175720215,
        "is_functional_test": true
      },
      {
        "case_name": "Sobel Edge Detection with Custom Parameters",
        "purpose": "验证工具可以使用Sobel方法和自定义参数进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "sobel",
          "ksize": 5,
          "scale": 2.0,
          "delta": 10.0
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"sobel\",\n    \"ksize\": 5,\n    \"scale\": 2.0,\n    \"delta\": 10.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_sobel_20250701_160725.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_sobel_20250701_160725.png\"\n}"
        },
        "execution_time": 0.17078256607055664,
        "is_functional_test": true
      },
      {
        "case_name": "Laplacian Edge Detection",
        "purpose": "验证工具可以使用Laplacian方法进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "laplacian",
          "ksize": 3,
          "scale": 1.5
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"laplacian\",\n    \"ksize\": 3,\n    \"scale\": 1.5,\n    \"delta\": 0.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_laplacian_20250701_160725.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_laplacian_20250701_160725.jpg\"\n}"
        },
        "execution_time": 0.2028791904449463,
        "is_functional_test": true
      },
      {
        "case_name": "Scharr Edge Detection",
        "purpose": "验证工具可以使用Scharr方法进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "scharr",
          "scale": 1.0,
          "delta": 5.0
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"scharr\",\n    \"scale\": 1.0,\n    \"delta\": 5.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_scharr_20250701_160726.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_scharr_20250701_160726.png\"\n}"
        },
        "execution_time": 0.17509794235229492,
        "is_functional_test": true
      },
      {
        "case_name": "Canny Edge Detection with Custom Thresholds",
        "purpose": "验证工具可以使用自定义阈值进行Canny边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "canny",
          "threshold1": 80.0,
          "threshold2": 160.0,
          "aperture_size": 5,
          "l2gradient": true
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"canny\",\n    \"threshold1\": 80.0,\n    \"threshold2\": 160.0,\n    \"aperture_size\": 5,\n    \"l2gradient\": true\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_160726.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_160726.jpg\"\n}"
        },
        "execution_time": 0.27241015434265137,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Non-Image File",
        "purpose": "测试非图像文件输入时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf"
        },
        "execution_time": 0.015547990798950195,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: "
        },
        "execution_time": 0.015580892562866211,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Method Name",
        "purpose": "测试无效边缘检测方法名称时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "invalid_method"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Unsupported edge detection method: invalid_method"
        },
        "execution_time": 0.025526762008666992,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Aperture Size for Canny",
        "purpose": "测试Canny方法中零孔径尺寸的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "canny",
          "aperture_size": 0
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\canny.cpp:847: error: (-206:Bad flag (parameter or structure field)) Aperture size should be odd between 3 and 7 in function 'cv::Canny'\n"
        },
        "execution_time": 0.02770400047302246,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.017584800720214844,
        "is_functional_test": true
      },
      {
        "case_name": "Read-Only Input File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.016056299209594727,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Binary Thresholding",
        "purpose": "验证工具可以使用默认参数进行基本的二值化阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"binary\",\n    \"threshold_value\": 127.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_binary_20250701_160809.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_binary_20250701_160809.jpg\"\n}"
        },
        "execution_time": 0.1345968246459961,
        "is_functional_test": true
      },
      {
        "case_name": "Binary Inverse Thresholding",
        "purpose": "验证工具可以应用二值化反向阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "binary_inv",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"binary_inv\",\n    \"threshold_value\": 100.0,\n    \"max_value\": 200.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_binary_inv_20250701_160809.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_binary_inv_20250701_160809.png\"\n}"
        },
        "execution_time": 0.15909600257873535,
        "is_functional_test": true
      },
      {
        "case_name": "Truncate Thresholding",
        "purpose": "验证工具可以应用截断阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "trunc",
          "threshold_value": 150,
          "max_value": 255
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"trunc\",\n    \"threshold_value\": 150.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_trunc_20250701_160809.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_trunc_20250701_160809.jpg\"\n}"
        },
        "execution_time": 0.18747711181640625,
        "is_functional_test": true
      },
      {
        "case_name": "To Zero Thresholding",
        "purpose": "验证工具可以应用大于阈值置零处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "tozero"
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"tozero\",\n    \"threshold_value\": 127.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_tozero_20250701_160809.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_tozero_20250701_160809.png\"\n}"
        },
        "execution_time": 0.16875934600830078,
        "is_functional_test": true
      },
      {
        "case_name": "Adaptive Mean Thresholding",
        "purpose": "验证工具可以应用自适应均值阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "adaptive",
          "adaptive_method": "mean",
          "block_size": 15,
          "c": 3
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"mean\",\n    \"block_size\": 15,\n    \"c\": 3.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_160810.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_160810.jpg\"\n}"
        },
        "execution_time": 0.23994827270507812,
        "is_functional_test": true
      },
      {
        "case_name": "Adaptive Gaussian Thresholding",
        "purpose": "验证工具可以应用自适应高斯加权阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "adaptive",
          "adaptive_method": "gaussian",
          "block_size": 21,
          "c": 5
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"gaussian\",\n    \"block_size\": 21,\n    \"c\": 5.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_160810.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_160810.png\"\n}"
        },
        "execution_time": 0.44091367721557617,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "threshold_type": "binary"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.022481203079223633,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.02349996566772461,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: "
        },
        "execution_time": 0.018285512924194336,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameter",
        "purpose": "测试缺少必填参数 image_path 时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: 1 validation error for apply_threshold_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.02064037322998047,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Block Size for Adaptive Thresholding",
        "purpose": "测试负数块大小时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "adaptive",
          "block_size": -11
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\thresh.cpp:1680: error: (-215:Assertion failed) blockSize % 2 == 1 && blockSize > 1 in function 'cv::adaptiveThreshold'\n"
        },
        "execution_time": 0.036573171615600586,
        "is_functional_test": false
      },
      {
        "case_name": "Even Block Size for Adaptive Thresholding",
        "purpose": "测试偶数块大小时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "adaptive",
          "block_size": 12
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"gaussian\",\n    \"block_size\": 13,\n    \"c\": 2.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_160810.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_160810.png\"\n}"
        },
        "execution_time": 0.559196949005127,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具使用默认参数进行基本轮廓检测的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"contour_count\": 281,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3....[截断]，共计3066字符，剩余2266字符"
        },
        "execution_time": 0.33863139152526855,
        "is_functional_test": true
      },
      {
        "case_name": "Detect and Draw Contours with External Mode",
        "purpose": "验证使用external模式检测并绘制轮廓的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "mode": "external",
          "draw": true,
          "color": [
            255,
            0,
            0
          ],
          "thickness": 2
        },
        "response": {
          "result": "{\n  \"contour_count\": 4,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 142.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 19,\n      \"bounding_rect\": [\n        0,\n        530,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        544\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 140.0,\n      \"perimeter\": 66.28427028656006,\n      \"point_count\": 18,\n      \"bounding_rect\": [\n        0,\n        304,\n        11,\n        30\n      ],\n      \"center\": [\n        4,\n        318\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 141.0,\n      \"perimeter\": 64.28427016735077,\n      \"point_count\": 17,\n      \"bounding_rect\": [\n        0,\n        87,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        100\n      ]\n    },\n    {\n      \"index\": 3...[截断]，共计1662字符，剩余862字符"
        },
        "execution_time": 0.35576510429382324,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Tree Hierarchy",
        "purpose": "验证使用tree模式进行轮廓检测以获取完整层次结构信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "mode": "tree"
        },
        "response": {
          "result": "{\n  \"contour_count\": 2098,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3...[截断]，共计3055字符，剩余2255字符"
        },
        "execution_time": 0.716092586517334,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Approximation with Simple Method",
        "purpose": "验证使用simple方法进行轮廓近似",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "simple"
        },
        "response": {
          "result": "{\n  \"contour_count\": 4,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 142.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 19,\n      \"bounding_rect\": [\n        0,\n        530,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        544\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 140.0,\n      \"perimeter\": 66.28427028656006,\n      \"point_count\": 18,\n      \"bounding_rect\": [\n        0,\n        304,\n        11,\n        30\n      ],\n      \"center\": [\n        4,\n        318\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 141.0,\n      \"perimeter\": 64.28427016735077,\n      \"point_count\": 17,\n      \"bounding_rect\": [\n        0,\n        87,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        100\n      ]\n    },\n    {\n      \"index\": 3...[截断]，共计1662字符，剩余862字符"
        },
        "execution_time": 0.7267739772796631,
        "is_functional_test": true
      },
      {
        "case_name": "No Contour Drawing",
        "purpose": "验证不绘制轮廓仅返回轮廓信息的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "draw": false
        },
        "response": {
          "result": "{\n  \"contour_count\": 281,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3....[截断]，共计3066字符，剩余2266字符"
        },
        "execution_time": 1.0064048767089844,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Threshold for Contour Detection",
        "purpose": "验证自定义阈值对轮廓检测的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_value": 150.0
        },
        "response": {
          "result": "{\n  \"contour_count\": 4,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 138.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 19,\n      \"bounding_rect\": [\n        0,\n        530,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        544\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 140.0,\n      \"perimeter\": 62.28427028656006,\n      \"point_count\": 16,\n      \"bounding_rect\": [\n        0,\n        305,\n        11,\n        28\n      ],\n      \"center\": [\n        5,\n        318\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 138.0,\n      \"perimeter\": 64.28427016735077,\n      \"point_count\": 17,\n      \"bounding_rect\": [\n        0,\n        87,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        100\n      ]\n    },\n    {\n      \"index\": 3...[截断]，共计1662字符，剩余862字符"
        },
        "execution_time": 2.1283953189849854,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.0206301212310791,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: "
        },
        "execution_time": 0.02262282371520996,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameter",
        "purpose": "测试缺少必填参数 image_path 时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: 1 validation error for detect_contours_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.010530710220336914,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.020616531372070312,
        "is_functional_test": true
      },
      {
        "case_name": "Read-Only Input File",
        "purpose": "测试读取只读图像文件时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.docx"
        },
        "execution_time": 0.018854856491088867,
        "is_functional_test": false
      },
      {
        "case_name": "Extreme Thickness Value",
        "purpose": "测试极大线宽值对轮廓绘制的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "draw": true,
          "thickness": 10
        },
        "response": {
          "result": "{\n  \"contour_count\": 281,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3....[截断]，共计3066字符，剩余2266字符"
        },
        "execution_time": 0.7805330753326416,
        "is_functional_test": true
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Circle Detection",
        "purpose": "验证工具使用默认参数检测圆形的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "circles"
        },
        "response": {
          "result": "{\n  \"shape_count\": 220,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"center\": [\n        476,\n        184\n      ],\n      \"radius\": 512,\n      \"diameter\": 1024,\n      \"area\": 823549.6645826427\n    },\n    {\n      \"index\": 1,\n      \"center\": [\n        528,\n        142\n      ],\n      \"radius\": 556,\n      \"diameter\": 1112,\n      \"area\": 971179.3865601342\n    },\n    {\n      \"index\": 2,\n      \"center\": [\n        512,\n        260\n      ],\n      \"radius\": 447,\n      \"diameter\": 894,\n      \"area\": 627718.486521123\n    },\n    {\n      \"index\": 3,\n      \"center\": [\n        478,\n        124\n      ],\n      \"radius\": 554,\n      \"diameter\": 1108,\n      \"area\": 964205.050869165\n    },\n    {\n      \"index\": 4,\n      \"center\": [\n        576,\n        268\n      ],\n      \"radius\": 440,\n      \"diameter\": 880,\n     ...[截断]，共计35870字符，剩余35070字符"
        },
        "execution_time": 2.1823058128356934,
        "is_functional_test": true
      },
      {
        "case_name": "Circle Detection with Custom Parameters",
        "purpose": "验证工具使用自定义参数检测圆形的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "circles",
          "param1": 50,
          "param2": 30,
          "min_radius": 10,
          "max_radius": 100,
          "min_dist": 20
        },
        "response": {
          "result": "{\n  \"shape_count\": 304,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"center\": [\n        698,\n        332\n      ],\n      \"radius\": 92,\n      \"diameter\": 184,\n      \"area\": 26590.440219984008\n    },\n    {\n      \"index\": 1,\n      \"center\": [\n        768,\n        266\n      ],\n      \"radius\": 93,\n      \"diameter\": 186,\n      \"area\": 27171.634860898117\n    },\n    {\n      \"index\": 2,\n      \"center\": [\n        758,\n        318\n      ],\n      \"radius\": 95,\n      \"diameter\": 190,\n      \"area\": 28352.873698647883\n    },\n    {\n      \"index\": 3,\n      \"center\": [\n        756,\n        196\n      ],\n      \"radius\": 95,\n      \"diameter\": 190,\n      \"area\": 28352.873698647883\n    },\n    {\n      \"index\": 4,\n      \"center\": [\n        620,\n        218\n      ],\n      \"radius\": 91,\n      \"diameter\": 182,\n      \"...[截断]，共计49040字符，剩余48240字符"
        },
        "execution_time": 0.254772424697876,
        "is_functional_test": true
      },
      {
        "case_name": "Line Detection using Hough Transform",
        "purpose": "验证工具检测直线的基本功能（Hough变换）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "lines",
          "threshold": 100
        },
        "response": {
          "result": "{\n  \"shape_count\": 9160,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"rho\": 506.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"rho\": 508.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"rho\": 511.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"rho\": 513.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 4,\n      \"rho\": 515.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 5,\n      \"rho\": 518.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 6,\n      \"rho\": 520.0,\n      \"theta\": 0.7853981852531433...[截断]，共计1118538字符，剩余1117738字符"
        },
        "execution_time": 0.7062451839447021,
        "is_functional_test": true
      },
      {
        "case_name": "Probabilistic Line Detection",
        "purpose": "验证工具使用概率霍夫变换检测线段的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "lines_p",
          "threshold": 80,
          "min_line_length": 30,
          "max_line_gap": 5
        },
        "response": {
          "result": "{\n  \"shape_count\": 1023,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"start_point\": [\n        0,\n        32\n      ],\n      \"end_point\": [\n        641,\n        673\n      ],\n      \"length\": 906.510893481154,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"start_point\": [\n        217,\n        0\n      ],\n      \"end_point\": [\n        873,\n        656\n      ],\n      \"length\": 927.7240969167503,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"start_point\": [\n        0,\n        76\n      ],\n      \"end_point\": [\n        597,\n        673\n      ],\n      \"length\": 844.2854967367377,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"start_point\": [\n        45,\n        673\n      ],\n      \"end_point\": [\n        718,\n        0\n      ],\n      \"length\": 951...[截断]，共计212392字符，剩余211592字符"
        },
        "execution_time": 0.4652140140533447,
        "is_functional_test": true
      },
      {
        "case_name": "Draw Detected Shapes with Custom Color and Thickness",
        "purpose": "验证工具可以以自定义颜色和厚度绘制检测到的形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "circles",
          "draw": true,
          "color": [
            0,
            255,
            0
          ],
          "thickness": 3
        },
        "response": {
          "result": "{\n  \"shape_count\": 220,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"center\": [\n        476,\n        184\n      ],\n      \"radius\": 512,\n      \"diameter\": 1024,\n      \"area\": 823549.6645826427\n    },\n    {\n      \"index\": 1,\n      \"center\": [\n        528,\n        142\n      ],\n      \"radius\": 556,\n      \"diameter\": 1112,\n      \"area\": 971179.3865601342\n    },\n    {\n      \"index\": 2,\n      \"center\": [\n        512,\n        260\n      ],\n      \"radius\": 447,\n      \"diameter\": 894,\n      \"area\": 627718.486521123\n    },\n    {\n      \"index\": 3,\n      \"center\": [\n        478,\n        124\n      ],\n      \"radius\": 554,\n      \"diameter\": 1108,\n      \"area\": 964205.050869165\n    },\n    {\n      \"index\": 4,\n      \"center\": [\n        576,\n        268\n      ],\n      \"radius\": 440,\n      \"diameter\": 880,\n     ...[截断]，共计35870字符，剩余35070字符"
        },
        "execution_time": 2.434013605117798,
        "is_functional_test": true
      },
      {
        "case_name": "No Shape Drawing",
        "purpose": "验证工具在不绘制形状时仅返回形状信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "lines",
          "draw": false
        },
        "response": {
          "result": "{\n  \"shape_count\": 8611,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"rho\": 477.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"rho\": 479.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"rho\": 482.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"rho\": 484.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 4,\n      \"rho\": 486.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 5,\n      \"rho\": 489.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 6,\n      \"rho\": 491.0,\n      \"theta\": 0.7853981852531433...[截断]，共计1053140字符，剩余1052340字符"
        },
        "execution_time": 0.5919265747070312,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.01364898681640625,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: "
        },
        "execution_time": 0.015351295471191406,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameter",
        "purpose": "测试缺少必填参数 image_path 时的错误处理",
        "args": {
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: 1 validation error for find_shapes_toolArguments\nimage_path\n  Field required [type=missing, input_value={'shape_type': 'circles'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.016017913818359375,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.012385845184326172,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Radius Equal to Maximum Radius",
        "purpose": "测试最小半径等于最大半径时的边界行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "circles",
          "min_radius": 50,
          "max_radius": 50
        },
        "response": {
          "result": "{\n  \"shape_count\": 0,\n  \"shapes\": [],\n  \"shape_parameters\": {\n    \"shape_type\": \"circles\",\n    \"min_dist\": 50,\n    \"param1\": 100.0,\n    \"param2\": 30.0,\n    \"min_radius\": 50,\n    \"max_radius\": 50\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_shapes_circles_20250701_161002.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_shapes_circles_20250701_161002.jpg\",\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  }\n}"
        },
        "execution_time": 0.24690747261047363,
        "is_functional_test": true
      },
      {
        "case_name": "Zero Threshold for Line Detection",
        "purpose": "测试零阈值用于线条检测时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "lines",
          "threshold": 0
        },
        "response": {
          "result": "{\n  \"shape_count\": 9121,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"rho\": 477.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"rho\": 479.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"rho\": 482.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"rho\": 484.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 4,\n      \"rho\": 486.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 5,\n      \"rho\": 489.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 6,\n      \"rho\": 491.0,\n      \"theta\": 0.7853981852531433...[截断]，共计1114869字符，剩余1114069字符"
        },
        "execution_time": 0.7945775985717773,
        "is_functional_test": true
      }
    ],
    "match_template_tool": [
      {
        "case_name": "Basic Template Matching",
        "purpose": "验证工具使用默认参数进行基本模板匹配的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161302.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161302.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.31348466873168945,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching with CCOEFF_NORMED Method",
        "purpose": "验证使用CCOEFF_NORMED方法的模板匹配功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "ccoeff_normed"
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161303.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161302.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.366422176361084,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching with Threshold Adjustment",
        "purpose": "验证调整阈值参数对模板匹配结果的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold": 0.7
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.7,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161303.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161303.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.5335023403167725,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching without Drawing Matches",
        "purpose": "验证不绘制匹配结果时仅返回匹配信息的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "draw": false
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161304.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161303.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.760899543762207,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching with Custom Color and Thickness",
        "purpose": "验证使用自定义颜色和厚度绘制匹配结果的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "color": [
            255,
            0,
            0
          ],
          "thickness": 3
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161305.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161304.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 1.0286314487457275,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "测试无效图像路径时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.010536432266235352,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的行为",
        "args": {
          "image_path": "",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: "
        },
        "execution_time": 0.012166500091552734,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters",
        "purpose": "测试缺少必填参数 image_path 和 template_path 时的错误处理",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: 2 validation errors for match_template_toolArguments\nimage_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\ntemplate_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.011646270751953125,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证工具能否正确处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
        },
        "execution_time": 0.019103288650512695,
        "is_functional_test": false
      },
      {
        "case_name": "Extreme Thickness Value",
        "purpose": "测试极大线宽值对匹配结果绘制的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "thickness": 10
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_161306.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_161305.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.8466558456420898,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 117
}