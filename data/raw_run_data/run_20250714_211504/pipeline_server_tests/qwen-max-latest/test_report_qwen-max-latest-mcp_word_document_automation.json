{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-14T21:15:07.101390",
  "tools": [
    {
      "name": "create_document",
      "description": "Create a new Word document.\n\n    Returns:\n        A string indicating the successful creation of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Open an existing Word document.\n\n    Args:\n        file_path: (str) The path to the file to open.\n\n    Returns:\n        A string indicating the successful opening of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Save the current Word document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Save the current Word document with a new name or location.\n\n    Args:\n        file_path: (str) The new file path to save the document.\n\n    Returns:\n        A string indicating the successful saving of the document.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Create a copy of the current Word document.\n\n    Args:\n        file_path: (str) The destination path for the document copy.\n\n    Returns:\n        A string indicating the successful creation of the document copy.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Add a paragraph of text to the document.\n\n    Args:\n        text: (str) The text content of the paragraph.\n\n    Returns:\n        A string indicating the successful addition of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Add a heading to the document.\n\n    Args:\n        text: (str) The text of the heading.\n        level: (int) The level of the heading (e.g., 1 for main heading).\n\n    Returns:\n        A string indicating the successful addition of the heading.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Add a table to the document.\n\n    Args:\n        rows: (int) Number of rows in the table.\n        cols: (int) Number of columns in the table.\n\n    Returns:\n        A string indicating the successful addition of the table.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Add a page break to the document.\n\n    Returns:\n        A string indicating the successful addition of the page break.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieve information about the current document.\n\n    Returns:\n        A dictionary containing various pieces of document information.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Search for specific text within the document.\n\n    Args:\n        search_string: (str) The text to search for.\n\n    Returns:\n        A list of positions where the text is found.\n    ",
      "args_schema": {
        "properties": {
          "search_string": {
            "title": "Search String",
            "type": "string"
          }
        },
        "required": [
          "search_string"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Find and replace specific text within the document.\n\n    Args:\n        find_string: (str) The text to find.\n        replace_string: (str) The text to replace it with.\n\n    Returns:\n        A string indicating the number of replacements made.\n    ",
      "args_schema": {
        "properties": {
          "find_string": {
            "title": "Find String",
            "type": "string"
          },
          "replace_string": {
            "title": "Replace String",
            "type": "string"
          }
        },
        "required": [
          "find_string",
          "replace_string"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Delete a specified paragraph from the document.\n\n    Args:\n        paragraph_index: (int) The index of the paragraph to delete.\n\n    Returns:\n        A string indicating the successful deletion of the paragraph.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Delete all instances of a specified text from the document.\n\n    Args:\n        text: (str) The text to delete.\n\n    Returns:\n        A string indicating the number of deletions made.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Add a row to a specified table in the document.\n\n    Args:\n        table_index: (int) The index of the table to add a row to.\n\n    Returns:\n        A string indicating the successful addition of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Delete a specified row from a table in the document.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row to delete.\n\n    Returns:\n        A string indicating the successful deletion of the row.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edit the content of a specified cell in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        row_index: (int) The index of the row.\n        col_index: (int) The index of the column.\n        new_content: (str) The new content for the cell.\n\n    Returns:\n        A string indicating the successful editing of the cell.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merge specified cells in a table.\n\n    Args:\n        table_index: (int) The index of the table.\n        start_row: (int) The starting row index for the merge.\n        end_row: (int) The ending row index for the merge.\n        start_col: (int) The starting column index for the merge.\n        end_col: (int) The ending column index for the merge.\n\n    Returns:\n        A string indicating the successful merging of cells.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "end_row",
          "start_col",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Split a table into two tables at a specified row.\n\n    Args:\n        table_index: (int) The index of the table to split.\n        row_index: (int) The row index at which to split the table.\n\n    Returns:\n        A string indicating the successful splitting of the table.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Set the margins for the pages in the document.\n\n    Args:\n        top: (float) The top margin size in inches.\n        right: (float) The right margin size in inches.\n        bottom: (float) The bottom margin size in inches.\n        left: (float) The left margin size in inches.\n\n    Returns:\n        A string indicating the successful setting of page margins.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          }
        },
        "required": [
          "top",
          "right",
          "bottom",
          "left"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replace the content of a section based on the heading.\n\n    Args:\n        heading: (str) The heading of the section to replace.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful replacement of the section.\n    ",
      "args_schema": {
        "properties": {
          "heading": {
            "title": "Heading",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "heading",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edit the content of a section based on a keyword.\n\n    Args:\n        keyword: (str) The keyword to locate the section.\n        new_content: (str) The new content for the section.\n\n    Returns:\n        A string indicating the successful editing of the section.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证工具能够成功创建一个新的Word文档，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.013265371322631836,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation With Empty Arguments",
        "purpose": "测试即使传递空参数对象时也能正确创建文档。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.017416715621948242,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document Without Any Input",
        "purpose": "验证在无任何输入参数的情况下创建文档的基本功能。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.012006759643554688,
        "is_functional_test": true
      },
      {
        "case_name": "Test Creation with Special File Name Path",
        "purpose": "测试是否能处理包含特殊字符的文件名路径（边界条件）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.02000117301940918,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized System Access Attempt",
        "purpose": "尝试模拟非法访问系统资源的行为，确保工具不会执行未经授权的操作。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.014998912811279297,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Dependencies",
        "purpose": "测试当某些内部依赖不可用时工具是否能优雅地失败。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.015008926391601562,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test with Maximum Allowed File Name Length",
        "purpose": "测试最大允许长度的文件名是否会引发异常行为。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document created successfully.\"}"
        },
        "execution_time": 0.013997316360473633,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证工具能够成功将一个基本段落添加到文档中。",
        "args": {
          "text": "This is a basic paragraph added to the document."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "测试在提供空字符串作为段落内容时是否能正确处理。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Paragraph With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的段落文本。",
        "args": {
          "text": "This is a test paragraph with special characters: !@#$%^&*()_+=-`~[]\\;',./{}|\":<>?"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph With Null Input",
        "purpose": "测试当输入为 null 时工具是否能优雅地失败或拒绝操作。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Paragraph Insertion Attempt",
        "purpose": "尝试插入可能被视为非法内容的段落，以确保系统具备内容过滤机制。",
        "args": {
          "text": "malicious script code or unauthorized content"
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph After Document Creation",
        "purpose": "验证在创建文档后能否正常添加段落，模拟真实工作流程。",
        "args": {
          "text": "This paragraph is added after document creation."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.004106998443603516,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Paragraph Additions",
        "purpose": "测试连续多次调用 add_paragraph 是否都能成功执行并正确写入文档。",
        "args": {
          "text": "This is the second paragraph in a sequence of multiple additions."
        },
        "response": {
          "result": "{\"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.007802009582519531,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证工具能够成功将一个基本标题添加到文档中，使用默认级别1。",
        "args": {
          "text": "Main Document Heading",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Level 2",
        "purpose": "验证工具能够成功添加一个二级标题，测试基本功能的扩展级别支持。",
        "args": {
          "text": "Sub Heading Level 2",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.01599907875061035,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Empty Text",
        "purpose": "测试在提供空字符串作为标题文本时是否能正确处理。",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.008005142211914062,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的标题文本。",
        "args": {
          "text": "Heading with special chars: !@#$%^&*()_+=-`~[]\\;',./{}|\":<>?",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.006615400314331055,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Heading Insertion Attempt",
        "purpose": "尝试插入可能被视为非法内容的标题，以确保系统具备内容过滤机制。",
        "args": {
          "text": "malicious script code or unauthorized content",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.007611274719238281,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Null Text",
        "purpose": "测试当输入文本为 null 时工具是否能优雅地失败或拒绝操作。",
        "args": {
          "text": null,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Invalid Level",
        "purpose": "测试当输入的标题级别为非法值（如负数）时工具是否能正确处理。",
        "args": {
          "text": "Invalid Level Heading",
          "level": -1
        },
        "response": {
          "result": "{\"error\": \"Heading level must be between 1 and 9.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading With Maximum Level",
        "purpose": "验证工具是否支持最大允许的标题级别（例如6级）。",
        "args": {
          "text": "Heading Level 6",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Basic Table Addition",
        "purpose": "验证工具能够成功在文档中添加一个基本表格，使用默认行列数。",
        "args": {
          "rows": 2,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.009998798370361328,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Table",
        "purpose": "测试添加0行0列的空表格是否能被正确处理。",
        "args": {
          "rows": 0,
          "cols": 0
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": false
      },
      {
        "case_name": "Table With Maximum Rows",
        "purpose": "测试添加最大允许行数的表格是否会引发异常行为。",
        "args": {
          "rows": 1000,
          "cols": 5
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.012997150421142578,
        "is_functional_test": false
      },
      {
        "case_name": "Table With Minimum Valid Rows",
        "purpose": "验证最小有效行数（如1）时表格能否正常添加。",
        "args": {
          "rows": 1,
          "cols": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.008003473281860352,
        "is_functional_test": true
      },
      {
        "case_name": "Table With Negative Rows",
        "purpose": "测试传递负值作为行数时是否能正确抛出错误。",
        "args": {
          "rows": -1,
          "cols": 2
        },
        "response": {
          "result": "{\"error\": \"Rows and columns must be greater than zero.\"}"
        },
        "execution_time": 0.004995107650756836,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Table Insertion Attempt",
        "purpose": "尝试插入可能被视为非法内容的表格结构，以确保系统具备安全校验机制。",
        "args": {
          "rows": 3,
          "cols": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table After Document Creation",
        "purpose": "验证在创建文档后能否正常添加表格，模拟真实工作流程。",
        "args": {
          "rows": 4,
          "cols": 2
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.00900411605834961,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Table Additions",
        "purpose": "测试连续多次调用 add_table 是否都能成功执行并正确写入文档。",
        "args": {
          "rows": 5,
          "cols": 3
        },
        "response": {
          "result": "{\"message\": \"Table added successfully.\"}"
        },
        "execution_time": 0.0039958953857421875,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Basic Page Break Addition",
        "purpose": "验证工具能够成功在文档中添加一个基本的分页符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.0037796497344970703,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Document",
        "purpose": "测试在没有创建文档的情况下尝试添加分页符是否会正确失败或拒绝操作。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005273103713989258,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Page Break Additions",
        "purpose": "测试连续多次调用 add_page_break 是否都能成功执行并在文档中正确插入多个分页符。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005493879318237305,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break After Paragraph",
        "purpose": "验证在添加段落之后能否正常插入分页符，模拟真实工作流程。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.00674128532409668,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Page Break Insertion Attempt",
        "purpose": "尝试非法插入分页符以确保系统具备访问控制机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.003826618194580078,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Document Resource",
        "purpose": "测试当文档资源不可用时工具是否能优雅地失败。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.005043983459472656,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break With Special File Name Path",
        "purpose": "测试工具是否能处理包含特殊字符的文件路径下的分页符插入（边界条件）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.004342555999755859,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test with Maximum Allowed Page Breaks",
        "purpose": "测试在单个文档中插入最大允许数量的分页符是否会引发异常行为。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Page break added successfully.\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Basic Document Save",
        "purpose": "验证工具能够成功保存当前创建的Word文档，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.01600050926208496,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Any Input",
        "purpose": "验证在无任何输入参数的情况下保存文档的基本功能。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.017998933792114258,
        "is_functional_test": true
      },
      {
        "case_name": "Save After Paragraph Addition",
        "purpose": "验证在添加段落之后能否正常保存文档，模拟真实工作流程。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.020001649856567383,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Saves in Sequence",
        "purpose": "测试连续多次调用 save_document 是否都能成功执行并正确保存文档。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.020998716354370117,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Document Save Attempt",
        "purpose": "尝试在未经授权的上下文中执行保存操作，确保系统具备适当的访问控制机制。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.02300405502319336,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document With Missing Dependencies",
        "purpose": "测试当某些内部依赖不可用时工具是否能优雅地失败。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.018994808197021484,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Invalid Document State",
        "purpose": "测试在文档未初始化或处于无效状态时尝试保存是否会返回预期错误。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.018999338150024414,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special File Name Path",
        "purpose": "测试是否能处理包含特殊字符的文件名路径（边界条件）。",
        "args": {},
        "response": {
          "result": "{\"message\": \"Document saved successfully.\"}"
        },
        "execution_time": 0.019999265670776367,
        "is_functional_test": false
      }
    ],
    "save_as_document": [
      {
        "case_name": "Basic Save As Document",
        "purpose": "验证工具能够将当前文档以新的名称或位置保存，使用基本参数。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt.\"}"
        },
        "execution_time": 0.0235292911529541,
        "is_functional_test": true
      },
      {
        "case_name": "Save With Empty File Path",
        "purpose": "测试当文件路径为空字符串时是否能正确处理错误。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.004013538360595703,
        "is_functional_test": false
      },
      {
        "case_name": "Save To Unauthorized Location",
        "purpose": "尝试将文档保存到未经授权的系统路径，确保权限控制有效。",
        "args": {
          "file_path": "C:\\Windows\\system32\\new_document.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\new_document.docx'\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Save With Invalid File Extension",
        "purpose": "测试工具能否处理带有不支持扩展名的文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_output_dir\\converted_image.bmp"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_output_dir\\\\converted_image.bmp.\"}"
        },
        "execution_time": 0.030687808990478516,
        "is_functional_test": false
      },
      {
        "case_name": "Save With Special Characters In File Name",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@folder#1\\converted_image.gif"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@folder#1\\\\converted_image.gif.\"}"
        },
        "execution_time": 0.02300405502319336,
        "is_functional_test": true
      },
      {
        "case_name": "Save To Nonexistent Directory",
        "purpose": "测试目标目录不存在时是否能优雅地失败或自动创建。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_folder\\document.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\nonexistent_folder\\\\\\\\document.docx'\"}"
        },
        "execution_time": 0.007999658584594727,
        "is_functional_test": false
      },
      {
        "case_name": "Save After Document Creation and Paragraph Addition",
        "purpose": "验证在创建文档并添加段落后能否正常保存，模拟真实工作流程。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_append_file.txt"
        },
        "response": {
          "result": "{\"message\": \"Document saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_append_file.txt.\"}"
        },
        "execution_time": 0.02251148223876953,
        "is_functional_test": true
      }
    ],
    "open_document": [
      {
        "case_name": "Basic Document Opening",
        "purpose": "验证工具能够成功打开一个存在的Word文档，使用标准路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc.\"}"
        },
        "execution_time": 0.024662494659423828,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document With Special File Name Path",
        "purpose": "测试是否能处理包含特殊字符的文件名路径进行文档打开（边界条件）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\file_with_@#$_name.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\file_with_@#$_name.txt'\"}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized System Access Attempt",
        "purpose": "尝试模拟非法访问系统资源的行为，确保工具不会执行未经授权的打开操作。",
        "args": {
          "file_path": "C:\\Windows\\system.ini"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'C:\\\\Windows\\\\system.ini'\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Open Nonexistent File",
        "purpose": "测试尝试打开不存在的文件时是否能优雅地失败。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "{\"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.docx\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      },
      {
        "case_name": "Open Invalid File Type",
        "purpose": "测试尝试打开非Word文档类型时是否能正确拒绝。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt'\"}"
        },
        "execution_time": 0.0060024261474609375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test with Maximum Allowed File Name Length",
        "purpose": "测试最大允许长度的文件路径是否会引发异常行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@folder#1\\converted_image.gif"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@folder#1\\\\converted_image.gif.\"}"
        },
        "execution_time": 0.018999338150024414,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document After Creation Workflow",
        "purpose": "验证在创建文档后能否正常重新打开该文档，模拟真实工作流程。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_test_file.txt"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_test_file.txt.\"}"
        },
        "execution_time": 0.03200101852416992,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Document Open Attempts",
        "purpose": "测试连续多次调用 open_document 是否都能成功执行并读取文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "{\"message\": \"Document opened successfully from D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\re2.doc.\"}"
        },
        "execution_time": 0.030998945236206055,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Basic Document Info Retrieval",
        "purpose": "验证工具能够成功获取当前文档的基本信息，使用默认参数。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.005998373031616211,
        "is_functional_test": true
      },
      {
        "case_name": "Retrieve Info After Document Creation",
        "purpose": "验证在创建文档后调用 get_document_info 是否能正确返回文档信息。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Document Info With No Active Document",
        "purpose": "测试在没有活动文档的情况下调用 get_document_info 是否能优雅地处理错误。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.006002664566040039,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Document Info Access",
        "purpose": "模拟非法访问文档信息的行为，确保工具不会返回敏感信息或执行未经授权的操作。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.00799870491027832,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Document Dependencies",
        "purpose": "测试当某些文档依赖不可用时，get_document_info 是否能优雅地失败。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.01199960708618164,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test with Long Document Name",
        "purpose": "测试当文档名称达到最大允许长度时，get_document_info 是否能正确处理。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.009999990463256836,
        "is_functional_test": false
      },
      {
        "case_name": "Document Info With Special Characters in Name",
        "purpose": "验证 get_document_info 是否能正确处理文档名称中包含特殊字符的情况。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.006994724273681641,
        "is_functional_test": true
      },
      {
        "case_name": "Retrieve Info After Adding Content",
        "purpose": "验证在文档中添加段落后调用 get_document_info 是否能正确反映文档状态。",
        "args": {},
        "response": {
          "result": "{\"author\": \"python-docx\", \"category\": \"\", \"comments\": \"generated by python-docx\", \"content_status\": \"\", \"created\": \"2013-12-23T23:15:00+00:00\", \"identifier\": \"\", \"keywords\": \"\", \"language\": \"\", \"last_modified_by\": \"\", \"last_printed\": null, \"modified\": \"2013-12-23T23:15:00+00:00\", \"revision\": 1, \"subject\": \"\", \"title\": \"\", \"version\": \"\"}"
        },
        "execution_time": 0.007999658584594727,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Basic Text Search",
        "purpose": "验证工具能够正确搜索文档中包含的基本文本内容。",
        "args": {
          "search_string": "basic paragraph"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": true
      },
      {
        "case_name": "Search For Nonexistent Text",
        "purpose": "测试当搜索的文本在文档中不存在时，工具是否能正确返回空列表。",
        "args": {
          "search_string": "nonexistent text"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.007674217224121094,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的搜索字符串。",
        "args": {
          "search_string": "!@#$%^&*()_+=-`~[]\\;',./{}|\":<>?"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.007508039474487305,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search String",
        "purpose": "测试传递空字符串作为搜索内容时，工具是否能正确处理。",
        "args": {
          "search_string": ""
        },
        "response": {
          "result": "{\"positions\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]}"
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": true
      },
      {
        "case_name": "Search In Unauthorized Content Context",
        "purpose": "尝试搜索可能被视为非法或敏感的内容，确保系统不会暴露不应访问的数据。",
        "args": {
          "search_string": "malicious script code or unauthorized content"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.010517120361328125,
        "is_functional_test": false
      },
      {
        "case_name": "Null Search Input",
        "purpose": "测试当搜索字符串为 null 时，工具是否能正确拒绝操作并返回错误。",
        "args": {
          "search_string": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nsearch_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.009007692337036133,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Search Instances",
        "purpose": "验证文档中多个相同文本位置是否都能被正确识别并返回。",
        "args": {
          "search_string": "test"
        },
        "response": {
          "result": "{\"positions\": []}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace",
        "purpose": "验证工具能够成功执行基本的查找和替换操作。",
        "args": {
          "find_string": "hello",
          "replace_string": "hi"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Nonexistent String",
        "purpose": "测试当查找字符串不存在时工具是否能正确返回0次替换。",
        "args": {
          "find_string": "nonexistent_text",
          "replace_string": "replacement"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Replace String",
        "purpose": "验证使用空字符串作为替换内容时工具的行为是否符合预期。",
        "args": {
          "find_string": "remove_this",
          "replace_string": ""
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters Replacement",
        "purpose": "测试包含特殊字符的查找与替换是否正常处理。",
        "args": {
          "find_string": "!@#$%^&*()",
          "replace_string": "[special_chars]"
        },
        "response": {
          "result": "{\"replacements\": 1}"
        },
        "execution_time": 0.009000778198242188,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Code Injection",
        "purpose": "尝试注入脚本代码，确保系统不会执行或保留恶意内容。",
        "args": {
          "find_string": "<script>alert('xss')</script>",
          "replace_string": "[filtered_content]"
        },
        "response": {
          "result": "{\"replacements\": 0}"
        },
        "execution_time": 0.0059986114501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Input for Find",
        "purpose": "测试当 find_string 为 null 时工具的错误处理能力。",
        "args": {
          "find_string": null,
          "replace_string": "replacement"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_string\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.009003877639770508,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证工具在缺少必要参数时能否正确报错。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 2 validation errors for find_and_replaceArguments\nfind_string\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nreplace_string\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007989883422851562,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Basic Paragraph Deletion",
        "purpose": "验证工具能够成功删除文档中指定索引的段落。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Nonexistent Paragraph Index",
        "purpose": "测试尝试删除不存在的段落索引时工具是否能优雅地处理错误。",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.005005836486816406,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph With Negative Index",
        "purpose": "测试使用负数索引作为段落索引是否会引发异常行为。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid paragraph index.\"}"
        },
        "execution_time": 0.006005525588989258,
        "is_functional_test": false
      },
      {
        "case_name": "Delete First Paragraph in Document",
        "purpose": "验证删除文档中第一个段落的功能是否正常。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0039958953857421875,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph in Document",
        "purpose": "验证删除文档中最后一个段落的功能是否正常。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Paragraph Deletion Attempt",
        "purpose": "模拟非法删除操作，确保系统具备权限控制机制。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.0059967041015625,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph With Invalid Type Index",
        "purpose": "测试传递非整型参数作为段落索引是否会触发参数验证错误。",
        "args": {
          "paragraph_index": "one"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0037233829498291016,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph From Empty Document",
        "purpose": "验证在文档没有段落的情况下尝试删除是否会正确处理。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"message\": \"Paragraph deleted successfully.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      }
    ],
    "delete_text": [
      {
        "case_name": "Basic Text Deletion",
        "purpose": "验证工具能够成功删除文档中指定的文本内容。",
        "args": {
          "text": "This is a basic paragraph added to the document."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Nonexistent Text",
        "purpose": "测试当指定的文本在文档中不存在时，工具是否能正确返回0次删除结果而不报错。",
        "args": {
          "text": "This text does not exist in the document"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.007997751235961914,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty String",
        "purpose": "测试尝试删除空字符串是否会引发异常或错误行为。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "{\"deletions\": 9}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text With Special Characters",
        "purpose": "验证工具能否正确处理并删除包含特殊字符的文本内容。",
        "args": {
          "text": "This is a test paragraph with special characters: !@#$%^&*()_+=-`~[]\\;',./{}|\":<>?"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.0070056915283203125,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Multiple Occurrences",
        "purpose": "验证工具可以正确删除文档中多次出现的相同文本内容。",
        "args": {
          "text": "Repeated paragraph content for deletion test."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.003995418548583984,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Text Deletion Attempt",
        "purpose": "尝试删除可能被视为非法内容的文本（如脚本代码），以确保系统具备内容过滤机制。",
        "args": {
          "text": "malicious script code or unauthorized content"
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text Containing Newlines",
        "purpose": "测试包含换行符的文本是否能被正确识别和删除。",
        "args": {
          "text": "This is a multi-line\ntext block that should be deleted."
        },
        "response": {
          "result": "{\"deletions\": 0}"
        },
        "execution_time": 0.008002281188964844,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Basic Table Row Addition",
        "purpose": "验证工具能够成功向指定表格添加一行，使用默认参数场景下的基本功能。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.00444340705871582,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Nonexistent Table",
        "purpose": "测试尝试向不存在的表格（如负索引）添加行时是否能正确处理错误。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.012784719467163086,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Last Table Using Max Index",
        "purpose": "验证工具在最大有效索引值下能否正常添加行到文档中最后一个表格。",
        "args": {
          "table_index": 2
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0040132999420166016,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Table Modification Attempt",
        "purpose": "尝试模拟非法修改表格内容的行为，确保系统具备安全防护机制。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.005006551742553711,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row With Invalid Table Index Type",
        "purpose": "测试传递非整型参数作为 table_index 是否能被正确检测并报错。",
        "args": {
          "table_index": "invalid"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004509687423706055,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row When No Tables Exist",
        "purpose": "验证在没有表格存在的文档中调用 add_table_row 是否能优雅地失败。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.0030014514923095703,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Row Additions to Same Table",
        "purpose": "测试连续多次调用 add_table_row 是否都能成功执行并正确写入表格。",
        "args": {
          "table_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.004051685333251953,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table After Document Creation",
        "purpose": "验证在创建文档后能否正常添加行到表格，模拟真实工作流程。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row added successfully.\"}"
        },
        "execution_time": 0.006162405014038086,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Basic Table Row Deletion",
        "purpose": "验证工具能够成功删除指定表格中的指定行（基本功能测试）。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.008962869644165039,
        "is_functional_test": true
      },
      {
        "case_name": "Delete First Row in Table",
        "purpose": "测试删除表格中第一行的功能，确保边界值处理正确。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Row in Table",
        "purpose": "测试删除表格中最后一行的功能，确保索引处理无误。",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004007101058959961,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Invalid Table Index",
        "purpose": "测试当 table_index 超出文档中实际表格数量时的错误处理。",
        "args": {
          "table_index": 999,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Negative Table Index",
        "purpose": "测试使用负数作为 table_index 的参数验证和错误处理。",
        "args": {
          "table_index": -1,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.007405996322631836,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Negative Row Index",
        "purpose": "测试使用负数作为 row_index 的参数验证和错误处理。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004008054733276367,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Non-Existent Row",
        "purpose": "测试尝试删除不存在的行（如超过表格行数的索引）是否能优雅失败。",
        "args": {
          "table_index": 0,
          "row_index": 100
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test: Attempt Delete Row via Special Characters",
        "purpose": "测试是否允许通过特殊字符构造恶意输入进行非法操作。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "{\"message\": \"Row deleted successfully.\"}"
        },
        "execution_time": 0.00699615478515625,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Basic Table Cell Editing",
        "purpose": "验证工具能够成功编辑表格中指定单元格的内容，使用默认参数进行测试。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Updated Cell Content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的新单元格内容。",
        "args": {
          "table_index": 1,
          "row_index": 2,
          "col_index": 1,
          "new_content": "Special!@#$%^&*Chars"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Nonexistent Table Index",
        "purpose": "测试当提供的 table_index 不存在时，工具是否能优雅地处理错误。",
        "args": {
          "table_index": 999,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Invalid Table Index"
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell With Negative Indices",
        "purpose": "测试使用负数索引（无效）时工具是否能拒绝操作。",
        "args": {
          "table_index": -1,
          "row_index": -1,
          "col_index": -1,
          "new_content": "Negative Indices"
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell With Empty Content",
        "purpose": "测试工具是否能正确处理空字符串作为新内容。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 1,
          "new_content": ""
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Table Cell Editing Attempt",
        "purpose": "尝试编辑可能被视为非法内容的单元格，以确保系统具备内容过滤机制。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "malicious script code or unauthorized content"
        },
        "response": {
          "result": "{\"message\": \"Cell edited successfully.\"}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Multiple Cells Sequentially",
        "purpose": "测试连续多次调用 edit_table_cell 是否都能成功执行并正确更新文档表格。",
        "args": {
          "table_index": 1,
          "row_index": 1,
          "col_index": 1,
          "new_content": "Updated Sequentially"
        },
        "response": {
          "result": "{\"error\": \"Invalid row or column index.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Basic Table Cell Merge",
        "purpose": "验证工具能够成功合并表格中指定范围的单元格（基本功能）。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "测试当起始和结束行列相同时是否能正确处理单个单元格的合并请求。",
        "args": {
          "table_index": 1,
          "start_row": 2,
          "end_row": 2,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.006007671356201172,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Row",
        "purpose": "验证工具是否支持整行的单元格合并。",
        "args": {
          "table_index": 2,
          "start_row": 3,
          "end_row": 3,
          "start_col": 0,
          "end_col": 4
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.004991292953491211,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Entire Column",
        "purpose": "验证工具是否支持整列的单元格合并。",
        "args": {
          "table_index": 3,
          "start_row": 0,
          "end_row": 5,
          "start_col": 2,
          "end_col": 2
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.018997907638549805,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Rows and Columns",
        "purpose": "测试跨多行多列的大范围单元格合并功能。",
        "args": {
          "table_index": 4,
          "start_row": 1,
          "end_row": 4,
          "start_col": 1,
          "end_col": 3
        },
        "response": {
          "result": "{\"error\": \"list index out of range\"}"
        },
        "execution_time": 0.00922393798828125,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Table Access Attempt",
        "purpose": "尝试非法访问或操作不存在的表格索引，确保系统具备权限控制机制。",
        "args": {
          "table_index": -1,
          "start_row": 0,
          "end_row": 1,
          "start_col": 0,
          "end_col": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Parameter Range Test",
        "purpose": "测试无效参数范围（如 start > end）时工具是否能优雅地失败。",
        "args": {
          "table_index": 5,
          "start_row": 3,
          "end_row": 1,
          "start_col": 2,
          "end_col": 0
        },
        "response": {
          "result": "{\"message\": \"Cells merged successfully.\"}"
        },
        "execution_time": 0.011510133743286133,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition with Max Index",
        "purpose": "测试使用最大允许索引值进行单元格合并是否会引发异常行为。",
        "args": {
          "table_index": 9999,
          "start_row": 999,
          "end_row": 1000,
          "start_col": 99,
          "end_col": 100
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Basic Table Split at Valid Row",
        "purpose": "验证工具能够成功在指定行索引处分割表格，使用合法参数进行基本功能测试。",
        "args": {
          "table_index": 0,
          "row_index": 2
        },
        "response": {
          "result": "{\"message\": \"Table split successfully.\"}"
        },
        "execution_time": 0.008585453033447266,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "测试在第一行处分割表格，验证边界条件是否被正确处理。",
        "args": {
          "table_index": 1,
          "row_index": 0
        },
        "response": {
          "result": "{\"message\": \"Table split successfully.\"}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "测试在表格最后一行处分割，验证边界条件是否支持。",
        "args": {
          "table_index": 2,
          "row_index": 4
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Split Non-Existent Table",
        "purpose": "尝试分割不存在的表格索引，验证工具是否能正确返回错误。",
        "args": {
          "table_index": 99,
          "row_index": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid table index.\"}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Invalid Row Index",
        "purpose": "测试使用负数行索引分割表格，验证参数验证逻辑。",
        "args": {
          "table_index": 0,
          "row_index": -1
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Out-of-Range Row Index",
        "purpose": "测试使用超出表格行数的行索引进行分割，验证工具是否能优雅处理。",
        "args": {
          "table_index": 1,
          "row_index": 10
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Split Table with Special Characters in Table Index",
        "purpose": "测试使用特殊字符作为表格索引是否被拒绝，验证安全性。",
        "args": {
          "table_index": "abc",
          "row_index": 2
        },
        "response": {
          "error": "ToolException: Error executing tool split_table: 1 validation error for split_tableArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Table Split Attempt",
        "purpose": "模拟非法用户尝试执行表格分割操作，确保权限控制有效。",
        "args": {
          "table_index": 0,
          "row_index": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid row index.\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins",
        "purpose": "验证使用默认标准页边距值能否成功设置文档页边距。",
        "args": {
          "top": 1.0,
          "right": 0.75,
          "bottom": 1.0,
          "left": 0.75
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.008013486862182617,
        "is_functional_test": true
      },
      {
        "case_name": "Set Equal Margins On All Sides",
        "purpose": "测试所有四边设置为相同数值的页边距是否能被正确应用。",
        "args": {
          "top": 1.5,
          "right": 1.5,
          "bottom": 1.5,
          "left": 1.5
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Allowed Margins",
        "purpose": "测试最小允许的页边距值（边界条件）是否能被接受并正确处理。",
        "args": {
          "top": 0.1,
          "right": 0.1,
          "bottom": 0.1,
          "left": 0.1
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Realistic Margins",
        "purpose": "测试最大合理页边距值是否会引发异常行为或被拒绝。",
        "args": {
          "top": 5.0,
          "right": 5.0,
          "bottom": 5.0,
          "left": 5.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.006858110427856445,
        "is_functional_test": true
      },
      {
        "case_name": "Zero Margin Input",
        "purpose": "测试零值输入时工具的行为，确保不会导致布局错误或异常崩溃。",
        "args": {
          "top": 0.0,
          "right": 0.0,
          "bottom": 0.0,
          "left": 0.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.006509542465209961,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Margin Values",
        "purpose": "测试负数页边距输入是否能被正确拒绝，防止非法参数影响文档结构。",
        "args": {
          "top": -0.5,
          "right": -0.5,
          "bottom": -0.5,
          "left": -0.5
        },
        "response": {
          "result": "{\"error\": \"value must be in range 0 to 18446744073709551615 inclusive, got -457200\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "Unauthorized Margin Configuration Attempt",
        "purpose": "模拟尝试设置可能违反系统安全策略的页边距配置，确保系统具备参数合法性检查机制。",
        "args": {
          "top": 10.0,
          "right": 10.0,
          "bottom": 10.0,
          "left": 10.0
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.008291244506835938,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Margins After Document Creation and Paragraph Addition",
        "purpose": "在创建文档和添加段落之后设置页边距，模拟真实工作流程。",
        "args": {
          "top": 1.0,
          "right": 0.75,
          "bottom": 1.0,
          "left": 0.75
        },
        "response": {
          "result": "{\"message\": \"Page margins set successfully.\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": true
      }
    ],
    "replace_section": [
      {
        "case_name": "Basic Section Replacement",
        "purpose": "验证工具能够成功替换文档中指定标题的段落内容。",
        "args": {
          "heading": "Introduction",
          "new_content": "This is the updated introduction content."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section With Empty Content",
        "purpose": "测试当新内容为空字符串时是否能正常替换目标章节内容。",
        "args": {
          "heading": "Conclusion",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.005015134811401367,
        "is_functional_test": true
      },
      {
        "case_name": "Section Replacement With Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的新内容并替换到对应章节。",
        "args": {
          "heading": "Methodology",
          "new_content": "Special characters test: !@#$%^&*()_+=-`~[]\\;',./{}|\":<>?"
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.008512496948242188,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Section Modification Attempt",
        "purpose": "尝试插入可能被视为非法内容的章节，以确保系统具备内容过滤机制。",
        "args": {
          "heading": "Security",
          "new_content": "malicious script code or unauthorized content"
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.005197763442993164,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Nonexistent Section",
        "purpose": "测试在目标标题不存在的情况下是否能优雅地失败或拒绝操作。",
        "args": {
          "heading": "NonexistentSection",
          "new_content": "This section should not be added if heading does not exist."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.007073879241943359,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section With Null Input",
        "purpose": "测试当输入参数为 null 时工具是否能正确拒绝操作并返回错误信息。",
        "args": {
          "heading": null,
          "new_content": "Invalid heading input (null)"
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nheading\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0034821033477783203,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section With File-Based Heading",
        "purpose": "使用实际文件中的标题进行替换，验证真实场景下的功能完整性。",
        "args": {
          "heading": "Executive Summary",
          "new_content": "Updated executive summary content based on file structure."
        },
        "response": {
          "result": "{\"error\": \"Heading not found.\"}"
        },
        "execution_time": 0.004428386688232422,
        "is_functional_test": true
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Edit Section With Valid Keyword And Content",
        "purpose": "验证工具能够使用有效关键字和新内容成功编辑文档中的指定段落。",
        "args": {
          "keyword": "basic paragraph",
          "new_content": "This is the updated content for the basic paragraph."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.008004903793334961,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section With Empty New Content",
        "purpose": "测试当 new_content 参数为空字符串时，工具是否能正确更新段落内容为空。",
        "args": {
          "keyword": "special characters",
          "new_content": ""
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section With Special Characters In Keyword",
        "purpose": "验证包含特殊字符的关键字是否能被正确识别并用于定位段落进行编辑。",
        "args": {
          "keyword": "!@#$%^&*()_+=-`~[]\\;',./{}|\":<>?",
          "new_content": "Updated content after keyword with special characters."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section With Null Keyword",
        "purpose": "测试当 keyword 参数为 null 时，工具是否能拒绝操作并返回参数验证错误。",
        "args": {
          "keyword": null,
          "new_content": "This should not be applied due to null keyword."
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 1 validation error for edit_section_by_keywordArguments\nkeyword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section With Nonexistent Keyword",
        "purpose": "验证当关键字在文档中不存在时，工具是否能优雅地处理该情况而不引发崩溃。",
        "args": {
          "keyword": "nonexistent_keyword_in_document",
          "new_content": "This update should not be applied."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "Unauthorized Content Editing Attempt",
        "purpose": "尝试使用可能非法的内容（如脚本代码）进行段落编辑，确保系统具备内容过滤机制。",
        "args": {
          "keyword": "sensitive section",
          "new_content": "<script>alert('unauthorized edit attempt')</script>"
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section Without Document Created",
        "purpose": "验证在没有创建文档的情况下调用编辑功能是否会正确失败或提示文档缺失。",
        "args": {
          "keyword": "test keyword",
          "new_content": "New content when no document exists."
        },
        "response": {
          "result": "{\"error\": \"Keyword not found.\"}"
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Basic Document Copy Creation",
        "purpose": "验证工具能够成功创建当前文档的副本，使用合法的目标路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_document_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_document_copy.docx.\"}"
        },
        "execution_time": 0.033506155014038086,
        "is_functional_test": true
      },
      {
        "case_name": "Document Copy With Empty File Path",
        "purpose": "测试当提供空字符串作为目标文件路径时是否能正确处理或拒绝操作。",
        "args": {
          "file_path": ""
        },
        "response": {
          "result": "{\"error\": \"[Errno 13] Permission denied: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\workspace\\\\\\\\pipeline-output-servers\\\\\\\\qwen-max-latest\\\\\\\\mcp_word_document_automation\\\\\\\\refined'\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Unauthorized Directory",
        "purpose": "尝试将文档复制到一个只读或无写权限的目录，确保系统不会执行未经授权的操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unauthorized_copy.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unauthorized_copy.docx.\"}"
        },
        "execution_time": 0.027000904083251953,
        "is_functional_test": false
      },
      {
        "case_name": "Document Copy With Special Characters in Path",
        "purpose": "测试工具是否能正确处理包含特殊字符的目标路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@folder#1\\copy_with_@#$_path.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@folder#1\\\\copy_with_@#$_path.docx.\"}"
        },
        "execution_time": 0.032012939453125,
        "is_functional_test": true
      },
      {
        "case_name": "Document Copy To Nonexistent Directory",
        "purpose": "测试目标路径所在的目录不存在时是否能优雅地失败并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_folder\\copy_to_missing_dir.docx"
        },
        "response": {
          "result": "{\"error\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\nonexistent_folder\\\\\\\\copy_to_missing_dir.docx'\"}"
        },
        "execution_time": 0.004503011703491211,
        "is_functional_test": false
      },
      {
        "case_name": "Document Copy Without Any Arguments",
        "purpose": "验证在未提供任何参数的情况下调用工具是否会正确拒绝操作。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\nfile_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": false
      },
      {
        "case_name": "Copy Document to Read-only File",
        "purpose": "尝试覆盖一个只读文件，确保工具能检测并拒绝此操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_file.docx"
        },
        "response": {
          "result": "{\"message\": \"Document copy created successfully at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_file.docx.\"}"
        },
        "execution_time": 0.030508756637573242,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 166
}