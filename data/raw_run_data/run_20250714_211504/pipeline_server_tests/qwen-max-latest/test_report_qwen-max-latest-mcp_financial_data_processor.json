{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_financial_data_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_financial_data_processor/refined/server.py",
  "timestamp": "2025-07-14T21:18:30.606517",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    Fetches income statements for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n        report_period: The reporting period (e.g., 'annual', 'quarterly', 'ttm').\n        limit: The maximum number of results to return.\n\n    Returns:\n        A JSON-formatted string containing the income statement data.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_income_statements(stock_code=\"NVDA\", report_period=\"annual\", limit=10)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "report_period": {
            "title": "Report Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "report_period",
          "limit"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    Retrieves balance sheets for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n        report_period: The reporting period (e.g., 'annual', 'quarterly', 'ttm').\n        limit: The maximum number of results to return.\n\n    Returns:\n        A JSON-formatted string containing the balance sheet data.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_balance_sheets(stock_code=\"NVDA\", report_period=\"annual\", limit=10)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "report_period": {
            "title": "Report Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "report_period",
          "limit"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    Extracts cash flow statements for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n        report_period: The reporting period (e.g., 'annual', 'quarterly', 'ttm').\n        limit: The maximum number of results to return.\n\n    Returns:\n        A JSON-formatted string containing the cash flow statement data.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_cash_flows(stock_code=\"NVDA\", report_period=\"annual\", limit=10)\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "report_period": {
            "title": "Report Period",
            "type": "string"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "stock_code",
          "report_period",
          "limit"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    Queries historical stock price data for a specified stock using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n        start_date: The start date of the historical data range (format: YYYY-MM-DD).\n        end_date: The end date of the historical data range (format: YYYY-MM-DD).\n\n    Returns:\n        A JSON-formatted string containing historical stock prices.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_stock_prices(stock_code=\"NVDA\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "stock_code",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    Fetches the latest financial news related to a company or market using the financialdatasets API.\n\n    Args:\n        company_name: The name of the company (e.g., 'NVIDIA').\n\n    Returns:\n        A JSON-formatted string containing the latest financial news articles.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_market_news(company_name=\"NVIDIA\")\n    ",
      "args_schema": {
        "properties": {
          "company_name": {
            "title": "Company Name",
            "type": "string"
          }
        },
        "required": [
          "company_name"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    Retrieves a company profile including industry and location information using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing the company's profile.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_company_profile(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    Gets analyst estimates such as target prices and earnings forecasts for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing analyst estimates.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_analyst_estimates(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    Retrieves dividend history records for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing the dividend history.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_dividend_history(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    Queries stock split history for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing the stock split history.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_splits_history(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    Fetches historical earnings data, such as EPS, for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing historical earnings data.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_earnings_history(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    Gets financial ratios such as P/E and debt-to-equity for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing financial ratios.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_financial_ratios(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    Retrieves ownership structure data, such as institutional holding percentages, for a specified company using the financialdatasets API.\n\n    Args:\n        stock_code: The stock code of the company (e.g., 'NVDA').\n\n    Returns:\n        A JSON-formatted string containing ownership structure data.\n\n    Raises:\n        ValueError: If input parameters are invalid or API request fails.\n\n    Example:\n        get_ownership_data(stock_code=\"NVDA\")\n    ",
      "args_schema": {
        "properties": {
          "stock_code": {
            "title": "Stock Code",
            "type": "string"
          }
        },
        "required": [
          "stock_code"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "基本功能测试 - 获取有效公司资料",
        "purpose": "验证工具可以使用有效的股票代码成功获取公司资料信息。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3842840194702148,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 多个不同行业公司的资料获取",
        "purpose": "验证工具能够获取多个不同行业的公司资料，确保数据多样性。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37604856491088867,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司资料",
        "purpose": "验证工具是否能正确获取知名科技公司的详细信息。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7792551517486572,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司资料",
        "purpose": "验证工具是否能正确获取金融类公司的资料信息。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7892205715179443,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7859148979187012,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003927707672119141,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3731253147125244,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3936324119567871,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "基本功能测试 - 获取有效公司的年度利润表",
        "purpose": "验证工具可以使用有效的股票代码和参数获取公司年度利润表数据。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "result": "{\"income_statements\": [{\"ticker\": \"NVDA\", \"report_period\": \"2025-01-26\", \"fiscal_period\": \"2025-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"revenue\": 130497000000.0, \"cost_of_revenue\": 32639000000.0, \"gross_profit\": 97858000000.0, \"operating_expense\": 16405000000.0, \"selling_general_and_administrative_expenses\": 3491000000.0, \"research_and_development\": 12914000000.0, \"operating_income\": 81453000000.0, \"interest_expense\": 247000000.0, \"ebit\": 84273000000.0, \"income_tax_expense\": 11146000000.0, \"net_income_discontinued_operations\": 0.0, \"net_income_non_controlling_interests\": 0.0, \"net_income\": 72880000000.0, \"net_income_common_stock\": 72880000000.0, \"preferred_dividends_impact\": 0.0, \"consolidated_income\": 72880000000.0, \"earnings_per_share\": 2.97, \"earnings_per_share_diluted\": 2.94, \"dividends_per_common_share\": 0.034, \"weighted_average_shares\": 24555000000.0, \"weighted_average_shares_diluted\": 24804000000.0}, {\"ticker\": \"NVDA\", \"report_period\": \"2024-01-28\", \"fiscal_period\": \"2024-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"revenue\": 60922000000.0, \"cost_of_revenue\": 16621000000.0, \"gross_profit\": 44301000000.0, \"operating_expense\": 11329000000.0, \"selling_general_and_administrative_expenses\": 2654000000.0, \"research_and_development\": 8675000000.0, \"operating_income\": 32972000000.0, \"interest_expense\": 257000000.0, \"ebit\": 34075000000.0, \"income_tax_expense\": 4058000000.0, ...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计8956字符，剩余7556字符"
        },
        "execution_time": 2.379924774169922,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的季度利润表",
        "purpose": "验证工具可以使用有效的股票代码获取公司季度利润表数据。",
        "args": {
          "stock_code": "AAPL",
          "report_period": "quarterly",
          "limit": 5
        },
        "response": {
          "result": "{\"income_statements\": [{\"ticker\": \"AAPL\", \"report_period\": \"2025-03-29\", \"fiscal_period\": \"2025-Q2\", \"period\": \"quarterly\", \"currency\": \"USD\", \"revenue\": 95359000000.0, \"cost_of_revenue\": 50492000000.0, \"gross_profit\": 44867000000.0, \"operating_expense\": 15278000000.0, \"selling_general_and_administrative_expenses\": 6728000000.0, \"research_and_development\": 8550000000.0, \"operating_income\": 29589000000.0, \"interest_expense\": 0.0, \"ebit\": 29310000000.0, \"income_tax_expense\": 4530000000.0, \"net_income_discontinued_operations\": 0.0, \"net_income_non_controlling_interests\": 0.0, \"net_income\": 24780000000.0, \"net_income_common_stock\": 24780000000.0, \"preferred_dividends_impact\": 0.0, \"consolidated_income\": 24780000000.0, \"earnings_per_share\": 1.65, \"earnings_per_share_diluted\": 1.65, \"dividends_per_common_share\": 0.25, \"weighted_average_shares\": 14994082000.0, \"weighted_average_shares_diluted\": 15056133000.0}, {\"ticker\": \"AAPL\", \"report_period\": \"2024-12-28\", \"fiscal_period\": \"2025-Q1\", \"period\": \"quarterly\", \"currency\": \"USD\", \"revenue\": 124300000000.0, \"cost_of_revenue\": 66025000000.0, \"gross_profit\": 58275000000.0, \"operating_expense\": 15443000000.0, \"selling_general_and_administrative_expenses\": 7175000000.0, \"research_and_development\": 8268000000.0, \"operating_income\": 42832000000.0, \"interest_expense\": 0.0, \"ebit\": 42584000000.0, \"income_tax_expense\": 6254000000.0, \"net_income_d...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计4492字符，剩余3092字符"
        },
        "execution_time": 1.170856237411499,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的TTM利润表",
        "purpose": "验证工具可以使用有效的股票代码获取公司TTM（Trailing Twelve Months）利润表数据。",
        "args": {
          "stock_code": "MSFT",
          "report_period": "ttm",
          "limit": 1
        },
        "response": {
          "result": "{\"income_statements\": [{\"ticker\": \"MSFT\", \"report_period\": \"2025-03-31\", \"fiscal_period\": \"2025-Q3\", \"period\": \"ttm\", \"currency\": \"USD\", \"revenue\": 270010000000.0, \"cost_of_revenue\": 83501000000.0, \"gross_profit\": 186509000000.0, \"operating_expense\": 64379000000.0, \"selling_general_and_administrative_expenses\": 32664000000.0, \"research_and_development\": 31715000000.0, \"operating_income\": 122130000000.0, \"interest_expense\": 2471000000.0, \"ebit\": 120732000000.0, \"income_tax_expense\": 21626000000.0, \"net_income_discontinued_operations\": 0.0, \"net_income_non_controlling_interests\": 0.0, \"net_income\": 96635000000.0, \"net_income_common_stock\": 96635000000.0, \"preferred_dividends_impact\": 0.0, \"consolidated_income\": 96635000000.0, \"earnings_per_share\": 12.99, \"earnings_per_share_diluted\": 12.94, \"dividends_per_common_share\": 3.16, \"weighted_average_shares\": 7434000000.0, \"weighted_average_shares_diluted\": 7461000000.0}]}"
        },
        "execution_time": 0.7507033348083496,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 1.152360439300537,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供必要参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 3 validation errors for get_income_statementsArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nreport_period\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nlimit\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极限数量请求",
        "purpose": "验证工具是否能正确处理极限数量的请求（如limit=0或非常大的值）。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 1000
        },
        "response": {
          "result": "{\"income_statements\": [{\"ticker\": \"NVDA\", \"report_period\": \"2025-01-26\", \"fiscal_period\": \"2025-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"revenue\": 130497000000.0, \"cost_of_revenue\": 32639000000.0, \"gross_profit\": 97858000000.0, \"operating_expense\": 16405000000.0, \"selling_general_and_administrative_expenses\": 3491000000.0, \"research_and_development\": 12914000000.0, \"operating_income\": 81453000000.0, \"interest_expense\": 247000000.0, \"ebit\": 84273000000.0, \"income_tax_expense\": 11146000000.0, \"net_income_discontinued_operations\": 0.0, \"net_income_non_controlling_interests\": 0.0, \"net_income\": 72880000000.0, \"net_income_common_stock\": 72880000000.0, \"preferred_dividends_impact\": 0.0, \"consolidated_income\": 72880000000.0, \"earnings_per_share\": 2.97, \"earnings_per_share_diluted\": 2.94, \"dividends_per_common_share\": 0.034, \"weighted_average_shares\": 24555000000.0, \"weighted_average_shares_diluted\": 24804000000.0}, {\"ticker\": \"NVDA\", \"report_period\": \"2024-01-28\", \"fiscal_period\": \"2024-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"revenue\": 60922000000.0, \"cost_of_revenue\": 16621000000.0, \"gross_profit\": 44301000000.0, \"operating_expense\": 11329000000.0, \"selling_general_and_administrative_expenses\": 2654000000.0, \"research_and_development\": 8675000000.0, \"operating_income\": 32972000000.0, \"interest_expense\": 257000000.0, \"ebit\": 34075000000.0, \"income_tax_expense\": 4058000000.0, ...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计26407字符，剩余25007字符"
        },
        "execution_time": 0.9587967395782471,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.7436516284942627,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE income_statements;--",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.7458004951477051,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "基本功能测试 - 获取有效公司的年度资产负债表",
        "purpose": "验证工具可以使用有效的股票代码和参数获取公司年度资产负债表数据。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "result": "{\"balance_sheets\": [{\"ticker\": \"NVDA\", \"report_period\": \"2025-01-26\", \"fiscal_period\": \"2025-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"total_assets\": 111601000000.0, \"current_assets\": 80126000000.0, \"cash_and_equivalents\": 8589000000.0, \"inventory\": 10080000000.0, \"current_investments\": 34621000000.0, \"trade_and_non_trade_receivables\": 23065000000.0, \"non_current_assets\": 31475000000.0, \"property_plant_and_equipment\": 8076000000.0, \"goodwill_and_intangible_assets\": 5995000000.0, \"investments\": 34621000000.0, \"non_current_investments\": 0.0, \"tax_assets\": 10979000000.0, \"total_liabilities\": 32274000000.0, \"current_liabilities\": 18047000000.0, \"current_debt\": 0.0, \"trade_and_non_trade_payables\": 6310000000.0, \"deferred_revenue\": 0.0, \"deposit_liabilities\": 0.0, \"non_current_liabilities\": 14227000000.0, \"non_current_debt\": 9982000000.0, \"tax_liabilities\": 0.0, \"shareholders_equity\": 79327000000.0, \"retained_earnings\": 68038000000.0, \"accumulated_other_comprehensive_income\": 28000000.0, \"outstanding_shares\": 24490000000.0, \"total_debt\": 9982000000.0}, {\"ticker\": \"NVDA\", \"report_period\": \"2024-01-28\", \"fiscal_period\": \"2024-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"total_assets\": 65728000000.0, \"current_assets\": 44345000000.0, \"cash_and_equivalents\": 7280000000.0, \"inventory\": 5282000000.0, \"current_investments\": 18704000000.0, \"trade_and_non_trade_receivables\": 9999000000.0, \"...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计10395字符，剩余8995字符"
        },
        "execution_time": 1.854367971420288,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的季度资产负债表",
        "purpose": "验证工具可以使用有效的股票代码获取公司季度资产负债表数据。",
        "args": {
          "stock_code": "AAPL",
          "report_period": "quarterly",
          "limit": 5
        },
        "response": {
          "result": "{\"balance_sheets\": [{\"ticker\": \"AAPL\", \"report_period\": \"2025-03-29\", \"fiscal_period\": \"2025-Q2\", \"period\": \"quarterly\", \"currency\": \"USD\", \"total_assets\": 331233000000.0, \"current_assets\": 118674000000.0, \"cash_and_equivalents\": 28162000000.0, \"inventory\": 6269000000.0, \"current_investments\": 20336000000.0, \"trade_and_non_trade_receivables\": 49798000000.0, \"non_current_assets\": 212559000000.0, \"property_plant_and_equipment\": 46876000000.0, \"goodwill_and_intangible_assets\": 0.0, \"investments\": 104760000000.0, \"non_current_investments\": 84424000000.0, \"tax_assets\": 0.0, \"total_liabilities\": 264437000000.0, \"current_liabilities\": 144571000000.0, \"current_debt\": 19620000000.0, \"trade_and_non_trade_payables\": 54126000000.0, \"deferred_revenue\": 8976000000.0, \"deposit_liabilities\": 0.0, \"non_current_liabilities\": 119866000000.0, \"non_current_debt\": 78566000000.0, \"tax_liabilities\": 0.0, \"shareholders_equity\": 66796000000.0, \"retained_earnings\": -15552000000.0, \"accumulated_other_comprehensive_income\": -6363000000.0, \"outstanding_shares\": 15022073000.0, \"total_debt\": 98186000000.0}, {\"ticker\": \"AAPL\", \"report_period\": \"2024-12-28\", \"fiscal_period\": \"2025-Q1\", \"period\": \"quarterly\", \"currency\": \"USD\", \"total_assets\": 344085000000.0, \"current_assets\": 133240000000.0, \"cash_and_equivalents\": 30299000000.0, \"inventory\": 6911000000.0, \"current_investments\": 23476000000.0, \"trade_and_non_tr...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计5385字符，剩余3985字符"
        },
        "execution_time": 1.183746576309204,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的TTM资产负债表",
        "purpose": "验证工具可以使用有效的股票代码获取公司TTM（Trailing Twelve Months）资产负债表数据。",
        "args": {
          "stock_code": "MSFT",
          "report_period": "ttm",
          "limit": 1
        },
        "response": {
          "result": "{\"balance_sheets\": [{\"ticker\": \"MSFT\", \"report_period\": \"2025-03-31\", \"fiscal_period\": \"2025-Q3\", \"period\": \"ttm\", \"currency\": \"USD\", \"total_assets\": 562624000000.0, \"current_assets\": 156644000000.0, \"cash_and_equivalents\": 79618000000.0, \"inventory\": 848000000.0, \"current_investments\": 0.0, \"trade_and_non_trade_receivables\": 51700000000.0, \"non_current_assets\": 405980000000.0, \"property_plant_and_equipment\": 208414000000.0, \"goodwill_and_intangible_assets\": 143297000000.0, \"investments\": 16035000000.0, \"non_current_investments\": 16035000000.0, \"tax_assets\": 0.0, \"total_liabilities\": 240733000000.0, \"current_liabilities\": 114206000000.0, \"current_debt\": 2999000000.0, \"trade_and_non_trade_payables\": 26250000000.0, \"deferred_revenue\": 47476000000.0, \"deposit_liabilities\": 0.0, \"non_current_liabilities\": 126527000000.0, \"non_current_debt\": 57568000000.0, \"tax_liabilities\": 34388000000.0, \"shareholders_equity\": 321891000000.0, \"retained_earnings\": 219759000000.0, \"accumulated_other_comprehensive_income\": -4833000000.0, \"outstanding_shares\": 7433982235.0, \"total_debt\": 60567000000.0}]}"
        },
        "execution_time": 1.1894686222076416,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 1.1874282360076904,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供必要参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 3 validation errors for get_balance_sheetsArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nreport_period\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nlimit\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.009080171585083008,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极限数量请求",
        "purpose": "验证工具是否能正确处理极限数量的请求（如limit=0或非常大的值）。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 1000
        },
        "response": {
          "result": "{\"balance_sheets\": [{\"ticker\": \"NVDA\", \"report_period\": \"2025-01-26\", \"fiscal_period\": \"2025-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"total_assets\": 111601000000.0, \"current_assets\": 80126000000.0, \"cash_and_equivalents\": 8589000000.0, \"inventory\": 10080000000.0, \"current_investments\": 34621000000.0, \"trade_and_non_trade_receivables\": 23065000000.0, \"non_current_assets\": 31475000000.0, \"property_plant_and_equipment\": 8076000000.0, \"goodwill_and_intangible_assets\": 5995000000.0, \"investments\": 34621000000.0, \"non_current_investments\": 0.0, \"tax_assets\": 10979000000.0, \"total_liabilities\": 32274000000.0, \"current_liabilities\": 18047000000.0, \"current_debt\": 0.0, \"trade_and_non_trade_payables\": 6310000000.0, \"deferred_revenue\": 0.0, \"deposit_liabilities\": 0.0, \"non_current_liabilities\": 14227000000.0, \"non_current_debt\": 9982000000.0, \"tax_liabilities\": 0.0, \"shareholders_equity\": 79327000000.0, \"retained_earnings\": 68038000000.0, \"accumulated_other_comprehensive_income\": 28000000.0, \"outstanding_shares\": 24490000000.0, \"total_debt\": 9982000000.0}, {\"ticker\": \"NVDA\", \"report_period\": \"2024-01-28\", \"fiscal_period\": \"2024-FY\", \"period\": \"annual\", \"currency\": \"USD\", \"total_assets\": 65728000000.0, \"current_assets\": 44345000000.0, \"cash_and_equivalents\": 7280000000.0, \"inventory\": 5282000000.0, \"current_investments\": 18704000000.0, \"trade_and_non_trade_receivables\": 9999000000.0, \"...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计30271字符，剩余28871字符"
        },
        "execution_time": 0.9894728660583496,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.763899564743042,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE balance_sheets;--",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: HTTP error occurred: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 1.0053215026855469,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "基本功能测试 - 获取有效公司的年度现金流量表",
        "purpose": "验证工具可以使用有效的股票代码获取公司年度现金流量表数据。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.361086368560791,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的季度现金流量表",
        "purpose": "验证工具可以使用有效的股票代码获取公司季度现金流量表数据。",
        "args": {
          "stock_code": "AAPL",
          "report_period": "quarterly",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7931909561157227,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取有效公司的TTM现金流量表",
        "purpose": "验证工具可以使用有效的股票代码获取公司TTM（Trailing Twelve Months）现金流量表数据。",
        "args": {
          "stock_code": "MSFT",
          "report_period": "ttm",
          "limit": 1
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7827692031860352,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3706347942352295,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供必要参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 3 validation errors for get_cash_flowsArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nreport_period\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nlimit\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004113197326660156,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极限数量请求",
        "purpose": "验证工具是否能正确处理极限数量的请求（如limit=0或非常大的值）。",
        "args": {
          "stock_code": "NVDA",
          "report_period": "annual",
          "limit": 1000
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7213029861450195,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符股票代码",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3732171058654785,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE cash_flows;--",
          "report_period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3803446292877197,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "基本功能测试 - 获取有效公司的财务比率数据",
        "purpose": "验证工具可以使用有效的股票代码成功获取公司财务比率信息。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3729441165924072,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的财务比率",
        "purpose": "验证工具是否能正确获取知名科技公司的财务比率信息。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7854135036468506,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的财务比率",
        "purpose": "验证工具是否能正确获取金融类公司的财务比率信息。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36933231353759766,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取多个不同行业的财务比率数据",
        "purpose": "验证工具能够获取多个不同行业的公司财务比率，确保数据多样性。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3700692653656006,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3673577308654785,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.41277623176574707,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7918009757995605,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "基本功能测试 - 获取有效公司的历史盈利数据",
        "purpose": "验证工具可以使用有效的股票代码成功获取历史盈利数据（如EPS）。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.765169620513916,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的历史盈利数据",
        "purpose": "验证工具是否能正确获取知名科技公司的历史盈利数据，确保数据准确性。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36953139305114746,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的历史盈利数据",
        "purpose": "验证工具是否能正确获取金融类公司的历史盈利数据，确保跨行业兼容性。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7915380001068115,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7850227355957031,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37180590629577637,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE earnings;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3693528175354004,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "基本功能测试 - 获取有效公司的分析师预期数据",
        "purpose": "验证工具可以使用有效的股票代码成功获取分析师预期信息。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3992688655853271,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取不同行业的公司分析师预期数据",
        "purpose": "验证工具能够获取多个不同行业的公司分析师预期数据，确保数据多样性。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7803137302398682,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的分析师预期数据",
        "purpose": "验证工具是否能正确获取知名科技公司的分析师预期详细信息。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36699604988098145,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的分析师预期数据",
        "purpose": "验证工具是否能正确获取金融类公司的分析师预期资料信息。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7854657173156738,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36987757682800293,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3678171634674072,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE analyst_estimates;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3659176826477051,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "基本功能测试 - 获取有效股票的历史价格数据",
        "purpose": "验证工具可以使用有效的股票代码和日期范围成功获取历史股价数据。",
        "args": {
          "stock_code": "NVDA",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.35601806640625,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一家知名科技公司的历史股价",
        "purpose": "验证工具是否能正确获取其他知名科技公司的历史股价数据，确保数据多样性。",
        "args": {
          "stock_code": "AAPL",
          "start_date": "2022-01-01",
          "end_date": "2022-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3712339401245117,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的历史股价",
        "purpose": "验证工具是否能正确获取金融类公司的历史股价数据。",
        "args": {
          "stock_code": "JPM",
          "start_date": "2021-01-01",
          "end_date": "2021-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.789919376373291,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7918298244476318,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供必要参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 3 validation errors for get_stock_pricesArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nstart_date\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nend_date\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3681678771972656,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE stock_prices;--",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3682084083557129,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最小时间跨度查询",
        "purpose": "验证工具是否能正确处理单日时间范围的请求。",
        "args": {
          "stock_code": "MSFT",
          "start_date": "2023-05-05",
          "end_date": "2023-05-05"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36913108825683594,
        "is_functional_test": true
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "基本功能测试 - 获取有效公司的股息历史",
        "purpose": "验证工具可以使用有效的股票代码成功获取该公司的股息历史数据。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3907639980316162,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的股息历史",
        "purpose": "验证工具是否能正确获取知名科技公司的股息历史信息。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3764979839324951,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的股息历史",
        "purpose": "验证工具是否能正确获取金融类公司的股息历史数据。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3758246898651123,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取消费电子行业公司的股息历史",
        "purpose": "验证工具是否能正确获取消费电子类公司的股息历史数据。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.784092903137207,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3753526210784912,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7855813503265381,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE dividend_history;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37598204612731934,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "基本功能测试 - 获取有效公司的股票拆分历史",
        "purpose": "验证工具可以使用有效的股票代码成功获取该公司的股票拆分历史数据。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3811299800872803,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司股票拆分历史",
        "purpose": "验证工具是否能正确获取知名科技公司的股票拆分历史信息。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7896685600280762,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司股票拆分历史",
        "purpose": "验证工具是否能正确获取金融类公司的股票拆分历史信息。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7933247089385986,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37527966499328613,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3902895450592041,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE splits;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37444019317626953,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "基本功能测试 - 获取有效公司的所有权数据",
        "purpose": "验证工具可以使用有效的股票代码成功获取公司所有权结构数据。",
        "args": {
          "stock_code": "NVDA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3660731315612793,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的所有权数据",
        "purpose": "验证工具是否能正确获取知名科技公司的所有权结构数据。",
        "args": {
          "stock_code": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7921023368835449,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的所有权数据",
        "purpose": "验证工具是否能正确获取金融类公司的所有权结构数据。",
        "args": {
          "stock_code": "JPM"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37169790267944336,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供无效的股票代码",
        "purpose": "验证工具在输入无效股票代码时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "stock_code": "INVALID123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3693726062774658,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供股票代码参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nstock_code\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004385471343994141,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 股票代码包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的股票代码输入，并给出合理错误响应。",
        "args": {
          "stock_code": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3721766471862793,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "stock_code": "NVDA'; DROP TABLE ownership_data;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.780759334564209,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 获取多个不同行业的公司所有权数据",
        "purpose": "验证工具能够获取多个不同行业的公司所有权数据，确保数据多样性。",
        "args": {
          "stock_code": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36986255645751953,
        "is_functional_test": true
      }
    ],
    "get_market_news": [
      {
        "case_name": "基本功能测试 - 获取有效公司的市场新闻",
        "purpose": "验证工具可以使用有效的公司名称成功获取最新的市场相关新闻。",
        "args": {
          "company_name": "NVIDIA"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.3663146495819092,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取知名科技公司的市场新闻",
        "purpose": "验证工具是否能正确获取知名科技公司的最新市场相关新闻。",
        "args": {
          "company_name": "Apple"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7783539295196533,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融行业公司的市场新闻",
        "purpose": "验证工具是否能正确获取金融类公司的最新市场相关新闻。",
        "args": {
          "company_name": "JPMorgan Chase"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3678758144378662,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否对恶意构造的SQL注入式输入进行安全过滤或拒绝执行。",
        "args": {
          "company_name": "NVIDIA'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7809484004974365,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供无效的公司名称",
        "purpose": "验证工具在输入无效公司名称时能否正确抛出异常并返回有意义的错误信息。",
        "args": {
          "company_name": "InvalidCompany123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36540675163269043,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 不提供公司名称参数",
        "purpose": "验证工具在未提供必要参数时能否正确识别并抛出ValueError。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 1 validation error for get_market_newsArguments\ncompany_name\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003156423568725586,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 公司名称包含特殊字符",
        "purpose": "验证工具是否能正确处理包含特殊字符的公司名称输入，并给出合理错误响应。",
        "args": {
          "company_name": "TSL@#"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3667869567871094,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的公司名称字符串",
        "purpose": "验证工具是否能正确处理超长公司名称输入，并给出合理的错误或截断处理。",
        "args": {
          "company_name": "A_very_long_company_name_that_exceeds_normal_length_and_may_cause_issues_in_processing"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: HTTP error occurred: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3710169792175293,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 94
}