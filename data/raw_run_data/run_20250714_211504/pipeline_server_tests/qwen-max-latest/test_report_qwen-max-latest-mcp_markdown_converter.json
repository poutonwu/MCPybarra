{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-max-latest-mcp_markdown_converter",
  "server_path": "workspace/pipeline-output-servers/qwen-max-latest/mcp_markdown_converter/refined/server.py",
  "timestamp": "2025-07-14T21:15:07.067393",
  "tools": [
    {
      "name": "convert_to_markdown",
      "description": "\n    Converts various types of content (HTTP/HTTPS webpages, local files, and data URIs) into structured Markdown format. \n    Preserves structural elements such as headings, lists, links, and tables.\n\n    Args:\n        content_url: The URL or path to the content that needs to be converted. This could be an HTTP/HTTPS webpage, a local file path, or a data URI.\n        content_type: The type of content being provided (e.g., \"http\", \"https\", \"file\", \"data_uri\").\n\n    Returns:\n        A dictionary containing the 'result' key with the content converted into Markdown format.\n\n    Raises:\n        ValueError: If the content type is invalid or if there is an error during conversion.\n        httpx.HTTPStatusError: If fetching HTTP/HTTPS content fails.\n        FileNotFoundError: If the specified file does not exist or cannot be read.\n        UnicodeDecodeError: If the file content cannot be decoded using UTF-8.\n\n    Example:\n        To convert an HTTP webpage:\n        convert_to_markdown(content_url=\"https://example.com\", content_type=\"http\")\n\n        To convert a local file:\n        convert_to_markdown(content_url=\"/path/to/local/file.html\", content_type=\"file\")\n\n        To convert a data URI:\n        convert_to_markdown(content_url=\"data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==\", content_type=\"data_uri\")\n    ",
      "args_schema": {
        "properties": {
          "content_url": {
            "title": "Content Url",
            "type": "string"
          },
          "content_type": {
            "title": "Content Type",
            "type": "string"
          }
        },
        "required": [
          "content_url",
          "content_type"
        ],
        "title": "convert_to_markdownArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "convert_to_markdown": [
      {
        "case_name": "Convert HTTP Webpage to Markdown",
        "purpose": "验证工具能够将HTTP网页内容正确转换为Markdown格式。",
        "args": {
          "content_url": "http://example.com",
          "content_type": "http"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: '<!DOCTYPE html>\\\\n\\\\n<html>\\\\n<head>\\\\n<title>Example Domain</title>\\\\n<meta charset=\\\"utf-8\\\"/>\\\\n<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-type\\\"/>\\\\n<meta content=\\\"width=device-width, initial-scale=1\\\" name=\\\"viewport\\\"/>\\\\n<style type=\\\"text/css\\\">\\\\n    body {\\\\n        background-color: #f0f0f2;\\\\n        margin: 0;\\\\n        padding: 0;\\\\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\\\n        \\\\n    }\\\\n    div {\\\\n        width: 600px;\\\\n        margin: 5em auto;\\\\n        padding: 2em;\\\\n        background-color: #fdfdff;\\\\n        border-radius: 0.5em;\\\\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\\\n    }\\\\n    a:link, a:visited {\\\\n        color: #38488f;\\\\n        text-decoration: none;\\\\n    }\\\\n    @media (max-width: 700px) {\\\\n        div {\\\\n            margin: 0 auto;\\\\n            width: auto;\\\\n        }\\\\n    }\\\\n    </style>\\\\n</head>\\\\n<body>\\\\n<div>\\\\n<h1>Example Domain</h1>\\\\n<p>This domain is for use in illustrative examples in documents. You may use this\\\\n    domain in literature without prior coordination or asking for permission.</p>\\\\n<p><a href=\\\"https://www.iana.org/domains/example\\\">More information...</a></p>\\\\n</div>\\\\n</body>\\\\n</h...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1411字符，剩余11字符"
        },
        "execution_time": 1.388263463973999,
        "is_functional_test": true
      },
      {
        "case_name": "Convert HTTPS Webpage to Markdown",
        "purpose": "验证工具能够将HTTPS网页内容正确转换为Markdown格式。",
        "args": {
          "content_url": "https://example.com",
          "content_type": "https"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: '<!DOCTYPE html>\\\\n\\\\n<html>\\\\n<head>\\\\n<title>Example Domain</title>\\\\n<meta charset=\\\"utf-8\\\"/>\\\\n<meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-type\\\"/>\\\\n<meta content=\\\"width=device-width, initial-scale=1\\\" name=\\\"viewport\\\"/>\\\\n<style type=\\\"text/css\\\">\\\\n    body {\\\\n        background-color: #f0f0f2;\\\\n        margin: 0;\\\\n        padding: 0;\\\\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\\\n        \\\\n    }\\\\n    div {\\\\n        width: 600px;\\\\n        margin: 5em auto;\\\\n        padding: 2em;\\\\n        background-color: #fdfdff;\\\\n        border-radius: 0.5em;\\\\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\\\n    }\\\\n    a:link, a:visited {\\\\n        color: #38488f;\\\\n        text-decoration: none;\\\\n    }\\\\n    @media (max-width: 700px) {\\\\n        div {\\\\n            margin: 0 auto;\\\\n            width: auto;\\\\n        }\\\\n    }\\\\n    </style>\\\\n</head>\\\\n<body>\\\\n<div>\\\\n<h1>Example Domain</h1>\\\\n<p>This domain is for use in illustrative examples in documents. You may use this\\\\n    domain in literature without prior coordination or asking for permission.</p>\\\\n<p><a href=\\\"https://www.iana.org/domains/example\\\">More information...</a></p>\\\\n</div>\\\\n</body>\\\\n</h...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计1411字符，剩余11字符"
        },
        "execution_time": 1.7101857662200928,
        "is_functional_test": true
      },
      {
        "case_name": "Convert Local HTML File to Markdown",
        "purpose": "验证工具能够将本地HTML文件内容正确转换为Markdown格式。",
        "args": {
          "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\present.html",
          "content_type": "file"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 2] No such file or directory: '使用utf-8编码插入的HTML段落'\"\n}"
        },
        "execution_time": 0.0189974308013916,
        "is_functional_test": true
      },
      {
        "case_name": "Convert Data URI to Markdown",
        "purpose": "验证工具能够将Base64编码的Data URI内容正确转换为Markdown格式。",
        "args": {
          "content_url": "data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==",
          "content_type": "data_uri"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 2] No such file or directory: 'Hello, World!'\"\n}"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "Convert File with Special Characters in Name",
        "purpose": "验证工具能处理带有特殊字符的文件名并正确转换为Markdown。",
        "args": {
          "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\file_with_@#$_name.txt",
          "content_type": "file"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: 'Content for special path file.\\\\nSpecial path test content.'\"\n}"
        },
        "execution_time": 0.008999824523925781,
        "is_functional_test": true
      },
      {
        "case_name": "Convert Non-Existent File",
        "purpose": "验证工具在尝试转换不存在的文件时抛出FileNotFoundError。",
        "args": {
          "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "content_type": "file"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: 'Trying to append to a non-existent file.Trying to insert into a non-existent file.\\\\n'\"\n}"
        },
        "execution_time": 0.014001131057739258,
        "is_functional_test": false
      },
      {
        "case_name": "Convert Invalid Content Type",
        "purpose": "验证工具在传入无效content_type参数时报错。",
        "args": {
          "content_url": "http://example.com",
          "content_type": "invalid_type"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: Invalid content_type: invalid_type. Must be one of ['http', 'https', 'file', 'data_uri'].\"\n}"
        },
        "execution_time": 0.009000539779663086,
        "is_functional_test": false
      },
      {
        "case_name": "Convert File with UTF-8 Decode Error",
        "purpose": "验证工具在遇到无法用UTF-8解码的文件时抛出UnicodeDecodeError。",
        "args": {
          "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "content_type": "file"
        },
        "response": {
          "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 2] No such file or directory: ''\"\n}"
        },
        "execution_time": 0.012618780136108398,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 8
}