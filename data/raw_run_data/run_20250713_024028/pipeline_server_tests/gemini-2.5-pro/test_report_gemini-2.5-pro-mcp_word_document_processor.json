{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-13T02:55:41.673537",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new, empty Word document with specified metadata and saves it.\n\n    Args:\n        filename (str): The name of the file to create (e.g., 'report.docx').\n        author (str, optional): The author of the document. Defaults to None.\n        title (str, optional): The title of the document. Defaults to None.\n        subject (str, optional): The subject of the document. Defaults to None.\n        keywords (str, optional): Comma-separated keywords for the document. Defaults to None.\n\n    Returns:\n        str: A JSON string confirming the successful creation, e.g.,\n             '{\"status\": \"success\", \"file_path\": \"report.docx\"}'.\n\n    Example:\n        create_document(filename='new_report.docx', author='John Doe', title='Annual Report')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "author": {
            "default": null,
            "title": "Author",
            "type": "string"
          },
          "title": {
            "default": null,
            "title": "Title",
            "type": "string"
          },
          "subject": {
            "default": null,
            "title": "Subject",
            "type": "string"
          },
          "keywords": {
            "default": null,
            "title": "Keywords",
            "type": "string"
          }
        },
        "required": [
          "filename"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_text",
      "description": "\n    Extracts and returns all the text content from an existing Word document.\n\n    Args:\n        filename (str): The path to the Word document.\n\n    Returns:\n        str: The full text content of the document.\n\n    Example:\n        get_document_text(filename='existing_report.docx')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          }
        },
        "required": [
          "filename"
        ],
        "title": "get_document_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a new paragraph of text to the end of a specified document.\n\n    Args:\n        filename (str): The path to the Word document.\n        text (str): The text content to add in the paragraph.\n        style (str, optional): The name of the style to apply (e.g., 'Normal'). Defaults to None.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_paragraph(filename='report.docx', text='This is a new paragraph.')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "style": {
            "default": null,
            "title": "Style",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        filename (str): The path to the Word document.\n        text (str): The text of the heading.\n        level (int): The heading level, from 0 (Title) to 9.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_heading(filename='report.docx', text='Chapter 1', level=1)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "filename",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "\n    Creates a new custom paragraph style.\n\n    Args:\n        filename (str): Path to the Word document.\n        style_name (str): Name for the new custom style.\n        font_name (str, optional): Font for the style (e.g., 'Calibri').\n        font_size_pt (int, optional): Font size in points.\n        bold (bool, optional): Whether the font should be bold.\n        italic (bool, optional): Whether the font should be italic.\n        underline (bool, optional): Whether the font should be underlined.\n\n    Returns:\n        str: A JSON string confirming style creation.\n\n    Example:\n        create_custom_style(filename='report.docx', style_name='CustomBody', font_name='Arial', font_size_pt=12)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "font_name": {
            "default": null,
            "title": "Font Name",
            "type": "string"
          },
          "font_size_pt": {
            "default": null,
            "title": "Font Size Pt",
            "type": "integer"
          },
          "bold": {
            "default": false,
            "title": "Bold",
            "type": "boolean"
          },
          "italic": {
            "default": false,
            "title": "Italic",
            "type": "boolean"
          },
          "underline": {
            "default": false,
            "title": "Underline",
            "type": "boolean"
          }
        },
        "required": [
          "filename",
          "style_name"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "\n    Searches for text and applies formatting to all instances found.\n\n    Args:\n        filename (str): Path to the Word document.\n        search_text (str): The text to find and format.\n        bold (bool, optional): Apply bold formatting.\n        italic (bool, optional): Apply italic formatting.\n        underline (bool, optional): Apply underline formatting.\n\n    Returns:\n        str: JSON string reporting the number of instances formatted.\n\n    Example:\n        format_text(filename='report.docx', search_text='important', bold=True)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "search_text": {
            "title": "Search Text",
            "type": "string"
          },
          "bold": {
            "default": false,
            "title": "Bold",
            "type": "boolean"
          },
          "italic": {
            "default": false,
            "title": "Italic",
            "type": "boolean"
          },
          "underline": {
            "default": false,
            "title": "Underline",
            "type": "boolean"
          }
        },
        "required": [
          "filename",
          "search_text"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "\n    Sets write-protection for a document. Not supported by python-docx.\n\n    Args:\n        filename (str): Path to the Word document.\n        password (str): The password for protection.\n\n    Returns:\n        str: A JSON string indicating the feature is not supported.\n\n    Example:\n        protect_document(filename='report.docx', password='123')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "\n    Adds a footnote to the end of the last paragraph.\n\n    Args:\n        filename (str): Path to the Word document.\n        footnote_text (str): The text content of the footnote.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_footnote_to_document(filename='report.docx', footnote_text='Source: Annual Report')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "footnote_text": {
            "title": "Footnote Text",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "footnote_text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_paragraph_text_from_document",
      "description": "\n    Retrieves the text from a single paragraph by its index.\n\n    Args:\n        filename (str): The path to the Word document.\n        paragraph_index (int): The zero-based index of the paragraph.\n\n    Returns:\n        str: The text content of the specified paragraph.\n\n    Example:\n        get_paragraph_text_from_document(filename='report.docx', paragraph_index=0)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "filename",
          "paragraph_index"
        ],
        "title": "get_paragraph_text_from_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "find_text_in_document",
      "description": "\n    Searches for text and returns the content of all paragraphs containing it.\n\n    Args:\n        filename (str): The path to the Word document.\n        search_text (str): The text to search for.\n\n    Returns:\n        str: A JSON string containing a list of paragraph texts.\n\n    Example:\n        find_text_in_document(filename='report.docx', search_text='budget')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "search_text": {
            "title": "Search Text",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "search_text"
        ],
        "title": "find_text_in_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table with a specified number of rows and columns.\n\n    Args:\n        filename (str): Path to the Word document.\n        rows (int): The number of rows in the table.\n        cols (int): The number of columns in the table.\n        style (str, optional): Style for the table (e.g., 'Light Shading Accent 1').\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_table(filename='report.docx', rows=3, cols=4)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          },
          "style": {
            "default": "Table Grid",
            "title": "Style",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_picture",
      "description": "\n    Adds a picture from a local path to the document.\n\n    Args:\n        filename (str): Path to the Word document.\n        picture_path (str): File path of the image to be added.\n        width_cm (float, optional): Width of the picture in centimeters.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_picture(filename='report.docx', picture_path='logo.png', width_cm=5)\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "picture_path": {
            "title": "Picture Path",
            "type": "string"
          },
          "width_cm": {
            "default": null,
            "title": "Width Cm",
            "type": "number"
          }
        },
        "required": [
          "filename",
          "picture_path"
        ],
        "title": "add_pictureArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a manual page break to the end of the document.\n\n    Args:\n        filename (str): The path to the Word document.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_page_break(filename='report.docx')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          }
        },
        "required": [
          "filename"
        ],
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "add_header",
      "description": "\n    Adds or replaces the document's primary header.\n\n    Args:\n        filename (str): The path to the Word document.\n        text (str): The text to place in the header.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_header(filename='report.docx', text='Company Confidential')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "text"
        ],
        "title": "add_headerArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footer",
      "description": "\n    Adds or replaces the document's primary footer.\n\n    Args:\n        filename (str): The path to the Word document.\n        text (str): The text to place in the footer.\n\n    Returns:\n        str: A JSON string confirming the operation.\n\n    Example:\n        add_footer(filename='report.docx', text='Page 1')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "filename",
          "text"
        ],
        "title": "add_footerArguments",
        "type": "object"
      }
    },
    {
      "name": "convert_to_pdf",
      "description": "\n    Converts a Word document to PDF format.\n\n    Args:\n        filename (str): Path to the source Word document.\n        output_filename (str, optional): Path for the output PDF file.\n                                        Defaults to the same name with a .pdf extension.\n\n    Returns:\n        str: A JSON string confirming the conversion and providing the PDF path.\n\n    Example:\n        convert_to_pdf(filename='report.docx', output_filename='report.pdf')\n    ",
      "args_schema": {
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "output_filename": {
            "default": null,
            "title": "Output Filename",
            "type": "string"
          }
        },
        "required": [
          "filename"
        ],
        "title": "convert_to_pdfArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Basic Document Creation",
        "purpose": "验证create_document工具可以使用最小参数创建一个空的Word文档。",
        "args": {
          "filename": "basic_test.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\basic_test.docx\"}"
        },
        "execution_time": 0.02399921417236328,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation with All Metadata",
        "purpose": "验证create_document工具在提供所有可选元数据时能够正确创建文档。",
        "args": {
          "filename": "full_metadata.docx",
          "author": "Jane Smith",
          "title": "Quarterly Report",
          "subject": "Finance",
          "keywords": "Q1, revenue, growth"
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\full_metadata.docx\"}"
        },
        "execution_time": 0.02404642105102539,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation with Empty Metadata Fields",
        "purpose": "验证当可选元数据字段为空字符串时，create_document工具仍能正常工作。",
        "args": {
          "filename": "empty_metadata.docx",
          "author": "",
          "title": "",
          "subject": "",
          "keywords": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\empty_metadata.docx\"}"
        },
        "execution_time": 0.02700042724609375,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation with Special Characters in Filename",
        "purpose": "验证create_document工具是否支持包含特殊字符的文件名。",
        "args": {
          "filename": "special_@#$_chars.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\special_@#$_chars.docx\"}"
        },
        "execution_time": 0.03118157386779785,
        "is_functional_test": true
      },
      {
        "case_name": "Document Creation with Long Filename",
        "purpose": "验证create_document工具对长文件名的处理能力。",
        "args": {
          "filename": "very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx\"}"
        },
        "execution_time": 0.025796890258789062,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Write to Git Directory",
        "purpose": "验证create_document工具是否阻止向敏感目录（如.git）写入文件。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.docx\"}"
        },
        "execution_time": 0.026029348373413086,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename",
        "purpose": "验证create_document工具在未提供必需的filename参数时是否返回错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nfilename\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      }
    ],
    "get_document_text": [
      {
        "case_name": "Basic Document Text Extraction",
        "purpose": "验证get_document_text工具能够正确提取一个基本Word文档的文本内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "Introduction\nSection 1.1\nHeading Level 6\nUnicode 标题 日本語\nThis is a new paragraph added to an empty document.\nSpecial chars: @#$.!<> ©®™ \nNew line and multilingual: 测试,тест,test\n\nMain Heading\n"
        },
        "execution_time": 0.02199864387512207,
        "is_functional_test": true
      },
      {
        "case_name": "Text Extraction from Metadata Document",
        "purpose": "验证get_document_text工具能够正确提取包含元数据的Word文档中的文本内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx"
        },
        "response": {
          "result": "This is a new paragraph added to a document with metadata.\nDocument Title\n\n"
        },
        "execution_time": 0.05576157569885254,
        "is_functional_test": true
      },
      {
        "case_name": "Text Extraction with Special Characters in Document",
        "purpose": "验证get_document_text工具能够处理并正确提取包含特殊字符的Word文档中的文本内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx"
        },
        "response": {
          "result": "Sub-sub-sub-heading\n"
        },
        "execution_time": 0.029025793075561523,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Extract Text from .git Directory File",
        "purpose": "验证get_document_text工具是否能安全地处理尝试从.git目录中读取文件的情况，防止敏感信息泄露。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.015000343322753906,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证get_document_text工具在指定的文件不存在时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_file.docx'\"}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证get_document_text工具在未提供必需的filename参数时是否返回错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_document_text: 1 validation error for get_document_textArguments\nfilename\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007997989654541016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Filename Extraction",
        "purpose": "验证get_document_text工具对长文件名的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx'\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Invalid File Type",
        "purpose": "验证get_document_text工具在尝试提取非Word文档（如PDF）的文本时是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf'\"}"
        },
        "execution_time": 0.004997730255126953,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Basic Paragraph Addition",
        "purpose": "验证add_paragraph工具能够向一个已存在的Word文档添加新段落，使用默认样式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "This is a new paragraph added for testing purposes."
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.05250883102416992,
        "is_functional_test": true
      },
      {
        "case_name": "Paragraph Addition with Custom Style",
        "purpose": "验证add_paragraph工具可以指定自定义样式添加段落。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "text": "This paragraph uses the Heading 1 style.",
          "style": "Heading 1"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.36087727546691895,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph to Empty Document",
        "purpose": "验证add_paragraph工具可以向空文档中成功添加段落。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt",
          "text": "First paragraph in an empty document."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt'\"}"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证add_paragraph工具支持在文本中包含特殊字符。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "text": "Special characters: @#$.!<> ©®™ 测试,тест,test"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.025002002716064453,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Add Paragraph to .git Directory File",
        "purpose": "验证add_paragraph工具是否阻止对.git目录下的文件进行修改，防止敏感信息泄露。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "text": "Attempting to add malicious content to a .git directory file."
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.036493539810180664,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证当目标文件不存在时，add_paragraph工具是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx",
          "text": "This should not be added."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_file.docx'\"}"
        },
        "execution_time": 0.008337736129760742,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证add_paragraph工具在未提供必需参数（filename或text）时是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004427433013916016,
        "is_functional_test": false
      }
    ],
    "get_paragraph_text_from_document": [
      {
        "case_name": "Basic Paragraph Text Extraction",
        "purpose": "验证get_paragraph_text_from_document工具能够正确提取文档中第一个段落的文本内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "Introduction"
        },
        "execution_time": 0.023003101348876953,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Middle Paragraph from Multi-Paragraph Document",
        "purpose": "验证get_paragraph_text_from_document工具能够正确提取文档中间段落的内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "paragraph_index": 3
        },
        "response": {
          "result": "Unicode 标题 日本語"
        },
        "execution_time": 0.05350780487060547,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Last Paragraph from Document",
        "purpose": "验证get_paragraph_text_from_document工具能够正确提取文档最后一个段落的内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "paragraph_index": 6
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.02700972557067871,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Read from .git Directory",
        "purpose": "验证get_paragraph_text_from_document工具是否能安全地处理尝试从.git目录读取文件的情况，防止敏感信息泄露。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "This should not be added to .git directory file."
        },
        "execution_time": 0.013956308364868164,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Paragraph Index (Negative)",
        "purpose": "验证当paragraph_index为负数时，工具是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Paragraph index out of range.\"}"
        },
        "execution_time": 0.027153491973876953,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Paragraph Index Out of Range",
        "purpose": "验证当请求的段落索引超出文档实际段落数量时，工具是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "paragraph_index": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Paragraph index out of range.\"}"
        },
        "execution_time": 0.029000520706176758,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Filename with Valid Paragraph Index",
        "purpose": "验证get_paragraph_text_from_document工具对长文件名和有效段落索引的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx'\"}"
        },
        "execution_time": 0.03800082206726074,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Paragraph Content",
        "purpose": "验证get_paragraph_text_from_document工具能否正确提取包含特殊字符的段落内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "Sub-sub-sub-heading"
        },
        "execution_time": 0.01751232147216797,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Basic Heading Addition",
        "purpose": "验证add_heading工具能够向一个基本文档中添加一级标题。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Main Chapter",
          "level": 1
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.04408693313598633,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Minimum Level",
        "purpose": "验证add_heading工具能够正确添加最小级别（0级）的标题。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "text": "Document Title",
          "level": 0
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.328338623046875,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Level",
        "purpose": "验证add_heading工具能够正确添加最大支持级别（9级）的标题。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "text": "Sub-sub-section",
          "level": 9
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.038172006607055664,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading to File in Git Directory",
        "purpose": "验证add_heading工具是否能安全处理尝试在.git目录下的文件中添加标题，防止敏感操作。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "text": "Hidden Section",
          "level": 2
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.02501368522644043,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Level Below Minimum",
        "purpose": "验证add_heading工具在提供低于允许范围的level参数时是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Invalid Level Test",
          "level": -1
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"level must be in range 0-9, got -1\"}"
        },
        "execution_time": 0.029669523239135742,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Level Above Maximum",
        "purpose": "验证add_heading工具在提供高于允许范围的level参数时是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Too Deep Subsection",
          "level": 10
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"level must be in range 0-9, got 10\"}"
        },
        "execution_time": 0.028002500534057617,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Heading Text",
        "purpose": "验证add_heading工具对超长标题文本的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "ThisIsAVeryLongHeadingTitleThatExceedsNormalLengthLimitsAndTestsHowTheToolHandlesItWithoutCrashingOrMalfunctioning",
          "level": 3
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.04978442192077637,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Special Characters in Text",
        "purpose": "验证add_heading工具是否能正确添加包含特殊字符的标题文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Special@#$_Chars! 日本語 标题 测试",
          "level": 2
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.07399892807006836,
        "is_functional_test": true
      }
    ],
    "create_custom_style": [
      {
        "case_name": "Basic Style Creation",
        "purpose": "验证create_custom_style工具可以使用最小参数创建一个自定义段落样式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": "CustomBody"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.0460360050201416,
        "is_functional_test": true
      },
      {
        "case_name": "Style Creation with Full Formatting Options",
        "purpose": "验证create_custom_style工具在提供所有可选格式参数时能够正确创建自定义样式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "style_name": "FormattedStyle",
          "font_name": "Times New Roman",
          "font_size_pt": 14,
          "bold": true,
          "italic": true,
          "underline": true
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.32819128036499023,
        "is_functional_test": true
      },
      {
        "case_name": "Style Creation with Default Font Settings",
        "purpose": "验证当未指定字体相关参数时，create_custom_style工具是否使用默认设置创建样式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "style_name": "DefaultFontStyle"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.01999974250793457,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Modify .git Directory Document",
        "purpose": "验证create_custom_style工具是否阻止对.git目录中的Word文档进行样式修改。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "style_name": "GitMaliciousStyle",
          "font_name": "Arial"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.03999900817871094,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证create_custom_style工具在缺少必需的filename或style_name参数时是否返回错误。",
        "args": {
          "font_name": "Verdana"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 2 validation errors for create_custom_styleArguments\nfilename\n  Field required [type=missing, input_value={'font_name': 'Verdana'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nstyle_name\n  Field required [type=missing, input_value={'font_name': 'Verdana'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006002664566040039,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证create_custom_style工具在指定文件不存在时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent.docx",
          "style_name": "NonExistentFileStyle"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent.docx'\"}"
        },
        "execution_time": 0.006997346878051758,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Style Name",
        "purpose": "验证create_custom_style工具对长样式名称的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": "VeryLongStyleNameThatExceedsNormalLengthLimitsAndMayCauseIssues"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.04850053787231445,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Style Name",
        "purpose": "验证create_custom_style工具是否支持包含特殊字符的样式名称。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "style_name": "Style@With#Special$Chars"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.31946897506713867,
        "is_functional_test": true
      }
    ],
    "format_text": [
      {
        "case_name": "Basic Text Formatting",
        "purpose": "验证format_text工具可以对文档中指定文本应用基本格式（加粗）。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "Introduction",
          "bold": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 1}"
        },
        "execution_time": 0.05054736137390137,
        "is_functional_test": true
      },
      {
        "case_name": "Multiple Formatting Options",
        "purpose": "验证format_text工具能够同时应用多种格式（加粗、斜体、下划线）到匹配的文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "Unicode 标题 日本語",
          "bold": true,
          "italic": true,
          "underline": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 1}"
        },
        "execution_time": 0.04854297637939453,
        "is_functional_test": true
      },
      {
        "case_name": "No Matching Text Found",
        "purpose": "验证当搜索文本不存在于文档中时，format_text工具能正确返回0次修改。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "nonexistenttext"
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 0}"
        },
        "execution_time": 0.08205032348632812,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Only Italic Formatting",
        "purpose": "验证仅使用斜体参数时，format_text工具是否能正确应用该格式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "search_text": "Document Title",
          "italic": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 2}"
        },
        "execution_time": 0.3397810459136963,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Format Text in .git Directory File",
        "purpose": "验证format_text工具是否阻止对.git目录中的文件进行格式化操作。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "search_text": "malicious",
          "bold": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 1}"
        },
        "execution_time": 0.018672466278076172,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证当必需参数filename或search_text缺失时，format_text工具是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool format_text: 1 validation error for format_textArguments\nsearch_text\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0060007572174072266,
        "is_functional_test": false
      },
      {
        "case_name": "Format Text with Special Characters",
        "purpose": "验证format_text工具能否处理包含特殊字符的搜索文本并正确应用格式。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "search_text": "Sub-sub-sub-heading",
          "bold": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 1}"
        },
        "execution_time": 0.022510051727294922,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Long Search Text",
        "purpose": "验证format_text工具在处理非常长的搜索文本时的表现。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "bold": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"instances_formatted\": 0}"
        },
        "execution_time": 0.049002647399902344,
        "is_functional_test": true
      }
    ],
    "find_text_in_document": [
      {
        "case_name": "Basic Text Search in Document",
        "purpose": "验证find_text_in_document工具能够正确搜索文档中包含指定文本的段落。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "Introduction"
        },
        "response": {
          "result": "[\"Introduction\"]"
        },
        "execution_time": 0.046128034591674805,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Non-Existent Text",
        "purpose": "验证当搜索文本在文档中不存在时，工具返回空列表。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "XYZ123"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.026611328125,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Case Sensitivity (Lowercase)",
        "purpose": "验证工具是否区分大小写进行搜索（例如仅小写匹配）。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "introduction"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.028998136520385742,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Special Characters",
        "purpose": "验证工具能否处理包含特殊字符的搜索文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "search_text": "@#$"
        },
        "response": {
          "result": "[\"Special characters: @#$.!<> \\u00a9\\u00ae\\u2122 \\u6d4b\\u8bd5,\\u0442\\u0435\\u0441\\u0442,test\"]"
        },
        "execution_time": 0.015364646911621094,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Search in .git Directory File",
        "purpose": "验证工具是否阻止对.git目录下的文件执行搜索操作。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "search_text": "budget"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.014828681945800781,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证当未提供filename参数时，工具是否返回参数缺失错误。",
        "args": {
          "search_text": "budget"
        },
        "response": {
          "error": "ToolException: Error executing tool find_text_in_document: 1 validation error for find_text_in_documentArguments\nfilename\n  Field required [type=missing, input_value={'search_text': 'budget'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.03150606155395508,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Search Text Parameter",
        "purpose": "验证当未提供search_text参数时，工具是否返回参数缺失错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool find_text_in_document: 1 validation error for find_text_in_documentArguments\nsearch_text\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007001161575317383,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Search Text",
        "purpose": "验证工具对极长搜索文本的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "a_very_long_search_text_1234567890_abcdefghijklmnopqrstuvwxyz"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.02499985694885254,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证add_table工具在未提供必需的filename参数时是否返回适当的错误信息。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_table: 3 validation errors for add_tableArguments\nfilename\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nrows\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\ncols\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005005359649658203,
        "is_functional_test": false
      }
    ],
    "add_picture": [
      {
        "case_name": "Basic Picture Addition",
        "purpose": "验证add_picture工具可以使用最小参数集向文档中成功添加图片。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"\"}"
        },
        "execution_time": 0.028001070022583008,
        "is_functional_test": true
      },
      {
        "case_name": "Picture Addition with Width Specification",
        "purpose": "验证add_picture工具在指定width_cm参数时能正确设置图片宽度。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "width_cm": 8.5
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.35950207710266113,
        "is_functional_test": true
      },
      {
        "case_name": "Add Non-Existent Picture",
        "purpose": "验证当picture_path指向不存在的图片文件时，工具是否返回错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_image.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\non_existent_image.jpg'\"}"
        },
        "execution_time": 0.014044761657714844,
        "is_functional_test": false
      },
      {
        "case_name": "Add Picture to Non-Existent Document",
        "purpose": "验证当filename指向不存在的Word文档时，工具是否能正确处理错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_document.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_document.docx'\"}"
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Add Picture to Git Directory File",
        "purpose": "验证add_picture工具是否阻止对.git目录中的文件进行修改，防止敏感信息泄露。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"\"}"
        },
        "execution_time": 0.01574110984802246,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Parameters",
        "purpose": "验证当必需参数filename或picture_path缺失时，工具是否抛出适当的验证错误。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_picture: 1 validation error for add_pictureArguments\npicture_path\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Large Width Value",
        "purpose": "验证当提供非常大的width_cm值时，工具是否能够处理或返回适当警告。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width_cm": 1000.0
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.14119625091552734,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Picture Path",
        "purpose": "验证add_picture工具是否支持包含特殊字符的picture_path路径。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "picture_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\@#$_test_image.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\@#$_test_image.png'\"}"
        },
        "execution_time": 0.0729820728302002,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Basic Page Break Addition",
        "purpose": "验证add_page_break工具可以在一个有效文档末尾成功添加分页符。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.3408224582672119,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Add Page Break in .git Directory File",
        "purpose": "验证add_page_break工具是否阻止在.git目录中的Word文档中添加分页符，防止敏感文件被修改。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.12215304374694824,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证当指定的Word文档不存在时，add_page_break工具是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_file.docx'\"}"
        },
        "execution_time": 0.14469575881958008,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证add_page_break工具在未提供必需的filename参数时是否返回错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool add_page_break: 1 validation error for add_page_breakArguments\nfilename\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.1261756420135498,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Filename",
        "purpose": "验证add_page_break工具对长文件名的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx'\"}"
        },
        "execution_time": 0.12009191513061523,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Filename",
        "purpose": "验证add_page_break工具是否支持包含特殊字符的文件名。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$_chars.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_chars.docx'\"}"
        },
        "execution_time": 0.1291203498840332,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Metadata Document",
        "purpose": "验证add_page_break工具可以正确向包含元数据的文档添加分页符。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.6252317428588867,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Special Characters Document",
        "purpose": "验证add_page_break工具可以正确向包含特殊字符和多语言内容的文档添加分页符。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.11480164527893066,
        "is_functional_test": true
      }
    ],
    "add_header": [
      {
        "case_name": "Basic Header Addition",
        "purpose": "验证add_header工具能够向一个基本Word文档添加指定的页眉内容。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Company Confidential"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.5602133274078369,
        "is_functional_test": true
      },
      {
        "case_name": "Header Replacement in Metadata Document",
        "purpose": "验证add_header工具能够正确替换已有页眉内容（如果存在）并更新为新文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "text": "Updated Confidential Header"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.47106027603149414,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Header Text",
        "purpose": "验证当提供空字符串作为页眉文本时，是否能成功清除或设置为空页眉。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "text": ""
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.027001619338989258,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Header Text",
        "purpose": "验证add_header工具是否支持包含特殊字符的页眉文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx",
          "text": "Confidential @2025! <Important>"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.529855489730835,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Modify .git Directory File",
        "purpose": "验证add_header工具是否阻止对.git目录中的文件进行修改以防止安全风险。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "text": "Malicious Header Injection"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.0690011978149414,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证add_header工具在未提供必需的filename参数时是否返回适当的错误信息。",
        "args": {
          "text": "Test Header"
        },
        "response": {
          "error": "ToolException: Error executing tool add_header: 1 validation error for add_headerArguments\nfilename\n  Field required [type=missing, input_value={'text': 'Test Header'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证add_header工具在尝试操作不存在的文件时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx",
          "text": "Dummy Header"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_file.docx'\"}"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Header Text",
        "purpose": "验证add_header工具处理超长页眉文本的能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "A_very_long_header_text_that_exceeds_normal_length_and_tests_the_upper_limit_of_the_tool_for_handling_large_strings_repeated_several_times_to_increase_length_A_very_long_header_text_that_exceeds_normal_length_and_tests_the_upper_limit_of_the_tool_for_handling_large_strings_repeated_several_times_to_increase_length"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.5356550216674805,
        "is_functional_test": true
      }
    ],
    "add_footer": [
      {
        "case_name": "Basic Footer Addition",
        "purpose": "验证add_footer工具可以向一个基本文档添加页脚文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Page 1"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.38600897789001465,
        "is_functional_test": true
      },
      {
        "case_name": "Footer Replacement in Metadata Document",
        "purpose": "验证如果目标文档已有页脚，add_footer工具能够正确替换它。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "text": "Confidential - Internal Use Only"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.3528563976287842,
        "is_functional_test": true
      },
      {
        "case_name": "Add Footer with Special Characters",
        "purpose": "验证add_footer工具支持在页脚中使用特殊字符和Unicode文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "text": "© 2025 Company Name | 日本語 テスト ページ"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.04966878890991211,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Modify .git Directory Document",
        "purpose": "验证add_footer工具是否阻止对.git目录中的文档进行修改，防止敏感信息泄露或破坏。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "text": "Unauthorized footer modification attempt"
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.02098393440246582,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证add_footer工具在未提供必需的filename参数时是否返回适当的错误信息。",
        "args": {
          "text": "This should fail due to missing filename"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footer: 1 validation error for add_footerArguments\nfilename\n  Field required [type=missing, input_value={'text': 'This should fai...ue to missing filename'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Text Parameter",
        "purpose": "验证add_footer工具在未提供必需的text参数时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footer: 1 validation error for add_footerArguments\ntext\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0059969425201416016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Footer Text",
        "purpose": "验证add_footer工具对超长页脚文本的处理能力。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "This is a very long footer text that exceeds the typical length limits and might cause issues in some systems or applications but should be handled properly by this tool. This is a very long footer text that exceeds the typical length limits and might cause issues in some systems or applications but should be handled properly by this tool."
        },
        "response": {
          "result": "{\"status\": \"success\"}"
        },
        "execution_time": 0.39373087882995605,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Non-Existent File",
        "purpose": "验证add_footer工具在指定的文件不存在时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx",
          "text": "This footer should not be added"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_existent_file.docx'\"}"
        },
        "execution_time": 0.003997325897216797,
        "is_functional_test": false
      }
    ],
    "add_footnote_to_document": [
      {
        "case_name": "Basic Footnote Addition",
        "purpose": "验证add_footnote_to_document工具可以向文档末尾的基本段落添加一个简单的脚注。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "footnote_text": "This is a basic footnote."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.31686878204345703,
        "is_functional_test": true
      },
      {
        "case_name": "Footnote with Unicode Text",
        "purpose": "验证add_footnote_to_document工具能够正确处理包含Unicode字符的脚注文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "footnote_text": "Unicode 脚注 日本語 标注"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.4253556728363037,
        "is_functional_test": true
      },
      {
        "case_name": "Footnote to Document with Special Characters",
        "purpose": "验证当文档中包含特殊字符时，add_footnote_to_document工具仍能正常添加脚注。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "footnote_text": "Special characters handled in footnote."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.3266642093658447,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Add Footnote to .git Directory File",
        "purpose": "验证add_footnote_to_document工具是否阻止对.git目录中的文件进行修改操作。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "footnote_text": "Unauthorized footnote attempt."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.4011383056640625,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证add_footnote_to_document工具在未提供必需的filename参数时是否返回适当的错误信息。",
        "args": {
          "footnote_text": "This should not be added due to missing filename."
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\nfilename\n  Field required [type=missing, input_value={'footnote_text': 'This s...e to missing filename.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.1814260482788086,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Footnote Text",
        "purpose": "验证add_footnote_to_document工具在未提供必需的footnote_text参数时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\nfootnote_text\n  Field required [type=missing, input_value={'filename': 'D:\\\\devWork...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.26906251907348633,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Filename",
        "purpose": "验证add_footnote_to_document工具是否能够处理长文件名。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx",
          "footnote_text": "Footnote added to document with long filename."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.34235334396362305,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Test - Special Characters in Footnote Text",
        "purpose": "验证add_footnote_to_document工具是否能够正确处理包含特殊字符的脚注文本。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "footnote_text": "Special chars in footnote: @#$.!<> ©®™"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"'Run' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.25719308853149414,
        "is_functional_test": true
      }
    ],
    "convert_to_pdf": [
      {
        "case_name": "Basic PDF Conversion with Default Output",
        "purpose": "验证convert_to_pdf工具在仅提供必要参数filename时能将Word文档转换为PDF，并使用默认输出文件名。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"(-2147352567, '\\u53d1\\u751f\\u610f\\u5916\\u3002', (0, 'Microsoft Word', 'Word \\u5728\\u8bd5\\u56fe\\u6253\\u5f00\\u6587\\u4ef6\\u65f6\\u9047\\u5230\\u9519\\u8bef\\u3002\\\\n\\u8bf7\\u5c1d\\u8bd5\\u4e0b\\u5217\\u65b9\\u6cd5:\\\\n* \\u68c0\\u67e5\\u6587\\u6863\\u6216\\u9a71\\u52a8\\u5668\\u7684\\u6587\\u4ef6\\u6743\\u9650\\u3002\\\\n* \\u786e\\u4fdd\\u6709\\u8db3\\u591f\\u7684\\u5185\\u5b58\\u548c\\u78c1\\u76d8\\u7a7a\\u95f4\\u3002\\\\n* \\u7528\\u6587\\u672c\\u6062\\u590d\\u8f6c\\u6362\\u5668\\u6253\\u5f00\\u6587\\u4ef6\\u3002\\\\r (D:\\\\\\\\devWorkspace\\\\\\\\...\\\\\\\\test_output.docx)', 'wdmain11.chm', 24601, -2146823167), None)\"}"
        },
        "execution_time": 0.8849539756774902,
        "is_functional_test": true
      },
      {
        "case_name": "PDF Conversion with Custom Output Filename",
        "purpose": "验证convert_to_pdf工具在提供output_filename参数时能正确生成指定名称的PDF文件。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "output_filename": "custom_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"pdf_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\workspace\\\\pipeline-output-servers\\\\gemini-2.5-pro\\\\mcp_word_document_processor\\\\refined\\\\custom_output.pdf\"}"
        },
        "execution_time": 6.119282484054565,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Convert .git Directory Document to PDF",
        "purpose": "验证convert_to_pdf工具是否阻止对.git目录下的文档进行转换操作，防止敏感数据处理风险。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"pdf_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.pdf\"}"
        },
        "execution_time": 4.41330099105835,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Required Filename Parameter",
        "purpose": "验证convert_to_pdf工具在未提供必需的filename参数时是否返回适当的错误信息。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool convert_to_pdf: 1 validation error for convert_to_pdfArguments\nfilename\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Conversion of Document with Special Characters in Filename",
        "purpose": "验证convert_to_pdf工具是否支持包含特殊字符的输入文件名并成功转换为PDF。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx"
        },
        "response": {
          "result": "{\"status\": \"success\", \"pdf_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_doc.pdf\"}"
        },
        "execution_time": 4.558469295501709,
        "is_functional_test": true
      },
      {
        "case_name": "Conversion with Long Output Filename",
        "purpose": "验证convert_to_pdf工具是否能够处理带有长文件名的输出PDF文件。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "output_filename": "very_long_output_filename_1234567890_abcdefghijklmnopqrstuvwxyz.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"(-2147352567, '\\u53d1\\u751f\\u610f\\u5916\\u3002', (0, 'Microsoft Word', 'Word \\u5728\\u8bd5\\u56fe\\u6253\\u5f00\\u6587\\u4ef6\\u65f6\\u9047\\u5230\\u9519\\u8bef\\u3002\\\\n\\u8bf7\\u5c1d\\u8bd5\\u4e0b\\u5217\\u65b9\\u6cd5:\\\\n* \\u68c0\\u67e5\\u6587\\u6863\\u6216\\u9a71\\u52a8\\u5668\\u7684\\u6587\\u4ef6\\u6743\\u9650\\u3002\\\\n* \\u786e\\u4fdd\\u6709\\u8db3\\u591f\\u7684\\u5185\\u5b58\\u548c\\u78c1\\u76d8\\u7a7a\\u95f4\\u3002\\\\n* \\u7528\\u6587\\u672c\\u6062\\u590d\\u8f6c\\u6362\\u5668\\u6253\\u5f00\\u6587\\u4ef6\\u3002\\\\r (D:\\\\\\\\devWorkspace\\\\\\\\...\\\\\\\\test_output.docx)', 'wdmain11.chm', 24601, -2146823167), None)\"}"
        },
        "execution_time": 1.948061227798462,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Input File Does Not Exist",
        "purpose": "验证convert_to_pdf工具在提供的输入Word文档不存在时是否返回适当的错误信息。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"(-2147352567, '\\u53d1\\u751f\\u610f\\u5916\\u3002', (0, 'Microsoft Word', '\\u5f88\\u62b1\\u6b49\\uff0c\\u627e\\u4e0d\\u5230\\u60a8\\u7684\\u6587\\u4ef6\\u3002\\u8be5\\u9879\\u76ee\\u662f\\u5426\\u5df2\\u79fb\\u52a8\\u3001\\u91cd\\u547d\\u540d\\u6216\\u5220\\u9664?\\\\r (D:\\\\\\\\...\\\\\\\\testFiles\\\\\\\\non_existent_file.docx)', 'wdmain11.chm', 24654, -2146823114), None)\"}"
        },
        "execution_time": 0.020243406295776367,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Very Long Filename Conversion",
        "purpose": "验证convert_to_pdf工具是否能够处理非常长的输入文件名并成功转换为PDF。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"(-2147352567, '\\u53d1\\u751f\\u610f\\u5916\\u3002', (0, 'Microsoft Word', 'Word \\u5728\\u8bd5\\u56fe\\u6253\\u5f00\\u6587\\u4ef6\\u65f6\\u9047\\u5230\\u9519\\u8bef\\u3002\\\\n\\u8bf7\\u5c1d\\u8bd5\\u4e0b\\u5217\\u65b9\\u6cd5:\\\\n* \\u68c0\\u67e5\\u6587\\u6863\\u6216\\u9a71\\u52a8\\u5668\\u7684\\u6587\\u4ef6\\u6743\\u9650\\u3002\\\\n* \\u786e\\u4fdd\\u6709\\u8db3\\u591f\\u7684\\u5185\\u5b58\\u548c\\u78c1\\u76d8\\u7a7a\\u95f4\\u3002\\\\n* \\u7528\\u6587\\u672c\\u6062\\u590d\\u8f6c\\u6362\\u5668\\u6253\\u5f00\\u6587\\u4ef6\\u3002\\\\r (D:\\\\\\\\...\\\\\\\\this_is_a_very_long_file_name_...)', 'wdmain11.chm', 24601, -2146823167), None)\"}"
        },
        "execution_time": 0.10665583610534668,
        "is_functional_test": true
      }
    ],
    "protect_document": [
      {
        "case_name": "Basic Protection Attempt",
        "purpose": "验证protect_document工具在调用时返回正确的不支持信息。",
        "args": {
          "filename": "basic_test.docx",
          "password": "test123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Protection with Empty Password",
        "purpose": "验证当提供空密码时，protect_document工具是否仍返回标准的不支持响应。",
        "args": {
          "filename": "empty_password_test.docx",
          "password": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Protect .git Directory File",
        "purpose": "验证protect_document工具是否能安全地处理尝试保护.git目录中的文件，防止敏感操作。",
        "args": {
          "filename": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx",
          "password": "securepass"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Filename Parameter",
        "purpose": "验证protect_document工具在未提供必需的filename参数时是否返回参数缺失错误。",
        "args": {
          "password": "missingfilepass"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\nfilename\n  Field required [type=missing, input_value={'password': 'missingfilepass'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006995677947998047,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Missing Password Parameter",
        "purpose": "验证protect_document工具在未提供必需的password参数时是否仍返回不支持响应（因参数校验失败）。",
        "args": {
          "filename": "no_password_provided.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\npassword\n  Field required [type=missing, input_value={'filename': 'no_password_provided.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.007001638412475586,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Filename Protection",
        "purpose": "验证protect_document工具对长文件名的处理能力。",
        "args": {
          "filename": "very_long_filename_1234567890_abcdefghijklmnopqrstuvwxyz.docx",
          "password": "longpass123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.004994869232177734,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Password",
        "purpose": "验证protect_document工具是否能正确处理包含特殊字符的密码输入。",
        "args": {
          "filename": "special_chars_password_test.docx",
          "password": "@#$_special!pass"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.004001617431640625,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode Password Support Test",
        "purpose": "验证protect_document工具是否能处理包含Unicode字符的密码（如中文、日文等）。",
        "args": {
          "filename": "unicode_password_test.docx",
          "password": "测试密码123日本語"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Password protection is not supported by the underlying library.\"}"
        },
        "execution_time": 0.008002281188964844,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 127
}