{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_text_file_manipulator",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_text_file_manipulator/refined/server.py",
  "timestamp": "2025-07-13T02:52:01.659786",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    Reads the contents of one or more text files, with optional line range selection.\n\n    Args:\n        filepaths: A list of paths to the text files to be read.\n                   Example: [\"/path/to/file1.txt\", \"relative/path/to/file2.py\"]\n        start_line: The 1-indexed starting line for reading. If None, starts from the beginning.\n                    Example: 10\n        end_line: The 1-indexed ending line for reading. If None, reads to the end.\n                  Example: 20\n\n    Returns:\n        A dictionary where keys are file paths and values contain the content, hash, or an error message.\n        Example:\n        {\n            \"/path/to/file1.txt\": {\n                \"content\": [\"line 1\", \"line 2\"],\n                \"hash\": \"sha256_hash_string\"\n            },\n            \"non_existent_file.txt\": {\n                \"error\": \"File not found.\"\n            }\n        }\n    ",
      "args_schema": {
        "properties": {
          "filepaths": {
            "items": {
              "type": "string"
            },
            "title": "Filepaths",
            "type": "array"
          },
          "start_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Start Line"
          },
          "end_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "End Line"
          }
        },
        "required": [
          "filepaths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    Creates a new text file with initial content. Fails if the file already exists.\n\n    Args:\n        filepath: The path where the new text file will be created.\n                  Example: \"new_project/main.py\"\n        content: The initial string content to write to the file.\n                 Example: \"print('Hello, World!')\"\n\n    Returns:\n        A dictionary with a status message indicating success or failure.\n        Example:\n        {\"status\": \"File 'new_project/main.py' created successfully.\"}\n    ",
      "args_schema": {
        "properties": {
          "filepath": {
            "title": "Filepath",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "filepath",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    Appends new content to the end of an existing text file.\n\n    Args:\n        filepath: The path to the text file to be modified.\n                  Example: \"logs/app.log\"\n        content: The string content to append to the file.\n                 Example: \"\\n2023-10-27: User logged in.\"\n\n    Returns:\n        A dictionary with a status message and the new file hash.\n        Example:\n        {\"status\": \"Content appended successfully.\", \"new_hash\": \"new_sha256_hash\"}\n    ",
      "args_schema": {
        "properties": {
          "filepath": {
            "title": "Filepath",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "filepath",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    Deletes a specified range of lines (inclusive) from a text file.\n\n    Args:\n        filepath: The path to the text file to be modified.\n                  Example: \"config.txt\"\n        start_line: The 1-indexed starting line of the range to delete.\n                    Example: 5\n        end_line: The 1-indexed ending line of the range to delete.\n                  Example: 7\n\n    Returns:\n        A dictionary with a status message and the new file hash.\n        Example:\n        {\"status\": \"Lines 5-7 deleted successfully.\", \"new_hash\": \"new_sha256_hash\"}\n    ",
      "args_schema": {
        "properties": {
          "filepath": {
            "title": "Filepath",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "filepath",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    Inserts a block of text at a specific line number in a file.\n\n    Args:\n        filepath: The path to the text file to be modified.\n                  Example: \"document.txt\"\n        insert_at_line: The 1-indexed line number at which to insert the new content.\n                        Example: 3\n        content: The string content to insert. Newlines create multiple lines.\n                 Example: \"This is a new line.\\nAnd another one.\"\n\n    Returns:\n        A dictionary with a status message and the new file hash.\n        Example:\n        {\"status\": \"Content inserted at line 3.\", \"new_hash\": \"new_sha256_hash\"}\n    ",
      "args_schema": {
        "properties": {
          "filepath": {
            "title": "Filepath",
            "type": "string"
          },
          "insert_at_line": {
            "title": "Insert At Line",
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "filepath",
          "insert_at_line",
          "content"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    Atomically replaces a range of lines with new content, using a hash for concurrency control.\n\n    Args:\n        filepath: The path to the text file to be patched.\n                  Example: \"source_code.py\"\n        start_line: The 1-indexed starting line of the content to be replaced.\n                    Example: 15\n        end_line: The 1-indexed ending line of the content to be replaced.\n                  Example: 20\n        new_content: The new string content that will replace the specified line range.\n                     Example: \"def new_function():\\n    pass\"\n        expected_hash: The SHA-256 hash of the file before this patch operation.\n                       Example: \"sha256_hash_of_the_original_file\"\n\n    Returns:\n        A dictionary with a status message and the new hash if successful.\n        Example on success:\n        {\"status\": \"Patch applied successfully.\", \"new_hash\": \"new_sha256_hash\"}\n        Example on hash mismatch:\n        {\"status\": \"Conflict: File has been modified by another process.\", \"new_hash\": null}\n    ",
      "args_schema": {
        "properties": {
          "filepath": {
            "title": "Filepath",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          },
          "expected_hash": {
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "filepath",
          "start_line",
          "end_line",
          "new_content",
          "expected_hash"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "Basic Text File Creation",
        "purpose": "验证工具能够成功创建一个文本文件并写入初始内容",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "content": "This is a test file content."
        },
        "response": {
          "result": "{\n  \"status\": \"File 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt' created successfully.\"\n}"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "File Creation With Empty Content",
        "purpose": "验证工具可以处理空内容的情况，创建一个空文本文件",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"status\": \"File 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt' created successfully.\"\n}"
        },
        "execution_time": 0.007519721984863281,
        "is_functional_test": true
      },
      {
        "case_name": "File Creation Fails If File Exists",
        "purpose": "验证当目标文件已存在时，工具拒绝覆盖并返回失败状态",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "content": "This should not overwrite the existing file."
        },
        "response": {
          "result": "{\n  \"status\": \"Error: File 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.docx' already exists.\"\n}"
        },
        "execution_time": 0.005052328109741211,
        "is_functional_test": false
      },
      {
        "case_name": "Filepath Contains Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件路径",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_项目!@#$%^&*()_file.txt",
          "content": "File with special characters in name"
        },
        "response": {
          "result": "{\n  \"status\": \"Error creating file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt': [Errno 22] Invalid argument: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_项目!@#$%^&*()_file.txt'\"\n}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Long Filepath Boundary Test",
        "purpose": "测试最大长度文件路径下的文件创建能力",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\another_long_subdir\\longfilename.txt",
          "content": "Testing long path support"
        },
        "response": {
          "result": "{\n  \"status\": \"File 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt' created successfully.\"\n}"
        },
        "execution_time": 0.0036919116973876953,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Filepath Security Check",
        "purpose": "验证工具是否拒绝非法或危险路径（如系统目录）",
        "args": {
          "filepath": "C:\\Windows\\system.ini",
          "content": "Malicious attempt to write system file"
        },
        "response": {
          "result": "{\n  \"status\": \"Error: File 'C:\\\\Windows\\\\system.ini' already exists.\"\n}"
        },
        "execution_time": 0.00710749626159668,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters Error Handling",
        "purpose": "验证缺少必填参数时是否返回明确错误信息",
        "args": {
          "content": "Missing filepath parameter"
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 1 validation error for create_text_fileArguments\nfilepath\n  Field required [type=missing, input_value={'content': 'Missing filepath parameter'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003790140151977539,
        "is_functional_test": false
      },
      {
        "case_name": "Write Protected Directory Error Handling",
        "purpose": "验证尝试写入受保护目录时是否能优雅处理权限不足错误",
        "args": {
          "filepath": "C:\\Program Files\\protected_file.txt",
          "content": "Trying to write to protected system directory"
        },
        "response": {
          "result": "{\n  \"status\": \"Error creating file 'C:\\\\Program Files\\\\protected_file.txt': [Errno 13] Permission denied: 'C:\\\\\\\\Program Files\\\\\\\\protected_file.txt'\"\n}"
        },
        "execution_time": 0.0036809444427490234,
        "is_functional_test": false
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "Basic Text File Reading",
        "purpose": "验证工具能够成功读取一个文本文件的全部内容",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt\": {\n    \"content\": [\n      \"This is a test file content.\"\n    ],\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  }\n}"
        },
        "execution_time": 0.004264116287231445,
        "is_functional_test": true
      },
      {
        "case_name": "Read Multiple Files Successfully",
        "purpose": "验证工具可以同时读取多个存在的文本文件的内容",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt\": {\n    \"content\": [\n      \"This is a test file content.\"\n    ],\n    \"hash\": \"dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt\": {\n    \"content\": [],\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.011453866958618164,
        "is_functional_test": true
      },
      {
        "case_name": "Read Empty File Content",
        "purpose": "验证工具能正确处理空文件的情况，返回空内容数组",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt\": {\n    \"content\": [],\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.009998798370361328,
        "is_functional_test": true
      },
      {
        "case_name": "Line Range Selection Read",
        "purpose": "验证工具可以按指定起始和结束行号读取部分内容",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "start_line": 2,
          "end_line": 5
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [\n      \"<project version=\\\"4\\\">\",\n      \"  <component name=\\\"ProjectModuleManager\\\">\",\n      \"    <modules>\",\n      \"      <module fileurl=\\\"file://$PROJECT_DIR$/.idea/pythonProject.iml\\\" filepath=\\\"$PROJECT_DIR$/.idea/pythonProject.iml\\\" />\"\n    ],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.014528274536132812,
        "is_functional_test": true
      },
      {
        "case_name": "Start Line Only Read",
        "purpose": "验证仅指定起始行时，工具是否从该行开始读取到文件末尾",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "start_line": 10
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.01752495765686035,
        "is_functional_test": true
      },
      {
        "case_name": "End Line Only Read",
        "purpose": "验证仅指定结束行时，工具是否从文件开头读取到该行",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "end_line": 8
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\",\n      \"<project version=\\\"4\\\">\",\n      \"  <component name=\\\"ProjectModuleManager\\\">\",\n      \"    <modules>\",\n      \"      <module fileurl=\\\"file://$PROJECT_DIR$/.idea/pythonProject.iml\\\" filepath=\\\"$PROJECT_DIR$/.idea/pythonProject.iml\\\" />\",\n      \"    </modules>\",\n      \"  </component>\",\n      \"</project>\"\n    ],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.016028404235839844,
        "is_functional_test": true
      },
      {
        "case_name": "File Does Not Exist Error Handling",
        "purpose": "验证尝试读取不存在的文件时是否返回明确错误信息",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.txt\": {\n    \"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.txt\"\n  }\n}"
        },
        "execution_time": 0.01008152961730957,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Filepath Security Check",
        "purpose": "验证工具是否拒绝非法或危险路径（如系统目录）的读取请求",
        "args": {
          "filepaths": [
            "C:\\Windows\\system.ini"
          ]
        },
        "response": {
          "result": "{\n  \"C:\\\\Windows\\\\system.ini\": {\n    \"content\": [\n      \"; for 16-bit app support\",\n      \"[386Enh]\",\n      \"woafont=dosapp.fon\",\n      \"EGA80WOA.FON=EGA80WOA.FON\",\n      \"EGA40WOA.FON=EGA40WOA.FON\",\n      \"CGA80WOA.FON=CGA80WOA.FON\",\n      \"CGA40WOA.FON=CGA40WOA.FON\",\n      \"\",\n      \"[drivers]\",\n      \"wave=mmdrv.dll\",\n      \"timer=timer.drv\",\n      \"\",\n      \"[mci]\"\n    ],\n    \"hash\": \"6f533ccc79227e38f18bfc63bfc961ef4d3ee0e2bf33dd097ccf3548a12b743b\"\n  }\n}"
        },
        "execution_time": 0.009082317352294922,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Filepath",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件路径",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_项目!@#$%^&*()_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt\": {\n    \"error\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt\"\n  }\n}"
        },
        "execution_time": 0.011003255844116211,
        "is_functional_test": true
      },
      {
        "case_name": "Long Filepath Boundary Test",
        "purpose": "测试最大长度文件路径下的文件读取能力",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\another_long_subdir\\longfilename.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt\": {\n    \"content\": [\n      \"Testing long path support\"\n    ],\n    \"hash\": \"116fc36022edf84d4541288a8140c48233e6e7908ad474f75a75c486c9a56dac\"\n  }\n}"
        },
        "execution_time": 0.011026144027709961,
        "is_functional_test": true
      },
      {
        "case_name": "Start Line Greater Than End Line Error",
        "purpose": "验证当起始行大于结束行时是否返回合理的参数错误",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "start_line": 20,
          "end_line": 5
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.010212182998657227,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Line Numbers Error",
        "purpose": "验证负数行号是否被正确拒绝",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "start_line": -1,
          "end_line": -5
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\",\n      \"<project version=\\\"4\\\">\",\n      \"  <component name=\\\"ProjectModuleManager\\\">\"\n    ],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.01355123519897461,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Line Numbers Error",
        "purpose": "验证零作为行号是否被正确拒绝",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
          ],
          "start_line": 0,
          "end_line": 0
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\": {\n    \"content\": [],\n    \"hash\": \"c0f87985218b0b17e81e806eb3e8e8c568d7a42294d39ae5f6afa66a9d34d892\"\n  }\n}"
        },
        "execution_time": 0.011005401611328125,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters",
        "purpose": "验证缺少必填参数时是否返回明确错误信息",
        "args": {
          "start_line": 10,
          "end_line": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 1 validation error for get_text_file_contentsArguments\nfilepaths\n  Field required [type=missing, input_value={'start_line': 10, 'end_line': 20}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00953221321105957,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt To Read Binary File",
        "purpose": "验证尝试读取非文本文件（如二进制文件）时的行为",
        "args": {
          "filepaths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\": {\n    \"error\": \"'utf-8' codec can't decode byte 0xa6 in position 11: invalid start byte\"\n  }\n}"
        },
        "execution_time": 0.008526086807250977,
        "is_functional_test": false
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "Basic Text File Append",
        "purpose": "验证工具能够成功向现有文本文件追加内容",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "content": "\nThis is appended content."
        },
        "response": {
          "result": "{\n  \"status\": \"Content appended successfully to 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt'.\",\n  \"new_hash\": \"385f0e2b3a0260c6a4cf253982f85d572f7d29af2e155b922518a217373955fe\"\n}"
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      },
      {
        "case_name": "Append Empty Content",
        "purpose": "验证工具可以处理空内容的追加操作，不改变文件内容",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"status\": \"Content appended successfully to 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt'.\",\n  \"new_hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Append To Nonexistent File Error Handling",
        "purpose": "验证尝试向不存在的文件追加内容时是否返回明确错误信息",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "content": "This should not be appended to a nonexistent file."
        },
        "response": {
          "result": "{\n  \"status\": \"Error appending to file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.txt': File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.0035054683685302734,
        "is_functional_test": false
      },
      {
        "case_name": "Filepath Contains Special Characters",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件路径",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_项目!@#$%^&*()_file.txt",
          "content": "\nAppending content to file with special characters in name"
        },
        "response": {
          "result": "{\n  \"status\": \"Error appending to file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt': File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.009006023406982422,
        "is_functional_test": true
      },
      {
        "case_name": "Long Filepath Boundary Test",
        "purpose": "测试最大长度文件路径下的文件追加能力",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\another_long_subdir\\longfilename.txt",
          "content": "\nAppending to long path support file"
        },
        "response": {
          "result": "{\n  \"status\": \"Error appending to file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt': File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.0070018768310546875,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Filepath Security Check",
        "purpose": "验证工具是否拒绝非法或危险路径（如系统目录）的追加请求",
        "args": {
          "filepath": "C:\\Windows\\system.ini",
          "content": "\nMalicious attempt to append system file"
        },
        "response": {
          "result": "{\n  \"status\": \"Error appending to file 'C:\\\\Windows\\\\system.ini': [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system.ini'\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.004503488540649414,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters Error Handling",
        "purpose": "验证缺少必填参数时是否返回明确错误信息",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 1 validation error for append_text_file_contentsArguments\ncontent\n  Field required [type=missing, input_value={'filepath': 'D:\\\\devWork...oject\\\\test_output.txt'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006528615951538086,
        "is_functional_test": false
      },
      {
        "case_name": "Write Protected Directory Error Handling",
        "purpose": "验证尝试写入受保护目录时是否能优雅处理权限不足错误",
        "args": {
          "filepath": "C:\\Program Files\\protected_file.txt",
          "content": "\nTrying to append to protected system directory"
        },
        "response": {
          "result": "{\n  \"status\": \"Error appending to file 'C:\\\\Program Files\\\\protected_file.txt': File not found: C:\\\\Program Files\\\\protected_file.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "Basic Text Insertion At Middle Line",
        "purpose": "验证工具能够在文件中间指定行号正确插入文本内容",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "insert_at_line": 2,
          "content": "This is the inserted line."
        },
        "response": {
          "result": "{\n  \"status\": \"Content inserted successfully at line 2 in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt'.\",\n  \"new_hash\": \"be43884086bba46336550b7b73a3d4a2e7c472629dfba75b9a283c7ea7dbca7f\"\n}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Insert Multiple Lines At Beginning",
        "purpose": "验证在文件开头插入多行文本时是否能正确处理换行符并保持顺序",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt",
          "insert_at_line": 1,
          "content": "First inserted line.\nSecond inserted line."
        },
        "response": {
          "result": "{\n  \"status\": \"Content inserted successfully at line 1 in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt'.\",\n  \"new_hash\": \"101608004e5bec3226ca234ca47ce498754ac5506b16bd69edd38677ef451cbd\"\n}"
        },
        "execution_time": 0.007998943328857422,
        "is_functional_test": true
      },
      {
        "case_name": "Insert At End Of File",
        "purpose": "验证在文件末尾之后插入新内容的功能是否正常",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "insert_at_line": 3,
          "content": "\nInserted at end of file."
        },
        "response": {
          "result": "{\n  \"status\": \"Content inserted successfully at line 3 in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt'.\",\n  \"new_hash\": \"3c272447ce6efe207b5516a55e36a6a0c5208c28de83fd8eca9747dbbfc97a77\"\n}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Content Insertion",
        "purpose": "验证插入空字符串时的行为，应不修改文件或仅添加空行",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\empty_file.txt",
          "insert_at_line": 1,
          "content": ""
        },
        "response": {
          "result": "{\n  \"status\": \"Content inserted successfully at line 1 in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\empty_file.txt'.\",\n  \"new_hash\": \"101608004e5bec3226ca234ca47ce498754ac5506b16bd69edd38677ef451cbd\"\n}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In Content",
        "purpose": "验证插入内容中包含特殊字符（如中文、符号）时能否被正确写入",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "insert_at_line": 2,
          "content": "插入的特殊字符内容：!@#$%^&*()_+{}[]测试"
        },
        "response": {
          "result": "{\n  \"status\": \"Content inserted successfully at line 2 in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt'.\",\n  \"new_hash\": \"16b5ea71c2db7788ea44883296b445c78842e58d9a8dc2aa95e31f46266a1d77\"\n}"
        },
        "execution_time": 0.007008075714111328,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Filepath Security Check",
        "purpose": "验证尝试向系统敏感路径插入内容时是否被安全拒绝",
        "args": {
          "filepath": "C:\\Windows\\system.ini",
          "insert_at_line": 1,
          "content": "[malicious]\nhacked=1"
        },
        "response": {
          "result": "{\n  \"status\": \"Error inserting content in 'C:\\\\Windows\\\\system.ini': [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system.ini'\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.00399327278137207,
        "is_functional_test": false
      },
      {
        "case_name": "Write Protected Directory Error Handling",
        "purpose": "验证尝试在受保护目录下插入内容时是否能优雅处理权限错误",
        "args": {
          "filepath": "C:\\Program Files\\protected_app_data.txt",
          "insert_at_line": 1,
          "content": "Unauthorized write attempt"
        },
        "response": {
          "result": "{\n  \"status\": \"Error inserting content in 'C:\\\\Program Files\\\\protected_app_data.txt': File not found: C:\\\\Program Files\\\\protected_app_data.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Line Number Error Handling",
        "purpose": "验证负数行号参数是否被正确拒绝并返回明确错误信息",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "insert_at_line": -1,
          "content": "Should not be inserted"
        },
        "response": {
          "result": "{\n  \"status\": \"Error inserting content in 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt': Invalid insert position: -1. File has 6 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "Basic Line Range Deletion",
        "purpose": "验证工具能够成功删除指定范围的文本行并返回正确状态",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"status\": \"Lines 1-1 deleted successfully from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_project\\\\test_output.txt'.\",\n  \"new_hash\": \"cdc686dc0eb30cbf347c2986b8a34a859fbcb76cc2db4efaa884fb79ef754c86\"\n}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Delete First Line Of File",
        "purpose": "验证删除文件第一行的功能",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"status\": \"Lines 1-1 deleted successfully from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml'.\",\n  \"new_hash\": \"b840d1655ca3f3dcf7b81bfa62cb56c6ae3a31f3d31404898b02e9d4c1c314ca\"\n}"
        },
        "execution_time": 0.0040645599365234375,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Line Of File",
        "purpose": "验证删除文件最后一行的功能",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": 8,
          "end_line": 8
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml': Invalid line range: 8-8. File has 7 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.008004188537597656,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Entire File Content",
        "purpose": "验证删除整个文件内容的功能",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": 1,
          "end_line": 8
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml': Invalid line range: 1-8. File has 7 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.004400730133056641,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Delete System File Attempt",
        "purpose": "验证尝试删除系统文件时的安全限制",
        "args": {
          "filepath": "C:\\Windows\\system.ini",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'C:\\\\Windows\\\\system.ini': [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system.ini'\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Start Line Greater Than End Line Error",
        "purpose": "验证当起始行大于结束行时是否返回合理的参数错误",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": 5,
          "end_line": 2
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml': Invalid line range: 5-2. File has 7 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Line Numbers Error",
        "purpose": "验证负数行号是否被正确拒绝",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": -1,
          "end_line": -3
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml': Invalid line range: -1--3. File has 7 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.021500587463378906,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Line Numbers Error",
        "purpose": "验证零作为行号是否被正确拒绝",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "start_line": 0,
          "end_line": 0
        },
        "response": {
          "result": "{\n  \"status\": \"Error deleting lines from 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml': Invalid line range: 0-0. File has 7 lines.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": false
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "Basic File Patching",
        "purpose": "验证工具能够成功用指定行范围替换内容并返回新哈希值",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 1,
          "end_line": 1,
          "new_content": "This is the new first line.",
          "expected_hash": "dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a"
        },
        "response": {
          "result": "{\n  \"status\": \"Conflict: File has been modified since it was last read. Please re-read the file and try again.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": true
      },
      {
        "case_name": "Patch With Empty New Content",
        "purpose": "验证空字符串作为新内容时能否正确删除指定行范围的内容",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 1,
          "end_line": 1,
          "new_content": "",
          "expected_hash": "116fc36022edf84d4541288a8140c48233e6e7908ad474f75a75c486c9a56dac"
        },
        "response": {
          "result": "{\n  \"status\": \"Conflict: File has been modified since it was last read. Please re-read the file and try again.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.006966114044189453,
        "is_functional_test": true
      },
      {
        "case_name": "Hash Mismatch Conflict Detection",
        "purpose": "验证当文件当前哈希与预期哈希不匹配时是否能检测到并发修改冲突",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 1,
          "end_line": 1,
          "new_content": "Conflict test content",
          "expected_hash": "invalid_hash_1234567890abcdef"
        },
        "response": {
          "result": "{\n  \"status\": \"Conflict: File has been modified since it was last read. Please re-read the file and try again.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.006997823715209961,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Filepath Security Check",
        "purpose": "验证工具是否拒绝非法或危险路径（如系统目录）的修改请求",
        "args": {
          "filepath": "C:\\Windows\\system.ini",
          "start_line": 1,
          "end_line": 5,
          "new_content": "[malicious section]\nkey=value",
          "expected_hash": "6f533ccc79227e38f18bfc63bfc961ef4d3ee0e2bf33dd097ccf3548a12b743b"
        },
        "response": {
          "result": "{\n  \"status\": \"Error patching file 'C:\\\\Windows\\\\system.ini': [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system.ini'\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Required Parameters Error Handling",
        "purpose": "验证缺少必填参数时是否返回明确错误信息",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 2 validation errors for patch_text_file_contentsArguments\nnew_content\n  Field required [type=missing, input_value={'filepath': 'D:\\\\devWork...line': 1, 'end_line': 1}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nexpected_hash\n  Field required [type=missing, input_value={'filepath': 'D:\\\\devWork...line': 1, 'end_line': 1}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": false
      },
      {
        "case_name": "Start Line Greater Than End Line Error",
        "purpose": "验证当起始行大于结束行时是否返回合理的参数错误",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_project\\test_output.txt",
          "start_line": 5,
          "end_line": 1,
          "new_content": "This should not be applied",
          "expected_hash": "dddb3cd3dbaf57421a0b001e3f8224c71d742133e1482ba3211f70e8f794796a"
        },
        "response": {
          "result": "{\n  \"status\": \"Conflict: File has been modified since it was last read. Please re-read the file and try again.\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Filepath",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件路径",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_项目!@#$%^&*()_file.txt",
          "start_line": 1,
          "end_line": 1,
          "new_content": "New content for special chars file",
          "expected_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        },
        "response": {
          "result": "{\n  \"status\": \"Error patching file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_项目!@#$%^&*()_file.txt': [Errno 22] Invalid argument: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_项目!@#$%^&*()_file.txt'\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.005006074905395508,
        "is_functional_test": true
      },
      {
        "case_name": "Long Filepath Boundary Test",
        "purpose": "测试最大长度文件路径下的文件修改能力",
        "args": {
          "filepath": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\another_long_subdir\\longfilename.txt",
          "start_line": 1,
          "end_line": 1,
          "new_content": "Updated long path file content",
          "expected_hash": "116fc36022edf84d4541288a8140c48233e6e7908ad474f75a75c486c9a56dac"
        },
        "response": {
          "result": "{\n  \"status\": \"Error patching file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt': File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_directory_name_1234567890_abcdefghijklmnopqrstuvwxyz\\\\another_long_subdir\\\\longfilename.txt\",\n  \"new_hash\": null\n}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 55
}