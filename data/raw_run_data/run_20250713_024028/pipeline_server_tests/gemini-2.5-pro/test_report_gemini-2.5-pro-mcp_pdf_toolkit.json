{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_pdf_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_pdf_toolkit/refined/server.py",
  "timestamp": "2025-07-13T02:51:13.943381",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merges multiple specified PDF files into a single PDF file.\n\n    Args:\n        pdf_paths (list[str]): A list containing the full paths to the PDF files to be merged.\n        output_path (str): The save path for the merged PDF file.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Files merged successfully into output.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "pdf_paths": {
            "items": {
              "type": "string"
            },
            "title": "Pdf Paths",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "pdf_paths",
          "output_path"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extracts specified pages from a PDF file and creates a new PDF file.\n\n    Args:\n        source_path (str): The full path to the source PDF file.\n        pages (list[int]): A list of page numbers to extract (0-indexed).\n        output_path (str): The save path for the new PDF file with the extracted pages.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Extracted 3 pages into new_file.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "pages": {
            "items": {
              "type": "integer"
            },
            "title": "Pages",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "pages",
          "output_path"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Searches for PDF files matching a glob pattern in a specified directory.\n\n    Args:\n        directory (str): The path to the directory to search in.\n        pattern (str): The glob pattern to match filenames (e.g., '*.pdf', 'report-*.pdf').\n\n    Returns:\n        list[str]: A list containing the full paths of all matching PDF files.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Finds and merges PDF files in a specified order from a directory based on a list of filename patterns.\n    Supports both exact and fuzzy matching modes.\n\n    Args:\n        directory (str): The path to the directory to search for PDF files.\n        order_patterns (list[str]): A list of filename patterns that defines the merge order.\n        output_path (str): The save path for the merged PDF file.\n        match_mode (str): The matching mode, either 'exact' or 'fuzzy'. Defaults to 'exact'.\n\n    Returns:\n        dict: A dictionary containing the operation status, a message, and a list of the actual files merged.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_patterns": {
            "items": {
              "type": "string"
            },
            "title": "Order Patterns",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "match_mode": {
            "default": "exact",
            "title": "Match Mode",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "order_patterns",
          "output_path"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Finds PDFs in a directory that are related to a target PDF based on content similarity.\n    It analyzes the text content of the target PDF and compares it against other PDFs\n    in the search directory to find the most similar ones.\n\n    Args:\n        target_pdf (str): The full path to the target PDF file used as the baseline for comparison.\n        search_directory (str): The path to the directory where related files will be searched.\n        top_n (int): The maximum number of related PDF files to return. Defaults to 5.\n\n    Returns:\n        list[dict]: A list of related PDF files, where each element is a dictionary\n                    containing the file path and a similarity score. Returns a list\n                    with an error dictionary if an issue occurs.\n    ",
      "args_schema": {
        "properties": {
          "target_pdf": {
            "title": "Target Pdf",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          },
          "top_n": {
            "default": 5,
            "title": "Top N",
            "type": "integer"
          }
        },
        "required": [
          "target_pdf",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_pdfs": [
      {
        "case_name": "Search All PDFs in Test Directory",
        "purpose": "验证工具是否能正确搜索指定目录下所有PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "Search Specific Named PDFs",
        "purpose": "验证工具是否能根据特定命名模式匹配PDF文件，如 'paper1.pdf'",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "paper1.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "execution_time": 0.008161067962646484,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Prefix Pattern",
        "purpose": "验证工具是否能识别带有前缀的PDF文件（如 'rule*.pdf'）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "rule*.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        },
        "execution_time": 0.00652623176574707,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Directory Search",
        "purpose": "测试空目录中搜索PDF的行为，预期返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0062334537506103516,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证工具在无效目录路径下的错误处理能力",
        "args": {
          "directory": "D:\\invalid\\path\\that\\does\\not\\exist",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003993034362792969,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Pattern",
        "purpose": "测试包含特殊字符的匹配模式是否能被正确解析和匹配",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "[pP]aper[0-9].pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "execution_time": 0.004510164260864258,
        "is_functional_test": true
      },
      {
        "case_name": "Hidden Files Security Check",
        "purpose": "确保工具不会意外访问或暴露隐藏文件系统内容（如.git目录）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0066339969635009766,
        "is_functional_test": false
      },
      {
        "case_name": "No Matching Files",
        "purpose": "测试无匹配结果时的行为，预期返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "nonexistent_*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.0045087337493896484,
        "is_functional_test": true
      }
    ],
    "merge_pdfs": [
      {
        "case_name": "Merge Two Valid PDFs",
        "purpose": "验证工具能否正确合并两个有效的PDF文件并生成一个输出文件。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_output.pdf\"\n}"
        },
        "execution_time": 0.07430839538574219,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证工具在仅提供一个PDF文件时是否仍能正常处理并生成输出文件。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into single_merged_output.pdf\"\n}"
        },
        "execution_time": 0.0558013916015625,
        "is_functional_test": true
      },
      {
        "case_name": "Empty PDF Paths List",
        "purpose": "测试当提供的PDF路径列表为空时，工具是否能优雅地处理错误并返回提示信息。",
        "args": {
          "pdf_paths": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"The list of PDF paths cannot be empty.\"\n}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path Directory",
        "purpose": "验证工具在指定的输出目录不存在时是否能正确处理错误。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\invalid\\path\\that\\does\\not\\exist\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_output.pdf\"\n}"
        },
        "execution_time": 0.05822277069091797,
        "is_functional_test": false
      },
      {
        "case_name": "Merge With Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符时工具的行为，确保能正确处理路径解析。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_@#$_output.pdf\"\n}"
        },
        "execution_time": 0.06373190879821777,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Merge Non-PDF Files",
        "purpose": "验证工具是否能识别非PDF文件并拒绝合并以防止无效操作。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_pdf_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.00872182846069336,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt Merge Hidden .git Files",
        "purpose": "确保工具不会意外合并隐藏目录中的敏感或非PDF文件（如.git目录）。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hidden_git_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.011198997497558594,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Large Number of PDFs",
        "purpose": "测试工具对大量PDF文件合并的边界处理能力（模拟极限场景）。",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into large_merge_output.pdf\"\n}"
        },
        "execution_time": 0.2704145908355713,
        "is_functional_test": true
      }
    ],
    "extract_pages": [
      {
        "case_name": "Extract Single Page from Valid PDF",
        "purpose": "验证工具能否正确从有效PDF中提取单个页面并生成新文件。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_single_page.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into extracted_single_page.pdf\"\n}"
        },
        "execution_time": 0.0363926887512207,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Multiple Pages from Valid PDF",
        "purpose": "验证工具能否正确从有效PDF中提取多个页面并按顺序保存到新文件。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            0,
            2,
            4
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_multiple_pages.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 3 pages into extracted_multiple_pages.pdf\"\n}"
        },
        "execution_time": 0.024643898010253906,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Pages List",
        "purpose": "测试当提供的页面列表为空时，工具是否能优雅地处理错误并返回提示信息。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pages_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 0 pages into empty_pages_output.pdf\"\n}"
        },
        "execution_time": 0.016208887100219727,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Source Path",
        "purpose": "验证工具在无效源PDF路径下的错误处理能力。",
        "args": {
          "source_path": "D:\\invalid\\path\\that\\does\\not\\exist\\file.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_source_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file not found: D:\\\\invalid\\\\path\\\\that\\\\does\\\\not\\\\exist\\\\file.pdf\"\n}"
        },
        "execution_time": 0.008465766906738281,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt Extract from .git Directory",
        "purpose": "确保工具不会意外访问或操作隐藏目录中的敏感文件（如.git目录）。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hidden_git_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.01402139663696289,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Extract Last Page of PDF",
        "purpose": "测试工具是否能正确提取PDF的最后一页（边界条件）。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            5
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\last_page_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into last_page_extracted.pdf\"\n}"
        },
        "execution_time": 0.018529176712036133,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符时工具的行为，确保能正确处理路径解析。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$_page.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into extracted_@#$_page.pdf\"\n}"
        },
        "execution_time": 0.0298614501953125,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Extract Non-PDF File",
        "purpose": "验证工具是否能识别非PDF文件并拒绝提取以防止无效操作。",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_pdf_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.01507425308227539,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Content Similarity Search",
        "purpose": "验证工具能否基于内容相似性从指定目录中找到与目标PDF相关的文件（使用默认top_n=5）。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_@#$_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_merged_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_merge_output.pdf\",\n  \"similarity_score\": 0.9094\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\",\n  \"similarity_score\": 0.9094\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$_page.pdf\",\n  \"similarity_score\": 0.6096\n}"
        ],
        "execution_time": 3.2408840656280518,
        "is_functional_test": true
      },
      {
        "case_name": "Custom Top N Result Limit",
        "purpose": "测试工具是否能正确处理用户自定义的top_n参数，限制返回结果数量为3。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 3
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_multiple_pages.pdf\",\n  \"similarity_score\": 0.678\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\last_page_extracted.pdf\",\n  \"similarity_score\": 0.4804\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\",\n  \"similarity_score\": 0.4189\n}"
        ],
        "execution_time": 3.110384702682495,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Directory Handling",
        "purpose": "验证在搜索目录为空时工具的行为，预期返回空列表。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir",
          "top_n": 5
        },
        "response": {
          "result": "{\n  \"error\": \"Search directory not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_dir\"\n}"
        },
        "execution_time": 0.005034208297729492,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Target PDF Path",
        "purpose": "测试当提供无效的目标PDF路径时，工具是否能优雅地处理错误。",
        "args": {
          "target_pdf": "D:\\invalid\\path\\to\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 5
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: D:\\\\invalid\\\\path\\\\to\\\\nonexistent.pdf\"\n}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "Non-PDF Files in Search Directory",
        "purpose": "确保工具在搜索目录中包含非PDF文件时仍能正常运行并忽略非PDF文件。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 5
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_@#$_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_merged_output.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_merge_output.pdf\",\n  \"similarity_score\": 0.9094\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\",\n  \"similarity_score\": 0.9094\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$_page.pdf\",\n  \"similarity_score\": 0.6096\n}"
        ],
        "execution_time": 3.1179397106170654,
        "is_functional_test": true
      },
      {
        "case_name": "Hidden File Security Check",
        "purpose": "验证工具不会意外访问或分析隐藏目录中的文件（如.git目录）。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "top_n": 5
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.1537764072418213,
        "is_functional_test": false
      },
      {
        "case_name": "Top N Equals Zero",
        "purpose": "测试当top_n设置为0时工具的行为，应视为无效输入并返回错误或空列表。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 0
        },
        "response": {
          "result": ""
        },
        "execution_time": 3.2276132106781006,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Paths",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件路径和文件名。",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$_page.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 5
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_single_page.pdf\",\n  \"similarity_score\": 1.0\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_@#$_output.pdf\",\n  \"similarity_score\": 0.6096\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n  \"similarity_score\": 0.6096\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_merged_output.pdf\",\n  \"similarity_score\": 0.6096\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_merge_output.pdf\",\n  \"similarity_score\": 0.5546\n}"
        ],
        "execution_time": 2.9516072273254395,
        "is_functional_test": true
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic Exact Match Merge",
        "purpose": "验证在默认精确匹配模式下能否根据指定顺序正确合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.07796382904052734,
        "is_functional_test": true
      },
      {
        "case_name": "Fuzzy Match Merge With Wildcards",
        "purpose": "验证模糊匹配模式下使用通配符是否能正确识别并按顺序合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "pap*.pdf",
            "rul*.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\fuzzy_merge_output.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_output.pdf\"\n  ]\n}"
        },
        "execution_time": 0.05456852912902832,
        "is_functional_test": true
      },
      {
        "case_name": "Merge With Mixed Pattern Types",
        "purpose": "测试混合使用精确和模糊匹配模式时工具的处理能力",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rul*.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mixed_merge_output.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_output.pdf\"\n  ]\n}"
        },
        "execution_time": 0.09805941581726074,
        "is_functional_test": true
      },
      {
        "case_name": "No Matching Files For Merge",
        "purpose": "验证当没有文件匹配给定模式时工具是否能优雅地处理错误",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "nonexistent1.pdf",
            "nonexistent2.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Prevent .git Directory Access",
        "purpose": "确保工具不会意外访问或合并.git目录中的非PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_patterns": [
            "config",
            "*.sample"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_config_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Stream has ended unexpectedly\"\n}"
        },
        "execution_time": 0.012999773025512695,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output Path Handling",
        "purpose": "测试无效输出路径情况下工具是否能正确处理异常并返回提示信息",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "D:\\invalid\\path\\that\\does\\not\\exist\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.11916017532348633,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Output Path",
        "purpose": "验证输出路径包含特殊字符时工具是否仍能正常执行合并操作",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.07938289642333984,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Order Patterns List",
        "purpose": "测试空模式列表时工具的行为，预期应返回错误提示",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pattern_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 40
}