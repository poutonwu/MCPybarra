{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_financialdatasets_api_hand",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_financialdatasets_api_hand/refined/server.py",
  "timestamp": "2025-07-13T02:51:32.725493",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "Retrieves the income statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of income statement records, sorted from most recent to oldest.\n    \n    Example:\n        get_income_statements(ticker='AAPL', period='annual', limit=2)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "Retrieves the balance sheets for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'MSFT').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of balance sheet records, sorted from most recent to oldest.\n\n    Example:\n        get_balance_sheets(ticker='MSFT', period='quarterly', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "Retrieves the cash flow statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'GOOGL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of cash flow statement records, sorted from most recent to oldest.\n\n    Example:\n        get_cash_flows(ticker='GOOGL', period='annual', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "Retrieves historical OHLC (Open, High, Low, Close) stock price data for a specified ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'TSLA').\n        start_date (str): The start date for the data in 'YYYY-MM-DD' format.\n        end_date (str): The end date for the data in 'YYYY-MM-DD' format.\n\n    Returns:\n        str: A JSON string representing a list of daily price records.\n\n    Example:\n        get_stock_prices(ticker='TSLA', start_date='2023-01-01', end_date='2023-01-31')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "ticker",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "Retrieves recent news articles related to a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NVDA').\n\n    Returns:\n        str: A JSON string representing a list of news articles.\n\n    Example:\n        get_market_news(ticker='NVDA')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "Retrieves the summary profile for a company, including sector, industry, employee count, and business summary.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AMZN').\n\n    Returns:\n        str: A JSON string representing a dictionary of the company's profile information.\n\n    Example:\n        get_company_profile(ticker='AMZN')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "Retrieves analyst recommendations and ratings for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NFLX').\n\n    Returns:\n        str: A JSON string representing a list of analyst recommendation records over time.\n\n    Example:\n        get_analyst_estimates(ticker='NFLX')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "Retrieves the historical dividend payment data for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'KO').\n\n    Returns:\n        str: A JSON string representing a list of dividend payments, with date and amount for each.\n\n    Example:\n        get_dividend_history(ticker='KO')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "Retrieves the historical stock split data for a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string representing a list of stock splits, with date and ratio for each.\n\n    Example:\n        get_splits_history(ticker='AAPL')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "Retrieves the company's historical earnings data, including reported and estimated EPS.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'META').\n\n    Returns:\n        str: A JSON string representing a list of historical earnings events.\n\n    Example:\n        get_earnings_history(ticker='META')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "Retrieves key financial ratios for a company, such as P/E ratio, forward P/E, and price-to-book ratio.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'JPM').\n\n    Returns:\n        str: A JSON string representing a dictionary of selected financial ratios.\n\n    Example:\n        get_financial_ratios(ticker='JPM')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "Retrieves the company's ownership structure, including major and institutional holders.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'BRK-A').\n\n    Returns:\n        str: A JSON string containing lists for 'major_holders' and 'institutional_holders'.\n\n    Example:\n        get_ownership_data(ticker='BRK-A')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的公司概况信息",
        "args": {
          "ticker": "AMZN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 0.7175285816192627,
        "is_functional_test": true
      },
      {
        "case_name": "Company Profile with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.7173957824707031,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.01032257080078125,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "A@MN$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN$'\"}"
        },
        "execution_time": 1.2654798030853271,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 1.2173397541046143,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.6884088516235352,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AMZN'; DROP TABLE companies;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'; DROP TABLE companies;--'\"}"
        },
        "execution_time": 0.7091629505157471,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AMZN; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.6972682476043701,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的年度资产负债表数据（默认参数）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7056536674499512,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet with Quarterly Period",
        "purpose": "验证工具能够正确获取指定股票代码的季度资产负债表数据",
        "args": {
          "ticker": "GOOG",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 0.705918550491333,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet with Custom Limit",
        "purpose": "验证工具在 limit 参数非默认值时，能正确返回指定数量的最新报告",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.7126619815826416,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet with Both Period and Limit",
        "purpose": "验证工具在同时提供 period 和 limit 参数时的功能正确性",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.6964497566223145,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL'; DROP TABLE balance_sheets;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'; DROP TABLE balance_sheets;--'\"}"
        },
        "execution_time": 0.6754987239837646,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7426109313964844,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Symbol",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "XYZ123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
        },
        "execution_time": 0.7130677700042725,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的年度利润表数据（默认参数）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7252404689788818,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement with Quarterly Period",
        "purpose": "验证工具能够正确获取指定股票代码的季度利润表数据",
        "args": {
          "ticker": "GOOG",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 0.7123916149139404,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement with Custom Limit",
        "purpose": "验证工具在 limit 参数非默认值时，能正确返回指定数量的最新报告",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.6902134418487549,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement with Both Period and Limit",
        "purpose": "验证工具在同时提供 period 和 limit 参数时的功能正确性",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.6878252029418945,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL'; DROP TABLE income_statements;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'; DROP TABLE income_statements;--'\"}"
        },
        "execution_time": 0.7506189346313477,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.6706986427307129,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Symbol",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "XYZ123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
        },
        "execution_time": 0.7053475379943848,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的年度现金流量表数据（默认参数）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7373201847076416,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow with Quarterly Period",
        "purpose": "验证工具能够正确获取指定股票代码的季度现金流量表数据",
        "args": {
          "ticker": "GOOG",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 0.7104144096374512,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow with Custom Limit",
        "purpose": "验证工具在 limit 参数非默认值时，能正确返回指定数量的最新报告",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.6527683734893799,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow with Both Period and Limit",
        "purpose": "验证工具在同时提供 period 和 limit 参数时的功能正确性",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 3
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
        },
        "execution_time": 0.6799948215484619,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL'; DROP TABLE cash_flows;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'; DROP TABLE cash_flows;--'\"}"
        },
        "execution_time": 0.698667049407959,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.6869425773620605,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Symbol",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "XYZ123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
        },
        "execution_time": 0.7445573806762695,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.008024215698242188,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的基本财务比率信息",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.6614253520965576,
        "is_functional_test": true
      },
      {
        "case_name": "Financial Ratios with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误并返回提示信息",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.6713435649871826,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004514455795288086,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "F$NK@T!"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'F$NK@T!'\"}"
        },
        "execution_time": 0.7364985942840576,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7018527984619141,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.6851170063018799,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'; DROP TABLE financial_ratios;--'\"}"
        },
        "execution_time": 0.7093303203582764,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7049267292022705,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Ownership Data Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的公司所有权结构数据（默认参数）",
        "args": {
          "ticker": "BRK-A"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
        },
        "execution_time": 0.712169885635376,
        "is_functional_test": true
      },
      {
        "case_name": "Ownership Data with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.7288897037506104,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "A@MN$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN$'\"}"
        },
        "execution_time": 0.7167792320251465,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7389242649078369,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.7034256458282471,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "BRK-A'; DROP TABLE ownership;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'; DROP TABLE ownership;--'\"}"
        },
        "execution_time": 0.7146139144897461,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "BRK-A; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7171065807342529,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的分析师推荐和评级信息（使用默认参数）",
        "args": {
          "ticker": "NFLX"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
        },
        "execution_time": 0.7490456104278564,
        "is_functional_test": true
      },
      {
        "case_name": "Analyst Estimates with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "XYZ123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
        },
        "execution_time": 0.7093842029571533,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.006003618240356445,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "A@MN$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN$'\"}"
        },
        "execution_time": 0.6768224239349365,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.669440507888794,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.7391993999481201,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "NFLX'; DROP TABLE analysts;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'; DROP TABLE analysts;--'\"}"
        },
        "execution_time": 0.6943588256835938,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "NFLX; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.9257104396820068,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的历史收益数据（默认参数）",
        "args": {
          "ticker": "META"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
        },
        "execution_time": 0.7135846614837646,
        "is_functional_test": true
      },
      {
        "case_name": "Earnings History with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.703819990158081,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "A@MN$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN$'\"}"
        },
        "execution_time": 0.7100110054016113,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7008519172668457,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.670191764831543,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "META'; DROP TABLE earnings;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'; DROP TABLE earnings;--'\"}"
        },
        "execution_time": 0.7390146255493164,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "META; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7101857662200928,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的最新市场新闻",
        "args": {
          "ticker": "NVDA"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
        },
        "execution_time": 1.238433599472046,
        "is_functional_test": true
      },
      {
        "case_name": "Market News with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.7467656135559082,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.005007028579711914,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时能否安全处理并返回错误信息",
        "args": {
          "ticker": "NVD@#A$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVD@#A$'\"}"
        },
        "execution_time": 0.749915599822998,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入并返回错误信息",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7127330303192139,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.7064878940582275,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "NVDA'; DROP TABLE news;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'; DROP TABLE news;--'\"}"
        },
        "execution_time": 0.695253849029541,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "NVDA; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.858257532119751,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码在特定日期范围内的历史OHLC数据（默认参数）",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.6645843982696533,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "TSLA'; DROP TABLE stock_prices;--",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'; DROP TABLE stock_prices;--'\"}"
        },
        "execution_time": 0.6952905654907227,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "TSLA; rm -rf /tmp/test;",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.6624438762664795,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Ticker Symbol",
        "purpose": "验证工具在提供无效股票代码时是否能正确返回错误信息",
        "args": {
          "ticker": "XYZ123",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
        },
        "execution_time": 0.6943976879119873,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Start Date After End Date",
        "purpose": "验证工具在开始日期晚于结束日期时能否正确处理逻辑错误",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-02-15",
          "end_date": "2023-01-15"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.7005326747894287,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "T#S@L$A!",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'T#S@L$A!'\"}"
        },
        "execution_time": 0.7650718688964844,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Date Format",
        "purpose": "验证工具在日期格式超过预期长度时的处理能力",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-011",
          "end_date": "2023-01-311"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.6635415554046631,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的股息历史数据",
        "args": {
          "ticker": "KO"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
        },
        "execution_time": 0.681145429611206,
        "is_functional_test": true
      },
      {
        "case_name": "Dividend History with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.6712241172790527,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "K@O$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'K@O$'\"}"
        },
        "execution_time": 0.7344896793365479,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.780064582824707,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.7671632766723633,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "KO'; DROP TABLE dividends;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'; DROP TABLE dividends;--'\"}"
        },
        "execution_time": 0.687368631362915,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "KO; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7293105125427246,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的股票拆分历史数据",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.7229254245758057,
        "is_functional_test": true
      },
      {
        "case_name": "Splits History with Invalid Ticker",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER'\"}"
        },
        "execution_time": 0.6950669288635254,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Parameter",
        "purpose": "验证工具在 ticker 参数为空时是否能返回错误信息",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具在 ticker 参数包含特殊字符时的处理能力",
        "args": {
          "ticker": "A@MN$"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'A@MN$'\"}"
        },
        "execution_time": 0.7069246768951416,
        "is_functional_test": false
      },
      {
        "case_name": "Numerical Ticker Input",
        "purpose": "验证工具是否能处理纯数字 ticker 输入",
        "args": {
          "ticker": "1234"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '1234'\"}"
        },
        "execution_time": 0.7636229991912842,
        "is_functional_test": false
      },
      {
        "case_name": "Long Ticker Input",
        "purpose": "验证工具在 ticker 参数过长时的边界处理能力",
        "args": {
          "ticker": "VERYLONGTICKER1234567890XYZ"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'VERYLONGTICKER1234567890XYZ'\"}"
        },
        "execution_time": 0.6829805374145508,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "验证工具是否安全处理包含 SQL 注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL'; DROP TABLE splits;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'; DROP TABLE splits;--'\"}"
        },
        "execution_time": 0.6942641735076904,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否安全处理包含命令注入尝试的 ticker 参数",
        "args": {
          "ticker": "AAPL; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.7217535972595215,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 96
}