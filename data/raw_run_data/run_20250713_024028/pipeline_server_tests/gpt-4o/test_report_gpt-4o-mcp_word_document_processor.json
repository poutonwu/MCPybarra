{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-13T02:44:36.298411",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document and sets metadata such as title, author, and subject.\n\n    Args:\n        title (str): The title of the document.\n        author (str): The author of the document.\n        subject (str): The subject of the document.\n\n    Returns:\n        str: A success message with the document's file path.\n\n    Example:\n        create_document(title=\"My Document\", author=\"John Doe\", subject=\"Sample Subject\")\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "author": {
            "title": "Author",
            "type": "string"
          },
          "subject": {
            "title": "Subject",
            "type": "string"
          }
        },
        "required": [
          "title",
          "author",
          "subject"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_text",
      "description": "\n    Extracts all text content from an existing Word document.\n\n    Args:\n        file_path (str): The path to the document file.\n\n    Returns:\n        str: A string containing the full text of the document.\n\n    Example:\n        get_document_text(file_path=\"example.docx\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "get_document_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph of text to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The paragraph text to add.\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_paragraph(file_path=\"example.docx\", text=\"This is a new paragraph.\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading of a specified level to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The heading text.\n        level (int): The heading level (1-6).\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_heading(file_path=\"example.docx\", text=\"Chapter 1\", level=1)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "\n    Creates a custom text style for the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        style_name (str): The name of the custom style.\n        font_name (str): The font name for the style.\n        font_size (int): The font size.\n        bold (bool): Whether the text is bold.\n        italic (bool): Whether the text is italicized.\n\n    Returns:\n        str: A success message confirming the style creation.\n\n    Example:\n        create_custom_style(file_path=\"example.docx\", style_name=\"CustomStyle\", font_name=\"Arial\", font_size=12, bold=True, italic=False)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "font_name": {
            "title": "Font Name",
            "type": "string"
          },
          "font_size": {
            "title": "Font Size",
            "type": "integer"
          },
          "bold": {
            "title": "Bold",
            "type": "boolean"
          },
          "italic": {
            "title": "Italic",
            "type": "boolean"
          }
        },
        "required": [
          "file_path",
          "style_name",
          "font_name",
          "font_size",
          "bold",
          "italic"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "\n    Formats a specific range of text in the document with a custom style.\n\n    Args:\n        file_path (str): The path to the document file.\n        start (int): The start index of the text range.\n        end (int): The end index of the text range.\n        style_name (str): The name of the custom style to apply.\n\n    Returns:\n        str: A success message confirming the formatting.\n\n    Example:\n        format_text(file_path=\"example.docx\", start=0, end=10, style_name=\"CustomStyle\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start": {
            "title": "Start",
            "type": "integer"
          },
          "end": {
            "title": "End",
            "type": "integer"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start",
          "end",
          "style_name"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "\n    Adds password protection to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        password (str): The password to protect the document.\n\n    Returns:\n        str: A success message confirming the protection.\n\n    Example:\n        protect_document(file_path=\"example.docx\", password=\"securepassword\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "\n    Adds a footnote to the document.\n\n    Args:\n        file_path (str): The path to the document file.\n        text (str): The footnote text.\n\n    Returns:\n        str: A success message confirming the addition.\n\n    Example:\n        add_footnote_to_document(file_path=\"example.docx\", text=\"This is a footnote.\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "get_paragraph_text_from_document",
      "description": "\n    Retrieves the text of a specific paragraph by index.\n\n    Args:\n        file_path (str): The path to the document file.\n        paragraph_index (int): The index of the paragraph.\n\n    Returns:\n        str: A string containing the text of the specified paragraph.\n\n    Example:\n        get_paragraph_text_from_document(file_path=\"example.docx\", paragraph_index=0)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "file_path",
          "paragraph_index"
        ],
        "title": "get_paragraph_text_from_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "find_text_in_document",
      "description": "\n    Searches for a specific text in the document and returns its occurrences.\n\n    Args:\n        file_path (str): The path to the document file.\n        search_text (str): The text to search for.\n\n    Returns:\n        str: A list of indices where the text occurs.\n\n    Example:\n        find_text_in_document(file_path=\"example.docx\", search_text=\"sample\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "search_text": {
            "title": "Search Text",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "search_text"
        ],
        "title": "find_text_in_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "基本文档创建与元数据设置",
        "purpose": "验证create_document工具能够成功创建一个新的Word文档并正确设置标题、作者和主题元数据。",
        "args": {
          "title": "Test Document",
          "author": "Jane Smith",
          "subject": "Testing"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"Test_Document.docx\"}"
        },
        "execution_time": 0.024042606353759766,
        "is_functional_test": true
      },
      {
        "case_name": "空字符串参数测试",
        "purpose": "验证当提供空字符串作为参数时，create_document是否仍能创建文档（允许空元数据）。",
        "args": {
          "title": "",
          "author": "",
          "subject": ""
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \".docx\"}"
        },
        "execution_time": 0.026020288467407227,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符元数据测试",
        "purpose": "验证create_document能否处理包含特殊字符的元数据输入。",
        "args": {
          "title": "Document@#$.docx",
          "author": "User<>|?*:",
          "subject": "Subject with /\\\";[]{}="
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"Document@#$.docx.docx\"}"
        },
        "execution_time": 0.026668310165405273,
        "is_functional_test": true
      },
      {
        "case_name": "已存在同名文件的冲突测试",
        "purpose": "验证在目标位置已存在相同名称的文档时，create_document的行为是否符合预期（如自动重命名或报错）。",
        "args": {
          "title": "saved_document",
          "author": "System Test",
          "subject": "Conflict Test"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"saved_document.docx\"}"
        },
        "execution_time": 0.03440523147583008,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径安全测试",
        "purpose": "验证create_document是否对非法或受限目录路径进行有效防护（如系统目录或只读目录）。",
        "args": {
          "title": "Security Test",
          "author": "Security Checker",
          "subject": "Restricted Path"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"Security_Test.docx\"}"
        },
        "execution_time": 0.024967670440673828,
        "is_functional_test": false
      },
      {
        "case_name": "注入攻击模拟测试",
        "purpose": "验证create_document是否对可能的命令注入或路径遍历攻击有防御机制。",
        "args": {
          "title": "../../../malicious_title",
          "author": "| rm -rf /",
          "subject": "${eval('ls')}"
        },
        "response": {
          "result": "{\"message\": \"Document created successfully\", \"file_path\": \"../../../malicious_title.docx\"}"
        },
        "execution_time": 0.02579808235168457,
        "is_functional_test": false
      },
      {
        "case_name": "缺失必填参数测试",
        "purpose": "验证当缺少必填参数（如title、author、subject）之一时，create_document是否能正确返回错误信息。",
        "args": {
          "title": "Incomplete Doc",
          "author": "Tester"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nsubject\n  Field required [type=missing, input_value={'title': 'Incomplete Doc', 'author': 'Tester'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004013776779174805,
        "is_functional_test": false
      },
      {
        "case_name": "非字符串类型参数测试",
        "purpose": "验证当传入非字符串类型的参数时，create_document是否能正确拒绝请求并返回类型错误。",
        "args": {
          "title": 12345,
          "author": true,
          "subject": [
            "Subject List"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 3 validation errors for create_documentArguments\ntitle\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nauthor\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nsubject\n  Input should be a valid string [type=string_type, input_value=['Subject List'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006517648696899414,
        "is_functional_test": false
      }
    ],
    "get_document_text": [
      {
        "case_name": "基本文档文本提取测试",
        "purpose": "验证get_document_text工具能够成功从一个标准Word文档中提取全部文本内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_document.docx'\"}"
        },
        "execution_time": 0.004018545150756836,
        "is_functional_test": true
      },
      {
        "case_name": "空文档文本提取测试",
        "purpose": "验证当目标Word文档为空时，get_document_text是否能正确返回空字符串。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt'\"}"
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符文件名提取测试",
        "purpose": "验证get_document_text能否处理包含特殊字符的文件名并正确提取其文本内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc@#$.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\doc@#$.docx'\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "非Word文件路径安全性测试",
        "purpose": "验证当提供非Word格式文件路径时，get_document_text是否能安全拒绝并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_sun_and_clouds.png'\"}"
        },
        "execution_time": 0.004042625427246094,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误测试",
        "purpose": "验证当提供的文件路径不存在时，get_document_text是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "超长文件路径边界测试",
        "purpose": "验证get_document_text是否能处理超长文件路径并正确提取内容或报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\testFiles\\\\testFiles\\\\testFiles\\\\testFiles\\\\testFiles\\\\longpath.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\\\testFiles\\\\\\\\testFiles\\\\\\\\testFiles\\\\\\\\testFiles\\\\\\\\testFiles\\\\\\\\longpath.docx'\"}"
        },
        "execution_time": 0.007203817367553711,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode内容提取测试",
        "purpose": "验证get_document_text是否能正确提取包含Unicode字符的Word文档内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unicode_content.txt"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\unicode_content.txt'\"}"
        },
        "execution_time": 0.0045053958892822266,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历攻击模拟测试",
        "purpose": "验证get_document_text是否对可能的路径遍历攻击有防御机制。",
        "args": {
          "file_path": "../../../etc/passwd.docx"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.005005836486816406,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "基本段落添加功能测试",
        "purpose": "验证add_paragraph工具能够成功向指定文档中添加一个普通段落文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "text": "This is a basic test paragraph."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt'\"}"
        },
        "execution_time": 0.053182363510131836,
        "is_functional_test": true
      },
      {
        "case_name": "空文本内容添加测试",
        "purpose": "验证当提供的文本参数为空字符串时，add_paragraph是否能正常处理并添加空段落。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt",
          "text": ""
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt'\"}"
        },
        "execution_time": 0.04360222816467285,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符段落内容测试",
        "purpose": "验证add_paragraph能否正确处理包含特殊字符的段落文本内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_content.txt",
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{}|\\;':\",./<>?"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_content.txt'\"}"
        },
        "execution_time": 0.05508685111999512,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode多语言文本添加测试",
        "purpose": "验证add_paragraph是否支持添加包含Unicode字符（如中文、日文、俄文等）的段落。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unicode_content.txt",
          "text": "这是一段中文。これは日本語の段落です。Это русский текст."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\unicode_content.txt'\"}"
        },
        "execution_time": 0.049846649169921875,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历安全防护测试",
        "purpose": "验证add_paragraph是否对可能的路径遍历攻击有防御机制。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "Malicious path traversal attempt."
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.0807809829711914,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误处理测试",
        "purpose": "验证当提供的文件路径不存在时，add_paragraph是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "text": "This should not be added."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.0728464126586914,
        "is_functional_test": false
      },
      {
        "case_name": "非Word文件类型限制测试",
        "purpose": "验证当提供非Word格式文件路径时，add_paragraph是否拒绝操作并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "text": "Trying to add text to an image file."
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_sun_and_clouds.png'\"}"
        },
        "execution_time": 0.15381288528442383,
        "is_functional_test": false
      }
    ],
    "get_paragraph_text_from_document": [
      {
        "case_name": "基本段落提取测试",
        "purpose": "验证get_paragraph_text_from_document工具能够成功从文档中提取指定索引的段落文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt'\"}"
        },
        "execution_time": 0.0035071372985839844,
        "is_functional_test": true
      },
      {
        "case_name": "空文档段落提取测试",
        "purpose": "验证当目标文档为空时，get_paragraph_text_from_document是否能正确处理并返回空字符串或适当错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt'\"}"
        },
        "execution_time": 0.009037971496582031,
        "is_functional_test": true
      },
      {
        "case_name": "超大段落索引边界测试",
        "purpose": "验证当提供超出文档实际段落数量的索引值时，工具能否优雅地处理越界情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "paragraph_index": 1000
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt'\"}"
        },
        "execution_time": 0.005995750427246094,
        "is_functional_test": false
      },
      {
        "case_name": "负数段落索引安全性测试",
        "purpose": "验证当提供负数作为段落索引时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "paragraph_index": -1
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt'\"}"
        },
        "execution_time": 0.0035097599029541016,
        "is_functional_test": false
      },
      {
        "case_name": "非Word文件类型错误处理测试",
        "purpose": "验证当提供的文件路径指向非Word文档（如图片、PDF等）时，工具是否能安全拒绝并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_sun_and_clouds.png'\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误测试",
        "purpose": "验证当提供的文件路径不存在时，get_paragraph_text_from_document是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.004509449005126953,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符文件名处理测试",
        "purpose": "验证get_paragraph_text_from_document能否处理包含特殊字符的文件名并正确提取其段落内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc@#$.docx",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\doc@#$.docx'\"}"
        },
        "execution_time": 0.0059967041015625,
        "is_functional_test": true
      },
      {
        "case_name": "Unicode段落内容提取测试",
        "purpose": "验证get_paragraph_text_from_document是否能正确提取包含Unicode字符的段落内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\unicode_content.txt",
          "paragraph_index": 0
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\unicode_content.txt'\"}"
        },
        "execution_time": 0.0060427188873291016,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "基本功能测试 - 添加一级标题",
        "purpose": "验证add_heading工具能够成功向文档中添加一个一级标题。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Introduction",
          "level": 1
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.03693866729736328,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 添加多级标题组合",
        "purpose": "验证add_heading工具可以按不同级别添加多个标题到同一个文档中。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Section 1.1",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.027010679244995117,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 路径遍历尝试",
        "purpose": "验证add_heading是否能安全处理包含路径遍历的文件路径，防止任意文件操作。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "Security Test Heading",
          "level": 3
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.004073381423950195,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 非法字符注入测试",
        "purpose": "验证add_heading是否对文件名中的特殊字符进行有效过滤或转义。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc@#$.docx",
          "text": "| rm -rf /",
          "level": 4
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\doc@#$.docx'\"}"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径无效或文件不存在时，add_heading能否正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "text": "Invalid File Test",
          "level": 2
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.008025884628295898,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 参数类型错误",
        "purpose": "验证当传入非预期类型的参数（如level为字符串）时，add_heading是否能拒绝请求并返回类型错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": 12345,
          "level": "invalid_level"
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 2 validation errors for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nlevel\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid_level', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小和最大标题级别",
        "purpose": "验证add_heading是否能正确处理最小（1）和最大（6）级别的标题。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Heading Level 6",
          "level": 6
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.026706695556640625,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊Unicode字符标题",
        "purpose": "验证add_heading是否能正确处理包含Unicode字符的标题文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Unicode 标题 日本語",
          "level": 2
        },
        "response": {
          "result": "{\"message\": \"Heading added successfully\"}"
        },
        "execution_time": 0.026256084442138672,
        "is_functional_test": true
      }
    ],
    "create_custom_style": [
      {
        "case_name": "基本样式创建与参数验证",
        "purpose": "验证create_custom_style工具能够成功为指定文档创建一个自定义文本样式，并正确设置字体、字号、加粗和斜体属性。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": "CustomStyle",
          "font_name": "Calibri",
          "font_size": 11,
          "bold": false,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.02176189422607422,
        "is_functional_test": true
      },
      {
        "case_name": "默认字体和字号的样式创建测试",
        "purpose": "验证当使用默认字体（如Times New Roman）和标准字号（如12）时，create_custom_style是否能正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "style_name": "DefaultFontStyle",
          "font_name": "Times New Roman",
          "font_size": 12,
          "bold": false,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.020550966262817383,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符样式名称测试",
        "purpose": "验证create_custom_style能否处理包含特殊字符的样式名称输入。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "style_name": "Style@#$_Test",
          "font_name": "Arial",
          "font_size": 14,
          "bold": true,
          "italic": true
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.014014244079589844,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历攻击模拟安全测试",
        "purpose": "验证create_custom_style是否对可能的路径遍历攻击有防御机制（例如拒绝非法路径）。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "style_name": "MaliciousPathStyle",
          "font_name": "Verdana",
          "font_size": 10,
          "bold": false,
          "italic": true
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.0069980621337890625,
        "is_functional_test": false
      },
      {
        "case_name": "无效或不存在文件路径错误处理测试",
        "purpose": "验证当提供的文件路径不存在或无效时，create_custom_style是否能返回适当的错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "style_name": "NonExistentFileStyle",
          "font_name": "Courier New",
          "font_size": 12,
          "bold": true,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.006218671798706055,
        "is_functional_test": false
      },
      {
        "case_name": "最小字体大小边界测试",
        "purpose": "验证create_custom_style是否支持最小允许的字体大小（例如1号字）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": "TinyFontSizeStyle",
          "font_name": "Tahoma",
          "font_size": 1,
          "bold": false,
          "italic": true
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.02246379852294922,
        "is_functional_test": true
      },
      {
        "case_name": "最大字体大小边界测试",
        "purpose": "验证create_custom_style是否支持较大字体大小（例如72号字）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": "HugeFontSizeStyle",
          "font_name": "Georgia",
          "font_size": 72,
          "bold": true,
          "italic": false
        },
        "response": {
          "result": "{\"error\": \"<WD_PARAGRAPH_ALIGNMENT.LEFT: 0> is not a valid WD_STYLE_TYPE\"}"
        },
        "execution_time": 0.015141963958740234,
        "is_functional_test": true
      },
      {
        "case_name": "非字符串类型参数错误处理测试",
        "purpose": "验证当传入非字符串类型的参数（如style_name为整数）时，create_custom_style是否能正确拒绝并返回类型错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "style_name": 12345,
          "font_name": true,
          "font_size": "twelve",
          "bold": "yes",
          "italic": "no"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 3 validation errors for create_custom_styleArguments\nstyle_name\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nfont_name\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nfont_size\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='twelve', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.008032798767089844,
        "is_functional_test": false
      }
    ],
    "format_text": [
      {
        "case_name": "基本文本格式化测试",
        "purpose": "验证format_text工具能够成功对指定范围的文本应用自定义样式。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"\\\"no style with name 'CustomStyle'\\\"\"}"
        },
        "execution_time": 0.01251673698425293,
        "is_functional_test": true
      },
      {
        "case_name": "空文件路径错误处理测试",
        "purpose": "验证当提供空字符串作为文件路径时，format_text是否能正确返回错误信息。",
        "args": {
          "file_path": "",
          "start": 5,
          "end": 15,
          "style_name": "BoldStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at ''\"}"
        },
        "execution_time": 0.021060466766357422,
        "is_functional_test": false
      },
      {
        "case_name": "非法索引边界测试",
        "purpose": "验证当提供的起始和结束索引超出文档实际长度时，format_text能否正确处理并报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "start": -1,
          "end": 1000000,
          "style_name": "ItalicStyle"
        },
        "response": {
          "result": "{\"error\": \"\\\"no style with name 'ItalicStyle'\\\"\"}"
        },
        "execution_time": 0.015520811080932617,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符样式名称测试",
        "purpose": "验证format_text能否处理包含特殊字符的样式名称输入。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "start": 20,
          "end": 30,
          "style_name": "Style@#$.docx"
        },
        "response": {
          "result": "{\"message\": \"Text formatted successfully\"}"
        },
        "execution_time": 0.024784326553344727,
        "is_functional_test": true
      },
      {
        "case_name": "非Word文件安全性测试",
        "purpose": "验证当提供非Word格式文件路径时，format_text是否能安全拒绝并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "start": 0,
          "end": 5,
          "style_name": "HighlightStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_sun_and_clouds.png'\"}"
        },
        "execution_time": 0.0032427310943603516,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误处理测试",
        "purpose": "验证当提供的文件路径不存在时，format_text是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "start": 0,
          "end": 10,
          "style_name": "CustomStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.006513833999633789,
        "is_functional_test": false
      },
      {
        "case_name": "超长样式名称边界测试",
        "purpose": "验证format_text是否能处理超长样式名称参数并正确应用或报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "start": 40,
          "end": 50,
          "style_name": "ThisIsAVeryLongStyleNameThatExceedsNormalLengthLimitsForTestingPurposesOnly"
        },
        "response": {
          "result": "{\"message\": \"Text formatted successfully\"}"
        },
        "execution_time": 0.02101421356201172,
        "is_functional_test": false
      },
      {
        "case_name": "路径遍历攻击模拟测试",
        "purpose": "验证format_text是否对可能的路径遍历攻击有防御机制。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "start": 0,
          "end": 5,
          "style_name": "SecurityTestStyle"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": false
      }
    ],
    "find_text_in_document": [
      {
        "case_name": "基本文本搜索功能测试",
        "purpose": "验证find_text_in_document工具能够成功在文档中搜索指定文本并返回出现位置的索引列表。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "test"
        },
        "response": {
          "result": "{\"occurrences\": [5]}"
        },
        "execution_time": 0.010507583618164062,
        "is_functional_test": true
      },
      {
        "case_name": "空搜索文本测试",
        "purpose": "验证当搜索文本为空字符串时，find_text_in_document是否能正确返回所有空匹配位置或空列表。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": ""
        },
        "response": {
          "result": "{\"occurrences\": [0, 1, 2, 3, 4, 5, 6, 7]}"
        },
        "execution_time": 0.010509490966796875,
        "is_functional_test": true
      },
      {
        "case_name": "搜索不存在的文本测试",
        "purpose": "验证当指定的搜索文本在文档中不存在时，工具是否返回空列表或明确的未找到信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "nonexistenttext"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.02954888343811035,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符文本搜索测试",
        "purpose": "验证find_text_in_document是否能正确处理包含特殊字符的搜索文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "search_text": "@#$.docx"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.012516021728515625,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历攻击模拟测试",
        "purpose": "验证find_text_in_document是否对可能的路径遍历攻击有防御机制。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "search_text": "password"
        },
        "response": {
          "result": "{\"error\": \"Package not found at '../../../etc/passwd.docx'\"}"
        },
        "execution_time": 0.004503965377807617,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误测试",
        "purpose": "验证当提供的文件路径不存在时，find_text_in_document是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "search_text": "test"
        },
        "response": {
          "result": "{\"error\": \"Package not found at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.docx'\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "超长搜索文本边界测试",
        "purpose": "验证find_text_in_document是否能处理超长搜索文本并正确返回结果或报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "search_text": "a_very_long_string_that_exceeds_normal_search_length_limits_and_tests_boundary_conditions"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.013525009155273438,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode文本搜索测试",
        "purpose": "验证find_text_in_document是否能正确搜索包含Unicode字符的文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx",
          "search_text": "测试"
        },
        "response": {
          "result": "{\"occurrences\": []}"
        },
        "execution_time": 0.013542890548706055,
        "is_functional_test": true
      }
    ],
    "add_footnote_to_document": [
      {
        "case_name": "基本功能添加脚注测试",
        "purpose": "验证add_footnote_to_document工具能够成功将指定文本作为脚注添加到给定文档中。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "这是基本测试脚注。"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "空文件路径错误处理测试",
        "purpose": "验证当提供空字符串作为file_path参数时，工具是否能正确拒绝请求并返回错误信息。",
        "args": {
          "file_path": "",
          "text": "无效路径情况下的脚注内容"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0034017562866210938,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符文件名处理测试",
        "purpose": "验证工具能否正确处理包含特殊字符的文件路径，并成功添加脚注。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "text": "包含特殊字符文件名的脚注测试"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0035080909729003906,
        "is_functional_test": true
      },
      {
        "case_name": "不存在文件路径错误处理测试",
        "purpose": "验证当提供的文件路径不存在时，工具是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "text": "尝试在不存在文件上添加脚注"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.003501415252685547,
        "is_functional_test": false
      },
      {
        "case_name": "超长脚注文本边界测试",
        "purpose": "验证工具是否能处理非常长的脚注文本输入并正确添加至文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "这是一个用于边界测试的极长脚注文本，包含大量重复文字以确保达到最大长度限制。"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.0030035972595214844,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历攻击模拟安全测试",
        "purpose": "验证工具是否对可能的路径遍历攻击有防御机制，防止非法访问上级目录。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "text": "路径遍历攻击测试脚注"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.00451970100402832,
        "is_functional_test": false
      },
      {
        "case_name": "非Word文件类型安全性测试",
        "purpose": "验证当提供非Word格式文件路径时，工具是否能安全拒绝并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "text": "尝试在非Word文件中添加脚注"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.003502368927001953,
        "is_functional_test": false
      },
      {
        "case_name": "Unicode脚注文本支持测试",
        "purpose": "验证工具是否能正确处理包含Unicode字符的脚注文本（如中文、日文、表情符号等）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "text": "Unicode测试：你好，世界！こんにちは、世界！🌍"
        },
        "response": {
          "result": "{\"error\": \"Footnote addition not implemented\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": true
      }
    ],
    "protect_document": [
      {
        "case_name": "基本文档保护功能测试",
        "purpose": "验证protect_document工具能够成功为一个存在的Word文档添加密码保护。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "password": "securepassword"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.00576472282409668,
        "is_functional_test": true
      },
      {
        "case_name": "空密码保护测试",
        "purpose": "验证当提供空字符串作为密码时，protect_document是否仍能对文档进行无密码保护（或按实现逻辑处理）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_metadata_doc.docx",
          "password": ""
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.010054826736450195,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符密码保护测试",
        "purpose": "验证protect_document能否处理包含特殊字符的密码输入。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "password": "Pass@#$.<>|?*:"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.008366584777832031,
        "is_functional_test": true
      },
      {
        "case_name": "路径遍历攻击模拟测试",
        "purpose": "验证protect_document是否对可能的路径遍历攻击有防御机制。",
        "args": {
          "file_path": "../../../etc/passwd.docx",
          "password": "| rm -rf /"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.00451207160949707,
        "is_functional_test": false
      },
      {
        "case_name": "不存在文件路径错误测试",
        "purpose": "验证当提供的文件路径不存在时，protect_document是否能正确返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.docx",
          "password": "test123"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.005007028579711914,
        "is_functional_test": false
      },
      {
        "case_name": "非Word文件路径安全性测试",
        "purpose": "验证当提供非Word格式文件路径时，protect_document是否安全拒绝并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "password": "imagepass"
        },
        "response": {
          "result": "{\"error\": \"Password protection not implemented\"}"
        },
        "execution_time": 0.00600886344909668,
        "is_functional_test": false
      },
      {
        "case_name": "缺失必填参数测试",
        "purpose": "验证当缺少必填参数之一（如file_path或password）时，protect_document是否能正确拒绝请求并返回错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\npassword\n  Field required [type=missing, input_value={'file_path': 'D:\\\\devWor...iles\\\\test_output.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0035071372985839844,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 78
}