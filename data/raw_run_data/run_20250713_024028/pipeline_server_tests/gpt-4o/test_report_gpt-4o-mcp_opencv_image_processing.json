{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_opencv_image_processing",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_opencv_image_processing/refined/server.py",
  "timestamp": "2025-07-13T02:45:01.442885",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "Saves an image to the file system in the desired format.\n\n    Args:\n        image_path (str): Path to the input image file.\n        output_path (str): Path to save the output image file.\n\n    Returns:\n        bool: True if the image is successfully saved, otherwise False.\n\n    Raises:\n        FileNotFoundError: If the input image file doesn't exist\n        ValueError: If the image can't be loaded or saved\n\n    Example:\n        save_image_tool(\"input.jpg\", \"output.png\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "Resizes the image to specific dimensions.\n\n    Args:\n        image_path (str): Path to the input image file.\n        width (int): The new width of the image. Must be positive.\n        height (int): The new height of the image. Must be positive.\n\n    Returns:\n        str: Path to the resized image file.\n\n    Raises:\n        ValueError: If width or height are not positive integers\n\n    Example:\n        resize_image_tool(\"input.jpg\", 800, 600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "Crops a specific rectangular region from the image.\n\n    Args:\n        image_path (str): Path to the input image file.\n        x (int): The x-coordinate of the top-left corner of the crop box.\n        y (int): The y-coordinate of the top-left corner of the crop box.\n        width (int): The width of the crop box. Must be positive.\n        height (int): The height of the crop box. Must be positive.\n\n    Returns:\n        str: Path to the cropped image file.\n\n    Raises:\n        ValueError: If any dimension parameters are invalid\n\n    Example:\n        crop_image_tool(\"input.jpg\", 10, 10, 100, 100)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "Retrieves basic statistics about the image, including dimensions and pixel intensity histograms.\n\n    Args:\n        image_path (str): Path to the input image file.\n\n    Returns:\n        str: JSON string containing dimensions and histogram data.\n\n    Example:\n        get_image_stats_tool(\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "Applies a specified filter to the image (e.g., Gaussian blur, median blur).\n\n    Args:\n        image_path (str): Path to the input image file.\n        filter_type (str): The type of filter to apply (\"gaussian\", \"median\", etc.).\n        kernel_size (int): The size of the kernel used for filtering. Must be odd and positive.\n\n    Returns:\n        str: Path to the filtered image file.\n\n    Raises:\n        ValueError: If filter_type is unsupported or kernel_size is invalid\n\n    Example:\n        apply_filter_tool(\"input.jpg\", \"gaussian\", 5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "Detects edges in the image using OpenCV's Canny edge detection algorithm.\n\n    Args:\n        image_path (str): Path to the input image file.\n        threshold1 (float): The first threshold for the hysteresis procedure.\n        threshold2 (float): The second threshold for the hysteresis procedure.\n\n    Returns:\n        str: Path to the edge-detected image file.\n\n    Example:\n        detect_edges_tool(\"input.jpg\", 50.0, 150.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "Applies a thresholding operation to the image.\n\n    Args:\n        image_path (str): Path to the input grayscale image file.\n        threshold_value (float): The threshold value.\n        max_value (float): The maximum value to assign to pixels exceeding the threshold.\n\n    Returns:\n        str: Path to the thresholded binary image file.\n\n    Example:\n        apply_threshold_tool(\"input.jpg\", 127.0, 255.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "Detects contours in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of contours.\n\n    Example:\n        detect_contours_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "Identifies and classifies simple geometric shapes (e.g., circles, squares) in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of detected shapes.\n\n    Example:\n        find_shapes_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save",
        "purpose": "验证工具能否正确保存图像文件为指定格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.30951833724975586,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Same Format",
        "purpose": "验证工具能否以相同格式保存图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit_copy.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004006147384643555,
        "is_functional_test": true
      },
      {
        "case_name": "Save Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0065157413482666016,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image to Invalid Output Path",
        "purpose": "验证输出路径无效时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "output_path": "invalid_path/output.png"
        },
        "response": {
          "result": "false"
        },
        "execution_time": 0.0048902034759521484,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.1683671474456787,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Empty Output File",
        "purpose": "验证将图像保存到空输出文件是否成功",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_light_bulb_idea.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt"
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.004995822906494141,
        "is_functional_test": false
      },
      {
        "case_name": "Overwrite Existing Output File",
        "purpose": "验证工具能否覆盖已存在的输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.004510164260864258,
        "is_functional_test": true
      },
      {
        "case_name": "Save Very Large Image",
        "purpose": "验证工具是否能处理大尺寸图像的保存操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_output.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_image.png\"}"
        },
        "execution_time": 0.00601506233215332,
        "is_functional_test": true
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Statistics Retrieval",
        "purpose": "验证工具能否正确获取图像的基本统计信息，包括尺寸和直方图数据",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [66449.0, 24135.0, 28989.0, 31987.0, 25351.0, 24979.0, 25093.0, 28098.0, 30404.0, 32103.0, 33634.0, 34111.0, 34061.0, 33373.0, 32463.0, 33134.0, 33960.0, 34462.0, 35118.0, 34764.0, 34467.0, 34037.0, 35288.0, 36703.0, 37421.0, 37711.0, 38083.0, 38862.0, 38937.0, 39134.0, 39363.0, 39281.0, 39151.0, 38616.0, 38342.0, 37450.0, 37351.0, 37107.0, 36286.0, 36033.0, 35227.0, 34519.0, 33534.0, 32225.0, 31377.0, 30946.0, 31134.0, 31265.0, 31628.0, 32517.0, 32672.0, 32660.0, 32572.0, 32711.0, 31900.0, 31975.0, 31818.0, 31995.0, 31707.0, 31601.0, 31842.0, 31695.0, 31413.0, 31280.0, 31320.0, 31127.0, 30985.0, 30407.0, 30445.0, 30446.0, 30051.0, 29870.0, 29379.0, 28556.0, 27915.0, 27562.0, 27367.0, 26848.0, 26997.0, 26958.0, 26838.0, 27237.0, 26879.0, 26981.0, 26312.0, 25951.0, 25730.0, 25728.0, 25690.0, 25379.0, 24663.0, 24807.0, 24633.0, 23987.0, 23995.0, 24198.0, 23919.0, 23176.0, 23304.0, 23198.0, 23163.0, 22764.0, 22716.0, 22751.0, 22473.0, 22280.0, 22037.0, 22105.0, 21863.0, 21430.0, 21257.0, 21438.0, 21238.0, 21043.0, 20819.0, 20565.0, 20231.0, 20231.0, 20370.0, 19970.0, 19967.0, 19767.0, 19719.0, 19104.0, 18888.0, 18938.0, 18643.0, 18716.0, 18379.0, 18273.0, 17961.0, 17833.0, 17936.0, 17594.0, 17854.0, 17654.0, 17954.0, 18134.0, 17955.0, 18329.0, 17865.0, 18136.0, 18077.0, 18371.0, 18249.0, 18573.0, 18324.0, 18385.0, 18067.0, 17833.0, 17330.0, 17085.0, 16840.0, 16546.0, 16621.0, 16979.0, 17084.0, 17207.0, 17198.0, 17072.0, 16604.0, 16218...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2352字符，剩余852字符"
        },
        "execution_time": 0.06572246551513672,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics for PNG Format",
        "purpose": "验证工具能否处理PNG格式图像并返回有效统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.008528470993041992,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics for Special Characters in Path",
        "purpose": "验证图像路径包含特殊字符时工具是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [57483.0, 25957.0, 31851.0, 32091.0, 27148.0, 26067.0, 26086.0, 27731.0, 29959.0, 31547.0, 32650.0, 33636.0, 33538.0, 33220.0, 33110.0, 33261.0, 33548.0, 34441.0, 34552.0, 34538.0, 34700.0, 35054.0, 35315.0, 36429.0, 36786.0, 37520.0, 37993.0, 38337.0, 38603.0, 39067.0, 39191.0, 39269.0, 39039.0, 38356.0, 38452.0, 37490.0, 37201.0, 36683.0, 36334.0, 35959.0, 35449.0, 34622.0, 33951.0, 33080.0, 31940.0, 31802.0, 31702.0, 31983.0, 32056.0, 32181.0, 32369.0, 32495.0, 32240.0, 32647.0, 31985.0, 32113.0, 32017.0, 31854.0, 31651.0, 31811.0, 31660.0, 31690.0, 31637.0, 31389.0, 31235.0, 31210.0, 31321.0, 30647.0, 30363.0, 30326.0, 30277.0, 29541.0, 29121.0, 28460.0, 28452.0, 28182.0, 27576.0, 27418.0, 27408.0, 27499.0, 27479.0, 27282.0, 26954.0, 26536.0, 26761.0, 26102.0, 26373.0, 25628.0, 25748.0, 25259.0, 25077.0, 24841.0, 24604.0, 24476.0, 24002.0, 23990.0, 23475.0, 23817.0, 23298.0, 23205.0, 23108.0, 23162.0, 22869.0, 22661.0, 22597.0, 22405.0, 22374.0, 21806.0, 21830.0, 21491.0, 21522.0, 21298.0, 21211.0, 21128.0, 20974.0, 20696.0, 20630.0, 20156.0, 20279.0, 19994.0, 20107.0, 19764.0, 19573.0, 19677.0, 18924.0, 18557.0, 18977.0, 18699.0, 18504.0, 18149.0, 18214.0, 17731.0, 17713.0, 18018.0, 17695.0, 17936.0, 17879.0, 18043.0, 18179.0, 17855.0, 18241.0, 18089.0, 17995.0, 18385.0, 18353.0, 18660.0, 18205.0, 18327.0, 18231.0, 17760.0, 17615.0, 17473.0, 16724.0, 16630.0, 16746.0, 16917.0, 17066.0, 17063.0, 17005.0, 16776.0, 16542.0, 16535...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2352字符，剩余852字符"
        },
        "execution_time": 0.06180906295776367,
        "is_functional_test": true
      },
      {
        "case_name": "Statistics for Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.004155158996582031,
        "is_functional_test": false
      },
      {
        "case_name": "Statistics for Invalid Image File",
        "purpose": "验证工具在尝试读取非图像文件时是否抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "Large Image Statistics Handling",
        "purpose": "验证工具是否能够处理大尺寸图像的统计计算",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit_board.png"
        },
        "response": {
          "result": "{\"dimensions\": [64, 64, 3], \"histogram\": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4096.0]}"
        },
        "execution_time": 0.015070199966430664,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Image File Handling",
        "purpose": "验证工具在遇到空图像文件时是否能优雅地处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt\"}"
        },
        "execution_time": 0.014005899429321289,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.007009983062744141,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize",
        "purpose": "验证工具能否正确调整图像的基本尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.061250925064086914,
        "is_functional_test": true
      },
      {
        "case_name": "Resize PNG Image",
        "purpose": "验证工具能否处理PNG格式图像并调整尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004003047943115234,
        "is_functional_test": true
      },
      {
        "case_name": "Resize with Special Characters in Path",
        "purpose": "验证路径中包含特殊字符时是否能正常调整图像尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.05066847801208496,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Resize with Negative Width",
        "purpose": "验证负宽度参数是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_light_bulb_idea.png",
          "width": -100,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=-100, height=200\"}"
        },
        "execution_time": 0.007533550262451172,
        "is_functional_test": false
      },
      {
        "case_name": "Resize with Zero Height",
        "purpose": "验证零高度参数是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "width": 300,
          "height": 0
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=300, height=0\"}"
        },
        "execution_time": 0.003996610641479492,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd",
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.003507852554321289,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Very Large Image",
        "purpose": "验证工具是否能处理大尺寸图像的调整操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit_board.png",
          "width": 4096,
          "height": 4096
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.0421297550201416,
        "is_functional_test": true
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop",
        "purpose": "验证工具能否正确裁剪图像的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.054932594299316406,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image with Zero Coordinates",
        "purpose": "验证当x和y为0时是否能正确裁剪图像左上角区域",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_sun_and_clouds.png",
          "x": 0,
          "y": 0,
          "width": 50,
          "height": 50
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_sun_and_clouds.png\"}"
        },
        "execution_time": 0.003531932830810547,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Using Maximum Dimensions",
        "purpose": "验证使用图像最大尺寸进行裁剪是否成功",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "x": 0,
          "y": 0,
          "width": 64,
          "height": 64
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.007516145706176758,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Width Value Test",
        "purpose": "验证当宽度参数为负值时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "x": 10,
          "y": 10,
          "width": -50,
          "height": 50
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=-50, height=50\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Height Value Test",
        "purpose": "验证当高度参数为负值时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_light_bulb_idea.png",
          "x": 10,
          "y": 10,
          "width": 50,
          "height": -50
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=50, height=-50\"}"
        },
        "execution_time": 0.00551295280456543,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.005990505218505859,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.004398822784423828,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image with Special Characters in Path",
        "purpose": "验证图像路径包含特殊字符时是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg",
          "x": 20,
          "y": 20,
          "width": 80,
          "height": 80
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.05091261863708496,
        "is_functional_test": true
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Filter Application",
        "purpose": "验证工具能否正确应用高斯滤波器并生成输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.08819699287414551,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Median Filter with Default Kernel Size",
        "purpose": "验证工具在未指定kernel_size时是否使用默认值3，并成功应用中值滤波器",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "median"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: 1 validation error for apply_filter_toolArguments\nkernel_size\n  Field required [type=missing, input_value={'image_path': 'D:\\\\devWo...'filter_type': 'median'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004503965377807617,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Filter Type Handling",
        "purpose": "验证工具是否拒绝不支持的滤波类型并抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "invalid_filter",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Unsupported filter type 'invalid_filter'. Supported filters: ['gaussian', 'median']\"}"
        },
        "execution_time": 0.005997419357299805,
        "is_functional_test": false
      },
      {
        "case_name": "Even Kernel Size Rejection",
        "purpose": "验证工具是否拒绝偶数大小的kernel_size参数并抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"error\": \"Kernel size should be odd for OpenCV filters. Received: 4\"}"
        },
        "execution_time": 0.0035181045532226562,
        "is_functional_test": false
      },
      {
        "case_name": "Path Traversal Attempt in Image Path",
        "purpose": "验证工具是否阻止非法路径穿越尝试以防止安全风险",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd",
          "filter_type": "gaussian",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.0070037841796875,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Image File Handling",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "filter_type": "gaussian",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.007512092590332031,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证图像路径包含特殊字符时工具是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg",
          "filter_type": "median",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.10429835319519043,
        "is_functional_test": true
      },
      {
        "case_name": "Minimum Kernel Size Test",
        "purpose": "验证最小合法kernel_size（1）是否被正确接受并执行滤波操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 1
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.12592625617980957,
        "is_functional_test": true
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection",
        "purpose": "验证工具能否使用默认阈值正确执行边缘检测并生成输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.10883331298828125,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with PNG Image",
        "purpose": "验证工具能否处理PNG格式图像并成功进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "threshold1": 30.0,
          "threshold2": 100.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004507780075073242,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Image with Special Characters in Path",
        "purpose": "验证路径中包含特殊字符的图像是否能被正常处理并进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg",
          "threshold1": 40.0,
          "threshold2": 120.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.10175132751464844,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Zero Thresholds",
        "purpose": "验证工具在两个阈值都为零时是否仍能正常运行",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 0.0,
          "threshold2": 0.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.13614201545715332,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with High Thresholds",
        "purpose": "验证工具在高阈值下是否仍能正常工作（较少边缘）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 200.0,
          "threshold2": 300.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.09145402908325195,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.0035076141357421875,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection on Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.004101991653442383,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Invalid Threshold Order",
        "purpose": "验证当threshold1大于threshold2时工具是否仍能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 150.0,
          "threshold2": 50.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.12112307548522949,
        "is_functional_test": true
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Threshold Application",
        "purpose": "验证工具能否正确对图像应用基本阈值处理并生成二值化图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.09438800811767578,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with Zero Max Value",
        "purpose": "验证当最大值设置为0时是否仍能正常执行阈值操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 100.0,
          "max_value": 0.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.06764459609985352,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to Nonexistent Image",
        "purpose": "验证输入图像不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value Test",
        "purpose": "验证负的阈值参数是否被正确拒绝",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": -10.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.07250404357910156,
        "is_functional_test": false
      },
      {
        "case_name": "Max Value Less Than Threshold",
        "purpose": "验证当max_value小于threshold_value时是否能正常处理或报错",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 200.0,
          "max_value": 150.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.07676577568054199,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Image Path",
        "purpose": "验证包含特殊字符的图像路径是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@#$.jpg\"}"
        },
        "execution_time": 0.0041391849517822266,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.006601810455322266,
        "is_functional_test": false
      },
      {
        "case_name": "Threshold on Invalid File Type",
        "purpose": "验证对非图像文件应用阈值处理是否会优雅地失败",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.docx\"}"
        },
        "execution_time": 0.005514383316040039,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection",
        "purpose": "验证工具能否正确检测图像中的轮廓并返回JSON格式结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.05973339080810547,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection on PNG Image",
        "purpose": "验证工具是否支持PNG格式图像的轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.00722050666809082,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours in Special Character Path",
        "purpose": "验证路径中包含特殊字符时是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@#$.jpg\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection for Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.00422358512878418,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection on Invalid File Type",
        "purpose": "验证尝试对非图像文件执行轮廓检测时是否抛出错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.docx\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.00652623176574707,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection with Empty Image File",
        "purpose": "验证空图像文件是否能被优雅地处理（如返回错误信息）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Large Image Contour Detection",
        "purpose": "验证工具是否能够处理大尺寸图像的轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit_board.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_technology_circuit_board.png\"}"
        },
        "execution_time": 0.008234024047851562,
        "is_functional_test": true
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection",
        "purpose": "验证工具能否正确检测并分类图像中的基本几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]}]}"
        },
        "execution_time": 0.062349557876586914,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection for PNG Format",
        "purpose": "验证工具是否能处理PNG格式图像并返回有效形状信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.007984638214111328,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with Special Characters in Path",
        "purpose": "验证图像路径包含特殊字符时工具是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output@#$.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output@#$.jpg\"}"
        },
        "execution_time": 0.004063129425048828,
        "is_functional_test": true
      },
      {
        "case_name": "Detection for Nonexistent Image",
        "purpose": "验证当输入图像文件不存在时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt",
        "purpose": "验证工具是否阻止非法路径穿越尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\..\\..\\etc\\passwd"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\..\\\\..\\\\etc\\\\passwd\"}"
        },
        "execution_time": 0.007828712463378906,
        "is_functional_test": false
      },
      {
        "case_name": "Detection for Invalid Image File",
        "purpose": "验证工具在尝试读取非图像文件时是否抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.docx\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Large Image Shape Detection",
        "purpose": "验证工具是否能够处理大尺寸图像的形状检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit_board.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_technology_circuit_board.png\"}"
        },
        "execution_time": 0.004117250442504883,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Image File Handling",
        "purpose": "验证工具在遇到空图像文件时是否能优雅地处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_output.txt\"}"
        },
        "execution_time": 0.009058713912963867,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}