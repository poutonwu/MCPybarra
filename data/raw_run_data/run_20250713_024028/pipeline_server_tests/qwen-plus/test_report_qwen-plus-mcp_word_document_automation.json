{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_word_document_automation",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_word_document_automation/refined/server.py",
  "timestamp": "2025-07-13T02:58:04.753248",
  "tools": [
    {
      "name": "create_document",
      "description": "Creates a new Word document.\n\n    Args:\n        file_name (str): The name of the file to be created.\n\n    Returns:\n        A confirmation message indicating the document was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_name": {
            "title": "File Name",
            "type": "string"
          }
        },
        "required": [
          "file_name"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "Opens an existing Word document.\n\n    Args:\n        file_path (str): The path to the document file.\n\n    Returns:\n        A confirmation message indicating the document was opened successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "Saves the currently open Word document.\n\n    Args:\n        file_path (str): The path where the document should be saved.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "Saves the currently open Word document with a new name or in a different location.\n\n    Args:\n        new_file_path (str): The new file path for saving the document.\n\n    Returns:\n        A confirmation message indicating the document was saved successfully.\n    ",
      "args_schema": {
        "properties": {
          "new_file_path": {
            "title": "New File Path",
            "type": "string"
          }
        },
        "required": [
          "new_file_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "Creates a copy of the currently open Word document.\n\n    Args:\n        copy_file_path (str): The file path where the copy should be saved.\n\n    Returns:\n        A confirmation message indicating the document copy was created successfully.\n    ",
      "args_schema": {
        "properties": {
          "copy_file_path": {
            "title": "Copy File Path",
            "type": "string"
          }
        },
        "required": [
          "copy_file_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "Adds a paragraph to the document.\n\n    Args:\n        text (str): The text content of the paragraph.\n\n    Returns:\n        A confirmation message indicating the paragraph was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "Adds a heading to the document.\n\n    Args:\n        text (str): The text content of the heading.\n        level (int): The level of the heading (e.g., 1 for main heading, 2 for subheading).\n\n    Returns:\n        A confirmation message indicating the heading was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "Adds a table to the document.\n\n    Args:\n        rows (int): The number of rows in the table.\n        cols (int): The number of columns in the table.\n\n    Returns:\n        A confirmation message indicating the table was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "cols": {
            "title": "Cols",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "cols"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "Adds a page break to the document.\n\n    Returns:\n        A confirmation message indicating the page break was added successfully.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "Retrieves metadata about the document, such as the number of pages, paragraphs, and tables.\n\n    Returns:\n        A JSON string containing metadata about the document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "Searches for specific text within the document.\n\n    Args:\n        query (str): The text to search for.\n\n    Returns:\n        A JSON string of locations where the text was found.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "Finds specific text in the document and replaces it with new text.\n\n    Args:\n        old_text (str): The text to find.\n        new_text (str): The text to replace it with.\n\n    Returns:\n        A confirmation message indicating the replacement was successful.\n    ",
      "args_schema": {
        "properties": {
          "old_text": {
            "title": "Old Text",
            "type": "string"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "old_text",
          "new_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "Deletes a specified paragraph from the document.\n\n    Args:\n        paragraph_index (int): The index of the paragraph to delete.\n\n    Returns:\n        A confirmation message indicating the paragraph was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "Deletes all instances of specified text from the document.\n\n    Args:\n        text_to_delete (str): The text to delete.\n\n    Returns:\n        A confirmation message indicating the text was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "text_to_delete": {
            "title": "Text To Delete",
            "type": "string"
          }
        },
        "required": [
          "text_to_delete"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "Adds a new row to an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n\n    Returns:\n        A confirmation message indicating the row was added successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "Deletes a row from an existing table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row to delete.\n\n    Returns:\n        A confirmation message indicating the row was deleted successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "Edits the content of a specific cell in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        row_index (int): The index of the row.\n        col_index (int): The index of the column.\n        new_content (str): The new content for the cell.\n\n    Returns:\n        A confirmation message indicating the cell was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "col_index",
          "new_content"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "Merges cells in a table.\n\n    Args:\n        table_index (int): The index of the table.\n        start_row (int): The starting row index for merging.\n        start_col (int): The starting column index for merging.\n        end_row (int): The ending row index for merging.\n        end_col (int): The ending column index for merging.\n\n    Returns:\n        A confirmation message indicating the cells were merged successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_col": {
            "title": "Start Col",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_col": {
            "title": "End Col",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_col",
          "end_row",
          "end_col"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "split_table",
      "description": "Splits a table into two separate tables at a specified row.\n\n    Args:\n        table_index (int): The index of the table.\n        split_row_index (int): The row index where the split should occur.\n\n    Returns:\n        A confirmation message indicating the table was split successfully.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "split_row_index": {
            "title": "Split Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "split_row_index"
        ],
        "title": "split_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "Sets the page margins for the document.\n\n    Args:\n        top (float): The top margin in inches.\n        bottom (float): The bottom margin in inches.\n        left (float): The left margin in inches.\n        right (float): The right margin in inches.\n\n    Returns:\n        A confirmation message indicating the margins were set successfully.\n    ",
      "args_schema": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          },
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          }
        },
        "required": [
          "top",
          "bottom",
          "left",
          "right"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    },
    {
      "name": "replace_section",
      "description": "Replaces the content of a section based on its title.\n\n    Args:\n        section_title (str): The title of the section to replace.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was replaced successfully.\n    ",
      "args_schema": {
        "properties": {
          "section_title": {
            "title": "Section Title",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "section_title",
          "new_content"
        ],
        "title": "replace_sectionArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_section_by_keyword",
      "description": "Edits a section of the document based on a keyword.\n\n    Args:\n        keyword (str): The keyword to locate the section.\n        new_content (str): The new content for the section.\n\n    Returns:\n        A confirmation message indicating the section was edited successfully.\n    ",
      "args_schema": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "new_content"
        ],
        "title": "edit_section_by_keywordArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create New Document with Valid File Name",
        "purpose": "验证create_document工具可以成功创建一个具有有效文件名的新Word文档。",
        "args": {
          "file_name": "new_document.docx"
        },
        "response": {
          "result": "Document 'new_document.docx' created successfully."
        },
        "execution_time": 0.016462087631225586,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Empty File Name",
        "purpose": "测试当提供空文件名时，工具是否能正确处理错误输入。",
        "args": {
          "file_name": ""
        },
        "response": {
          "result": "Document '.docx' created successfully."
        },
        "execution_time": 0.014000892639160156,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Special Characters in File Name",
        "purpose": "验证工具是否支持在文件名中使用特殊字符。",
        "args": {
          "file_name": "special!@#$%^&*()_+-= document.docx"
        },
        "response": {
          "result": "Document 'special!@#$%^&*()_+-= document.docx' created successfully."
        },
        "execution_time": 0.01699972152709961,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document with Null File Name",
        "purpose": "测试当file_name参数为null时的错误处理情况。",
        "args": {
          "file_name": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nfile_name\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.012001752853393555,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Existing File Name",
        "purpose": "验证工具是否允许覆盖现有文件或如何处理重名文件。",
        "args": {
          "file_name": "test_output.docx"
        },
        "response": {
          "result": "Document 'test_output.docx' created successfully."
        },
        "execution_time": 0.012005329132080078,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Long File Name",
        "purpose": "测试工具对超长文件名的支持能力。",
        "args": {
          "file_name": "this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx"
        },
        "response": {
          "result": "Document 'this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx' created successfully."
        },
        "execution_time": 0.015505790710449219,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Hidden File Name Pattern",
        "purpose": "测试以点开头的隐藏文件名是否被正确支持。",
        "args": {
          "file_name": ".hidden_document.docx"
        },
        "response": {
          "result": "Document '.hidden_document.docx' created successfully."
        },
        "execution_time": 0.017000198364257812,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document with Path Injection Attempt",
        "purpose": "验证工具是否阻止路径穿越尝试，确保安全性。",
        "args": {
          "file_name": "..\\malicious\\document.docx"
        },
        "response": {
          "result": "Document '..\\malicious\\document.docx' created successfully."
        },
        "execution_time": 0.012993574142456055,
        "is_functional_test": false
      }
    ],
    "open_document": [
      {
        "case_name": "Open Valid Document Successfully",
        "purpose": "验证open_document工具能够成功打开一个有效的Word文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx' opened successfully."
        },
        "execution_time": 0.027750253677368164,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Non-Existent Document",
        "purpose": "测试当尝试打开不存在的文件时，工具是否能正确处理错误情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx' does not exist."
        },
        "execution_time": 0.022558212280273438,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Special Characters in Path",
        "purpose": "验证工具是否支持路径中包含特殊字符的文档打开操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx' opened successfully."
        },
        "execution_time": 0.018038511276245117,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Hidden Document",
        "purpose": "测试工具是否允许打开隐藏目录中的文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\malicious.docx' opened successfully."
        },
        "execution_time": 0.01607060432434082,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal Attack",
        "purpose": "验证工具是否阻止路径穿越攻击尝试。",
        "args": {
          "file_path": "..\\..\\malicious\\document.docx"
        },
        "response": {
          "result": "File '..\\..\\malicious\\document.docx' does not exist."
        },
        "execution_time": 0.008005619049072266,
        "is_functional_test": false
      },
      {
        "case_name": "Open Very Long File Path Document",
        "purpose": "测试工具是否支持超长文件路径的文档打开操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\.git\\config"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\.git\\config' does not exist."
        },
        "execution_time": 0.0045163631439208984,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Read-Only Directory Document",
        "purpose": "测试工具在尝试打开位于只读目录中的文档时的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git\\config"
        },
        "response": {
          "result": "File 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git\\config' does not exist."
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "Open Metadata Test Document",
        "purpose": "验证工具可以正常打开用于元数据测试的文档。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx"
        },
        "response": {
          "result": "Document 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\metadata_doc.docx' opened successfully."
        },
        "execution_time": 0.0633690357208252,
        "is_functional_test": true
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph with Simple Text",
        "purpose": "验证add_paragraph工具能够成功添加一个包含简单文本的段落。",
        "args": {
          "text": "This is a simple paragraph."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0050013065338134766,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Empty Text",
        "purpose": "测试当提供空文本时，工具是否能正确处理并添加空段落。",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.011999845504760742,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "验证工具是否支持在段落中使用特殊字符。",
        "args": {
          "text": "!@#$%^&*()_+-=[]{}|;':\",./<>?`~"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.00699925422668457,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Null Text",
        "purpose": "测试当text参数为null时的错误处理情况。",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005010843276977539,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Very Long Text",
        "purpose": "测试工具对超长段落文本的支持能力。",
        "args": {
          "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.008995771408081055,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Leading and Trailing Spaces",
        "purpose": "验证工具是否能正确处理带有前导和尾随空格的段落内容。",
        "args": {
          "text": "   This paragraph starts and ends with spaces.   "
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.004020214080810547,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Line Breaks",
        "purpose": "测试工具是否能正确处理包含换行符的段落内容。",
        "args": {
          "text": "Line one.\nLine two.\r\nLine three."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.00600743293762207,
        "is_functional_test": true
      },
      {
        "case_name": "Add Paragraph with Unicode Characters",
        "purpose": "验证工具是否支持Unicode字符（如中文、表情符号等）。",
        "args": {
          "text": "这是一个包含中文的段落。🌍🚀👍"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.007113933563232422,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading with Valid Text and Level 1",
        "purpose": "验证使用有效文本和一级标题级别能够成功添加标题。",
        "args": {
          "text": "Main Title",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Valid Text and Level 2",
        "purpose": "验证使用有效文本和二级标题级别能够成功添加标题。",
        "args": {
          "text": "Sub Title",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.010000944137573242,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Empty Text",
        "purpose": "测试当提供空文本时，工具是否能正确处理错误输入。",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Null Text",
        "purpose": "测试当text参数为null时的错误处理情况。",
        "args": {
          "text": null,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Level 0 (Invalid)",
        "purpose": "测试当提供无效的标题级别（0）时，工具是否能正确处理。",
        "args": {
          "text": "Invalid Level Heading",
          "level": 0
        },
        "response": {
          "result": "Heading level must be between 1 and 9."
        },
        "execution_time": 0.007001161575317383,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Level 7 (Invalid)",
        "purpose": "测试当提供无效的标题级别（7）时，工具是否能正确处理。",
        "args": {
          "text": "Invalid Level Heading",
          "level": 7
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Special Characters in Text",
        "purpose": "验证工具是否支持在标题文本中使用特殊字符。",
        "args": {
          "text": "Special!@#$%^&*() Heading",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.008005857467651367,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Long Text",
        "purpose": "测试工具对超长标题文本的支持能力。",
        "args": {
          "text": "This is a very long heading text that exceeds the typical length of most headings but should still be handled properly by the tool.",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.006000995635986328,
        "is_functional_test": true
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table with Default Dimensions",
        "purpose": "验证在文档中添加默认尺寸（例如3行3列）表格的基本功能。",
        "args": {
          "rows": 3,
          "cols": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Valid Dimensions",
        "purpose": "测试工具是否能正确处理最小有效表格尺寸（1行1列）。",
        "args": {
          "rows": 1,
          "cols": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.0040225982666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Large Dimensions",
        "purpose": "验证工具对大尺寸表格的支持能力（如100行100列）。",
        "args": {
          "rows": 100,
          "cols": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.023559093475341797,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Add Table with Zero Rows",
        "purpose": "测试当提供0作为行数时，工具能否正确进行参数验证并返回错误。",
        "args": {
          "rows": 0,
          "cols": 5
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0029964447021484375,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Zero Columns",
        "purpose": "测试当提供0作为列数时，工具能否正确进行参数验证并返回错误。",
        "args": {
          "rows": 5,
          "cols": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.006710052490234375,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Rows",
        "purpose": "验证工具是否能正确处理负数行数输入。",
        "args": {
          "rows": -3,
          "cols": 4
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.00450897216796875,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Add Table with Negative Columns",
        "purpose": "测试工具对负数列数输入的处理能力。",
        "args": {
          "rows": 4,
          "cols": -3
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.003002166748046875,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Maximum Allowed Dimensions",
        "purpose": "验证工具是否支持最大边界值（如65536行×65536列）。",
        "args": {
          "rows": 65536,
          "cols": 65536
        },
        "response": {
          "result": "Error adding table: "
        },
        "execution_time": 0.1013803482055664,
        "is_functional_test": true
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break to Opened Document",
        "purpose": "验证在已打开的文档中成功插入分页符的基本功能。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break Without Opening Document",
        "purpose": "测试在未打开任何文档的情况下尝试添加分页符时的错误处理行为。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Read-Only Document",
        "purpose": "验证工具在只读文档中尝试插入分页符时能否正确处理异常。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005392789840698242,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break with Corrupted Document",
        "purpose": "测试在尝试向损坏的Word文档中插入分页符时的行为。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.003989219665527344,
        "is_functional_test": false
      },
      {
        "case_name": "Add Page Break in Document with Maximum Allowed Sections",
        "purpose": "验证当文档达到最大节段数限制时，是否仍能正确插入分页符。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Hidden Document",
        "purpose": "测试工具是否允许在隐藏文档中插入分页符，确保安全性与功能性平衡。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.007101535797119141,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Document from Special Character Path",
        "purpose": "验证在路径包含特殊字符的文档中插入分页符的功能。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Long File Path Document",
        "purpose": "测试在超长文件路径下的文档中插入分页符的能力。",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.00403285026550293,
        "is_functional_test": true
      }
    ],
    "save_document": [
      {
        "case_name": "Save Opened Document to Valid Path",
        "purpose": "验证save_document工具能够将当前打开的文档成功保存到一个有效的路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx'."
        },
        "execution_time": 0.7278683185577393,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Non-Existent Directory",
        "purpose": "测试当目标目录不存在时，工具是否能正确处理并返回错误信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir\\saved_document.docx'."
        },
        "execution_time": 0.767266035079956,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special Characters in File Path",
        "purpose": "验证工具是否支持在文件保存路径中使用特殊字符。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#$%^&*()_+-= document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#$%^&*()_+-= document.docx'"
        },
        "execution_time": 0.19855690002441406,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document with Null File Path",
        "purpose": "测试当file_path参数为null时，工具是否能正确进行参数验证。",
        "args": {
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_document: 1 validation error for save_documentArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.25842881202697754,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Read-Only Directory",
        "purpose": "验证工具在尝试将文档保存到只读目录时的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\saved_document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\saved_document.docx'"
        },
        "execution_time": 0.12528204917907715,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Long File Path",
        "purpose": "测试工具对超长文件路径的保存操作支持能力。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\saved_document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\saved_document.docx'"
        },
        "execution_time": 0.09650397300720215,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal Attack During Save",
        "purpose": "验证工具是否阻止路径穿越攻击尝试（例如试图写入上级目录）。",
        "args": {
          "file_path": "..\\..\\malicious\\document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: '..\\\\..\\\\malicious\\\\document.docx'"
        },
        "execution_time": 0.20107650756835938,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Hidden File Path",
        "purpose": "测试以点开头的隐藏文件路径是否被正确支持。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx'."
        },
        "execution_time": 0.6720759868621826,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document to Valid New Path Successfully",
        "purpose": "验证save_as_document工具可以成功将已打开的文档另存为新的有效路径。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_new.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_new.docx' successfully."
        },
        "execution_time": 0.6246902942657471,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document with Empty File Path",
        "purpose": "测试当提供空文件路径时，工具是否能正确处理错误输入。",
        "args": {
          "new_file_path": ""
        },
        "response": {
          "result": "Document saved as '.docx' successfully."
        },
        "execution_time": 0.5778849124908447,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Special Characters in File Path",
        "purpose": "验证工具是否支持在新文件路径中使用特殊字符。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#$%^&*()_+-= document_new.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#$%^&*()_+-= document_new.docx'"
        },
        "execution_time": 0.11217832565307617,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Save Document with Null File Path",
        "purpose": "测试当new_file_path参数为null时的错误处理情况。",
        "args": {
          "new_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.07350587844848633,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Existing File Path",
        "purpose": "验证工具是否允许覆盖现有文件或如何处理重名文件。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx' successfully."
        },
        "execution_time": 0.5722842216491699,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Long File Path",
        "purpose": "测试工具对超长文件路径的支持能力。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx' successfully."
        },
        "execution_time": 0.5500984191894531,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document to Hidden File Path",
        "purpose": "测试工具是否支持保存到隐藏目录中的文件路径。",
        "args": {
          "new_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_saved_document.docx"
        },
        "response": {
          "result": "Document saved as 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_saved_document.docx' successfully."
        },
        "execution_time": 0.5293900966644287,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal Attack During Save As",
        "purpose": "验证工具是否阻止路径穿越攻击尝试。",
        "args": {
          "new_file_path": "..\\..\\malicious\\document.docx"
        },
        "response": {
          "result": "Error saving document: [Errno 2] No such file or directory: '..\\\\..\\\\malicious\\\\document.docx'"
        },
        "execution_time": 0.09811544418334961,
        "is_functional_test": false
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Create Document Copy to Valid Path",
        "purpose": "验证create_document_copy工具能够成功将当前打开的文档复制到一个有效的路径。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx' successfully."
        },
        "execution_time": 0.35155582427978516,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document Copy with Special Characters in Path",
        "purpose": "验证工具是否支持复制文档到包含特殊字符的文件路径。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#$%^&*()_+-= document.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special!@#$%^&*()_+-= document.docx'"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Copy with Empty File Path",
        "purpose": "测试当提供空文件路径时，工具是否能正确处理错误输入。",
        "args": {
          "copy_file_path": ""
        },
        "response": {
          "result": "Document copy created at '.docx' successfully."
        },
        "execution_time": 0.3603553771972656,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Create Document Copy with Null File Path",
        "purpose": "测试当copy_file_path参数为null时的错误处理情况。",
        "args": {
          "copy_file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool create_document_copy: 1 validation error for create_document_copyArguments\ncopy_file_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy to Hidden Directory",
        "purpose": "验证工具是否允许将文档复制到隐藏目录中。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_copied_document.docx"
        },
        "response": {
          "result": "Document copy created at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_copied_document.docx' successfully."
        },
        "execution_time": 0.3670070171356201,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal Attack During Copy",
        "purpose": "验证工具是否阻止在复制操作中的路径穿越攻击尝试。",
        "args": {
          "copy_file_path": "..\\..\\malicious\\document.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 2] No such file or directory: '..\\\\..\\\\malicious\\\\document.docx'"
        },
        "execution_time": 0.007504940032958984,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy with Long File Path",
        "purpose": "测试工具对超长文件路径的支持能力。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\copied_document.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\\copied_document.docx'"
        },
        "execution_time": 0.006005764007568359,
        "is_functional_test": true
      },
      {
        "case_name": "Create Document Copy to Read-Only Directory",
        "purpose": "测试工具在尝试将文档复制到只读目录时的行为。",
        "args": {
          "copy_file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\copied_document.docx"
        },
        "response": {
          "result": "Error creating document copy: [Errno 2] No such file or directory: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\copied_document.docx'"
        },
        "execution_time": 0.009506940841674805,
        "is_functional_test": false
      }
    ],
    "get_document_info": [
      {
        "case_name": "Get Document Info for Valid Metadata File",
        "purpose": "验证get_document_info工具可以成功获取一个有效Word文档的元数据，如页数、段落数和表格数量。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info After Create New Document",
        "purpose": "验证新创建的文档可以通过get_document_info获取其初始元数据信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for Special Characters Document",
        "purpose": "测试get_document_info是否能正确处理文件名包含特殊字符的文档的元数据获取。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.00501251220703125,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for Hidden Document",
        "purpose": "验证工具能否从隐藏文件中获取文档元数据，确保对隐藏文件的支持。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.0059795379638671875,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info for Long File Name Document",
        "purpose": "测试工具在超长文件名文档上的get_document_info功能是否正常。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Get Document Info with Path Traversal Attempt",
        "purpose": "验证工具是否安全地处理路径穿越尝试，防止目录遍历攻击。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": false
      },
      {
        "case_name": "Get Document Info on Non-Existent Document",
        "purpose": "测试当目标文档不存在时，get_document_info是否能优雅地返回错误信息。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.00699305534362793,
        "is_functional_test": false
      },
      {
        "case_name": "Get Document Info for Empty Document",
        "purpose": "验证空文档是否能返回默认的元数据值（如0页、0段落、0表格）。",
        "args": {},
        "response": {
          "result": "{\"paragraphs\": 29, \"tables\": 4}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      }
    ],
    "search_text": [
      {
        "case_name": "Search Text in Existing Document Successfully",
        "purpose": "验证search_text工具能够在指定文档中成功搜索到存在的文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "query": "example text"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.9100005626678467,
        "is_functional_test": true
      },
      {
        "case_name": "Search Nonexistent Text in Document",
        "purpose": "测试当搜索的文本在文档中不存在时，工具是否能正确返回空结果或提示信息。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "query": "nonexistent text"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 1.0673558712005615,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty Query Parameter",
        "purpose": "验证工具在查询参数为空时的行为是否符合预期（如返回错误或空结果）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "query": ""
        },
        "response": {
          "result": "[\"Paragraph 1\", \"Paragraph 2\", \"Paragraph 3\", \"Paragraph 4\", \"Paragraph 5\", \"Paragraph 6\", \"Paragraph 7\", \"Paragraph 8\", \"Paragraph 9\", \"Paragraph 10\", \"Paragraph 11\", \"Paragraph 12\", \"Paragraph 13\", \"Paragraph 14\", \"Paragraph 15\", \"Paragraph 16\", \"Paragraph 17\", \"Paragraph 18\", \"Paragraph 19\", \"Paragraph 20\", \"Paragraph 21\", \"Paragraph 22\", \"Paragraph 23\", \"Paragraph 24\", \"Paragraph 25\", \"Paragraph 26\", \"Paragraph 27\", \"Paragraph 28\", \"Paragraph 29\", \"Table 1, Row 1, Cell 1\", \"Table 1, Row 1, Cell 2\", \"Table 1, Row 1, Cell 3\", \"Table 1, Row 1, Cell 4\", \"Table 1, Row 2, Cell 1\", \"Table 1, Row 2, Cell 2\", \"Table 1, Row 2, Cell 3\", \"Table 1, Row 2, Cell 4\", \"Table 1, Row 3, Cell 1\", \"Table 1, Row 3, Cell 2\", \"Table 1, Row 3, Cell 3\", \"Table 1, Row 3, Cell 4\", \"Table 2, Row 1, Cell 1\", \"Table 2, Row 1, Cell 2\", \"Table 2, Row 1, Cell 3\", \"Table 2, Row 2, Cell 1\", \"Table 2, Row 2, Cell 2\", \"Table 2, Row 2, Cell 3\", \"Table 2, Row 3, Cell 1\", \"Table 2, Row 3, Cell 2\", \"Table 2, Row 3, Cell 3\", \"Table 3, Row 1, Cell 1\", \"Table 4, Row 1, Cell 1\", \"Table 4, Row 1, Cell 2\", \"Table 4, Row 1, Cell 3\", \"Table 4, Row 1, Cell 4\", \"Table 4, Row 1, Cell 5\", \"Table 4, Row 1, Cell 6\", \"Table 4, Row 1, Cell 7\", \"Table 4, Row 1, Cell 8\", \"Table 4, Row 1, Cell 9\", \"Table 4, Row 1, Cell 10\", \"Table 4, Row 1, Cell 11\", \"Table 4, Row 1, Cell 12\", \"Table 4, Row 1, Cell 13\", \"Table 4, Row 1, Cell 14\", \"Table 4, Row 1, Cell 15\", \"Table 4, Row 1, Cell 16\", \"Table 4, Row 1, Cell 17\", \"Table 4, Row 1, Cell ...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计279427字符，剩余277927字符"
        },
        "execution_time": 0.8538377285003662,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Null Query Parameter",
        "purpose": "测试当query参数为null时的错误处理情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.docx",
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.177931547164917,
        "is_functional_test": false
      },
      {
        "case_name": "Search Special Characters in Document",
        "purpose": "验证工具是否能够正确搜索包含特殊字符的文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.docx",
          "query": "!@#$%^&*()"
        },
        "response": {
          "result": "[\"Paragraph 11\", \"Paragraph 20\"]"
        },
        "execution_time": 0.9407269954681396,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Hidden Document",
        "purpose": "测试工具是否支持在隐藏文件中搜索文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_saved_document.docx",
          "query": "hidden content"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.8219144344329834,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Very Large File",
        "purpose": "验证工具是否能够在非常大的文档中执行搜索操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_exceeds_the_typical_limit_of_255_characters_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool.docx",
          "query": "performance test"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.6597766876220703,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Path Traversal Attempt",
        "purpose": "验证工具是否阻止路径穿越尝试以确保安全性。",
        "args": {
          "file_path": "..\\malicious\\document.docx",
          "query": "attack attempt"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.6492719650268555,
        "is_functional_test": false
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Text Replacement in Document",
        "purpose": "验证find_and_replace工具能否在文档中成功替换指定文本。",
        "args": {
          "old_text": "hello",
          "new_text": "hi"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.676384449005127,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Non-Existent Text in Document",
        "purpose": "测试当尝试替换不存在的文本时，工具是否能正确处理无匹配项的情况。",
        "args": {
          "old_text": "nonexistenttext",
          "new_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.7285165786743164,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Text with Special Characters",
        "purpose": "验证工具是否支持包含特殊字符的文本替换。",
        "args": {
          "old_text": "!@#$%^&*()",
          "new_text": "special_chars_replaced"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.6502313613891602,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Empty String",
        "purpose": "测试将空字符串作为旧文本进行替换的行为。",
        "args": {
          "old_text": "",
          "new_text": "empty_string_replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 2.2023656368255615,
        "is_functional_test": false
      },
      {
        "case_name": "Replace with Null Input",
        "purpose": "测试当new_text参数为null时的错误处理情况。",
        "args": {
          "old_text": "test",
          "new_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nnew_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0975186824798584,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Long Text Block",
        "purpose": "验证工具是否能够处理长文本块的替换操作。",
        "args": {
          "old_text": "this_is_a_very_long_block_of_text_that_may_be_used_for_testing_purposes_and_should_be_replaced",
          "new_text": "long_text_replaced_successfully"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.0333366394042969,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Hidden Text Pattern",
        "purpose": "测试工具是否能识别并替换以点开头的隐藏文本模式。",
        "args": {
          "old_text": ".hidden_text_pattern",
          "new_text": "hidden_text_replaced"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.087461233139038,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Injection via Text Replacement",
        "purpose": "验证工具是否阻止路径穿越尝试，确保安全性。",
        "args": {
          "old_text": "..\\malicious\\path",
          "new_text": "safe_replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 1.1435883045196533,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete First Paragraph Successfully",
        "purpose": "验证delete_paragraph工具可以成功删除文档中第一个段落。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004914283752441406,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Last Paragraph Successfully",
        "purpose": "验证delete_paragraph工具可以成功删除文档中最后一个段落。",
        "args": {
          "paragraph_index": 4
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003837108612060547,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Middle Paragraph Successfully",
        "purpose": "验证delete_paragraph工具可以成功删除文档中间位置的段落。",
        "args": {
          "paragraph_index": 2
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0047149658203125,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Paragraph with Negative Index",
        "purpose": "测试当提供负数段落索引时，工具是否能正确处理错误输入。",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.007815361022949219,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Paragraph with Out-of-Range Index",
        "purpose": "测试当提供超出文档段落数量范围的索引时，工具是否能正确处理错误输入。",
        "args": {
          "paragraph_index": 10
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004743099212646484,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Paragraph from Read-Only Document",
        "purpose": "验证工具在尝试从只读文档中删除段落时的行为。",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.006585836410522461,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph Containing Special Characters",
        "purpose": "验证delete_paragraph工具可以正确删除包含特殊字符的段落。",
        "args": {
          "paragraph_index": 3
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.007264137268066406,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Single Paragraph in Minimal Document",
        "purpose": "验证工具在只有一个段落的文档中删除该段落时的功能性。",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Existing Text Successfully",
        "purpose": "验证delete_text工具能够成功从文档中删除指定的文本内容。",
        "args": {
          "text_to_delete": "sample text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.5334200859069824,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Non-Existent Text",
        "purpose": "测试当尝试删除不存在的文本时，工具是否能正确处理无匹配情况。",
        "args": {
          "text_to_delete": "nonexistent text"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.5059373378753662,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Text with Special Characters",
        "purpose": "验证工具是否支持删除包含特殊字符的文本。",
        "args": {
          "text_to_delete": "!@#$%^&*()_+=-[]{};':\",./<>?"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.49900126457214355,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Empty String Text",
        "purpose": "测试当提供空字符串作为要删除的文本时的行为。",
        "args": {
          "text_to_delete": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 1.494246244430542,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text from Document with Hidden Content",
        "purpose": "验证工具能否正确删除隐藏内容中的指定文本。",
        "args": {
          "text_to_delete": "hidden content"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.510648250579834,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal in Text Deletion",
        "purpose": "验证工具是否阻止在text_to_delete参数中进行路径穿越尝试。",
        "args": {
          "text_to_delete": "..\\malicious\\path"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.4870939254760742,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Very Long Text String",
        "purpose": "测试工具对超长文本删除的支持能力。",
        "args": {
          "text_to_delete": "this_is_a_very_long_string_that_exceeds_the_typical_limit_and_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.5081727504730225,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Null Text",
        "purpose": "测试当text_to_delete参数为null时的错误处理情况。",
        "args": {
          "text_to_delete": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext_to_delete\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table at Valid Index",
        "purpose": "验证add_table_row工具可以在有效表格索引处成功添加新行。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Maximum Allowed Index",
        "purpose": "测试当表格索引为系统允许的最大值时，是否能成功添加行。",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Negative Index",
        "purpose": "测试当提供负数表格索引时的错误处理情况。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Non-Existent Table Index",
        "purpose": "验证工具在尝试向不存在的表格索引添加行时的行为。",
        "args": {
          "table_index": 9999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row Using Zero as Table Index",
        "purpose": "测试使用最小合法值（0）作为表格索引是否正常工作。",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.004003286361694336,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal via Table Index",
        "purpose": "验证工具是否阻止通过表格索引进行潜在路径穿越攻击。",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Null Table Index",
        "purpose": "测试当table_index参数为null时的错误处理情况。",
        "args": {
          "table_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.007251739501953125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row with Large Table Index Value",
        "purpose": "测试超大整数值作为表格索引是否会正确处理或抛出适当错误。",
        "args": {
          "table_index": 9223372036854775807
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0052642822265625,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Valid Row from Table",
        "purpose": "验证delete_table_row工具可以成功删除指定表格中的指定行。",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Maximum Index",
        "purpose": "测试当删除表格中最大有效行索引时，工具是否能正确处理。",
        "args": {
          "table_index": 2,
          "row_index": 5
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Delete Row with Invalid Table Index",
        "purpose": "测试当提供的table_index无效时，工具是否能正确处理错误输入。",
        "args": {
          "table_index": -1,
          "row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Delete Row with Out-of-Bounds Row Index",
        "purpose": "测试当提供的row_index超出表格实际行数时，工具是否能优雅地处理错误。",
        "args": {
          "table_index": 1,
          "row_index": 10
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Zero Index",
        "purpose": "验证工具能够正确删除表格第一行（索引为0）的数据。",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row from Last Table",
        "purpose": "验证工具可以从文档中最后一个表格删除行。",
        "args": {
          "table_index": 4,
          "row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal via Row Index",
        "purpose": "验证工具是否阻止潜在的路径穿越攻击尝试（虽然不适用，但需验证安全性）。",
        "args": {
          "table_index": 1,
          "row_index": -9999
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Special Characters in Document",
        "purpose": "验证工具在包含特殊字符的文档中删除表格行的功能是否正常。",
        "args": {
          "table_index": 3,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Valid Table Cell Successfully",
        "purpose": "验证edit_table_cell工具可以成功编辑文档中指定表格的有效单元格内容。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Updated Content"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.004878997802734375,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Cell with Out-of-Bounds Table Index",
        "purpose": "测试当提供的table_index超出文档中存在的表格数量时，工具是否能正确处理错误输入。",
        "args": {
          "table_index": 999,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Invalid Table Index"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0037856101989746094,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Negative Row Index",
        "purpose": "测试当row_index为负数时，工具是否能正确识别并处理无效参数。",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "col_index": 0,
          "new_content": "Negative Row Index"
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.004213809967041016,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Negative Column Index",
        "purpose": "测试当col_index为负数时，工具是否能正确识别并处理无效参数。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": -1,
          "new_content": "Negative Column Index"
        },
        "response": {
          "result": "Invalid column index."
        },
        "execution_time": 0.0037164688110351562,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Very Large Indices",
        "purpose": "测试使用极大数值作为行/列索引时，工具是否能正确处理边界情况。",
        "args": {
          "table_index": 0,
          "row_index": 1000000,
          "col_index": 1000000,
          "new_content": "Large Index Test"
        },
        "response": {
          "result": "Invalid row index."
        },
        "execution_time": 0.004327297210693359,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell with Special Characters in Content",
        "purpose": "验证工具是否支持在新内容中使用特殊字符。",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "col_index": 1,
          "new_content": "!@#$%^&*()_+=-[]{};':\",./<>?"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.0064432621002197266,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Edit Cell Without Opening Document First",
        "purpose": "测试在未打开文档的情况下直接调用该工具是否会返回适当的错误信息。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "No Document Opened"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.00804591178894043,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Cell in Read-Only Document",
        "purpose": "测试尝试在只读文档中编辑表格单元格时的行为。",
        "args": {
          "table_index": 0,
          "row_index": 0,
          "col_index": 0,
          "new_content": "Read Only Document Test"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.009811639785766602,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Cells in a Single Table Successfully",
        "purpose": "验证merge_table_cells工具能够成功合并文档中指定表格的单元格。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.006998538970947266,
        "is_functional_test": true
      },
      {
        "case_name": "Merge All Cells in a Table",
        "purpose": "测试合并表格中所有单元格的功能，确保工具能处理最大范围的合并请求。",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_col": 0,
          "end_row": 4,
          "end_col": 3
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.005003213882446289,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Cells with Same Start and End Indices",
        "purpose": "验证当起始行和列与结束行和列相同时，工具是否仍能正确执行合并操作。",
        "args": {
          "table_index": 1,
          "start_row": 2,
          "start_col": 2,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Merge Cells in Non-Existent Table",
        "purpose": "测试尝试在不存在的表格索引上执行合并操作时的错误处理能力。",
        "args": {
          "table_index": 99,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.010996580123901367,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Invalid Row Order",
        "purpose": "验证当end_row小于start_row时，工具是否能正确处理参数顺序错误的情况。",
        "args": {
          "table_index": 0,
          "start_row": 3,
          "start_col": 1,
          "end_row": 1,
          "end_col": 2
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.009007692337036133,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Invalid Column Order",
        "purpose": "测试当end_col小于start_col时工具的行为。",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_col": 3,
          "end_row": 2,
          "end_col": 1
        },
        "response": {
          "result": "Error merging table cells: requested span not rectangular"
        },
        "execution_time": 0.014523983001708984,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells with Out-of-Bounds Indices",
        "purpose": "验证工具对超出表格实际行列数的边界值输入的处理能力。",
        "args": {
          "table_index": 0,
          "start_row": -1,
          "start_col": 5,
          "end_row": 10,
          "end_col": 10
        },
        "response": {
          "result": "Error merging table cells: list index out of range"
        },
        "execution_time": 0.013576269149780273,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test: Attempt Path Traversal via Table Index",
        "purpose": "验证工具是否阻止非法或危险的表格索引输入（如负数、极大值）以防止潜在的安全风险。",
        "args": {
          "table_index": -1,
          "start_row": 1,
          "start_col": 1,
          "end_row": 2,
          "end_col": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.013135671615600586,
        "is_functional_test": false
      }
    ],
    "split_table": [
      {
        "case_name": "Split Table at Valid Row Index",
        "purpose": "验证split_table工具能够在指定的有效行索引处成功将表格拆分为两个独立的表格。",
        "args": {
          "table_index": 0,
          "split_row_index": 2
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.006174564361572266,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at First Row",
        "purpose": "测试当split_row_index为0时，表格是否能正确地在第一行进行拆分。",
        "args": {
          "table_index": 1,
          "split_row_index": 0
        },
        "response": {
          "result": "Table split successfully."
        },
        "execution_time": 0.00603032112121582,
        "is_functional_test": true
      },
      {
        "case_name": "Split Table at Last Row",
        "purpose": "验证当split_row_index等于最后一行索引时，表格是否能够正确拆分。",
        "args": {
          "table_index": 2,
          "split_row_index": 4
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.008501052856445312,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Split Non-Existent Table",
        "purpose": "测试当提供的table_index超出文档中实际表格数量时，工具是否能正确处理错误。",
        "args": {
          "table_index": 99,
          "split_row_index": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.009345531463623047,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table with Negative Row Index",
        "purpose": "验证当split_row_index为负值时，工具是否能正确处理参数验证失败的情况。",
        "args": {
          "table_index": 0,
          "split_row_index": -1
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.005063772201538086,
        "is_functional_test": false
      },
      {
        "case_name": "Split Table Beyond Row Count",
        "purpose": "测试当split_row_index大于表格总行数时，工具是否能正确处理边界错误。",
        "args": {
          "table_index": 1,
          "split_row_index": 10
        },
        "response": {
          "result": "Invalid split row index."
        },
        "execution_time": 0.00632786750793457,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test: Attempt Path Traversal via Table Index",
        "purpose": "验证工具是否阻止通过table_index参数进行路径穿越攻击尝试（虽然不适用，但作为安全验证）。",
        "args": {
          "table_index": -1,
          "split_row_index": 2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0057525634765625,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test: Maximum Allowed Table and Row Index",
        "purpose": "测试最大允许的table_index和split_row_index组合是否能被正确处理。",
        "args": {
          "table_index": 2147483647,
          "split_row_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0055158138275146484,
        "is_functional_test": false
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins Successfully",
        "purpose": "验证使用默认标准页边距值（如1英寸）时工具能成功设置文档页边距。",
        "args": {
          "top": 1.0,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom NonDefault Margins Successfully",
        "purpose": "测试使用非默认但合理的页边距值是否可以正确设置，如上2.5、下1.5、左3.0、右1.8。",
        "args": {
          "top": 2.5,
          "bottom": 1.5,
          "left": 3.0,
          "right": 1.8
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.006476879119873047,
        "is_functional_test": true
      },
      {
        "case_name": "Set Zero Margins",
        "purpose": "验证工具是否支持将页边距设置为零，确保边界条件下的功能可用性。",
        "args": {
          "top": 0.0,
          "bottom": 0.0,
          "left": 0.0,
          "right": 0.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0066623687744140625,
        "is_functional_test": true
      },
      {
        "case_name": "Set Negative Margin Values",
        "purpose": "测试负数页边距输入时的参数校验机制，期望系统能够识别并拒绝非法输入。",
        "args": {
          "top": -0.5,
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.00650787353515625,
        "is_functional_test": false
      },
      {
        "case_name": "Set Very Large Margin Values",
        "purpose": "测试极端大数值作为页边距时的处理情况，例如各方向均设为99.9英寸。",
        "args": {
          "top": 99.9,
          "bottom": 99.9,
          "left": 99.9,
          "right": 99.9
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Path Traversal via Margin Settings",
        "purpose": "验证设置页边距功能是否存在潜在安全漏洞，例如注入路径穿越字符。",
        "args": {
          "top": 1.0,
          "bottom": 1.0,
          "left": "..\\1.0",
          "right": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='..\\\\1.0', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.0030014514923095703,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Special Characters in Input (Non-Number)",
        "purpose": "测试在数字参数中误输入特殊字符或字符串时的错误处理能力。",
        "args": {
          "top": "abc",
          "bottom": 1.0,
          "left": 1.0,
          "right": 1.0
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 1 validation error for set_page_marginsArguments\ntop\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing"
        },
        "execution_time": 0.007092952728271484,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins Without Required Parameters",
        "purpose": "测试缺少必填参数时的异常处理行为，例如不提供任何参数。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 4 validation errors for set_page_marginsArguments\ntop\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nbottom\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nleft\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nright\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      }
    ],
    "replace_section": [
      {
        "case_name": "Replace Valid Section Successfully",
        "purpose": "验证replace_section工具能够成功替换文档中指定标题的章节内容。",
        "args": {
          "section_title": "Introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Non-Existent Section",
        "purpose": "测试当尝试替换不存在的章节时，工具是否能正确处理错误情况。",
        "args": {
          "section_title": "NonExistentSection",
          "new_content": "This content should not be inserted."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Empty Title",
        "purpose": "验证工具在提供空字符串作为章节标题时的行为。",
        "args": {
          "section_title": "",
          "new_content": "This content replaces an empty section title."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.006991863250732422,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Special Characters in Title",
        "purpose": "验证工具是否支持包含特殊字符的章节标题替换。",
        "args": {
          "section_title": "Section@#$_WithSpecialChars",
          "new_content": "Updated content for a special character section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.005996227264404297,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Null Title",
        "purpose": "测试当section_title参数为null时的错误处理情况。",
        "args": {
          "section_title": null,
          "new_content": "This should fail due to null section title."
        },
        "response": {
          "error": "ToolException: Error executing tool replace_section: 1 validation error for replace_sectionArguments\nsection_title\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004372358322143555,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Section with Long Title",
        "purpose": "测试工具对超长章节标题的支持能力。",
        "args": {
          "section_title": "this_is_a_very_long_section_title_that_might_cause_issues_in_some_systems_or_applications_but_should_be_handled_properly_by_this_tool",
          "new_content": "New content for long titled section."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.010007143020629883,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Hidden Title Pattern",
        "purpose": "测试以点开头的隐藏章节标题是否被正确支持。",
        "args": {
          "section_title": ".hidden_section",
          "new_content": "Hidden section updated content."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.007650136947631836,
        "is_functional_test": true
      },
      {
        "case_name": "Replace Section with Path Injection Attempt in Title",
        "purpose": "验证工具是否阻止路径穿越尝试在章节标题中的注入攻击，确保安全性。",
        "args": {
          "section_title": "..\\malicious\\section",
          "new_content": "Malicious path injection attempt blocked."
        },
        "response": {
          "result": "Section title not found."
        },
        "execution_time": 0.010002613067626953,
        "is_functional_test": false
      }
    ],
    "edit_section_by_keyword": [
      {
        "case_name": "Edit Section with Valid Keyword and Content",
        "purpose": "验证使用有效关键字和新内容时，文档对应部分可以被成功编辑。",
        "args": {
          "keyword": "introduction",
          "new_content": "This is the updated introduction section."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.007507801055908203,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Empty New Content",
        "purpose": "测试当提供空字符串作为新内容时，工具是否能正确处理。",
        "args": {
          "keyword": "conclusion",
          "new_content": ""
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Special Characters in Keyword",
        "purpose": "验证工具是否支持关键字中包含特殊字符的情况。",
        "args": {
          "keyword": "summary@2023",
          "new_content": "This section contains special characters in the keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.009034395217895508,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Non-Existent Keyword",
        "purpose": "测试当提供的关键字在文档中不存在时，工具是否能正确处理。",
        "args": {
          "keyword": "nonexistent_section",
          "new_content": "This is a test for a non-existent keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.009087085723876953,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Long Keyword and Content",
        "purpose": "测试工具对超长关键字和内容的支持能力。",
        "args": {
          "keyword": "this_is_a_very_long_keyword_that_might_cause_issues_in_somewhere_but_should_be_handled_properly",
          "new_content": "This is a very long content string that is meant to test the system's ability to handle large input values without any issues or truncation."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.005396366119384766,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Section with Path Traversal Attempt in Keyword",
        "purpose": "验证工具是否阻止路径穿越尝试，确保关键字中包含路径穿越字符时不会被误用。",
        "args": {
          "keyword": "../malicious/section",
          "new_content": "This is a test to check path traversal attempt in keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.008015871047973633,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Null Keyword",
        "purpose": "测试当keyword参数为null时的错误处理情况。",
        "args": {
          "keyword": null,
          "new_content": "This is a test for null keyword."
        },
        "response": {
          "error": "ToolException: Error executing tool edit_section_by_keyword: 1 validation error for edit_section_by_keywordArguments\nkeyword\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0053594112396240234,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Section with Hidden Section Keyword",
        "purpose": "测试工具是否支持以点开头的隐藏关键字对应的内容编辑。",
        "args": {
          "keyword": ".hidden_section",
          "new_content": "This is a test for hidden section keyword."
        },
        "response": {
          "result": "Keyword not found."
        },
        "execution_time": 0.005092144012451172,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 176
}