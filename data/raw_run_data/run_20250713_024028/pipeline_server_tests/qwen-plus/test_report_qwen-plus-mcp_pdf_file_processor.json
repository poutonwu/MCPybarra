{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_pdf_file_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_pdf_file_processor/refined/server.py",
  "timestamp": "2025-07-13T03:05:06.831780",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merge multiple PDF files into a single PDF file.\n\n    Args:\n        input_files: List of paths to the PDF files to be merged.\n        output_file: Path where the merged PDF will be saved.\n\n    Returns:\n        A JSON string containing the operation status, merged file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_files": {
            "items": {},
            "title": "Input Files",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_files",
          "output_file"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extract specific pages from a PDF file and save them as a new PDF.\n\n    Args:\n        input_file: Path to the source PDF file.\n        page_numbers: List of page numbers to extract (1-based index).\n        output_file: Path where the extracted pages will be saved.\n\n    Returns:\n        A JSON string containing the operation status, extracted file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the extraction process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_file": {
            "title": "Input File",
            "type": "string"
          },
          "page_numbers": {
            "items": {},
            "title": "Page Numbers",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_file",
          "page_numbers",
          "output_file"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Search for PDF files matching a specific pattern in a given directory.\n\n    Args:\n        directory: Path to the directory to search in.\n        pattern: Regular expression pattern to match PDF filenames.\n\n    Returns:\n        A JSON string containing the operation status, list of matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Merge PDF files in a specific order based on a pattern.\n\n    Args:\n        directory: Path to the directory containing PDF files.\n        order_pattern: Pattern to determine the merge order (exact filename or partial match).\n        output_file: Path where the merged PDF will be saved.\n        exact_match: Boolean indicating whether to use exact match (True) or partial match (False).\n\n    Returns:\n        A JSON string containing the operation status, merged file path, matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_pattern": {
            "title": "Order Pattern",
            "type": "string"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          },
          "exact_match": {
            "default": false,
            "title": "Exact Match",
            "type": "boolean"
          }
        },
        "required": [
          "directory",
          "order_pattern",
          "output_file"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Find PDF files related to a target PDF based on filename patterns and content similarity.\n\n    Args:\n        target_file: Path to the target PDF file.\n        search_directory: Path to the directory to search for related files.\n\n    Returns:\n        A JSON string containing the operation status, related files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "target_file": {
            "title": "Target File",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          }
        },
        "required": [
          "target_file",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证工具可以成功合并两个有效的PDF文件并生成输出文件。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\"}"
        },
        "execution_time": 0.07371926307678223,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证工具可以处理仅一个输入文件的情况，等同于复制该文件到输出路径。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.04358410835266113,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDF with Special Characters in Name",
        "purpose": "验证工具可以处理包含特殊字符的PDF文件名。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_chars_doc.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.018000125885009766,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Multiple PDFs Including Hidden File",
        "purpose": "验证工具是否能正确识别隐藏的PDF文件并将其包含在合并过程中。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_saved_document.docx",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hidden_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid input file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\hidden_saved_document.docx\"}"
        },
        "execution_time": 0.021000385284423828,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时能否返回适当的错误信息。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\error_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.021004199981689453,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output File Path",
        "purpose": "验证工具在输出路径无效或不可写时能否抛出异常。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "C:\\Program Files\\invalid_write_path.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.018000364303588867,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt to Merge Non-PDF Files",
        "purpose": "验证工具是否拒绝非PDF格式的输入文件。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_document.docx"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_merge_attempt.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.017998695373535156,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Files List",
        "purpose": "验证工具在输入文件列表为空时能否正确抛出异常。",
        "args": {
          "input_files": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input_merge.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.01799941062927246,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证工具可以成功提取指定页面并生成新的PDF文件。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\"}"
        },
        "execution_time": 0.03405928611755371,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证工具可以正确处理仅提取一页的场景。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            3
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_page_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extract.pdf\"}"
        },
        "execution_time": 0.01294565200805664,
        "is_functional_test": true
      },
      {
        "case_name": "Input File Not Found",
        "purpose": "验证工具在输入文件不存在时能否返回适当的错误信息。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\error_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Input file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.03448295593261719,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Output File Path",
        "purpose": "验证工具在输出路径无效或不可写时能否抛出异常。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "C:\\Program Files\\invalid_write_path.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to write extracted pages to C:\\\\Program Files\\\\invalid_write_path.pdf: [Errno 13] Permission denied: 'C:\\\\\\\\Program Files\\\\\\\\invalid_write_path.pdf'\"}"
        },
        "execution_time": 0.1355605125427246,
        "is_functional_test": false
      },
      {
        "case_name": "Extract with Negative Page Numbers",
        "purpose": "验证工具是否能正确拒绝负数页码输入。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            -1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\negative_page_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: All page numbers must be positive integers\"}"
        },
        "execution_time": 0.028708457946777344,
        "is_functional_test": false
      },
      {
        "case_name": "Extract Pages with Special Characters in Output Name",
        "purpose": "验证工具可以处理包含特殊字符的输出文件名。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            1,
            4
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\"}"
        },
        "execution_time": 0.020832538604736328,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Nonexistent Pages",
        "purpose": "验证工具在请求超出实际页数的页面时能否返回错误。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            999
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\out_of_range_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Some page numbers are out of range (document has 7 pages): [999]\"}"
        },
        "execution_time": 0.03702402114868164,
        "is_functional_test": false
      },
      {
        "case_name": "Hidden Input File Extraction",
        "purpose": "验证工具是否能正确识别隐藏的PDF文件并从中提取页面。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_saved_document.docx",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hidden_extract_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid input file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\hidden_saved_document.docx\"}"
        },
        "execution_time": 0.05113959312438965,
        "is_functional_test": false
      }
    ],
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证工具可以成功搜索匹配正则表达式的PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "^.*\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extract.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_doc.pdf\"]}"
        },
        "execution_time": 0.007321357727050781,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Specific Pattern",
        "purpose": "验证工具可以使用特定模式搜索PDF文件，例如包含'paper'的文件名。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "paper.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.0064411163330078125,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Hidden Subdirectory",
        "purpose": "验证工具是否能正确搜索隐藏子目录中的PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": "^.*\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\malicious.pdf\"]}"
        },
        "execution_time": 0.00827479362487793,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证工具在无效目录路径时能否返回适当的错误信息。",
        "args": {
          "directory": "D:\\invalid\\path\\does\\not\\exist",
          "pattern": "^.*\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\invalid\\\\path\\\\does\\\\not\\\\exist\"}"
        },
        "execution_time": 0.04362130165100098,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Pattern",
        "purpose": "验证工具在空模式时能否正确抛出异常。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extract.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_chars_doc.pdf\"]}"
        },
        "execution_time": 0.010025262832641602,
        "is_functional_test": false
      },
      {
        "case_name": "Search for Nonexistent Files",
        "purpose": "验证工具在没有匹配文件时能否返回空列表而不是错误。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "nonexistent_.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.005139350891113281,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Invalid Regular Expression",
        "purpose": "验证工具在提供的正则表达式无效时能否抛出异常。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*invalid_regex"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid regular expression pattern: *invalid_regex. Error: nothing to repeat at position 0\"}"
        },
        "execution_time": 0.3869473934173584,
        "is_functional_test": false
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic PDF Merge by Exact Match",
        "purpose": "验证工具可以基于精确匹配模式成功合并目录中指定顺序的PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper1.pdf,rule1.pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_merge_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: paper1.pdf,rule1.pdf\"}"
        },
        "execution_time": 0.034536123275756836,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with Partial Match Pattern",
        "purpose": "验证工具可以基于部分匹配模式合并多个PDF文件，并按正确顺序合并。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\partial_merge_output.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\partial_merge_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.08147311210632324,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with Special Characters in Order Pattern",
        "purpose": "验证工具是否能处理包含特殊字符的匹配模式并正确排序合并。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "special_@#$",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_merge_output.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_merge_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\"]}"
        },
        "execution_time": 0.018509626388549805,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with No Matching Files",
        "purpose": "验证工具在未找到任何匹配文件时能否返回错误信息。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "nonexistentfile",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: nonexistentfile\"}"
        },
        "execution_time": 0.036355018615722656,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs Using Invalid Directory",
        "purpose": "验证工具在提供的目录无效或不可读时能否抛出异常。",
        "args": {
          "directory": "D:\\invalid_directory",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_dir_merge.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\invalid_directory\"}"
        },
        "execution_time": 0.032686471939086914,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs to Invalid Output Path",
        "purpose": "验证工具在输出路径无效或不可写时能否返回错误信息。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "C:\\Program Files\\invalid_write_path.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"RuntimeError: Failed to write merged PDF to C:\\\\Program Files\\\\invalid_write_path.pdf: [Errno 13] Permission denied: 'C:\\\\\\\\Program Files\\\\\\\\invalid_write_path.pdf'\"}"
        },
        "execution_time": 0.10847091674804688,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs with Hidden Files",
        "purpose": "验证工具是否能识别隐藏的PDF文件并将其包含在合并过程中。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_pattern": "hidden_saved_document.docx",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hidden_merge_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: hidden_saved_document.docx\"}"
        },
        "execution_time": 0.03727984428405762,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs with Malicious File Types",
        "purpose": "验证工具是否拒绝非PDF文件（如恶意文件）参与合并过程。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_pattern": "malicious.docx",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\malicious_merge_attempt.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: malicious.docx\"}"
        },
        "execution_time": 0.03455400466918945,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Related PDF Search",
        "purpose": "验证工具可以基于文件名模式和内容相似性成功找到与目标PDF相关的文件。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.6642389297485352,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Invalid Target File",
        "purpose": "验证工具在目标文件路径无效时能否正确抛出异常。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Target file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.03402137756347656,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Nonexistent Directory",
        "purpose": "验证工具在搜索目录不存在时能否返回适当的错误信息。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_dir\"}"
        },
        "execution_time": 0.035750627517700195,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Hidden Files",
        "purpose": "验证工具是否能正确识别隐藏的PDF文件并将其包含在相关文件搜索中。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hidden_saved_document.docx",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid target file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\hidden_saved_document.docx\"}"
        },
        "execution_time": 0.03635835647583008,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Files with Special Characters",
        "purpose": "验证工具可以处理包含特殊字符的目标文件或搜索目录路径。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$_extracted.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$_extracted.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.17524456977844238,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证工具在搜索目录为空时能否优雅地处理这种情况。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_dir\"}"
        },
        "execution_time": 0.03300666809082031,
        "is_functional_test": false
      },
      {
        "case_name": "Search Across Multiple Subdirectories",
        "purpose": "验证工具是否能够递归搜索子目录以查找相关PDF文件。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.8597896099090576,
        "is_functional_test": true
      },
      {
        "case_name": "Search with No Matching Files",
        "purpose": "验证工具在没有匹配相关文件的情况下能否返回空结果而非报错。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid target file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.04037737846374512,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 39
}