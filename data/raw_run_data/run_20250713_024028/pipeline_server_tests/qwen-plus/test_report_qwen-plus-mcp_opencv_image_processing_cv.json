{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_opencv_image_processing_cv",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_opencv_image_processing_cv/refined/server.py",
  "timestamp": "2025-07-13T03:09:29.947983",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    保存图片文件。\n\n    Args:\n        image_path: 源图像的文件路径 (必填)。\n        output_path: 目标保存路径 (必填)。\n\n    Returns:\n        包含成功或失败消息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果输出路径无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        save_image_tool(image_path=\"input.jpg\", output_path=\"output.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    调整图片尺寸。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        width: 新宽度，必须为正整数 (必填)。\n        height: 新高度，必须为正整数 (必填)。\n\n    Returns:\n        包含调整后的尺寸和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果宽度或高度不是正整数。\n        Exception: 对于其他意外错误。\n\n    示例:\n        resize_image_tool(image_path=\"input.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    裁剪图片区域。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        x: 裁剪区域左上角 x 坐标 (必填)。\n        y: 裁剪区域左上角 y 坐标 (必填)。\n        width: 裁剪区域宽度，必须为正整数 (必填)。\n        height: 裁剪区域高度，必须为正整数 (必填)。\n\n    Returns:\n        包含裁剪区域信息和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果坐标或尺寸无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        crop_image_tool(image_path=\"input.jpg\", x=100, y=100, width=400, height=300)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    获取图片统计信息。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n\n    Returns:\n        包含图像尺寸、颜色空间和像素值范围等信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        Exception: 对于其他意外错误。\n\n    示例:\n        get_image_stats_tool(image_path=\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    应用图像滤镜。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        filter_type: 滤镜类型（例如 \"gaussian\", \"median\"） (必填)。\n        kernel_size: 核大小，必须为正奇数 (必填)。\n\n    Returns:\n        包含应用的滤镜类型和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_filter_tool(image_path=\"input.jpg\", filter_type=\"gaussian\", kernel_size=5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    检测图像边缘。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        method: 边缘检测方法（例如 \"canny\"） (必填)。\n        threshold1: 第一个阈值，必须为非负整数 (必填)。\n        threshold2: 第二个阈值，必须为非负整数且大于第一个阈值 (必填)。\n\n    Returns:\n        包含检测到的边缘数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_edges_tool(image_path=\"input.jpg\", method=\"canny\", threshold1=100, threshold2=200)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "integer"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "method",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    进行阈值分割。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        threshold_value: 阈值，必须为非负整数 (必填)。\n        max_value: 最大值，必须为正整数且大于阈值 (必填)。\n\n    Returns:\n        包含应用的阈值和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_threshold_tool(image_path=\"input.jpg\", threshold_value=127, max_value=255)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "integer"
          },
          "max_value": {
            "title": "Max Value",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    检测图像轮廓。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        mode: 轮廓检索模式（例如 \"external\", \"tree\"） (必填)。\n        method: 轮廓近似方法（例如 \"simple\", \"chain_approx_none\"） (必填)。\n\n    Returns:\n        包含检测到的轮廓数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_contours_tool(image_path=\"input.jpg\", mode=\"external\", method=\"simple\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "mode",
          "method"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    查找图像形状。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        shape_type: 形状类型（例如 \"circle\", \"rectangle\"） (必填)。\n\n    Returns:\n        包含找到的形状数量和位置信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        find_shapes_tool(image_path=\"input.jpg\", shape_type=\"circle\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_image_stats_tool": [
      {
        "case_name": "基本功能测试 - 正常图片文件",
        "purpose": "验证工具能够正确获取有效图片文件的统计信息（如尺寸、颜色空间、像素范围）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.09730863571166992,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片",
        "purpose": "验证工具能够处理PNG格式图片并返回正确的统计信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - ICO格式图片",
        "purpose": "验证工具是否支持ICO格式图片的统计信息提取。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.009006261825561523,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.009997129440307617,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test image with space & special chars.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test image with space & special chars.png\"}"
        },
        "execution_time": 0.008001089096069336,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.011013031005859375,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最大长度路径",
        "purpose": "验证工具是否能处理最大长度的文件路径输入。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\\\a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.png\"}"
        },
        "execution_time": 0.007529735565185547,
        "is_functional_test": false
      }
    ],
    "save_image_tool": [
      {
        "case_name": "基本功能测试 - 正常图片保存",
        "purpose": "验证工具能够正确将有效的图片文件保存到指定路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.07372689247131348,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片保存",
        "purpose": "验证工具能够处理PNG格式图片并成功保存到指定路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003920078277587891,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - ICO格式图片保存",
        "purpose": "验证工具是否支持ICO格式图片的保存操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_app.ico"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.004180908203125,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 已有输出路径覆盖保存",
        "purpose": "验证工具在目标输出路径已存在文件时，能否覆盖写入新内容。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.08543634414672852,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 源文件不存在",
        "purpose": "验证当提供的源图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 输出路径无效",
        "purpose": "验证当提供的输出路径无效或不可写时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "invalid_path\\saved_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to invalid_path\\\\saved_xue.jpg\"}"
        },
        "execution_time": 0.0850682258605957,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的输入与输出路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test image with space & special chars.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output image with space & special chars.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test image with space & special chars.png\"}"
        },
        "execution_time": 0.003001689910888672,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试保存至受限制目录",
        "purpose": "验证工具是否限制对系统敏感或受限目录中进行文件保存操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "C:\\Windows\\Temp\\restricted_saved.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to C:\\\\Windows\\\\Temp\\\\restricted_saved.jpg\"}"
        },
        "execution_time": 0.09642219543457031,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "基本功能测试 - 正常调整尺寸",
        "purpose": "验证工具能够正确调整一张正常图片的尺寸，并返回保存路径和新尺寸信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 800x600 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.05755305290222168,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片调整尺寸",
        "purpose": "验证工具能够处理PNG格式图片并正确调整其尺寸。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.006491661071777344,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.004006624221801758,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件尝试调整尺寸",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test image with space & special chars.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test image with space & special chars.png\"}"
        },
        "execution_time": 0.004511594772338867,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的图片",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.005002498626708984,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小有效尺寸",
        "purpose": "验证工具是否支持最小合法尺寸（宽度和高度均为1）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 1,
          "height": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 1x1 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.05538439750671387,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 极大尺寸调整",
        "purpose": "验证工具是否能处理极大尺寸的调整请求（如宽高各为10000）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 10000,
          "height": 10000
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 10000x10000 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.30099964141845703,
        "is_functional_test": true
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "基本功能测试 - 正常裁剪图片区域",
        "purpose": "验证工具能够正确使用有效参数对图片进行裁剪操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 100,
          "y": 100,
          "width": 400,
          "height": 300
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 400x300 at position (100, 100) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.054076194763183594,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.00501704216003418,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.0040950775146484375,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.00500941276550293,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test image with space & special chars.png",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test image with space & special chars.png\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 坐标超出图片尺寸",
        "purpose": "验证当裁剪区域坐标超出原图尺寸时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 9999,
          "y": 9999,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Crop area (9999, 9999, 100, 100) exceeds image dimensions (3568, 2416)\"}"
        },
        "execution_time": 0.0534055233001709,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 宽高为零或负数",
        "purpose": "验证当宽高参数为零或负数时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 0,
          "y": 0,
          "width": -50,
          "height": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Width must be a positive integer, got -50\"}"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用最小有效裁剪区域",
        "purpose": "验证工具能够正确处理最小有效裁剪区域（1x1像素）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 0,
          "y": 0,
          "width": 1,
          "height": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 1x1 at position (0, 0) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.06015634536743164,
        "is_functional_test": true
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "基本功能测试 - 高斯滤镜应用",
        "purpose": "验证工具能够正确对有效图片文件应用高斯滤镜（Gaussian Filter）并返回结果信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_gaussian_filtered.jpg\"}"
        },
        "execution_time": 0.07985210418701172,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 中值滤镜应用",
        "purpose": "验证工具能够正确对有效图片文件应用中值滤镜（Median Filter）并返回结果信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied median filter with kernel size 3 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_median_filtered.jpg\"}"
        },
        "execution_time": 0.09537267684936523,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图像应用滤镜",
        "purpose": "验证工具是否支持PNG格式图像的应用滤镜处理。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_gaussian_filtered.png\"}"
        },
        "execution_time": 0.34429168701171875,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0040438175201416016,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 滤镜类型无效",
        "purpose": "验证当提供的滤镜类型不合法时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "invalid_filter",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid filter type: invalid_filter. Supported types are ['gaussian', 'median', 'blur', 'bilateral']\"}"
        },
        "execution_time": 0.005484104156494141,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 核大小为偶数",
        "purpose": "验证当提供的核大小为偶数时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Kernel size must be a positive odd integer, got 4\"}"
        },
        "execution_time": 0.0030388832092285156,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小核大小",
        "purpose": "验证工具能否正确处理最小允许的核大小（1）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "median",
          "kernel_size": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied median filter with kernel size 1 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_median_filtered.jpg\"}"
        },
        "execution_time": 0.094390869140625,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的图像路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test image with space & special chars.png",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test image with space & special chars.png\"}"
        },
        "execution_time": 0.005678653717041016,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "基本功能测试 - 正常图片边缘检测",
        "purpose": "验证工具能够正确对有效图片文件进行边缘检测并返回结果。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1043927 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.jpg\"}"
        },
        "execution_time": 0.10076379776000977,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片边缘检测",
        "purpose": "验证工具是否支持PNG格式图片的边缘检测功能。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1043927 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.png\"}"
        },
        "execution_time": 0.18709754943847656,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "method": "canny",
          "threshold1": 50,
          "threshold2": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.003994464874267578,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.0054776668548583984,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 阈值为0和最大值",
        "purpose": "验证工具是否能正确处理最小和最大阈值边界情况。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 0,
          "threshold2": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1351824 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.jpg\"}"
        },
        "execution_time": 0.10521817207336426,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_@test#123.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 220290 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot_@test#123_edges_canny.png\"}"
        },
        "execution_time": 0.04982948303222656,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "method": "canny",
          "threshold1": 50,
          "threshold2": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.006243228912353516,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 阈值1大于阈值2",
        "purpose": "验证当阈值1大于阈值2时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 200,
          "threshold2": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold2 must be an integer greater than threshold1, got 100\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "基本功能测试 - 正常图片应用阈值",
        "purpose": "验证工具能够对正常图片文件正确应用阈值分割处理。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.08063888549804688,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片应用阈值",
        "purpose": "验证工具能够处理PNG格式图片并成功进行阈值分割。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 100 with max value 200 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.png\"}"
        },
        "execution_time": 0.16359186172485352,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\modules.xml\"}"
        },
        "execution_time": 0.006002664566040039,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 最小阈值和最大值",
        "purpose": "验证工具能否正确处理最小有效阈值（0）和紧接其后的max_value（1）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 0,
          "max_value": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 0 with max value 1 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.07646298408508301,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_@test#123.png",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot_@test#123.png\"}"
        },
        "execution_time": 0.004106760025024414,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.006882190704345703,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 参数无效（负数阈值）",
        "purpose": "验证当提供负数作为阈值参数时，工具是否抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": -10,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Threshold value must be a non-negative integer, got -10\"}"
        },
        "execution_time": 0.0058209896087646484,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "基本功能测试 - 正常图片检测轮廓",
        "purpose": "验证工具能够正确检测有效图片文件的轮廓并返回数量及保存路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_external_simple.jpg\"}"
        },
        "execution_time": 0.08475089073181152,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式图片检测轮廓",
        "purpose": "验证工具能够处理PNG格式图片并正确检测轮廓信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_external_simple.png\"}"
        },
        "execution_time": 0.17812061309814453,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用tree模式检测层次结构轮廓",
        "purpose": "验证工具在使用tree模式时是否能正确检测图像中具有层级关系的轮廓。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "tree",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 17959 contours using mode 'tree' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_tree_simple.jpg\"}"
        },
        "execution_time": 0.1981217861175537,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.005004405975341797,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效mode参数",
        "purpose": "验证工具是否对无效的mode参数进行校验并抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "invalid_mode",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour retrieval mode: invalid_mode. Supported modes are ['external', 'tree']\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效method参数",
        "purpose": "验证工具是否对无效的method参数进行校验并抛出ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "invalid_method"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid contour approximation method: invalid_method. Supported methods are ['simple', 'chain_approx_none']\"}"
        },
        "execution_time": 0.0040912628173828125,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的图像路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_@test#123.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot_@test#123.png\"}"
        },
        "execution_time": 0.008305788040161133,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\"}"
        },
        "execution_time": 0.004515886306762695,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "基本功能测试 - 查找圆形形状",
        "purpose": "验证工具能够正确识别图像中的圆形形状并返回数量和位置信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.01764941215515,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 查找矩形形状",
        "purpose": "验证工具能够正确识别图像中的矩形形状并返回数量和位置信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.03948760032654,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - PNG格式查找圆形",
        "purpose": "验证工具是否支持在PNG格式图像中查找圆形。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.png",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.09502339363098,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 带边缘检测的图像查找形状",
        "purpose": "验证工具能否处理经过Canny边缘检测后的图像并正确识别形状。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_edges_canny.jpg",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.11785078048706,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的图像路径不存在时，工具是否抛出FileNotFoundError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.033547163009644,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件",
        "purpose": "验证工具在传入非图像文件时是否能优雅地报错。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\modules.xml",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.04193687438965,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 路径含空格和特殊字符",
        "purpose": "验证工具能否正确处理包含空格和特殊字符的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot_@test#123.png",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.075766801834106,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制目录中的文件",
        "purpose": "验证工具是否限制对系统敏感或受限目录中文件的访问。",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\hosts",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 50.07329201698303,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}