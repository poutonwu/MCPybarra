{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_zotero",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_zotero/refined/server.py",
  "timestamp": "2025-07-13T03:13:06.117962",
  "tools": [
    {
      "name": "get_item_metadata",
      "description": "\n    获取指定 Zotero 条目的详细元数据。\n\n    Args:\n        item_key: 要获取元数据的 Zotero 条目键值，必须是字符串类型且非空。\n\n    Returns:\n        返回包含条目详细元数据的 JSON 字典，包括标题、作者、出版年份等信息。\n\n    Raises:\n        ValueError: 如果 item_key 无效或格式不正确。\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_metadataArguments",
        "type": "object"
      }
    },
    {
      "name": "get_item_fulltext",
      "description": "\n    提取指定 Zotero 条目的全文内容。\n\n    Args:\n        item_key: 要提取全文的 Zotero 条目键值，必须是字符串类型且非空。\n\n    Returns:\n        返回包含条目全文内容的字典，如果条目没有全文内容则返回空字符串。\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_fulltextArguments",
        "type": "object"
      }
    },
    {
      "name": "search_items",
      "description": "\n    在 Zotero 库中执行灵活搜索，支持按标题、创建者、年份或全文搜索。\n\n    Args:\n        query: 搜索查询字符串，必须是字符串类型且非空。\n        search_type: 搜索类型，可选值为 \"title\", \"creator\", \"year\", \"fulltext\"，默认为 \"title\"。\n        page: 当前页码，必须是正整数，默认为1。\n        items_per_page: 每页结果数量，必须是正整数，默认为20。\n\n    Returns:\n        返回格式化的搜索结果列表，每个结果包含条目键值、标题和匹配度评分。\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "search_type": {
            "default": "title",
            "title": "Search Type",
            "type": "string"
          },
          "page": {
            "default": 1,
            "title": "Page",
            "type": "integer"
          },
          "items_per_page": {
            "default": 20,
            "title": "Items Per Page",
            "type": "integer"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_itemsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_items": [
      {
        "case_name": "基本标题搜索功能",
        "purpose": "验证默认参数下按标题搜索的基本功能是否正常",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "{\n  \"results\": [\n    {\n      \"item_key\": \"TCAVDPC4\",\n      \"title\": \"AgentCoder: Multi-Agent-based Code Generation with Iterative Testing and Optimisation\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"ASHWF68J\",\n      \"title\": \"Software Testing with Large Language Models: Survey, Landscape, and Vision\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"JJS8VNMI\",\n      \"title\": \"Software Testing With Large Language Models: Survey, Landscape, and Vision\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"Q78PQR25\",\n      \"title\": \"Automated Unit Test Improvement using Large Language Models at Meta\",\n      \"score\": 0\n    }\n  ],\n  \"total\": 4,\n  \"search_type\": \"title\",\n  \"query\": \"test\",\n  \"page\": 1,\n  \"items_per_page\": 20,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 1.7337708473205566,
        "is_functional_test": true
      },
      {
        "case_name": "指定搜索类型为作者",
        "purpose": "测试使用 search_type 参数为 'creator' 时能否正确执行搜索",
        "args": {
          "query": "John Doe",
          "search_type": "creator"
        },
        "response": {
          "result": "{\n  \"results\": [],\n  \"total\": 0,\n  \"search_type\": \"creator\",\n  \"query\": \"John Doe\",\n  \"page\": 1,\n  \"items_per_page\": 20,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.4117903709411621,
        "is_functional_test": true
      },
      {
        "case_name": "全文搜索功能测试",
        "purpose": "验证工具支持全文搜索功能，且返回结果格式正确",
        "args": {
          "query": "machine learning",
          "search_type": "fulltext"
        },
        "response": {
          "result": "{\n  \"results\": [\n    {\n      \"item_key\": \"RW5W5JN2\",\n      \"title\": \"Snapshot\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"NZ26PJJX\",\n      \"title\": \"Preprint PDF\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"K78DMKPD\",\n      \"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"KRR7MFVP\",\n      \"title\": \"Snapshot\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"LMA2MAZI\",\n      \"title\": \"Preprint PDF\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"2VCDLWBG\",\n      \"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"X6PB95S9\",\n      \"title\": \"Preprint PDF\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"6AAK9P4J\",\n      \"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"SNUTTAER\",\n      \"title\": \"Preprint PDF\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"PMJIF2UH\",\n      \"title\": \"Snapshot\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"ZMFZ6DR6\",\n      \"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"TL6DJ74R\",\n      \"title\": \"Preprint PDF\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"RA65N57L\",\n      \"title\": \"Snapshot\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"38UU...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2416字符，剩余916字符"
        },
        "execution_time": 0.7939245700836182,
        "is_functional_test": true
      },
      {
        "case_name": "分页搜索测试 - 第二页",
        "purpose": "验证 page 参数是否能正确控制分页结果，确保翻页功能正常",
        "args": {
          "query": "AI",
          "page": 2
        },
        "response": {
          "result": "{\n  \"results\": [\n    {\n      \"item_key\": \"HGM89UJG\",\n      \"title\": \"CodeR: Issue Resolving with Multi-Agent and Task Graphs\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"AK77UVTE\",\n      \"title\": \"Hierarchical Auto-Organizing System for Open-Ended Multi-Agent Navigation\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"PR8TC369\",\n      \"title\": \"Multi-Task Multi-Agent Reinforcement Learning With Task-Entity Transformers and Value Decomposition Training\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"EKFH2UK4\",\n      \"title\": \"Routing Experts: Learning to Route Dynamic Experts in Multi-modal Large Language Models\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"WP8TE7EB\",\n      \"title\": \"A Survey on Mixture of Experts\",\n      \"score\": 0\n    },\n    {\n      \"item_key\": \"DD5BK4ES\",\n      \"title\": \"PRewrite: Prompt Rewriting with Reinforcement Learning\",\n      \"score\": 0\n    }\n  ],\n  \"total\": 6,\n  \"search_type\": \"title\",\n  \"query\": \"AI\",\n  \"page\": 2,\n  \"items_per_page\": 20,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.8616683483123779,
        "is_functional_test": true
      },
      {
        "case_name": "每页条目数量调整测试",
        "purpose": "验证 items_per_page 参数是否能正确控制每页返回的条目数",
        "args": {
          "query": "deep learning",
          "items_per_page": 5
        },
        "response": {
          "result": "{\n  \"results\": [],\n  \"total\": 0,\n  \"search_type\": \"title\",\n  \"query\": \"deep learning\",\n  \"page\": 1,\n  \"items_per_page\": 5,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.41565823554992676,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符搜索测试",
        "purpose": "验证系统对特殊字符（如空格、标点）的搜索处理能力",
        "args": {
          "query": "machine, learning? AI!"
        },
        "response": {
          "result": "{\n  \"results\": [],\n  \"total\": 0,\n  \"search_type\": \"title\",\n  \"query\": \"machine, learning? AI!\",\n  \"page\": 1,\n  \"items_per_page\": 20,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.40946054458618164,
        "is_functional_test": true
      },
      {
        "case_name": "跨页边界测试 - 首页最后一条",
        "purpose": "测试分页边界条件，验证第一页最后一个条目与第二页第一个条目是否连续",
        "args": {
          "query": "research",
          "page": 1,
          "items_per_page": 1
        },
        "response": {
          "result": "{\n  \"results\": [\n    {\n      \"item_key\": \"I42DDMRJ\",\n      \"title\": \"Agent Laboratory: Using LLM Agents as Research Assistants\",\n      \"score\": 0\n    }\n  ],\n  \"total\": 1,\n  \"search_type\": \"title\",\n  \"query\": \"research\",\n  \"page\": 1,\n  \"items_per_page\": 1,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.6100523471832275,
        "is_functional_test": true
      },
      {
        "case_name": "跨页边界测试 - 次页第一条",
        "purpose": "配合上一个用例，测试分页边界是否处理正确",
        "args": {
          "query": "research",
          "page": 2,
          "items_per_page": 1
        },
        "response": {
          "result": "{\n  \"results\": [\n    {\n      \"item_key\": \"3FW4Z8K9\",\n      \"title\": \"Model Context Protocol (MCP): Landscape, Security Threats, and Future Research Directions\",\n      \"score\": 0\n    }\n  ],\n  \"total\": 1,\n  \"search_type\": \"title\",\n  \"query\": \"research\",\n  \"page\": 2,\n  \"items_per_page\": 1,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.6082885265350342,
        "is_functional_test": true
      },
      {
        "case_name": "SQL注入尝试防护测试",
        "purpose": "验证系统是否对恶意输入进行有效过滤或转义，防止潜在注入攻击",
        "args": {
          "query": "'; DROP TABLE test; --"
        },
        "response": {
          "result": "{\n  \"results\": [],\n  \"total\": 0,\n  \"search_type\": \"title\",\n  \"query\": \"'; DROP TABLE test; --\",\n  \"page\": 1,\n  \"items_per_page\": 20,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.41883063316345215,
        "is_functional_test": false
      },
      {
        "case_name": "空查询字符串测试",
        "purpose": "验证 query 参数为空时是否会抛出错误或返回空结果",
        "args": {
          "query": ""
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid input\",\n  \"message\": \"query 必须是非空字符串\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.005002737045288086,
        "is_functional_test": false
      },
      {
        "case_name": "无效搜索类型测试",
        "purpose": "验证传入非法 search_type 值时系统是否能正确处理错误",
        "args": {
          "query": "error",
          "search_type": "invalid_type"
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid parameter\",\n  \"message\": \"search_type 必须是以下之一：title, creator, year, fulltext\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.0075168609619140625,
        "is_functional_test": false
      },
      {
        "case_name": "负数页码测试",
        "purpose": "验证 page 参数为负数时是否能正确报错或返回默认第一页",
        "args": {
          "query": "negative",
          "page": -1
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid parameter\",\n  \"message\": \"page 必须是大于等于1的正整数\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": false
      },
      {
        "case_name": "零条目每页测试",
        "purpose": "验证 items_per_page 为0时是否能正确处理并使用默认值",
        "args": {
          "query": "zero",
          "items_per_page": 0
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid parameter\",\n  \"message\": \"items_per_page 必须是大于等于1的正整数\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.009016036987304688,
        "is_functional_test": false
      },
      {
        "case_name": "最大整数值测试",
        "purpose": "验证 page 和 items_per_page 使用极大值时是否能正确处理",
        "args": {
          "query": "max",
          "page": 2147483647,
          "items_per_page": 2147483647
        },
        "response": {
          "result": "{\n  \"results\": [],\n  \"total\": 0,\n  \"search_type\": \"title\",\n  \"query\": \"max\",\n  \"page\": 2147483647,\n  \"items_per_page\": 2147483647,\n  \"status\": \"success\",\n  \"code\": 200\n}"
        },
        "execution_time": 0.41828179359436035,
        "is_functional_test": false
      }
    ],
    "get_item_metadata": [
      {
        "case_name": "获取有效条目元数据",
        "purpose": "验证给定有效 item_key 能正确返回 Zotero 条目的详细元数据",
        "args": {
          "item_key": "TCAVDPC4"
        },
        "response": {
          "result": "{\n  \"metadata\": {\n    \"title\": \"AgentCoder: Multi-Agent-based Code Generation with Iterative Testing and Optimisation\",\n    \"creators\": [\n      {\n        \"name\": \"无创作者\"\n      },\n      {\n        \"name\": \"无创作者\"\n      },\n      {\n        \"name\": \"无创作者\"\n      },\n      {\n        \"name\": \"无创作者\"\n      },\n      {\n        \"name\": \"无创作者\"\n      },\n      {\n        \"name\": \"无创作者\"\n      }\n    ],\n    \"year\": \"2024-05-24\",\n    \"item_type\": \"preprint\",\n    \"tags\": [\n      {\n        \"tag\": \"Computer Science - Computation and Language\",\n        \"type\": 1\n      }\n    ],\n    \"collections\": [\n      \"AUICFZZ4\"\n    ],\n    \"abstract\": \"The advancement of natural language processing (NLP) has been significantly boosted by the development of transformer-based large language models (LLMs). These models have revolutionized NLP tasks, particularly in code generation, aiding developers in creating software with enhanced efficiency. Despite their advancements, challenges in balancing code snippet generation with effective test case generation and execution persist. To address these issues, this paper introduces Multi-Agent Assistant Code Generation (AgentCoder), a novel solution comprising a multi-agent framework with specialized agents: the programmer agent, the test designer agent, and the test executor agent. During the coding procedure, the programmer agent will focus on the code generation and refinement based on the test executor agent's feedback. The test designer agent will generate test cases for th...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2437字符，剩余937字符"
        },
        "execution_time": 1.5696232318878174,
        "is_functional_test": true
      },
      {
        "case_name": "空 item_key 测试",
        "purpose": "验证当提供空字符串作为 item_key 时是否抛出 ValueError",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid input\",\n  \"message\": \"item_key 必须是非空字符串\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.003996610641479492,
        "is_functional_test": false
      },
      {
        "case_name": "非字符串类型 item_key 测试",
        "purpose": "验证当提供非字符串类型的 item_key（如整数）时是否抛出 ValueError",
        "args": {
          "item_key": 12345678
        },
        "response": {
          "error": "ToolException: Error executing tool get_item_metadata: 1 validation error for get_item_metadataArguments\nitem_key\n  Input should be a valid string [type=string_type, input_value=12345678, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.007002115249633789,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的 item_key 测试",
        "purpose": "验证当提供一个格式正确但不存在的 item_key 时是否能优雅处理错误",
        "args": {
          "item_key": "INVALIDKEY"
        },
        "response": {
          "result": "{\n  \"error\": \"Item not found\",\n  \"message\": \"未找到 item_key 为 'INVALIDKEY' 的 Zotero 条目\",\n  \"code\": 404\n}"
        },
        "execution_time": 0.4005014896392822,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符 item_key 测试",
        "purpose": "验证当提供包含特殊字符的 item_key 是否能正确识别为无效输入",
        "args": {
          "item_key": "KEY@WITH#SPECIAL$CHARS"
        },
        "response": {
          "result": "{\n  \"error\": \"Item not found\",\n  \"message\": \"未找到 item_key 为 'KEY@WITH#SPECIAL$CHARS' 的 Zotero 条目\",\n  \"code\": 404\n}"
        },
        "execution_time": 0.39619016647338867,
        "is_functional_test": false
      },
      {
        "case_name": "最小长度合法 item_key 测试",
        "purpose": "验证最短合法长度的 item_key 是否能正常获取元数据",
        "args": {
          "item_key": "A1B2C3D4"
        },
        "response": {
          "result": "{\n  \"error\": \"Item not found\",\n  \"message\": \"未找到 item_key 为 'A1B2C3D4' 的 Zotero 条目\",\n  \"code\": 404\n}"
        },
        "execution_time": 0.3965492248535156,
        "is_functional_test": true
      },
      {
        "case_name": "SQL注入防护测试 - item_key",
        "purpose": "验证系统是否对恶意构造的 item_key 输入进行安全过滤或转义，防止潜在注入攻击",
        "args": {
          "item_key": "'; DROP TABLE zotero_items; --"
        },
        "response": {
          "result": "{\n  \"error\": \"Item not found\",\n  \"message\": \"未找到 item_key 为 ''; DROP TABLE zotero_items; --' 的 Zotero 条目\",\n  \"code\": 404\n}"
        },
        "execution_time": 0.39575624465942383,
        "is_functional_test": false
      },
      {
        "case_name": "跨站请求伪造 (CSRF) 模拟测试",
        "purpose": "模拟 CSRF 攻击场景，验证工具是否会执行未授权的操作",
        "args": {
          "item_key": "FORGERY_KEY"
        },
        "response": {
          "result": "{\n  \"error\": \"Item not found\",\n  \"message\": \"未找到 item_key 为 'FORGERY_KEY' 的 Zotero 条目\",\n  \"code\": 404\n}"
        },
        "execution_time": 0.40230345726013184,
        "is_functional_test": false
      }
    ],
    "get_item_fulltext": [
      {
        "case_name": "提取有效条目全文内容",
        "purpose": "验证给定有效的 item_key 能正确返回 Zotero 条目的全文内容",
        "args": {
          "item_key": "RW5W5JN2"
        },
        "response": {
          "result": "{\n  \"fulltext\": \"{\\n    \\\"content\\\": \\\"Skip to main content\\\\nComputer Science > Computation and Language\\\\n[Submitted on 8 Feb 2025]\\\\nCODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\\\\nMd. Ashraful Islam, Mohammed Eunus Ali, Md Rizwan Parvez\\\\nLarge Language Models (LLMs) have made significant strides in code generation and problem solving. Current approaches employ external tool-based iterative debuggers that use compiler or other tool-based runtime feedback to refine coarse programs generated by various methods. However, the effectiveness of these approaches heavily relies on the quality of the initial code generation, which remains an open challenge. In this paper, we introduce CodeSim, a novel multi-agent code generation framework that comprehensively addresses the stages of program synthesis-planning, coding, and debugging-through a human-like perception approach. As human verifies their understanding of any algorithms through visual simulation, CodeSim uniquely features a method of plan verification and internal debugging through the step-by-step simulation of input/output. Extensive experiments across seven challenging competitive problem-solving and program synthesis benchmarks demonstrate CodeSim's remarkable code generation capabilities. Our framework achieves new state-of-the-art (pass@1) results-(HumanEval 95.1%, MBPP 90.7%, APPS 22%, and CodeContests 29.1%). Furthermore, our method shows potential for eve...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计3114字符，剩余1614字符"
        },
        "execution_time": 2.5152435302734375,
        "is_functional_test": true
      },
      {
        "case_name": "提取无全文内容的条目",
        "purpose": "验证当指定条目没有全文内容时，工具是否返回空字符串",
        "args": {
          "item_key": "TCAVDPC4"
        },
        "response": {
          "result": "{\n  \"fulltext\": \"\",\n  \"message\": \"该条目没有可用的全文内容\",\n  \"code\": 200\n}"
        },
        "execution_time": 1.4760682582855225,
        "is_functional_test": true
      },
      {
        "case_name": "SQL注入防护测试 - item_key",
        "purpose": "验证系统是否对恶意构造的 item_key 输入进行安全过滤或转义，防止潜在注入攻击",
        "args": {
          "item_key": "'; DROP TABLE zotero_items; --"
        },
        "response": {
          "result": "{\n  \"error\": \"Server internal error\",\n  \"message\": \"服务器内部错误：可能是无效的附件路径或服务器问题导致无法获取全文。请确认条目是否包含附件，并稍后重试。\",\n  \"code\": 500\n}"
        },
        "execution_time": 2.0393295288085938,
        "is_functional_test": false
      },
      {
        "case_name": "空 item_key 测试",
        "purpose": "验证当提供空字符串作为 item_key 时是否抛出错误提示",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\n  \"error\": \"Invalid input\",\n  \"message\": \"item_key 必须是非空字符串\",\n  \"code\": 400\n}"
        },
        "execution_time": 0.3768162727355957,
        "is_functional_test": false
      },
      {
        "case_name": "非字符串类型 item_key 测试",
        "purpose": "验证当提供非字符串类型的 item_key（如整数）时是否抛出参数类型错误",
        "args": {
          "item_key": 12345678
        },
        "response": {
          "error": "ToolException: Error executing tool get_item_fulltext: 1 validation error for get_item_fulltextArguments\nitem_key\n  Input should be a valid string [type=string_type, input_value=12345678, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.3543076515197754,
        "is_functional_test": false
      },
      {
        "case_name": "不存在的 item_key 测试",
        "purpose": "验证当提供一个格式正确但不存在的 item_key 时是否能优雅处理错误",
        "args": {
          "item_key": "INVALIDKEY"
        },
        "response": {
          "result": "{\n  \"fulltext\": \"\",\n  \"message\": \"该条目没有可用的全文内容\",\n  \"code\": 200\n}"
        },
        "execution_time": 1.7191789150238037,
        "is_functional_test": true
      },
      {
        "case_name": "最小长度合法 item_key 测试",
        "purpose": "验证最短合法长度的 item_key 是否能正常获取全文内容",
        "args": {
          "item_key": "A1B2C3D4"
        },
        "response": {
          "result": "{\n  \"fulltext\": \"\",\n  \"message\": \"该条目没有可用的全文内容\",\n  \"code\": 200\n}"
        },
        "execution_time": 2.0003552436828613,
        "is_functional_test": true
      },
      {
        "case_name": "特殊字符 item_key 测试",
        "purpose": "验证当提供包含特殊字符的 item_key 是否能被正确识别为无效输入",
        "args": {
          "item_key": "KEY@WITH#SPECIAL$CHARS"
        },
        "response": {
          "result": "{\n  \"fulltext\": \"\",\n  \"message\": \"该条目没有可用的全文内容\",\n  \"code\": 200\n}"
        },
        "execution_time": 1.5016350746154785,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 30
}