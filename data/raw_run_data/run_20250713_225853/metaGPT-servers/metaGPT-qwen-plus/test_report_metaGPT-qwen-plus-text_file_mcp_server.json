{
  "server_name": "text_file_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-text_file_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\text_file_mcp_server.py",
  "timestamp": "2025-07-13T23:01:15.832047",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    读取多个文本文件内容，支持按行范围读取并返回文件哈希值。\n\n    Args:\n        file_paths: 要读取的文件路径列表。\n        start_line: 开始行号（可选）。如果指定，则必须同时指定 end_line。\n        end_line: 结束行号（可选）。如果指定，则必须同时指定 start_line。\n\n    Returns:\n        一个包含文件内容和哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或行号范围无效。\n        RuntimeError: 如果读取文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_paths": {
            "items": {},
            "title": "File Paths",
            "type": "array"
          },
          "start_line": {
            "default": null,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          }
        },
        "required": [
          "file_paths"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "create_text_file",
      "description": "\n    创建新文本文件并写入内容。\n\n    Args:\n        file_path: 要创建的文件路径。\n        content: 要写入的内容。\n\n    Returns:\n        一个包含操作结果和文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件已经存在。\n        RuntimeError: 如果创建文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "create_text_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    向现有文本文件追加内容。\n\n    Args:\n        file_path: 要追加内容的文件路径。\n        content: 要追加的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在或哈希验证失败。\n        RuntimeError: 如果追加内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    删除文本文件中特定范围的内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        start_line: 开始行号（包括）。\n        end_line: 结束行号（包括）。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号范围无效或哈希验证失败。\n        RuntimeError: 如果删除内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    在文本文件的指定位置插入内容。\n\n    Args:\n        file_path: 要修改的文件路径。\n        line_number: 插入位置的行号（从1开始计数）。\n        content: 要插入的内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、行号无效或哈希验证失败。\n        RuntimeError: 如果插入内容时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "line_number",
          "content"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "patch_text_file_contents",
      "description": "\n    应用精确修改到文本文件，并支持哈希验证。\n\n    Args:\n        file_path: 要修改的文件路径。\n        old_content: 需要被替换的旧内容。\n        new_content: 替换的新内容。\n        expected_hash: 文件的预期哈希值（可选）。如果提供，将验证文件内容与哈希值匹配。\n\n    Returns:\n        一个包含操作结果和新文件哈希值的字典。\n\n    Raises:\n        ValueError: 如果文件不存在、旧内容不匹配或哈希验证失败。\n        RuntimeError: 如果修改文件时发生错误。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "old_content": {
            "title": "Old Content",
            "type": "string"
          },
          "new_content": {
            "title": "New Content",
            "type": "string"
          },
          "expected_hash": {
            "default": null,
            "title": "Expected Hash",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "old_content",
          "new_content"
        ],
        "title": "patch_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_text_file": [
      {
        "case_name": "基本功能测试 - 创建新文本文件并写入内容",
        "purpose": "验证工具能够成功创建一个新文本文件并正确写入指定内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "This is a test content for the new file."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 创建成功\",\n  \"hash\": \"e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890\"\n}"
        },
        "execution_time": 0.008000612258911133,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试覆盖.git目录中的敏感文件",
        "purpose": "验证工具是否能防止在.git目录内创建或覆盖文件，以避免破坏Git配置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "content": "[core]\nrepositoryformatversion = 0"
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config 已经存在"
        },
        "execution_time": 0.004067420959472656,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件已存在",
        "purpose": "验证当目标文件已经存在时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
          "content": "Overwriting an existing file should fail."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg 已经存在"
        },
        "execution_time": 0.00400543212890625,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 无效路径",
        "purpose": "验证当提供不存在或无法访问的路径时，工具是否能优雅地处理运行时错误。",
        "args": {
          "file_path": "D:\\invalidPath\\nonexistent\\file.txt",
          "content": "This should fail due to invalid path."
        },
        "response": {
          "error": "ToolException: Error executing tool create_text_file: 创建文件时发生错误: [Errno 2] No such file or directory: 'D:\\\\invalidPath\\\\nonexistent\\\\file.txt'"
        },
        "execution_time": 0.006996631622314453,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长文件名",
        "purpose": "验证工具是否支持超长文件名，并能正确创建文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_tests_the_boundary_conditions_of_the_tool.txt",
          "content": "Testing with a very long filename."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\this_is_a_very_long_file_name_that_tests_the_boundary_conditions_of_the_tool.txt 创建成功\",\n  \"hash\": \"04ec75779e771334cab2d5827d70ac513c6905504f27d9f512a19acb516fd35c\"\n}"
        },
        "execution_time": 0.00500178337097168,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能处理包含特殊字符的文件名。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt",
          "content": "File with special characters in name."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt 创建成功\",\n  \"hash\": \"72a18cffddaf782acc45f3abbdfa7a365a517462731d53b83d22fbf2b136bd30\"\n}"
        },
        "execution_time": 0.005006074905395508,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 空内容写入",
        "purpose": "验证工具是否允许创建空内容的文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 创建成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.008023738861083984,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 隐藏文件创建",
        "purpose": "验证工具是否能安全地处理隐藏文件（以点开头）的创建，确保不会误操作其他系统隐藏文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_new_file.txt",
          "content": "# This is a hidden config-like file"
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_new_file.txt 创建成功\",\n  \"hash\": \"14791166c57c28eae04d9d525c294cede5cba0468076feaf19ebf14202f17c00\"\n}"
        },
        "execution_time": 0.005972146987915039,
        "is_functional_test": false
      }
    ],
    "get_text_file_contents": [
      {
        "case_name": "基本功能测试 - 读取单个文件全部内容",
        "purpose": "验证工具能够成功读取一个文本文件的完整内容并返回哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\": {\n    \"content\": \"This is a test content for the new file.\",\n    \"hash\": \"e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890\"\n  }\n}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 读取多个文件全部内容",
        "purpose": "验证工具能够同时读取多个文本文件的完整内容，并正确返回每个文件的内容和哈希值。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\": {\n    \"content\": \"This is a test content for the new file.\",\n    \"hash\": \"e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890\"\n  },\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.011018514633178711,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 按行范围读取文件内容",
        "purpose": "验证工具支持按指定行号范围读取文件内容。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ],
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试读取.git目录中的敏感文件",
        "purpose": "验证工具是否能防止读取.git目录内的敏感配置文件，如config或HEAD。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\": {\n    \"content\": \"[core]\\n\\trepositoryformatversion = 0\\n\\tfilemode = false\\n\\tbare = false\\n\\tlogallrefupdates = true\\n\\tignorecase = true\\n\",\n    \"hash\": \"16ede81ff8225a028ea47d7da268da123355decf7cc0fa7b66b8cc4060005fa6\"\n  }\n}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径无效或文件不存在时，工具是否会抛出ValueError异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt 不存在"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号范围无效",
        "purpose": "验证当提供不合法的行号范围（如负数、起始大于结束）时，工具是否会抛出ValueError异常。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
          ],
          "start_line": 5,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号范围无效"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空文件内容读取",
        "purpose": "验证工具在读取空文件时能否正确处理，返回空字符串和对应哈希。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\": {\n    \"content\": \"\",\n    \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n  }\n}"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名读取",
        "purpose": "验证工具是否能正确读取包含特殊字符的文件名的文本文件。",
        "args": {
          "file_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt"
          ]
        },
        "response": {
          "result": "{\n  \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt\": {\n    \"content\": \"File with special characters in name.\",\n    \"hash\": \"72a18cffddaf782acc45f3abbdfa7a365a517462731d53b83d22fbf2b136bd30\"\n  }\n}"
        },
        "execution_time": 0.004263639450073242,
        "is_functional_test": true
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "基本功能测试 - 向现有文件追加内容",
        "purpose": "验证工具能够成功向一个已存在的文本文件追加指定内容，并返回新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "\nThis is the appended content."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"6a9f860b59960a4f9c99cd6fdfb3548b1b4b7617afe299708f6ea17dfae438ef\"\n}"
        },
        "execution_time": 0.0069882869720458984,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用预期哈希验证追加后文件内容",
        "purpose": "验证工具在提供expected_hash参数时，能正确校验追加后的文件内容是否符合预期哈希。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "\nAnother line added for hash verification.",
          "expected_hash": "e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: 6a9f860b59960a4f9c99cd6fdfb3548b1b4b7617afe299708f6ea17dfae438ef, 预期哈希: e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890"
        },
        "execution_time": 0.009503841400146484,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试向.git目录中的敏感文件追加内容",
        "purpose": "验证工具是否能防止对.git目录内的配置文件进行内容追加操作，以避免破坏Git仓库。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "content": "\n[append-test]\nprevent = false"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\",\n  \"hash\": \"8d94abd0c7ddaad1ef69704c3255c30dba5c0bfe75ae0b16c40be5c12d12d1dc\"\n}"
        },
        "execution_time": 0.006994962692260742,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径无效或文件不存在时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "content": "This should fail because file does not exist."
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt 不存在"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 哈希验证失败",
        "purpose": "验证当提供的expected_hash与实际文件哈希不匹配时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "\nThis change will invalidate expected hash.",
          "expected_hash": "invalidhash1234567890abcdef"
        },
        "response": {
          "error": "ToolException: Error executing tool append_text_file_contents: 追加内容到文件时发生错误: 哈希验证失败。当前文件哈希: 6a9f860b59960a4f9c99cd6fdfb3548b1b4b7617afe299708f6ea17dfae438ef, 预期哈希: invalidhash1234567890abcdef"
        },
        "execution_time": 0.005746364593505859,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 追加空字符串内容",
        "purpose": "验证工具是否能正确处理追加空字符串内容的情况，即不改变原文件内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "content": ""
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.00400543212890625,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名追加内容",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件名并成功追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt",
          "content": "\nSpecial characters in filename should not affect append operation."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt\",\n  \"hash\": \"3899dd8c574fe4936a58965f135b0257ef9f1a1891174974f8fe6e096b2cbe3b\"\n}"
        },
        "execution_time": 0.00800013542175293,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 超长文件路径追加内容",
        "purpose": "验证工具是否支持超长文件路径的追加操作，并保持稳定性。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\this_is_a_very_long_file_name_that_tests_the_boundary_conditions_of_the_tool.txt",
          "content": "\nAppending to a file with very long name."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功追加到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\this_is_a_very_long_file_name_that_tests_the_boundary_conditions_of_the_tool.txt\",\n  \"hash\": \"e1228ffef5d35ff7e826c7c6158807990a2327ddb80d456bb7d197a74b602d5b\"\n}"
        },
        "execution_time": 0.0044460296630859375,
        "is_functional_test": true
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "基本功能测试 - 在文件中间插入内容",
        "purpose": "验证工具能够成功在指定行号位置插入内容，并确保文件哈希值变化正确。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 1,
          "content": "This is the inserted line."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"99370b1e50acdf95bf6d0a2c8c1278ab0bef06eaf8d93ed99c424d2e6b71c0b2\"\n}"
        },
        "execution_time": 0.005172252655029297,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 插入内容并验证预期哈希值",
        "purpose": "验证工具在插入内容后，生成的文件哈希与提供的expected_hash一致。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "line_number": 1,
          "content": "New content with hash check.",
          "expected_hash": "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 哈希验证失败。当前文件哈希: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, 预期哈希: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 在文件末尾插入内容",
        "purpose": "验证工具能够在文件最后一行之后插入新内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 2,
          "content": "This is appended at the end."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"44d31c019a9ddb8917c1aa66a044c2d185169d0957e5ed6483599f20b3f08f8b\"\n}"
        },
        "execution_time": 0.006001710891723633,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改.git目录中的配置文件",
        "purpose": "验证工具是否能防止向.git目录内的敏感文件中插入内容，以避免破坏Git配置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "line_number": 1,
          "content": "[user]\n\tname = test_user"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\",\n  \"hash\": \"004282bfcf2202b177e142dc1002eb0e70abaa4388291ab008f3cb8287e7bc65\"\n}"
        },
        "execution_time": 0.013999700546264648,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当目标文件不存在时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "line_number": 1,
          "content": "This should fail because file does not exist."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt 不存在"
        },
        "execution_time": 0.004355669021606445,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号超出文件范围",
        "purpose": "验证当提供无效的行号（大于文件总行数）时，工具是否能优雅地处理错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 100,
          "content": "Inserting into non-existent line number."
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容到文件时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt 的行号无效"
        },
        "execution_time": 0.003001689910888672,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 在空文件中插入内容",
        "purpose": "验证工具能否在完全空的文件中正确插入内容，并生成正确的哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "line_number": 1,
          "content": "First line in an empty file."
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt\",\n  \"hash\": \"8bcb87f97ecbe137c2f9145999da662d760476fb7de0c32271094d5bfb8b0e4d\"\n}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 插入包含特殊字符的内容",
        "purpose": "验证工具是否能正确处理插入内容中包含特殊字符（如换行、制表符等）的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "line_number": 1,
          "content": "Line with special characters: \\n, \\t, @#&*()"
        },
        "response": {
          "result": "{\n  \"message\": \"内容已成功插入到文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\",\n  \"hash\": \"d7ba8d35b6a043df724927441af2f3b1792f3ae6d130d11e390422e7fc4aa7b4\"\n}"
        },
        "execution_time": 0.00800466537475586,
        "is_functional_test": true
      }
    ],
    "patch_text_file_contents": [
      {
        "case_name": "基本功能测试 - 替换文本文件中的内容并验证哈希",
        "purpose": "验证工具能够成功替换指定文本文件中的内容，并返回新的哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "old_content": "This is a test content for the new file.",
          "new_content": "This is the updated content after patching.",
          "expected_hash": "e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 哈希验证失败。当前文件哈希: d7ba8d35b6a043df724927441af2f3b1792f3ae6d130d11e390422e7fc4aa7b4, 预期哈希: e6f6f272d29417ed51077d1deaf261e600b773327f4ef969c11a32a7d69dc890"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 不提供哈希值进行内容替换",
        "purpose": "验证工具在未提供 expected_hash 参数时也能正常执行内容替换操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "old_content": "",
          "new_content": "This file was empty before."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 内容修改成功\",\n  \"hash\": \"bc04308f49b5cb8898162fd20946dc2204bda0f35b24b2193003961fba5dc51d\"\n}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改.git目录下的敏感配置文件",
        "purpose": "验证工具是否能防止对 .git 目录内的敏感文件（如 config）进行内容修改，以避免破坏 Git 配置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "old_content": "[core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true",
          "new_content": "[core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true\n[remote \"origin\"]\n\turl = https://github.com/example/repo.git",
          "expected_hash": "16ede81ff8225a028ea47d7da268da123355decf7cc0fa7b66b8cc4060005fa6"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 哈希验证失败。当前文件哈希: 004282bfcf2202b177e142dc1002eb0e70abaa4388291ab008f3cb8287e7bc65, 预期哈希: 16ede81ff8225a028ea47d7da268da123355decf7cc0fa7b66b8cc4060005fa6"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当目标文件不存在时，工具是否会抛出 ValueError 异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "old_content": "Some old text",
          "new_content": "New replacement text"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt 不存在"
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 旧内容不匹配",
        "purpose": "验证当提供的 old_content 与文件实际内容不匹配时，工具是否会抛出 ValueError 异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "old_content": "Incorrect old content",
          "new_content": "This should not be applied"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 未找到需要替换的旧内容: Incorrect old content"
        },
        "execution_time": 0.007002353668212891,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 哈希验证失败",
        "purpose": "验证当提供的 expected_hash 与文件实际哈希不一致时，工具是否会抛出 ValueError 异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "old_content": "This is a test content for the new file.",
          "new_content": "Modified content with wrong hash check",
          "expected_hash": "wronghashvalue1234567890abcdef"
        },
        "response": {
          "error": "ToolException: Error executing tool patch_text_file_contents: 修改文件内容时发生错误: 哈希验证失败。当前文件哈希: d7ba8d35b6a043df724927441af2f3b1792f3ae6d130d11e390422e7fc4aa7b4, 预期哈希: wronghashvalue1234567890abcdef"
        },
        "execution_time": 0.0049970149993896484,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名内容替换",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件名进行内容替换。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt",
          "old_content": "File with special characters in name.",
          "new_content": "Updated content in special filename"
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt 内容修改成功\",\n  \"hash\": \"5ea2f671ce4059153ab47e888e69782f1eb42b9a3449dd6f9111ca642e7e328b\"\n}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 空内容替换",
        "purpose": "验证工具是否能处理空内容替换场景，即 old_content 或 new_content 为空的情况。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "old_content": "",
          "new_content": "Now this file has some content."
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 内容修改成功\",\n  \"hash\": \"057d7438b0d5efb2b44c31edd10304de73c3df8228e79504ef9f38b803b09820\"\n}"
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": true
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "基本功能测试 - 删除文件中间部分内容",
        "purpose": "验证工具能够正确删除文本文件中指定范围的内容，并返回操作结果和新哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 2,
          "end_line": 3
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 的内容删除成功\",\n  \"hash\": \"b5d68d1f76162c1d4e3cc682955a54068273122de8a6f843ec8fbd3ca5387dc6\"\n}"
        },
        "execution_time": 0.005003452301025391,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 删除文件首行内容",
        "purpose": "验证工具可以删除文件的第一行内容，确保起始行号为1时正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt 的内容删除成功\",\n  \"hash\": \"1704ff6571485b715b7e248d38e3ed8860aac0796aa6130b4d61f95025e3c8cb\"\n}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 删除文件末尾内容",
        "purpose": "验证工具可以删除文件的最后一行内容，确保跨多行的删除操作正常工作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.hidden_new_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.hidden_new_file.txt 的内容删除成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.007540464401245117,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 删除整个文件内容",
        "purpose": "验证工具可以删除文件中的全部内容，生成一个空文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_file.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_file.txt 的内容删除成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试修改.git目录中的配置文件",
        "purpose": "验证工具是否能防止对.git目录下的敏感文件进行内容删除操作，以避免破坏Git配置。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config 的内容删除成功\",\n  \"hash\": \"7957f8e89408c5c21ad79c80f8daca0eee1c4eebad0aac93718ea30b56b0eb9b\"\n}"
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 文件不存在",
        "purpose": "验证当提供的文件路径无效或文件不存在时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt",
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除文件内容时发生错误: 文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.txt 不存在"
        },
        "execution_time": 0.005998134613037109,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 行号范围无效（起始大于结束）",
        "purpose": "验证当提供不合法的行号范围（如起始行大于结束行）时，工具是否会抛出ValueError异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "start_line": 5,
          "end_line": 3
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt 的内容删除成功\",\n  \"hash\": \"b5d68d1f76162c1d4e3cc682955a54068273122de8a6f843ec8fbd3ca5387dc6\"\n}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名删除内容",
        "purpose": "验证工具是否能正确处理包含特殊字符的文件名并执行删除内容操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@#$_filename test.txt",
          "start_line": 1,
          "end_line": 1
        },
        "response": {
          "result": "{\n  \"message\": \"文件 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@#$_filename test.txt 的内容删除成功\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 48
}