{
  "server_name": "financial_data_mcp_server",
  "parent_dir": "metaGPT-qwen-plus",
  "report_name": "metaGPT-qwen-plus-financial_data_mcp_server",
  "server_path": "workspace\\metaGPT-servers\\metaGPT-qwen-plus\\financial_data_mcp_server.py",
  "timestamp": "2025-07-13T22:58:56.843881",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    获取指定公司的财务报表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含收入报表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度收入报表:\n        get_income_statements(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    获取指定公司的资产负债表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含资产负债表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度资产负债表:\n        get_balance_sheets(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    获取指定公司的现金流量表数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        period: 报告周期，可选值为 'annual'（年度）, 'quarterly'（季度）, 或 'ttm'（最近十二个月）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含现金流量表数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司最近5年的年度现金流量表:\n        get_cash_flows(symbol=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    获取指定股票的历史价格数据。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n        start_date: 开始日期，格式为 'YYYY-MM-DD'（可选）。\n        end_date: 结束日期，格式为 'YYYY-MM-DD'（可选）。如果未提供，默认为当前日期。\n\n    Returns:\n        包含历史价格数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司从2023-01-01到2023-12-31的历史股价:\n        get_stock_prices(symbol=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "default": null,
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "default": null,
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    获取与公司或市场相关的最新金融新闻。\n    \n    Args:\n        ticker: 股票代码 (例如, 'AAPL' 代表苹果公司)（可选）。\n        limit: 返回结果的最大数量，必须是正整数，默认为5，最大不超过20。\n\n    Returns:\n        包含金融新闻数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的最新5条新闻:\n        get_market_news(ticker=\"AAPL\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "default": null,
            "title": "Ticker",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    获取公司简介信息，包括行业、所在地等。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含公司简介信息的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的公司简介:\n        get_company_profile(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    获取分析师预测数据，如目标价格和收益预测。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含分析师预测数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的分析师预测数据:\n        get_analyst_estimates(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    获取公司股息历史记录。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股息历史记录的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股息历史记录:\n        get_dividend_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    查询股票分割历史。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股票分割历史的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股票分割历史:\n        get_splits_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    获取公司历史财报数据，如每股收益。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含历史财报数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的历史财报数据:\n        get_earnings_history(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    获取公司财务比率，如市盈率和负债权益比。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含财务比率数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的财务比率:\n        get_financial_ratios(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    获取公司股权结构数据，如机构持股比例。\n    \n    Args:\n        symbol: 股票代码 (例如, 'AAPL' 代表苹果公司)。\n\n    Returns:\n        包含股权结构数据的JSON字符串。\n\n    Raises:\n        ValueError: 如果输入参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        获取苹果公司的股权结构数据:\n        get_ownership_data(symbol=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "获取有效股票代码的公司简介",
        "purpose": "验证工具能够正确获取知名公司的简介信息，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5772571563720703,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的公司简介",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的公司简介信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.558412790298462,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 股票代码不能为空"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码",
        "purpose": "测试工具是否能正确处理包含特殊字符的股票代码，并返回相应的错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 2.6077792644500732,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.5535409450531006,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意输入",
        "purpose": "测试工具是否能够防止通过股票代码参数进行命令注入等安全攻击。",
        "args": {
          "symbol": "; rm -rf /"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.554091215133667,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 1.548250675201416,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "获取有效股票代码的年度收入报表",
        "purpose": "验证工具能够正确获取知名公司的年度收入报表数据，如苹果公司。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.547795295715332,
        "is_functional_test": true
      },
      {
        "case_name": "获取有效股票代码的季度收入报表",
        "purpose": "验证工具能够正确获取知名公司的季度收入报表数据，如微软公司。",
        "args": {
          "symbol": "MSFT",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5572285652160645,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取收入报表",
        "purpose": "验证在仅提供必填参数的情况下，工具是否能使用默认值（period='annual', limit=5）正常运行。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5375661849975586,
        "is_functional_test": true
      },
      {
        "case_name": "获取最大允许数量的收入报表",
        "purpose": "测试工具在最大限制（limit=20）下是否能正确返回结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 1.5564014911651611,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 2.6163554191589355,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何参数导致错误",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 1 validation error for get_income_statementsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003490924835205078,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效周期参数导致错误",
        "purpose": "测试工具在提供非法周期值时是否能正确抛出参数验证错误。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.0042765140533447266,
        "is_functional_test": false
      },
      {
        "case_name": "使用超出范围的limit值",
        "purpose": "测试工具对超过最大限制（limit>20）的处理能力。",
        "args": {
          "symbol": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.004434823989868164,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "获取有效股票代码的年度资产负债表",
        "purpose": "验证工具能够正确获取知名公司的年度资产负债表数据，如苹果公司。",
        "args": {
          "symbol": "AAPL",
          "period": "annual",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6132044792175293,
        "is_functional_test": true
      },
      {
        "case_name": "获取有效股票代码的季度资产负债表",
        "purpose": "验证工具能够正确获取知名公司的季度资产负债表数据，如微软公司。",
        "args": {
          "symbol": "MSFT",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5712921619415283,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取资产负债表",
        "purpose": "验证在仅提供必填参数的情况下，工具是否能使用默认值（period='annual', limit=5）正常运行。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.5907211303710938,
        "is_functional_test": true
      },
      {
        "case_name": "获取最大允许数量的资产负债表",
        "purpose": "测试工具在最大限制（limit=20）下是否能正确返回结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6122503280639648,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: "
        },
        "execution_time": 1.6654486656188965,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何参数导致错误",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 1 validation error for get_balance_sheetsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效周期参数导致错误",
        "purpose": "测试工具在提供非法周期值时是否能正确抛出参数验证错误。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "使用超出范围的limit值",
        "purpose": "测试工具对超过最大限制（limit>20）的处理能力。",
        "args": {
          "symbol": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.007000923156738281,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "获取有效股票代码的年度现金流量表",
        "purpose": "验证工具能够正确获取知名公司的年度现金流量表数据，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.539968729019165,
        "is_functional_test": true
      },
      {
        "case_name": "获取有效股票代码的季度现金流量表",
        "purpose": "验证工具能够正确获取知名公司的季度现金流量表数据，如微软公司。",
        "args": {
          "symbol": "MSFT",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5903606414794922,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取现金流量表",
        "purpose": "验证在仅提供必填参数的情况下，工具是否能使用默认值（period='annual', limit=5）正常运行。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5707297325134277,
        "is_functional_test": true
      },
      {
        "case_name": "获取最大允许数量的现金流量表",
        "purpose": "测试工具在最大限制（limit=20）下是否能正确返回结果。",
        "args": {
          "symbol": "AMZN",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5444750785827637,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 1.5692732334136963,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何参数导致错误",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 1 validation error for get_cash_flowsArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "使用无效周期参数导致错误",
        "purpose": "测试工具在提供非法周期值时是否能正确抛出参数验证错误。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 无效的报告周期: monthly。有效值为 'annual', 'quarterly', 或 'ttm'"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "使用超出范围的limit值",
        "purpose": "测试工具对超过最大限制（limit>20）的处理能力。",
        "args": {
          "symbol": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.007452249526977539,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "获取有效股票代码的财务比率",
        "purpose": "验证工具能够正确获取知名公司的财务比率数据，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 2.8432397842407227,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的财务比率",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的财务比率信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5641546249389648,
        "is_functional_test": true
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 股票代码不能为空"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.6104216575622559,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5579862594604492,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意输入",
        "purpose": "测试工具是否能够防止通过股票代码参数进行命令注入等安全攻击。",
        "args": {
          "symbol": "; rm -rf /"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.571382761001587,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 1.5674731731414795,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "获取有效股票代码的历史财报数据",
        "purpose": "验证工具能够正确获取知名公司的历史财报数据，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.8417017459869385,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的历史财报数据",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的财报信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.520190715789795,
        "is_functional_test": true
      },
      {
        "case_name": "使用默认参数获取财报数据",
        "purpose": "验证在仅提供必填参数的情况下，工具是否能正常运行（无其他可选参数）。",
        "args": {
          "symbol": "GOOGL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.535825490951538,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 股票代码不能为空"
        },
        "execution_time": 0.003000974655151367,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.568181037902832,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.5488884449005127,
        "is_functional_test": false
      },
      {
        "case_name": "模拟API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 1.6367614269256592,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "获取有效股票代码的分析师预测数据",
        "purpose": "验证工具能够正确获取知名公司的分析师预测数据，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5914697647094727,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的分析师预测数据",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的分析师预测信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5441334247589111,
        "is_functional_test": true
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 股票代码不能为空"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5809593200683594,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5708210468292236,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意输入",
        "purpose": "测试工具是否能够防止通过股票代码参数进行命令注入等安全攻击。",
        "args": {
          "symbol": "; rm -rf /"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 1.5396523475646973,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.019286394119263,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "获取有效股票代码的默认日期范围历史价格",
        "purpose": "验证工具能够正确获取知名公司（如苹果）在默认日期范围内的历史股价数据。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5777606964111328,
        "is_functional_test": true
      },
      {
        "case_name": "获取指定日期范围内有效股票的历史价格",
        "purpose": "验证工具能够正确获取微软公司从2023-01-01到2023-12-31的历史股价数据。",
        "args": {
          "symbol": "MSFT",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5790331363677979,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码导致错误",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的参数验证错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 股票代码不能为空"
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能防止通过股票代码参数注入恶意输入或执行非法操作。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 2.0303256511688232,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何参数导致错误",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "使用未来日期作为开始日期导致错误",
        "purpose": "测试工具是否能正确处理逻辑上不合理的日期范围（例如未来的开始日期）。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2099-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5896167755126953,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5682740211486816,
        "is_functional_test": false
      },
      {
        "case_name": "使用超长日期格式作为参数导致错误",
        "purpose": "测试工具对非法日期格式（如长度过长的日期字符串）的处理能力。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-13-01",
          "end_date": "2023-12-32"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 1.5741446018218994,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "获取有效股票代码的股息历史记录",
        "purpose": "验证工具能够正确获取知名公司的股息历史记录，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5540077686309814,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的股息历史记录",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的股息历史记录信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6290173530578613,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 股票代码不能为空"
        },
        "execution_time": 0.004050016403198242,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006951808929443359,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码",
        "purpose": "测试工具是否能正确处理包含特殊字符的股票代码，并返回相应的错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5691401958465576,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.6038320064544678,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 1.5683376789093018,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "获取有效股票代码的分割历史",
        "purpose": "验证工具能够正确获取知名公司的股票分割历史信息，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5991425514221191,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的分割历史",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的股票分割历史信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.7937841415405273,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 股票代码不能为空"
        },
        "execution_time": 0.006000518798828125,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出参数缺失错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码进行安全测试",
        "purpose": "测试工具是否能够防止通过股票代码参数注入恶意输入或特殊字符攻击。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5973625183105469,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 1.5669171810150146,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 2.1315231323242188,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "获取市场新闻默认参数测试",
        "purpose": "验证工具在使用默认参数（ticker=None, limit=5）时能否成功获取市场新闻",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5739820003509521,
        "is_functional_test": true
      },
      {
        "case_name": "获取特定公司股票新闻",
        "purpose": "验证工具在提供有效股票代码（如 AAPL）时能否正确获取相关新闻",
        "args": {
          "ticker": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.584242820739746,
        "is_functional_test": true
      },
      {
        "case_name": "使用最大允许的limit值",
        "purpose": "测试工具在最大限制（limit=20）下是否能正确返回新闻数据",
        "args": {
          "ticker": "MSFT",
          "limit": 20
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.5670933723449707,
        "is_functional_test": true
      },
      {
        "case_name": "未提供ticker参数",
        "purpose": "验证工具在未提供ticker参数时能否正确处理默认行为（获取市场新闻）",
        "args": {
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.6704885959625244,
        "is_functional_test": true
      },
      {
        "case_name": "使用特殊字符作为ticker参数",
        "purpose": "测试工具是否能安全地处理包含特殊字符的ticker输入，防止注入攻击",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.6727244853973389,
        "is_functional_test": false
      },
      {
        "case_name": "使用非正整数作为limit参数",
        "purpose": "验证工具在limit参数不是正整数时能否正确抛出错误",
        "args": {
          "ticker": "AAPL",
          "limit": 0
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: 0。有效范围是 1 到 20"
        },
        "execution_time": 0.008999109268188477,
        "is_functional_test": false
      },
      {
        "case_name": "使用超出最大限制的limit值",
        "purpose": "测试工具对超过最大限制（limit>20）的处理能力",
        "args": {
          "ticker": "AAPL",
          "limit": 21
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 返回数量限制超出范围: 21。有效范围是 1 到 20"
        },
        "execution_time": 0.009848356246948242,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误",
        "args": {
          "ticker": "FAKE",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 1.6093268394470215,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "获取有效股票代码的股权结构数据",
        "purpose": "验证工具能够正确获取知名公司的股权结构数据，如苹果公司。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.537039041519165,
        "is_functional_test": true
      },
      {
        "case_name": "获取另一个有效股票代码的股权结构数据",
        "purpose": "验证工具能处理另一个合法的股票代码并返回正确的股权结构信息。",
        "args": {
          "symbol": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.6056909561157227,
        "is_functional_test": true
      },
      {
        "case_name": "使用空字符串作为股票代码",
        "purpose": "测试当提供无效的空字符串作为股票代码时，工具是否抛出适当的错误。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 股票代码不能为空"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": false
      },
      {
        "case_name": "使用特殊字符作为股票代码",
        "purpose": "测试工具是否能正确处理包含特殊字符的股票代码，并返回相应的错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5355579853057861,
        "is_functional_test": false
      },
      {
        "case_name": "使用长度过长的股票代码",
        "purpose": "测试工具对超长股票代码（边界条件）的处理能力。",
        "args": {
          "symbol": "ABCDE1234567890XYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.6071877479553223,
        "is_functional_test": false
      },
      {
        "case_name": "未提供任何股票代码参数",
        "purpose": "验证工具在缺少必要参数时能否正确抛出错误。",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nsymbol\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "尝试注入恶意输入",
        "purpose": "测试工具是否能够防止通过股票代码参数进行命令注入等安全攻击。",
        "args": {
          "symbol": "; rm -rf /"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.600055456161499,
        "is_functional_test": false
      },
      {
        "case_name": "API请求失败时的异常处理",
        "purpose": "模拟API不可用或网络故障，验证工具是否能优雅地处理HTTP错误。",
        "args": {
          "symbol": "FAKE"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 1.5562314987182617,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 94
}