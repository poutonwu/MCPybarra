{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_word_document_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_word_document_processor/refined/server.py",
  "timestamp": "2025-07-16T10:12:24.074480",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    Creates a new Word document.\n\n    Returns:\n        A string indicating the document ID or file path of the newly created document.\n    ",
      "args_schema": {
        "properties": {},
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "open_document",
      "description": "\n    Opens an existing Word document.\n\n    Args:\n        document_path: Path to the document file.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          }
        },
        "required": [
          "document_path"
        ],
        "title": "open_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_document",
      "description": "\n    Saves the currently open document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "save_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "save_as_document",
      "description": "\n    Saves the currently open document with a new name or path.\n\n    Args:\n        new_path: New file path for the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "new_path": {
            "title": "New Path",
            "type": "string"
          }
        },
        "required": [
          "new_path"
        ],
        "title": "save_as_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "create_document_copy",
      "description": "\n    Creates a copy of the currently open document.\n\n    Args:\n        copy_path: Path for the new copy.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "copy_path": {
            "title": "Copy Path",
            "type": "string"
          }
        },
        "required": [
          "copy_path"
        ],
        "title": "create_document_copyArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    Adds a paragraph to the document.\n\n    Args:\n        text: The text content of the paragraph.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    Adds a heading to the document.\n\n    Args:\n        text: The text content of the heading.\n        level: Heading level (e.g., 1 for top-level).\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "default": 1,
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "text"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table",
      "description": "\n    Adds a table to the document.\n\n    Args:\n        rows: Number of rows.\n        columns: Number of columns.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "rows": {
            "title": "Rows",
            "type": "integer"
          },
          "columns": {
            "title": "Columns",
            "type": "integer"
          }
        },
        "required": [
          "rows",
          "columns"
        ],
        "title": "add_tableArguments",
        "type": "object"
      }
    },
    {
      "name": "add_page_break",
      "description": "\n    Adds a page break to the document.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {},
        "title": "add_page_breakArguments",
        "type": "object"
      }
    },
    {
      "name": "get_document_info",
      "description": "\n    Retrieves metadata about the document (e.g., word count, author).\n\n    Returns:\n        A JSON object containing document metadata.\n    ",
      "args_schema": {
        "properties": {},
        "title": "get_document_infoArguments",
        "type": "object"
      }
    },
    {
      "name": "search_text",
      "description": "\n    Searches for text in the document.\n\n    Args:\n        query: The text to search for.\n\n    Returns:\n        A list of matches with their positions.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_textArguments",
        "type": "object"
      }
    },
    {
      "name": "find_and_replace",
      "description": "\n    Finds and replaces text in the document.\n\n    Args:\n        find_text: The text to find.\n        replace_text: The replacement text.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "find_text": {
            "title": "Find Text",
            "type": "string"
          },
          "replace_text": {
            "title": "Replace Text",
            "type": "string"
          }
        },
        "required": [
          "find_text",
          "replace_text"
        ],
        "title": "find_and_replaceArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_paragraph",
      "description": "\n    Deletes a paragraph from the document.\n\n    Args:\n        paragraph_index: Index of the paragraph to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "paragraph_index": {
            "title": "Paragraph Index",
            "type": "integer"
          }
        },
        "required": [
          "paragraph_index"
        ],
        "title": "delete_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text",
      "description": "\n    Deletes specified text from the document.\n\n    Args:\n        text: The text to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "delete_textArguments",
        "type": "object"
      }
    },
    {
      "name": "add_table_row",
      "description": "\n    Adds a row to an existing table.\n\n    Args:\n        table_index: Index of the table.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index"
        ],
        "title": "add_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_table_row",
      "description": "\n    Deletes a row from an existing table.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Index of the row to delete.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "row_index"
        ],
        "title": "delete_table_rowArguments",
        "type": "object"
      }
    },
    {
      "name": "edit_table_cell",
      "description": "\n    Edits the content of a table cell.\n\n    Args:\n        table_index: Index of the table.\n        row_index: Row index of the cell.\n        column_index: Column index of the cell.\n        new_text: New content for the cell.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "column_index": {
            "title": "Column Index",
            "type": "integer"
          },
          "new_text": {
            "title": "New Text",
            "type": "string"
          }
        },
        "required": [
          "table_index",
          "row_index",
          "column_index",
          "new_text"
        ],
        "title": "edit_table_cellArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_table_cells",
      "description": "\n    Merges specified cells in a table.\n\n    Args:\n        table_index: Index of the table.\n        start_row: Starting row index.\n        start_column: Starting column index.\n        end_row: Ending row index.\n        end_column: Ending column index.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "table_index": {
            "title": "Table Index",
            "type": "integer"
          },
          "start_row": {
            "title": "Start Row",
            "type": "integer"
          },
          "start_column": {
            "title": "Start Column",
            "type": "integer"
          },
          "end_row": {
            "title": "End Row",
            "type": "integer"
          },
          "end_column": {
            "title": "End Column",
            "type": "integer"
          }
        },
        "required": [
          "table_index",
          "start_row",
          "start_column",
          "end_row",
          "end_column"
        ],
        "title": "merge_table_cellsArguments",
        "type": "object"
      }
    },
    {
      "name": "set_page_margins",
      "description": "\n    Sets the page margins for the document.\n\n    Args:\n        left: Left margin in inches.\n        right: Right margin in inches.\n        top: Top margin in inches.\n        bottom: Bottom margin in inches.\n\n    Returns:\n        A string indicating success or failure.\n    ",
      "args_schema": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "number"
          },
          "right": {
            "title": "Right",
            "type": "number"
          },
          "top": {
            "title": "Top",
            "type": "number"
          },
          "bottom": {
            "title": "Bottom",
            "type": "number"
          }
        },
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "title": "set_page_marginsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "Create New Document Successfully",
        "purpose": "验证工具能够成功创建一个新的Word文档并返回有效的文档ID或路径",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.012008428573608398,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Without Permissions",
        "purpose": "验证在权限不足的情况下，工具是否能正确处理错误并返回友好的提示信息",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010355472564697266,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Disk Full Scenario During Document Creation",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能优雅地处理资源不可用的异常",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010010004043579102,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Maximum Allowed File Name Length",
        "purpose": "测试创建具有最大允许长度文件名的文档，验证边界条件处理能力",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.0105133056640625,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document with Special Characters in File Name",
        "purpose": "测试创建包含特殊字符的文件名的文档，确保系统能正确处理特殊字符",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.014983892440795898,
        "is_functional_test": false
      },
      {
        "case_name": "Verify Document Creation in Default Directory",
        "purpose": "确认文档默认被创建在预期的目录中，验证基本功能与路径配置正确性",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010011911392211914,
        "is_functional_test": true
      },
      {
        "case_name": "Check Newly Created Document Structure and Accessibility",
        "purpose": "验证新创建的Word文档结构是否完整，并可被正常打开和读取",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010720968246459961,
        "is_functional_test": true
      },
      {
        "case_name": "Test Concurrent Document Creation Requests",
        "purpose": "模拟并发请求创建多个文档，验证工具的线程安全性和稳定性",
        "args": {},
        "response": {
          "result": "New document created successfully."
        },
        "execution_time": 0.010361909866333008,
        "is_functional_test": true
      }
    ],
    "add_paragraph": [
      {
        "case_name": "Add Paragraph Successfully",
        "purpose": "验证工具能够成功向文档中添加一个段落并返回成功状态",
        "args": {
          "text": "This is a sample paragraph added to the document."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.005014896392822266,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Paragraph",
        "purpose": "测试添加空段落时工具是否能正确处理，确保不会崩溃或产生异常错误",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Special Characters",
        "purpose": "测试工具能否正确处理包含特殊字符的段落内容",
        "args": {
          "text": "This is a test paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~`"
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.004590511322021484,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Null Text",
        "purpose": "验证当传入 null 值作为段落内容时，工具是否能正确处理参数异常",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph to Protected Document",
        "purpose": "模拟向只读或受保护文档中添加段落，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "text": "This should fail if the document is protected."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0045397281646728516,
        "is_functional_test": false
      },
      {
        "case_name": "Add Paragraph with Non-String Input",
        "purpose": "测试工具对非字符串类型输入的处理能力，如数字、布尔值等",
        "args": {
          "text": 123456
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Input should be a valid string [type=string_type, input_value=123456, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0030002593994140625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Paragraphs Concurrently",
        "purpose": "模拟并发添加多个段落，验证工具的线程安全性和稳定性",
        "args": {
          "text": "Concurrent paragraph added during stress test."
        },
        "response": {
          "result": "Paragraph added successfully."
        },
        "execution_time": 0.0031282901763916016,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "Add Heading Successfully with Default Level",
        "purpose": "验证工具能够成功向文档中添加一个默认级别的标题并返回成功状态",
        "args": {
          "text": "This is a default heading",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.006756305694580078,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Custom Level",
        "purpose": "验证工具能够成功添加指定级别的标题，确保级别参数被正确应用",
        "args": {
          "text": "This is a level 2 heading",
          "level": 2
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.012059211730957031,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Maximum Allowed Level",
        "purpose": "测试工具是否能处理最大允许的标题级别（例如6级）",
        "args": {
          "text": "Maximum level heading",
          "level": 6
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005005598068237305,
        "is_functional_test": true
      },
      {
        "case_name": "Add Heading with Minimum Level",
        "purpose": "测试工具对最小标题级别（例如1）的处理能力",
        "args": {
          "text": "Minimum level heading",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": true
      },
      {
        "case_name": "Add Empty Heading Text",
        "purpose": "验证当传入空字符串作为标题内容时，工具是否能正确处理而不崩溃",
        "args": {
          "text": "",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.00427556037902832,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Special Characters",
        "purpose": "测试工具能否正确处理包含特殊字符的标题内容",
        "args": {
          "text": "Heading with special characters: !@#$%^&*()_+{}|:\"<>?~`",
          "level": 3
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading to Protected Document",
        "purpose": "模拟向只读或受保护文档中添加标题，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "text": "This should fail if the document is protected.",
          "level": 1
        },
        "response": {
          "result": "Heading added successfully."
        },
        "execution_time": 0.005011320114135742,
        "is_functional_test": false
      },
      {
        "case_name": "Add Heading with Non-Integer Level",
        "purpose": "测试工具对非整数类型标题级别的处理能力，如字符串、浮点数等",
        "args": {
          "text": "Heading with invalid level",
          "level": "two"
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\nlevel\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='two', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      }
    ],
    "add_table": [
      {
        "case_name": "Add Table Successfully with Default Dimensions",
        "purpose": "验证工具能够成功向文档中添加一个默认大小（如3行3列）的表格并返回成功状态",
        "args": {
          "rows": 3,
          "columns": 3
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Minimum Allowed Rows and Columns",
        "purpose": "测试添加1行1列的最小表格，验证边界条件处理能力",
        "args": {
          "rows": 1,
          "columns": 1
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.005011320114135742,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Maximum Allowed Rows and Columns",
        "purpose": "测试添加最大允许行列数的表格（例如100行100列），验证系统对极限值的支持",
        "args": {
          "rows": 100,
          "columns": 100
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.024054765701293945,
        "is_functional_test": true
      },
      {
        "case_name": "Add Table with Zero Rows",
        "purpose": "验证当传入0作为行数时，工具是否能正确处理参数异常",
        "args": {
          "rows": 0,
          "columns": 5
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.006551027297973633,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Zero Columns",
        "purpose": "验证当传入0作为列数时，工具是否能正确处理参数异常",
        "args": {
          "rows": 5,
          "columns": 0
        },
        "response": {
          "result": "Rows and columns must be positive integers."
        },
        "execution_time": 0.0029964447021484375,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table to Protected Document",
        "purpose": "模拟向只读或受保护文档中添加表格，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "rows": 4,
          "columns": 4
        },
        "response": {
          "result": "Table added successfully."
        },
        "execution_time": 0.003816366195678711,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Non-Integer Input for Rows",
        "purpose": "测试工具对非整型行数输入的处理能力，如字符串、浮点数等",
        "args": {
          "rows": "five",
          "columns": 3
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\nrows\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='five', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004022836685180664,
        "is_functional_test": false
      },
      {
        "case_name": "Add Table with Non-Integer Input for Columns",
        "purpose": "测试工具对非整型列数输入的处理能力，如字符串、浮点数等",
        "args": {
          "rows": 3,
          "columns": 3.5
        },
        "response": {
          "error": "ToolException: Error executing tool add_table: 1 validation error for add_tableArguments\ncolumns\n  Input should be a valid integer, got a number with a fractional part [type=int_from_float, input_value=3.5, input_type=float]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_from_float"
        },
        "execution_time": 0.007063150405883789,
        "is_functional_test": false
      }
    ],
    "add_page_break": [
      {
        "case_name": "Add Page Break Successfully",
        "purpose": "验证工具能够成功向文档中添加一个分页符并返回成功状态",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break to Protected Document",
        "purpose": "模拟向只读或受保护文档中添加分页符，验证工具是否能优雅处理资源不可用情况",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004020214080810547,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Resource Unavailable During Page Break Insertion",
        "purpose": "模拟在资源不可用（如内存不足）情况下插入分页符，验证工具是否能正确捕获异常并提示用户",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.005005836486816406,
        "is_functional_test": false
      },
      {
        "case_name": "Insert Page Break in Empty Document",
        "purpose": "测试在空白文档中插入分页符时工具的行为，确保不会导致崩溃或错误",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0049626827239990234,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break with Special Characters in Document",
        "purpose": "验证文档中包含特殊字符时，插入分页符功能是否仍能正常工作",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0059967041015625,
        "is_functional_test": true
      },
      {
        "case_name": "Add Page Break in Corrupted Document",
        "purpose": "测试向损坏的文档中添加分页符时工具是否能正确识别并提示文档异常",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.008603811264038086,
        "is_functional_test": false
      },
      {
        "case_name": "Add Multiple Page Breaks Concurrently",
        "purpose": "模拟并发插入多个分页符，验证工具的线程安全性和稳定性",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.004547595977783203,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Add Page Break Without Permissions",
        "purpose": "验证在权限不足的情况下，尝试添加分页符是否会触发适当的访问控制机制",
        "args": {},
        "response": {
          "result": "Page break added successfully."
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      }
    ],
    "save_document": [
      {
        "case_name": "Save Document Successfully",
        "purpose": "验证工具能够成功保存当前打开的文档并返回成功状态",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02172231674194336,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document Without Opening Any",
        "purpose": "测试在未打开任何文档的情况下调用保存功能，验证是否能正确处理异常情况",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.019804000854492188,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Insufficient Permissions",
        "purpose": "模拟权限不足的情况，验证工具是否能优雅地处理权限错误并返回提示信息",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.023181915283203125,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document When Disk is Full",
        "purpose": "模拟磁盘空间不足的情况，验证工具是否能正确处理资源不可用异常",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.0201261043548584,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Read-Only Path",
        "purpose": "尝试将文档保存到只读目录，验证工具是否能正确处理写保护错误",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.020763397216796875,
        "is_functional_test": false
      },
      {
        "case_name": "Verify Saved Document Integrity",
        "purpose": "确认保存后的文档内容完整且可被正常读取，验证基本功能可靠性",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.02120351791381836,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Save Document Requests",
        "purpose": "模拟并发请求保存文档，验证工具的线程安全性和稳定性",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.020325422286987305,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document After Adding Content",
        "purpose": "在添加段落之后保存文档，验证是否能正确保存新增内容",
        "args": {},
        "response": {
          "result": "Document saved successfully as current_document.docx."
        },
        "execution_time": 0.020623445510864258,
        "is_functional_test": true
      }
    ],
    "save_as_document": [
      {
        "case_name": "Save Document to New Path Successfully",
        "purpose": "验证工具能够成功将当前打开的文档另存为指定的新路径",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.020795106887817383,
        "is_functional_test": true
      },
      {
        "case_name": "Save Document with Invalid Path Characters",
        "purpose": "测试保存路径中包含非法字符时，工具是否能正确处理并返回错误信息",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles|invalid<>.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles|invalid<>.docx'"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to Non-Writable Directory",
        "purpose": "模拟尝试将文档保存到没有写入权限的目录，验证工具能否优雅地处理权限错误",
        "args": {
          "new_path": "C:\\Windows\\System32\\restricted_directory\\save_document.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: 'C:\\\\Windows\\\\System32\\\\restricted_directory\\\\save_document.docx'"
        },
        "execution_time": 0.0040149688720703125,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document with Maximum File Name Length",
        "purpose": "测试使用最大允许长度的文件名保存文档，验证边界条件处理能力",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx."
        },
        "execution_time": 0.01877880096435547,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document Without Providing New Path",
        "purpose": "验证未提供新路径参数时，工具是否能正确进行参数校验并返回错误提示",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool save_as_document: 1 validation error for save_as_documentArguments\nnew_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document to a Read-Only File",
        "purpose": "模拟尝试覆盖一个只读文件，验证工具是否能正确处理文件访问冲突",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc."
        },
        "execution_time": 0.019021987915039062,
        "is_functional_test": false
      },
      {
        "case_name": "Save Document During Disk Full Scenario",
        "purpose": "模拟磁盘空间不足的情况下保存文档，验证工具是否能正确处理资源不可用异常",
        "args": {
          "new_path": "D:\\full_disk_simulated\\save_document.docx"
        },
        "response": {
          "result": "Failed to save document: [Errno 2] No such file or directory: 'D:\\\\full_disk_simulated\\\\save_document.docx'"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Save Document Requests",
        "purpose": "模拟并发请求将文档保存到不同路径，验证工具的线程安全性和稳定性",
        "args": {
          "new_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_save_1.docx"
        },
        "response": {
          "result": "Document saved successfully as D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_save_1.docx."
        },
        "execution_time": 0.01881694793701172,
        "is_functional_test": true
      }
    ],
    "open_document": [
      {
        "case_name": "Open Document Successfully",
        "purpose": "验证工具能够成功打开一个已存在的Word文档并返回成功状态",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.029756546020507812,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Open Non-Existent Document",
        "purpose": "测试工具是否能正确处理试图打开不存在的文档的情况，返回合理的错误提示",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx"
        },
        "response": {
          "result": "Document path does not exist."
        },
        "execution_time": 0.004014492034912109,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Invalid File Type",
        "purpose": "验证工具能否识别并拒绝尝试打开非Word文档（如PDF、CSV等）",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf"
        },
        "response": {
          "result": "Failed to open document: Package not found at 'D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf'"
        },
        "execution_time": 0.0040051937103271484,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Maximum Allowed Path Length",
        "purpose": "测试工具对最大允许路径长度的支持情况，验证边界条件处理能力",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.docx."
        },
        "execution_time": 0.027657270431518555,
        "is_functional_test": true
      },
      {
        "case_name": "Open Document in Read-Only Mode",
        "purpose": "模拟尝试以只读模式打开受保护的文档，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_save_1.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_save_1.docx."
        },
        "execution_time": 0.03323817253112793,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document with Special Characters in Path",
        "purpose": "测试工具是否能正确处理包含特殊字符的文件路径",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\re2.doc."
        },
        "execution_time": 0.027188777923583984,
        "is_functional_test": false
      },
      {
        "case_name": "Open Document Without Required Permissions",
        "purpose": "验证在权限不足的情况下，工具是否能正确处理错误并返回友好的提示信息",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\inspector.zip"
        },
        "response": {
          "result": "Failed to open document: \"There is no item named '[Content_Types].xml' in the archive\""
        },
        "execution_time": 0.004456758499145508,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Document Opening Requests",
        "purpose": "模拟并发请求打开多个文档，验证工具的线程安全性和稳定性",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx"
        },
        "response": {
          "result": "Document opened successfully from D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document.docx."
        },
        "execution_time": 0.024446964263916016,
        "is_functional_test": true
      }
    ],
    "get_document_info": [
      {
        "case_name": "Retrieve Document Info Successfully",
        "purpose": "验证工具能够成功获取文档的元数据信息，如字数、作者等，并返回结构完整的JSON对象",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.007375240325927734,
        "is_functional_test": true
      },
      {
        "case_name": "Retrieve Info from Empty Document",
        "purpose": "测试工具在文档内容为空的情况下是否能正确返回有效但空的元数据字段",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.01607370376586914,
        "is_functional_test": true
      },
      {
        "case_name": "Retrieve Info from Protected Document",
        "purpose": "模拟尝试从只读或受保护文档中获取元数据，验证工具是否能优雅处理资源不可用的情况",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.004215240478515625,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Missing Document File",
        "purpose": "验证当目标文档文件不存在时，工具能否正确捕获异常并返回清晰的错误信息",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": false
      },
      {
        "case_name": "Retrieve Info from Corrupted Document",
        "purpose": "测试工具在遇到损坏的文档时是否能正确识别并返回适当的错误提示",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Unauthorized Access Attempt",
        "purpose": "验证工具是否阻止未经授权的用户访问文档元数据",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      },
      {
        "case_name": "Retrieve Info from Maximum Size Document",
        "purpose": "测试工具在处理最大允许大小的文档时是否能正常获取元数据",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.003920793533325195,
        "is_functional_test": false
      },
      {
        "case_name": "Retrieve Info with Special Characters in Document Properties",
        "purpose": "验证文档属性（如作者名）包含特殊字符时，工具是否能正确解析和返回这些信息",
        "args": {},
        "response": {
          "result": "{'author': 'python-docx', 'created': '2013-12-23 23:15:00+00:00', 'modified': '2013-12-23 23:15:00+00:00', 'word_count': 62}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      }
    ],
    "search_text": [
      {
        "case_name": "Search Text Successfully",
        "purpose": "验证工具能够成功在文档中搜索指定文本并返回匹配项及其位置",
        "args": {
          "query": "sample"
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a sample paragraph added to the document.'}]"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": true
      },
      {
        "case_name": "Search Non-Existent Text",
        "purpose": "验证搜索不存在的文本时，工具返回空列表而不是错误",
        "args": {
          "query": "nonexistenttext"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.005634307861328125,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty Query",
        "purpose": "验证当搜索查询为空字符串时，工具是否能正确处理并返回空结果",
        "args": {
          "query": ""
        },
        "response": {
          "result": "[{'paragraph_index': 0, 'text': 'This is a sample paragraph added to the document.'}, {'paragraph_index': 1, 'text': ''}, {'paragraph_index': 2, 'text': 'This is a test paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~`'}, {'paragraph_index': 3, 'text': 'This should fail if the document is protected.'}, {'paragraph_index': 4, 'text': 'Concurrent paragraph added during stress test.'}, {'paragraph_index': 5, 'text': 'This is a default heading'}, {'paragraph_index': 6, 'text': 'This is a level 2 heading'}, {'paragraph_index': 7, 'text': 'Maximum level heading'}, {'paragraph_index': 8, 'text': 'Minimum level heading'}, {'paragraph_index': 9, 'text': ''}, {'paragraph_index': 10, 'text': 'Heading with special characters: !@#$%^&*()_+{}|:\"<>?~`'}, {'paragraph_index': 11, 'text': 'This should fail if the document is protected.'}, {'paragraph_index': 12, 'text': ''}, {'paragraph_index': 13, 'text': ''}, {'paragraph_index': 14, 'text': ''}, {'paragraph_index': 15, 'text': ''}, {'paragraph_index': 16, 'text': ''}, {'paragraph_index': 17, 'text': ''}, {'paragraph_index': 18, 'text': ''}, {'paragraph_index': 19, 'text': ''}]"
        },
        "execution_time": 0.006073951721191406,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Null Query",
        "purpose": "验证当搜索查询为 null 时，工具是否能正确处理参数异常",
        "args": {
          "query": null
        },
        "response": {
          "error": "ToolException: Error executing tool search_text: 1 validation error for search_textArguments\nquery\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.003006458282470703,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Protected Document",
        "purpose": "模拟在只读或受保护文档中搜索文本，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "query": "test"
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': 'This is a test paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~`'}, {'paragraph_index': 4, 'text': 'Concurrent paragraph added during stress test.'}]"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": false
      },
      {
        "case_name": "Search with Special Characters",
        "purpose": "测试工具能否正确处理包含特殊字符的搜索查询",
        "args": {
          "query": "!@#$%^&*()_+{}|:\"<>?~`"
        },
        "response": {
          "result": "[{'paragraph_index': 2, 'text': 'This is a test paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~`'}, {'paragraph_index': 10, 'text': 'Heading with special characters: !@#$%^&*()_+{}|:\"<>?~`'}]"
        },
        "execution_time": 0.005005598068237305,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Search Requests",
        "purpose": "模拟并发执行多个搜索请求，验证工具的线程安全性和稳定性",
        "args": {
          "query": "concurrent"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.004503726959228516,
        "is_functional_test": true
      }
    ],
    "find_and_replace": [
      {
        "case_name": "Basic Find and Replace Success",
        "purpose": "验证工具能够成功执行基本的查找和替换操作",
        "args": {
          "find_text": "sample",
          "replace_text": "example"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0050237178802490234,
        "is_functional_test": true
      },
      {
        "case_name": "Find Text Not Present in Document",
        "purpose": "测试当查找文本不存在时，工具是否能优雅处理而不修改文档",
        "args": {
          "find_text": "nonexistenttext",
          "replace_text": "replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Text with Special Characters",
        "purpose": "验证工具能否正确处理包含特殊字符的替换文本",
        "args": {
          "find_text": "test",
          "replace_text": "replaced!@#$%^&*()"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.005031585693359375,
        "is_functional_test": false
      },
      {
        "case_name": "Find Empty String",
        "purpose": "测试查找空字符串时工具的行为，确保不会引发异常",
        "args": {
          "find_text": "",
          "replace_text": "empty_replacement"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.0070285797119140625,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Empty String",
        "purpose": "验证用空字符串进行替换时工具是否正常工作",
        "args": {
          "find_text": "toBeRemoved",
          "replace_text": ""
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      },
      {
        "case_name": "Find and Replace in Read-Only Document",
        "purpose": "模拟在只读文档中执行查找替换操作，验证工具是否能妥善处理资源不可用情况",
        "args": {
          "find_text": "readonly",
          "replace_text": "editable"
        },
        "response": {
          "result": "Text replaced successfully."
        },
        "execution_time": 0.005335330963134766,
        "is_functional_test": false
      },
      {
        "case_name": "Find Null Text",
        "purpose": "测试传入 null 值作为查找文本时工具是否能正确处理参数异常",
        "args": {
          "find_text": null,
          "replace_text": "default"
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nfind_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.00400543212890625,
        "is_functional_test": false
      },
      {
        "case_name": "Replace Null Text",
        "purpose": "验证传入 null 值作为替换文本时工具是否能正确处理参数异常",
        "args": {
          "find_text": "oldvalue",
          "replace_text": null
        },
        "response": {
          "error": "ToolException: Error executing tool find_and_replace: 1 validation error for find_and_replaceArguments\nreplace_text\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      }
    ],
    "delete_paragraph": [
      {
        "case_name": "Delete Paragraph Successfully",
        "purpose": "验证工具能够成功删除文档中指定索引的段落并返回成功状态",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.005001068115234375,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Invalid Index - Negative Value",
        "purpose": "测试删除段落时传入负数索引，验证工具是否能正确处理参数异常",
        "args": {
          "paragraph_index": -1
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.00401759147644043,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Invalid Index - Out of Range",
        "purpose": "测试删除段落时传入超出文档实际段落数量的索引值，确保工具能优雅处理越界错误",
        "args": {
          "paragraph_index": 999
        },
        "response": {
          "result": "Invalid paragraph index."
        },
        "execution_time": 0.003005504608154297,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Empty Document",
        "purpose": "验证在文档为空的情况下尝试删除段落时工具是否能正确处理资源不可用情况",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Multiple Paragraphs Concurrently",
        "purpose": "模拟并发删除多个段落，验证工具的线程安全性和稳定性",
        "args": {
          "paragraph_index": 1
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.004015207290649414,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Paragraph with Null Index",
        "purpose": "验证当传入 null 值作为段落索引时，工具是否能正确处理参数异常",
        "args": {
          "paragraph_index": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_type"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph from Protected Document",
        "purpose": "模拟从只读或受保护文档中删除段落，验证工具是否能正确识别并拒绝非法操作",
        "args": {
          "paragraph_index": 0
        },
        "response": {
          "result": "Paragraph deleted successfully."
        },
        "execution_time": 0.00400853157043457,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Paragraph with Non-Integer Index",
        "purpose": "测试工具对非整数类型索引的处理能力，如字符串、浮点数等",
        "args": {
          "paragraph_index": "first"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_paragraph: 1 validation error for delete_paragraphArguments\nparagraph_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='first', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0035130977630615234,
        "is_functional_test": false
      }
    ],
    "delete_text": [
      {
        "case_name": "Delete Text Successfully",
        "purpose": "验证工具能够成功从文档中删除指定的文本并返回成功状态",
        "args": {
          "text": "This is a sample paragraph added to the document."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004777431488037109,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Non-Existent Text",
        "purpose": "测试尝试删除文档中不存在的文本时，工具是否能正确处理并返回失败信息",
        "args": {
          "text": "Non-existent text for deletion test"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Empty Text",
        "purpose": "验证当传入空字符串作为待删除内容时，工具是否能正确处理边界情况",
        "args": {
          "text": ""
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.0065343379974365234,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text with Special Characters",
        "purpose": "测试工具能否正确删除包含特殊字符的文本内容",
        "args": {
          "text": "This is a test paragraph with special characters: !@#$%^&*()_+{}|:\"<>?~`"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text from Protected Document",
        "purpose": "模拟尝试从只读或受保护文档中删除文本，验证工具是否能优雅地处理资源不可用的情况",
        "args": {
          "text": "This should fail if the document is protected."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.003934383392333984,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Null Text",
        "purpose": "验证当传入 null 值作为待删除文本时，工具是否能正确处理参数异常",
        "args": {
          "text": null
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text: 1 validation error for delete_textArguments\ntext\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Long Text (Boundary Test)",
        "purpose": "测试删除具有最大允许长度的文本内容，验证边界条件处理能力",
        "args": {
          "text": "A very long text string that approaches the maximum allowed length for deletion operations, used to test boundary conditions and system stability under high-load scenarios."
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.0045032501220703125,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Text in Concurrent Environment",
        "purpose": "模拟并发请求删除相同文档中的文本，验证工具的线程安全性和稳定性",
        "args": {
          "text": "Concurrent deletion test content"
        },
        "response": {
          "result": "Text deleted successfully."
        },
        "execution_time": 0.004003286361694336,
        "is_functional_test": true
      }
    ],
    "add_table_row": [
      {
        "case_name": "Add Row to Table Successfully",
        "purpose": "验证工具能够成功向现有表格中添加一行并返回成功状态",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.01651477813720703,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Invalid Index",
        "purpose": "测试当传入无效的 table_index（负数）时，工具是否能正确处理参数异常",
        "args": {
          "table_index": -1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0030052661895751953,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Table with Non-Integer Index",
        "purpose": "测试当传入非整型值作为 table_index 时，工具是否能正确处理类型校验错误",
        "args": {
          "table_index": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool add_table_row: 1 validation error for add_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Table at Maximum Index",
        "purpose": "测试当 table_index 为系统允许的最大整数值时，工具是否能正常处理边界条件",
        "args": {
          "table_index": 2147483647
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0031859874725341797,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Non-Existent Table",
        "purpose": "模拟尝试向不存在的表格添加行，验证工具是否能优雅地处理资源不可用情况",
        "args": {
          "table_index": 999
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003005504608154297,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Protected Document Table",
        "purpose": "验证在只读或受保护文档中的表格是否能阻止新行的添加并返回合理提示",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      },
      {
        "case_name": "Add Row to Table in Concurrent Scenario",
        "purpose": "模拟并发操作中多次调用 add_table_row 工具，验证其线程安全性和稳定性",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.005019187927246094,
        "is_functional_test": true
      },
      {
        "case_name": "Add Row to Table with Zero Index",
        "purpose": "验证最小合法值（0）下工具能否正常工作，确保边界值处理无误",
        "args": {
          "table_index": 0
        },
        "response": {
          "result": "Row added successfully."
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": true
      }
    ],
    "delete_table_row": [
      {
        "case_name": "Delete Row Successfully",
        "purpose": "验证工具能够成功从指定表格中删除指定行并返回成功状态",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0045549869537353516,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row from Non-Existent Table",
        "purpose": "测试尝试从不存在的表格中删除行时，工具是否能正确处理错误",
        "args": {
          "table_index": 999,
          "row_index": 0
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Invalid Table Index Type",
        "purpose": "验证工具对非整数类型 table_index 参数的处理能力",
        "args": {
          "table_index": "invalid",
          "row_index": 0
        },
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 1 validation error for delete_table_rowArguments\ntable_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003023386001586914,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row with Invalid Row Index Type",
        "purpose": "验证工具对非整数类型 row_index 参数的处理能力",
        "args": {
          "table_index": 0,
          "row_index": "invalid"
        },
        "response": {
          "error": "ToolException: Error executing tool delete_table_row: 1 validation error for delete_table_rowArguments\nrow_index\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row at Boundary - First Row",
        "purpose": "测试删除表格第一行（索引0）时是否正常",
        "args": {
          "table_index": 0,
          "row_index": 0
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row at Boundary - Last Row",
        "purpose": "测试删除表格最后一行时是否正常",
        "args": {
          "table_index": 0,
          "row_index": 4
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.0050201416015625,
        "is_functional_test": true
      },
      {
        "case_name": "Delete Row with Negative Index",
        "purpose": "验证工具对负数索引值的处理能力",
        "args": {
          "table_index": -1,
          "row_index": -2
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0030014514923095703,
        "is_functional_test": false
      },
      {
        "case_name": "Delete Row from Locked or Protected Table",
        "purpose": "模拟尝试从只读或受保护表格中删除行，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "table_index": 0,
          "row_index": 1
        },
        "response": {
          "result": "Row deleted successfully."
        },
        "execution_time": 0.003457784652709961,
        "is_functional_test": false
      }
    ],
    "edit_table_cell": [
      {
        "case_name": "Edit Table Cell Successfully",
        "purpose": "验证工具能够成功编辑表格单元格内容并返回成功状态",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": "Updated Content"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.003509521484375,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Table Cell with Out of Bounds Table Index",
        "purpose": "测试当提供的表格索引超出范围时，工具是否能正确处理错误",
        "args": {
          "table_index": -1,
          "row_index": 1,
          "column_index": 1,
          "new_text": "Invalid Table Index"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.004505157470703125,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell with Invalid Row Index",
        "purpose": "验证工具在行索引无效（如负数）时能否正确处理参数异常",
        "args": {
          "table_index": 0,
          "row_index": -1,
          "column_index": 1,
          "new_text": "Invalid Row Index"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.004422664642333984,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell with Invalid Column Index",
        "purpose": "验证工具在列索引无效（如负数）时能否正确处理参数异常",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": -1,
          "new_text": "Invalid Column Index"
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.0034983158111572266,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell in Read-Only Document",
        "purpose": "模拟编辑只读文档中的表格单元格，验证工具是否能优雅地处理资源不可用情况",
        "args": {
          "table_index": 0,
          "row_index": 1,
          "column_index": 1,
          "new_text": "Should Fail Due to Document Protection"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.002874612808227539,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell with Special Characters",
        "purpose": "测试工具能否正确处理包含特殊字符的单元格内容",
        "args": {
          "table_index": 0,
          "row_index": 2,
          "column_index": 2,
          "new_text": "SpecialChars: !@#$%^&*()_+{}|:\"<>?~`"
        },
        "response": {
          "result": "Cell edited successfully."
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": false
      },
      {
        "case_name": "Edit Table Cell with Empty Text",
        "purpose": "测试添加空文本到单元格时工具是否能正常处理",
        "args": {
          "table_index": 0,
          "row_index": 3,
          "column_index": 0,
          "new_text": ""
        },
        "response": {
          "result": "Invalid row or column index."
        },
        "execution_time": 0.006197214126586914,
        "is_functional_test": true
      },
      {
        "case_name": "Edit Non-Existent Table Cell",
        "purpose": "验证工具在尝试编辑不存在的表格单元格时是否能正确返回错误信息",
        "args": {
          "table_index": 999,
          "row_index": 0,
          "column_index": 0,
          "new_text": "Non-existent Table"
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.003000497817993164,
        "is_functional_test": false
      }
    ],
    "merge_table_cells": [
      {
        "case_name": "Merge Table Cells Successfully",
        "purpose": "验证工具能够成功合并表格中的指定单元格并返回成功状态",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.015860795974731445,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single Cell",
        "purpose": "测试合并单个单元格（起始和结束坐标相同）是否能正确处理",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 2,
          "end_row": 2,
          "end_column": 2
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.005620479583740234,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Rows Only",
        "purpose": "验证仅跨多行的单元格合并功能是否正常",
        "args": {
          "table_index": 0,
          "start_row": 1,
          "start_column": 0,
          "end_row": 3,
          "end_column": 0
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Across Multiple Columns Only",
        "purpose": "验证仅跨多列的单元格合并功能是否正常",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 1,
          "end_row": 0,
          "end_column": 3
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.01820850372314453,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Invalid Table Index",
        "purpose": "测试传入无效的 table_index 是否能正确返回错误信息",
        "args": {
          "table_index": -1,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.008507966995239258,
        "is_functional_test": false
      },
      {
        "case_name": "Merge with Start Coordinates Greater Than End",
        "purpose": "验证当起始坐标大于结束坐标时，工具是否能正确处理或提示参数错误",
        "args": {
          "table_index": 0,
          "start_row": 2,
          "start_column": 2,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Cells merged successfully."
        },
        "execution_time": 0.008010387420654297,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Cells in Non-Existent Table",
        "purpose": "测试尝试在不存在的表格中合并单元格，验证工具是否能优雅处理资源不可用情况",
        "args": {
          "table_index": 999,
          "start_row": 0,
          "start_column": 0,
          "end_row": 1,
          "end_column": 1
        },
        "response": {
          "result": "Invalid table index."
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": false
      },
      {
        "case_name": "Merge All Cells in a Table",
        "purpose": "测试将整个表格的所有单元格合并为一个大单元格的功能",
        "args": {
          "table_index": 0,
          "start_row": 0,
          "start_column": 0,
          "end_row": 4,
          "end_column": 4
        },
        "response": {
          "result": "Invalid row or column indices."
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": true
      }
    ],
    "set_page_margins": [
      {
        "case_name": "Set Default Page Margins Successfully",
        "purpose": "验证工具能够使用默认值成功设置文档的页面边距",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004503011703491211,
        "is_functional_test": true
      },
      {
        "case_name": "Set Custom Margins with Positive Values",
        "purpose": "验证工具能够正确设置非默认的正数边距值，确保基本功能正常",
        "args": {
          "left": 1.5,
          "right": 1.2,
          "top": 0.8,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": true
      },
      {
        "case_name": "Set Margins with Zero Value",
        "purpose": "测试工具是否能处理零值作为边距输入，验证边界条件",
        "args": {
          "left": 0,
          "right": 0,
          "top": 0,
          "bottom": 0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Negative Values",
        "purpose": "测试工具对负数边距的处理能力，确保参数校验机制有效",
        "args": {
          "left": -0.5,
          "right": -0.3,
          "top": -0.2,
          "bottom": -0.4
        },
        "response": {
          "result": "Failed to set page margins: value must be in range 0 to 18446744073709551615 inclusive, got -457200"
        },
        "execution_time": 0.004022359848022461,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Very Large Values",
        "purpose": "测试工具能否处理非常大的边距数值，验证系统稳定性与容错性",
        "args": {
          "left": 100,
          "right": 100,
          "top": 100,
          "bottom": 100
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.005000591278076172,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins on a Protected Document",
        "purpose": "模拟向只读或受保护文档中设置边距，验证工具是否能优雅地处理资源不可用情况",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.004019975662231445,
        "is_functional_test": false
      },
      {
        "case_name": "Set Margins with Non-Number Input",
        "purpose": "测试工具对非数字类型输入的处理能力，如字符串、布尔值等",
        "args": {
          "left": "one",
          "right": true,
          "top": null,
          "bottom": {}
        },
        "response": {
          "error": "ToolException: Error executing tool set_page_margins: 3 validation errors for set_page_marginsArguments\nleft\n  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_parsing\ntop\n  Input should be a valid number [type=float_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_type\nbottom\n  Input should be a valid number [type=float_type, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/float_type"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Margin Setting Requests",
        "purpose": "模拟并发请求设置多个文档的边距，验证工具的线程安全性和稳定性",
        "args": {
          "left": 1.0,
          "right": 1.0,
          "top": 1.0,
          "bottom": 1.0
        },
        "response": {
          "result": "Page margins set successfully."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      }
    ],
    "create_document_copy": [
      {
        "case_name": "Create Document Copy Successfully",
        "purpose": "验证工具能够成功创建当前打开文档的副本，并返回成功状态",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_document_copy.docx."
        },
        "execution_time": 0.020996570587158203,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt to Create Document Copy Without Permissions",
        "purpose": "验证在目标路径权限不足时，工具是否能正确处理错误并返回友好的提示信息",
        "args": {
          "copy_path": "D:\\restricted\\saved_document_copy.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\restricted\\saved_document_copy.docx."
        },
        "execution_time": 0.02200603485107422,
        "is_functional_test": false
      },
      {
        "case_name": "Handle Disk Full Scenario During Document Copy Creation",
        "purpose": "模拟磁盘空间不足情况，验证工具是否能优雅地处理资源不可用的异常",
        "args": {
          "copy_path": "D:\\full_disk\\saved_document_copy.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 2] No such file or directory: 'D:\\\\full_disk\\\\saved_document_copy.docx'"
        },
        "execution_time": 0.002997875213623047,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy with Maximum Allowed File Name Length",
        "purpose": "测试创建具有最大允许长度文件名的副本，验证边界条件处理能力",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnoooooooooppppppppppqqqqqqqqqrrrrrrrrrrssssssssssttttttttttuuuuuuuuuuvvvvvvvvvvwwwwwwwwwwxxxxxxxxxxyyyyyyyyyyzzzzzzzzzz.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjjkkkkkkkkkkllllllllllmmmmmmmmmmnnnnnnnnnnoooooooooppppppppppqqqqqqqqqrrrrrrrrrrssssssssssttttttttttuuuuuuuuuuvvvvvvvvvvwwwwwwwwwwxxxxxxxxxxyyyyyyyyyyzzzzzzzzzz.docx'"
        },
        "execution_time": 0.005094051361083984,
        "is_functional_test": false
      },
      {
        "case_name": "Create Document Copy with Special Characters in File Name",
        "purpose": "测试创建包含特殊字符的文件名的副本，确保系统能正确处理特殊字符",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy_with_special_chars!@#$%^&*.docx"
        },
        "response": {
          "result": "Failed to create document copy: [Errno 22] Invalid argument: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\copy_with_special_chars!@#$%^&*.docx'"
        },
        "execution_time": 0.0040035247802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Verify Document Copy Creation in Default Directory",
        "purpose": "确认副本默认被创建在预期的目录中，验证基本功能与路径配置正确性",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_location_copy.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\default_location_copy.docx."
        },
        "execution_time": 0.02132582664489746,
        "is_functional_test": true
      },
      {
        "case_name": "Check Document Copy Structure and Accessibility",
        "purpose": "验证新创建的文档副本结构是否完整，并可被正常打开和读取",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\check_structure_copy.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\check_structure_copy.docx."
        },
        "execution_time": 0.021612167358398438,
        "is_functional_test": true
      },
      {
        "case_name": "Test Concurrent Document Copy Requests",
        "purpose": "模拟并发请求创建多个文档副本，验证工具的线程安全性和稳定性",
        "args": {
          "copy_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_copy_1.docx"
        },
        "response": {
          "result": "Document copy created successfully at D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_copy_1.docx."
        },
        "execution_time": 0.02207493782043457,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 150
}