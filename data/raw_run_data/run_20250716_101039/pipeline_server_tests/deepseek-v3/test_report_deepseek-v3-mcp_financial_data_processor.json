{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_financial_data_processor",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_financial_data_processor/refined/server.py",
  "timestamp": "2025-07-16T10:14:27.047397",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    Retrieves income statements for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol (e.g., \"AAPL\").\n        period: Reporting period (\"annual\", \"quarterly\", \"TTM\"). Default: \"annual\".\n        limit: Maximum number of results to return. Default: 5.\n\n    Returns:\n        JSON-structured income statement data (revenue, expenses, net income, etc.).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    Retrieves balance sheet data for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol.\n        period: Reporting period. Default: \"annual\".\n        limit: Maximum results to return. Default: 5.\n\n    Returns:\n        JSON-structured balance sheet data (assets, liabilities, equity).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    Retrieves cash flow statements for a specified company.\n\n    Args:\n        symbol: Stock ticker symbol.\n        period: Reporting period. Default: \"annual\".\n        limit: Maximum results to return. Default: 5.\n\n    Returns:\n        JSON-structured cash flow data (operating, investing, financing activities).\n\n    Raises:\n        ValueError: If symbol is empty or period is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    Retrieves historical stock price data.\n\n    Args:\n        symbol: Stock ticker symbol.\n        start_date: Start date in YYYY-MM-DD format.\n        end_date: End date in YYYY-MM-DD format.\n\n    Returns:\n        JSON-structured historical price data (date, open, high, low, close, volume).\n\n    Raises:\n        ValueError: If symbol, start_date, or end_date is invalid.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    Retrieves financial news related to a company or market.\n\n    Args:\n        symbol: Stock ticker symbol. If omitted, returns general market news.\n        limit: Maximum news items to return. Default: 10.\n\n    Returns:\n        JSON-structured news headlines, sources, and timestamps.\n\n    Raises:\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "default": null,
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    Retrieves company metadata (industry, location, etc.).\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured company profile data.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n        ConnectionError: If there's a network issue connecting to the API.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    Retrieves analyst estimates (target price, earnings forecasts).\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum estimates to return. Default: 5.\n\n    Returns:\n        JSON-structured analyst predictions.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    Retrieves dividend payment history.\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum dividends to return. Default: 10.\n\n    Returns:\n        JSON-structured dividend data (date, amount).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    Retrieves stock split history.\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured split data (date, ratio).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    Retrieves historical earnings reports (EPS, revenue surprises).\n\n    Args:\n        symbol: Stock ticker symbol.\n        limit: Maximum reports to return. Default: 5.\n\n    Returns:\n        JSON-structured earnings history.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          },
          "limit": {
            "default": 5,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    Retrieves financial ratios (P/E, debt-to-equity, etc.).\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured financial ratios.\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    Retrieves institutional ownership data.\n\n    Args:\n        symbol: Stock ticker symbol.\n\n    Returns:\n        JSON-structured ownership data (institutional holders, shares held).\n\n    Raises:\n        ValueError: If symbol is empty.\n        httpx.HTTPStatusError: If the API request fails.\n    ",
      "args_schema": {
        "properties": {
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的公司资料数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.009526014328003,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Symbol cannot be empty."
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）时是否能正确处理错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.007853031158447,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.006157159805298,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.012137413024902,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的符号输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "TSLA+"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.702744960784912,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Boundary Test",
        "purpose": "测试超长 symbol 输入是否被正确拒绝（边界条件测试）。",
        "args": {
          "symbol": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.020407438278198,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: "
        },
        "execution_time": 5.0147387981414795,
        "is_functional_test": true
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的公司收入报表数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5844311714172363,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Symbol cannot be empty."
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证当 period 参数为非法值时是否抛出 ValueError 异常。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.0035123825073242188,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 5.009911298751831,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.847614288330078,
        "is_functional_test": true
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: "
        },
        "execution_time": 5.008975028991699,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的收入报表数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6170203685760498,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.769472360610962,
        "is_functional_test": true
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的资产负债表数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8703281879425049,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Symbol cannot be empty."
        },
        "execution_time": 0.0045168399810791016,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证当 period 参数为非法值时是否抛出 ValueError 异常。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5682251453399658,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的资产负债表数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.3585059642791748,
        "is_functional_test": true
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.4235186576843262,
        "is_functional_test": true
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6987881660461426,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8913533687591553,
        "is_functional_test": true
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的现金流量表数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7870252132415771,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Symbol cannot be empty."
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Period Input",
        "purpose": "验证当 period 参数为非法值时是否抛出 ValueError 异常。",
        "args": {
          "symbol": "AAPL",
          "period": "monthly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Invalid period. Must be 'annual', 'quarterly', or 'TTM'."
        },
        "execution_time": 0.0030193328857421875,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的现金流量表数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.019660234451294,
        "is_functional_test": true
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.0106401443481445,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.006057262420654,
        "is_functional_test": true
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.007833480834961,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: "
        },
        "execution_time": 5.013206481933594,
        "is_functional_test": true
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的财务比率数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.0089991092681885,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Symbol cannot be empty."
        },
        "execution_time": 0.003509998321533203,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）时是否能正确处理错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.009738206863403,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.019871950149536,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError 或 HTTPStatusError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.3912522792816162,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "TSLA+"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.018077850341797,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Boundary Test",
        "purpose": "测试超长 symbol 输入是否被正确拒绝（边界条件测试）。",
        "args": {
          "symbol": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5898044109344482,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: "
        },
        "execution_time": 5.018295049667358,
        "is_functional_test": true
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的历史盈利报告数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.404653310775757,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Symbol cannot be empty."
        },
        "execution_time": 0.005218982696533203,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的盈利报告数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.555476427078247,
        "is_functional_test": true
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.9666457176208496,
        "is_functional_test": true
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.012598514556885,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.016368627548218,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: "
        },
        "execution_time": 5.024228572845459,
        "is_functional_test": true
      },
      {
        "case_name": "Default Limit Boundary Test",
        "purpose": "验证默认 limit 参数是否正确返回默认数量的盈利报告（默认值为5）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.017935037612915,
        "is_functional_test": true
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的分析师预测数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.01343560218811,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Symbol cannot be empty."
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）时是否能正确处理错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.62205171585083,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.0630316734313965,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的分析师估计数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 3
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.5718581676483154,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.018941402435303,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.0191900730133057,
        "is_functional_test": true
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: "
        },
        "execution_time": 5.0072181224823,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码和日期范围的历史股价数据（正向测试）。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.0163938999176025,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Symbol cannot be empty."
        },
        "execution_time": 0.0069577693939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Date Format",
        "purpose": "验证当 start_date 或 end_date 格式不正确时是否抛出 ValueError 异常。",
        "args": {
          "symbol": "AAPL",
          "start_date": "01-01-2023",
          "end_date": "2023/01/10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.014817237854004,
        "is_functional_test": false
      },
      {
        "case_name": "Start Date After End Date",
        "purpose": "验证当 start_date 晚于 end_date 时是否能正确处理错误。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-10",
          "end_date": "2023-01-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8689043521881104,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.7138545513153076,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError。",
        "args": {
          "symbol": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.4515113830566406,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.031379461288452,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl",
          "start_date": "2023-01-01",
          "end_date": "2023-01-10"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: "
        },
        "execution_time": 5.0143349170684814,
        "is_functional_test": true
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具能够成功获取默认市场新闻（无 symbol 参数）并返回指定数量的新闻条目。",
        "args": {
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.013480186462402,
        "is_functional_test": true
      },
      {
        "case_name": "Company-Specific News Retrieval",
        "purpose": "验证工具能够根据提供的股票代码获取特定公司的新闻信息。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.875087022781372,
        "is_functional_test": true
      },
      {
        "case_name": "Custom News Limit Retrieval",
        "purpose": "验证 limit 参数是否有效，限制返回的新闻条目数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6116580963134766,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否能正常处理并返回通用市场新闻。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.9340686798095703,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）是否会正确处理或拒绝请求。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.8975811004638672,
        "is_functional_test": false
      },
      {
        "case_name": "Large News Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理并返回合理数量的新闻条目。",
        "args": {
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.782820701599121,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 HTTPStatusError 或连接异常。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 0.4911332130432129,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: "
        },
        "execution_time": 5.012782573699951,
        "is_functional_test": true
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的股息历史数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.013335227966309,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Symbol cannot be empty."
        },
        "execution_time": 0.0036935806274414062,
        "is_functional_test": false
      },
      {
        "case_name": "Custom Limit Parameter",
        "purpose": "验证 limit 参数可以自定义，并限制返回的股息记录数量。",
        "args": {
          "symbol": "AAPL",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.007481813430786,
        "is_functional_test": true
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.019110202789307,
        "is_functional_test": true
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.013494491577148,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.3532137870788574,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Limit Boundary Test",
        "purpose": "验证当 limit 设置为非常大的数值时，工具是否能正常处理。",
        "args": {
          "symbol": "AAPL",
          "limit": 100000
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: "
        },
        "execution_time": 5.018048524856567,
        "is_functional_test": false
      },
      {
        "case_name": "Default Limit Behavior",
        "purpose": "验证未提供 limit 参数时是否默认返回最多 10 条股息记录。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.979358196258545,
        "is_functional_test": true
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的拆股历史数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.460132122039795,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Symbol cannot be empty."
        },
        "execution_time": 0.004244804382324219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）时是否能正确处理错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 1.6842432022094727,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 3.9224069118499756,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.017184257507324,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "TSLA+"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 2.4308812618255615,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Boundary Test",
        "purpose": "测试超长 symbol 输入是否被正确拒绝（边界条件测试）。",
        "args": {
          "symbol": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.019898891448975,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: "
        },
        "execution_time": 5.018759727478027,
        "is_functional_test": true
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Institutional Ownership Retrieval",
        "purpose": "验证工具能够成功获取指定股票代码的机构持股数据（正向测试）。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.0164666175842285,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Symbol Input",
        "purpose": "验证当 symbol 参数为空字符串时，是否抛出 ValueError 异常。",
        "args": {
          "symbol": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: Symbol cannot be empty."
        },
        "execution_time": 0.003009319305419922,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Symbol Format",
        "purpose": "验证使用无效的股票代码格式（如含特殊字符）时是否能正确处理错误。",
        "args": {
          "symbol": "!@#$%"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.015061140060425,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Company Symbol",
        "purpose": "验证输入一个不存在的股票代码是否返回 API 错误（例如 HTTP 404）。",
        "args": {
          "symbol": "XYZ123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.009732723236084,
        "is_functional_test": false
      },
      {
        "case_name": "Network Connection Failure",
        "purpose": "模拟网络连接失败场景，验证工具是否抛出 ConnectionError。",
        "args": {
          "symbol": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.014970779418945,
        "is_functional_test": false
      },
      {
        "case_name": "Special Character in Symbol",
        "purpose": "验证包含特殊字符的 symbol 输入是否被正确处理或拒绝。",
        "args": {
          "symbol": "TSLA+"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.012694597244263,
        "is_functional_test": false
      },
      {
        "case_name": "Long Symbol Boundary Test",
        "purpose": "测试超长 symbol 输入是否被正确拒绝（边界条件测试）。",
        "args": {
          "symbol": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: Failed to connect to financial datasets API. Please verify network connectivity and API availability."
        },
        "execution_time": 5.008041620254517,
        "is_functional_test": false
      },
      {
        "case_name": "Symbol Case Insensitivity Handling",
        "purpose": "验证大写/小写 symbol 是否都能正确识别并返回相同结果。",
        "args": {
          "symbol": "aapl"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: "
        },
        "execution_time": 5.005533456802368,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 96
}