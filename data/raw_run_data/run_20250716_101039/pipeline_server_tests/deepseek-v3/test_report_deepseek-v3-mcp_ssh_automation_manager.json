{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "deepseek-v3-mcp_ssh_automation_manager",
  "server_path": "workspace/pipeline-output-servers/deepseek-v3/mcp_ssh_automation_manager/refined/server.py",
  "timestamp": "2025-07-16T10:18:46.169408",
  "tools": [
    {
      "name": "connect",
      "description": "\n    Establishes an SSH connection to a remote server.\n\n    Args:\n        hostname: The remote server's hostname or IP address.\n        username: The username for authentication.\n        password: The password for authentication (required if private_key is not provided).\n        private_key: The path to the private key file for authentication (required if password is not provided).\n        port: The SSH port (default: 22).\n\n    Returns:\n        A unique session_id for the active SSH session.\n\n    Raises:\n        ValueError: If neither password nor private_key is provided.\n        paramiko.AuthenticationException: If the authentication fails.\n        paramiko.SSHException: If the SSH connection fails for other reasons.\n    ",
      "args_schema": {
        "properties": {
          "hostname": {
            "default": "10.70.5.21",
            "title": "Hostname",
            "type": "string"
          },
          "username": {
            "default": "pengbocheng",
            "title": "Username",
            "type": "string"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "123456",
            "title": "Password"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Private Key"
          },
          "port": {
            "default": 26002,
            "title": "Port",
            "type": "integer"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "\n    Disconnects the specified SSH session and releases resources.\n\n    Args:\n        session_id: The unique identifier of the SSH session to disconnect.\n\n    Returns:\n        A status message indicating the session termination.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "\n    Lists all currently active SSH sessions.\n\n    Returns:\n        A list of dictionaries, each containing session_id, hostname, username, and status.\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "\n    Executes a command on the specified SSH session.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        command: The command to execute.\n        stdin: Standard input to pass to the command (default: None).\n        timeout: Maximum execution time in seconds (default: None for no timeout).\n\n    Returns:\n        A dictionary containing stdout, stderr, and exit_status.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the command execution fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Stdin"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Timeout"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "\n    Uploads a local file to a specified path on the remote SSH server.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        local_path: The path to the local file.\n        remote_path: The destination path on the remote server.\n\n    Returns:\n        A status message indicating the upload result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        FileNotFoundError: If the local file doesn't exist.\n        paramiko.SSHException: If the file upload fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "\n    Downloads a file from the remote SSH server to a specified local path.\n\n    Args:\n        session_id: The unique identifier of the SSH session.\n        remote_path: The path to the file on the remote server.\n        local_path: The destination path on the local machine.\n\n    Returns:\n        A status message indicating the download result.\n\n    Raises:\n        KeyError: If the session_id does not exist.\n        paramiko.SSHException: If the file download fails.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "Basic SSH Connection with Default Parameters",
        "purpose": "验证使用默认参数能否成功建立SSH连接并返回有效session_id",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "result": "session_1"
        },
        "execution_time": 0.24557971954345703,
        "is_functional_test": true
      },
      {
        "case_name": "SSH Connection Using Private Key Authentication",
        "purpose": "验证使用私钥认证方式能否成功建立SSH连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "private_key": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\inspector.zip",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: 'gbk' codec can't decode byte 0xb9 in position 106: illegal multibyte sequence"
        },
        "execution_time": 0.00683903694152832,
        "is_functional_test": true
      },
      {
        "case_name": "Missing Authentication Method Fails Gracefully",
        "purpose": "验证当既未提供密码也未提供私钥时是否抛出ValueError",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "port": 26002
        },
        "response": {
          "result": "session_2"
        },
        "execution_time": 0.239790678024292,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Password Authentication Fails",
        "purpose": "验证错误的密码是否引发AuthenticationException",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "wrong_password",
          "port": 26002
        },
        "response": {
          "result": "session_3"
        },
        "execution_time": 0.22733592987060547,
        "is_functional_test": false
      },
      {
        "case_name": "Connect to Invalid Host IP",
        "purpose": "验证无效主机地址是否导致SSHException",
        "args": {
          "hostname": "192.168.99.99",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。"
        },
        "execution_time": 21.04128074645996,
        "is_functional_test": false
      },
      {
        "case_name": "Connect Using Nonexistent Private Key File",
        "purpose": "验证指定不存在的私钥文件路径是否导致SSHException",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "private_key": "D:\\nonexistent\\path\\to\\key.pem",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: Private key file not found: D:\\nonexistent\\path\\to\\key.pem"
        },
        "execution_time": 0.006035566329956055,
        "is_functional_test": false
      },
      {
        "case_name": "Connect with Maximum Port Value",
        "purpose": "验证最大端口号（65535）是否能被接受并尝试连接",
        "args": {
          "hostname": "10.70.5.21",
          "username": "pengbocheng",
          "password": "123456",
          "port": 65535
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno None] Unable to connect to port 65535 on 10.70.5.21"
        },
        "execution_time": 2.0496814250946045,
        "is_functional_test": true
      },
      {
        "case_name": "Connect with Special Characters in Hostname",
        "purpose": "验证包含特殊字符的主机名是否正确处理或失败明确",
        "args": {
          "hostname": "inv@lid_host#name",
          "username": "pengbocheng",
          "password": "123456",
          "port": 26002
        },
        "response": {
          "error": "ToolException: Error executing tool connect: SSH connection failed: [Errno 11003] getaddrinfo failed"
        },
        "execution_time": 0.008054494857788086,
        "is_functional_test": false
      }
    ],
    "list_sessions": [
      {
        "case_name": "List Active SSH Sessions Successfully",
        "purpose": "验证在存在活动SSH会话时，list_sessions工具能正确返回会话列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0061435699462890625,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions with No Active SSH Connections",
        "purpose": "验证在没有活动SSH会话时，list_sessions工具返回空列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0055980682373046875,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions After Establishing Multiple SSH Connections",
        "purpose": "验证建立多个SSH连接后，list_sessions工具能正确列出所有活动会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.005242347717285156,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions with Mixed Valid and Invalid Sessions",
        "purpose": "验证工具能正确过滤无效或已断开会话，仅返回有效会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003996372222900391,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions with Special Characters in Hostname",
        "purpose": "验证包含特殊字符的主机名能否被正确处理并显示在会话列表中",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.003010988235473633,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions with Long Running Connections",
        "purpose": "验证长时间运行的SSH连接是否仍被正确识别为活动会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0030028820037841797,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions with Concurrent Access",
        "purpose": "验证并发调用list_sessions时系统能否正确处理并返回一致结果",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0030333995819091797,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions with Non-ASCII Characters in Username",
        "purpose": "验证用户名包含非ASCII字符时能否被正确显示在会话列表中",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_2\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}",
          "{\n  \"session_id\": \"session_3\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
        ],
        "execution_time": 0.0029981136322021484,
        "is_functional_test": false
      }
    ],
    "execute": [
      {
        "case_name": "Execute Basic Command with Valid Session",
        "purpose": "验证使用有效的session_id执行基本命令（如'ls'）是否成功返回stdout、stderr和exit_status",
        "args": {
          "session_id": "session_1",
          "command": "ls"
        },
        "response": {
          "result": "{\n  \"stdout\": \"2023.nlposs-1.24.pdf\\napp.ico\\nlarge_file_upload.zip\\noutput.txt\\ntmp\\nuploaded_@#$_file.docx\\nuploaded_app.exe\\nuploaded_empty_file.txt\\nuploaded_large_file.docx\\nuploaded_nature_image.jpg\\nuploaded_paper1.pdf\\nuploaded_screenshot.png\\nuploaded_special@#$_file.docx\\nuploaded_test_output.txt\\nuploaded_文件#1@2025.docx\\n专利1_副本.docx\\n测试新建.txt\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.013877630233764648,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command with Nonexistent Session ID",
        "purpose": "验证使用不存在的session_id执行命令是否会抛出KeyError",
        "args": {
          "session_id": "nonexistent_session",
          "command": "ls"
        },
        "response": {
          "error": "ToolException: Error executing tool execute: 'Session nonexistent_session not found.'"
        },
        "execution_time": 0.00450897216796875,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Long Running Command with Timeout",
        "purpose": "验证带超时设置的长时间运行命令是否会中止并返回相应错误信息",
        "args": {
          "session_id": "session_1",
          "command": "sleep 10",
          "timeout": 5
        },
        "response": {
          "error": "ToolException: Error executing tool execute: Command execution failed: "
        },
        "execution_time": 5.052443981170654,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command with Special Characters in Command String",
        "purpose": "验证包含特殊字符的命令字符串是否被正确处理或失败明确",
        "args": {
          "session_id": "session_1",
          "command": "echo \"Hello@World!\""
        },
        "response": {
          "result": "{\n  \"stdout\": \"Hello@World!\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.04711103439331055,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command with Standard Input Provided",
        "purpose": "验证提供stdin输入能否正确传递给远程命令执行",
        "args": {
          "session_id": "session_1",
          "command": "cat",
          "stdin": "This is standard input content."
        },
        "response": {
          "result": "{\n  \"stdout\": \"This is standard input content.\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.047699928283691406,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Invalid or Malformed Command",
        "purpose": "验证执行无效或无法识别的命令是否导致SSHException或返回非零退出状态",
        "args": {
          "session_id": "session_1",
          "command": "invalid_command_xyz"
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"bash: line 1: invalid_command_xyz: command not found\",\n  \"exit_status\": 127\n}"
        },
        "execution_time": 0.04657602310180664,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command on Disconnected or Expired Session",
        "purpose": "验证尝试在已断开连接的会话上执行命令是否会引发异常",
        "args": {
          "session_id": "session_3",
          "command": "whoami"
        },
        "response": {
          "result": "{\n  \"stdout\": \"pengbocheng\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.012567281723022461,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command with Maximum Timeout Value",
        "purpose": "验证最大合法timeout值（例如86400秒）是否能被正确接受并应用",
        "args": {
          "session_id": "session_1",
          "command": "sleep 2",
          "timeout": 86400
        },
        "response": {
          "result": "{\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 2.0337002277374268,
        "is_functional_test": true
      }
    ],
    "upload": [
      {
        "case_name": "Basic File Upload with Valid Session",
        "purpose": "验证使用有效session_id、存在的本地文件和远程路径能否成功上传文件",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/uploaded_file.txt successfully."
        },
        "execution_time": 0.02022695541381836,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Fails with Nonexistent Session ID",
        "purpose": "验证使用不存在的session_id是否抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: 'Session invalid_session not found.'"
        },
        "execution_time": 0.0037107467651367188,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Fails with Missing Local File",
        "purpose": "验证指定不存在的本地文件路径是否引发FileNotFoundError",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\nonexistent\\path\\to\\file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: Local file not found: D:\\nonexistent\\path\\to\\file.txt"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Fails Due to SSH Exception",
        "purpose": "验证SSH连接异常时能否正确捕获并抛出paramiko.SSHException",
        "args": {
          "session_id": "session_3",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/uploaded_file.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/uploaded_file.txt successfully."
        },
        "execution_time": 0.016040802001953125,
        "is_functional_test": false
      },
      {
        "case_name": "Upload with Special Characters in Remote Path",
        "purpose": "验证远程路径中包含特殊字符时能否正常处理或失败明确",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/pengbocheng/!@#$%^&*()_+file.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt uploaded to /home/pengbocheng/!@#$%^&*()_+file.txt successfully."
        },
        "execution_time": 0.029168128967285156,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Large File Size Limit Test",
        "purpose": "验证上传大文件（例如接近1GB）是否会成功或超时",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250509-154554.mp4",
          "remote_path": "/home/pengbocheng/large_uploaded_file.mp4"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\20250509-154554.mp4 uploaded to /home/pengbocheng/large_uploaded_file.mp4 successfully."
        },
        "execution_time": 0.1298685073852539,
        "is_functional_test": true
      },
      {
        "case_name": "Upload File with Unicode Name",
        "purpose": "验证带有Unicode字符的文件名能否被正确上传",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "remote_path": "/home/pengbocheng/中文文件名_xue.jpg"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg uploaded to /home/pengbocheng/中文文件名_xue.jpg successfully."
        },
        "execution_time": 0.07252955436706543,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Empty File Successfully",
        "purpose": "验证空文件能否被正常上传",
        "args": {
          "session_id": "session_1",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/pengbocheng/empty_file.txt"
        },
        "response": {
          "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt uploaded to /home/pengbocheng/empty_file.txt successfully."
        },
        "execution_time": 0.050714969635009766,
        "is_functional_test": true
      }
    ],
    "download": [
      {
        "case_name": "Basic File Download with Valid Session",
        "purpose": "验证使用有效session_id和合法路径能否成功从远程服务器下载文件",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.03388357162475586,
        "is_functional_test": true
      },
      {
        "case_name": "Download Fails with Invalid Session ID",
        "purpose": "验证提供无效session_id时是否抛出KeyError",
        "args": {
          "session_id": "invalid_session",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 'Session invalid_session not found.'"
        },
        "execution_time": 0.00500941276550293,
        "is_functional_test": false
      },
      {
        "case_name": "Download Fails Due to Nonexistent Remote File",
        "purpose": "验证尝试下载不存在的远程文件是否会引发SSHException",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/nonexistent_file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.04659461975097656,
        "is_functional_test": false
      },
      {
        "case_name": "Download Fails with Invalid Local Path",
        "purpose": "验证指定无效本地路径时工具是否能正确处理错误",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\nonexistent\\path\\to\\file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file or directory: 'D:\\\\nonexistent\\\\path\\\\to\\\\file.txt'"
        },
        "execution_time": 0.05059099197387695,
        "is_functional_test": false
      },
      {
        "case_name": "Download Large File Successfully",
        "purpose": "验证大文件能否通过现有会话正常下载",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/largefile.iso",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_largefile.iso"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.05406546592712402,
        "is_functional_test": true
      },
      {
        "case_name": "Download File with Special Characters in Path",
        "purpose": "验证包含特殊字符的远程路径能否被正确处理",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/file@with#special!.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_special_chars.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.052173614501953125,
        "is_functional_test": true
      },
      {
        "case_name": "Download File and Overwrite Existing Local File",
        "purpose": "验证下载到已存在的本地路径时是否覆盖原文件",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.0506443977355957,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Downloads Using Same Session",
        "purpose": "验证同一session_id能否并发执行多个下载操作",
        "args": {
          "session_id": "session_1",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\concurrent_download.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: File download failed: [Errno 2] No such file"
        },
        "execution_time": 0.05325675010681152,
        "is_functional_test": false
      }
    ],
    "disconnect": [
      {
        "case_name": "Basic Session Disconnection with Valid ID",
        "purpose": "验证使用有效的session_id能否成功断开SSH会话并释放资源",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "result": "Session session_1 disconnected successfully."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect Nonexistent Session ID",
        "purpose": "验证尝试断开不存在的session_id时是否抛出KeyError",
        "args": {
          "session_id": "nonexistent_session"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session nonexistent_session not found.'"
        },
        "execution_time": 0.0030012130737304688,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Already Terminated Session",
        "purpose": "验证重复调用disconnect对已终止会话的行为是否符合预期（应返回错误或无操作）",
        "args": {
          "session_id": "session_2"
        },
        "response": {
          "result": "Session session_2 disconnected successfully."
        },
        "execution_time": 0.003245830535888672,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Using Empty Session ID",
        "purpose": "验证空字符串作为session_id时是否引发参数验证错误",
        "args": {
          "session_id": ""
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session  not found.'"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect After Long Running Connection",
        "purpose": "验证长时间运行的会话能否被正常断开，确保资源正确释放",
        "args": {
          "session_id": "session_3"
        },
        "response": {
          "result": "Session session_3 disconnected successfully."
        },
        "execution_time": 0.003717660903930664,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Disconnect Attempts on Same Session",
        "purpose": "验证并发调用disconnect对同一session_id的行为是否线程安全",
        "args": {
          "session_id": "session_1"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_1 not found.'"
        },
        "execution_time": 0.0021393299102783203,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Invalid Session Format Injection",
        "purpose": "验证工具对包含特殊字符的session_id是否进行安全处理，防止注入攻击",
        "args": {
          "session_id": "session_1; rm -rf /tmp"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_1; rm -rf /tmp not found.'"
        },
        "execution_time": 0.0035076141357421875,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Session With Special Characters in ID",
        "purpose": "验证session_id中包含特殊字符（如@、#、空格等）时能否被正确识别和处理",
        "args": {
          "session_id": "session_!@#$%^&*()"
        },
        "response": {
          "error": "ToolException: Error executing tool disconnect: 'Session session_!@#$%^&*() not found.'"
        },
        "execution_time": 0.0025076866149902344,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 48
}