{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_duckduckgo_search_fetcher",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_duckduckgo_search_fetcher/refined/server.py",
  "timestamp": "2025-07-12T20:38:19.200900",
  "tools": [
    {
      "name": "DuckDuckGo_search",
      "description": "\n    Performs a search on DuckDuckGo using the provided query and returns the results in a structured format.\n    This tool is designed to give users quick access to search results without needing to manually open a browser.\n\n    Args:\n        query (str): The search term or phrase that the user wants to look up. This parameter is mandatory.\n                     Example: \"Python programming language\"\n\n    Returns:\n        str: A JSON formatted string representing a list of search results. Each item in the list\n             is an object containing 'title', 'link', and 'snippet'.\n             Example:\n             \"[{\"title\": \"Official Python Website\", \"link\": \"https://www.python.org\", \"snippet\": \"The official home of the Python Programming Language...\"}]\"\n\n    Raises:\n        ValueError: If the query parameter is empty or contains only whitespace.\n        httpx.HTTPStatusError: If the request to the DuckDuckGo API fails.\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "DuckDuckGo_searchArguments",
        "type": "object"
      }
    },
    {
      "name": "fetch_content",
      "description": "\n    Fetches the content from a given URL, parses the HTML, and extracts the primary text content.\n    It aims to remove boilerplate elements like navigation, ads, and footers.\n\n    Args:\n        url (str): The full URL of the webpage from which to extract content. This parameter is mandatory.\n                   Example: \"https://www.python.org/doc/\"\n\n    Returns:\n        str: A single string containing the cleaned, primary text content of the webpage.\n             Paragraphs are separated by newlines.\n             Example:\n             \"The Python programming language is a versatile and powerful tool...\\n\\nThis article will explore...\"\n\n    Raises:\n        ValueError: If the URL is invalid or empty.\n        httpx.RequestError: If there is a problem with the network request.\n    ",
      "args_schema": {
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "title": "fetch_contentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "DuckDuckGo_search": [
      {
        "case_name": "Basic Search Query Returns Results",
        "purpose": "验证工具能正确执行基本搜索并返回结构化结果",
        "args": {
          "query": "Python programming language"
        },
        "response": {
          "result": "[{\"title\": \"Python (programming language) Category\", \"link\": \"https://duckduckgo.com/c/Python_(programming_language)\", \"snippet\": \"\"}, {\"title\": \"Python syntax and semantics\", \"link\": \"https://duckduckgo.com/Python_syntax_and_semantics\", \"snippet\": \"The syntax of the Python programming language is the set of rules that defines how a Python program will be written and interpreted. The Python language has many similarities to Perl, C, and Java. However, there are some definite differences between the languages.\"}, {\"title\": \"History of programming languages\", \"link\": \"https://duckduckgo.com/History_of_programming_languages\", \"snippet\": \"The history of programming languages spans from documentation of early mechanical computers to modern tools for software development. Early programming languages were highly specialized, relying on mathematical notation and similarly obscure syntax.\"}, {\"title\": \"Pattern matching programming languages\", \"link\": \"https://duckduckgo.com/c/Pattern_matching_programming_languages\", \"snippet\": \"\"}, {\"title\": \"Class-based programming languages\", \"link\": \"https://duckduckgo.com/c/Class-based_programming_languages\", \"snippet\": \"\"}, {\"title\": \"Multi-paradigm programming languages\", \"link\": \"https://duckduckgo.com/c/Multi-paradigm_programming_languages\", \"snippet\": \"\"}, {\"title\": \"Text-oriented programming languages\", \"link\": \"https://duckduckgo.com/c/Text-oriented_programming_languages\", \"snippet\": \"\"}, {\"title\": \"Concurrent programming languages\", \"link\"...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2677字符，剩余1177字符"
        },
        "execution_time": 1.3308508396148682,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Query Triggers ValueError",
        "purpose": "验证空查询参数是否抛出预期的ValueError",
        "args": {
          "query": ""
        },
        "response": {
          "error": "ToolException: Error executing tool DuckDuckGo_search: The 'query' parameter cannot be empty."
        },
        "execution_time": 0.004071950912475586,
        "is_functional_test": false
      },
      {
        "case_name": "Whitespace Only Query Triggers ValueError",
        "purpose": "验证仅包含空白字符的查询是否抛出ValueError",
        "args": {
          "query": "   "
        },
        "response": {
          "error": "ToolException: Error executing tool DuckDuckGo_search: The 'query' parameter cannot be empty."
        },
        "execution_time": 0.0047533512115478516,
        "is_functional_test": false
      },
      {
        "case_name": "Search With Special Characters",
        "purpose": "验证包含特殊字符的搜索查询是否正常处理",
        "args": {
          "query": "C++ vs Python @2024"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.34592294692993164,
        "is_functional_test": true
      },
      {
        "case_name": "Long Query Search",
        "purpose": "验证长查询字符串是否能正常处理",
        "args": {
          "query": "This is a very long search query that tests the maximum allowed length for a query string in the DuckDuckGo search tool"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.36561155319213867,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Non-ASCII Characters",
        "purpose": "验证包含非ASCII字符的查询是否正常处理",
        "args": {
          "query": "语言处理自然语言"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.34003615379333496,
        "is_functional_test": true
      },
      {
        "case_name": "Search For File Name From Test Files",
        "purpose": "验证搜索工具能否找到测试文件中的文件名",
        "args": {
          "query": "test_output.txt"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.3459486961364746,
        "is_functional_test": true
      },
      {
        "case_name": "Search For Long File Name",
        "purpose": "验证搜索工具能否处理测试文件中的超长文件名",
        "args": {
          "query": "very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.docx"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.6236715316772461,
        "is_functional_test": true
      }
    ],
    "fetch_content": [
      {
        "case_name": "Basic URL Content Fetching",
        "purpose": "验证工具能够正确抓取并提取一个有效网页的主要文本内容",
        "args": {
          "url": "https://www.python.org/doc/"
        },
        "response": {
          "result": "Notice:While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience.\n\nPython's documentation, tutorials, and guides are constantly evolving.\n\nGet started here, or scroll down for documentation broken out by type and subject.\n\nPython Docs\n\nSee alsoDocumentation Releases by Version\n\nCan’t find what you’re looking for?Try our comprehensive Help section\n\nOpen source software is made better when users can easily contribute code and documentation to fix bugs and add features. Python strongly encourages community involvement in improving the software.Learn moreabout how to make Python better for everyone.\n\nContribute to PythonIssue Tracker\n\nCopyright ©2001-2025.Python Software FoundationLegal StatementsPrivacy Notice"
        },
        "execution_time": 1.320096731185913,
        "is_functional_test": true
      },
      {
        "case_name": "Empty URL Triggers ValueError",
        "purpose": "验证空URL是否抛出预期的ValueError",
        "args": {
          "url": ""
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: A valid URL starting with 'http://' or 'https://' is required."
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      },
      {
        "case_name": "Whitespace Only URL Triggers ValueError",
        "purpose": "验证仅包含空白字符的URL是否抛出ValueError",
        "args": {
          "url": "   "
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: A valid URL starting with 'http://' or 'https://' is required."
        },
        "execution_time": 0.006006956100463867,
        "is_functional_test": false
      },
      {
        "case_name": "Fetch Content From Non-Existent Page",
        "purpose": "验证访问不存在页面时是否抛出httpx.RequestError",
        "args": {
          "url": "https://example.com/nonexistentpage12345"
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: Failed to fetch content due to HTTP status 404 for URL: https://example.com/nonexistentpage12345"
        },
        "execution_time": 1.9796035289764404,
        "is_functional_test": false
      },
      {
        "case_name": "Fetch Content With Special Characters In URL",
        "purpose": "验证包含特殊字符的URL是否能正常处理",
        "args": {
          "url": "https://www.example.com/test?param=value@2024"
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: Failed to fetch content due to HTTP status 404 for URL: https://www.example.com/test?param=value@2024"
        },
        "execution_time": 2.81492280960083,
        "is_functional_test": true
      },
      {
        "case_name": "Long URL Handling",
        "purpose": "验证超长URL是否能正常处理",
        "args": {
          "url": "https://www.example.com/very/long/path/that/tests/the/maximum/allowed/length/of/a/url/in/the/system?query=longstring1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: Failed to fetch content due to HTTP status 404 for URL: https://www.example.com/very/long/path/that/tests/the/maximum/allowed/length/of/a/url/in/the/system?query=longstring1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
        },
        "execution_time": 0.7873589992523193,
        "is_functional_test": true
      },
      {
        "case_name": "Fetch Content From Local HTML File",
        "purpose": "验证工具能否从本地HTML文件路径获取内容（模拟file://协议）",
        "args": {
          "url": "file:///D:/devWorkspace/MCPServer-Generator/testSystem/testFiles/present.html"
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: A valid URL starting with 'http://' or 'https://' is required."
        },
        "execution_time": 0.0030050277709960938,
        "is_functional_test": true
      },
      {
        "case_name": "Fetch Content From Non-HTTP URL",
        "purpose": "验证非HTTP(S)协议URL是否触发错误（如ftp、file等）",
        "args": {
          "url": "ftp://example.com/file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool fetch_content: A valid URL starting with 'http://' or 'https://' is required."
        },
        "execution_time": 0.012000799179077148,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 16
}