{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_financialdatasets_api_hand",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_financialdatasets_api_hand/refined/server.py",
  "timestamp": "2025-07-12T20:40:18.356430",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "Retrieves the income statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of income statement records, sorted from most recent to oldest.\n    \n    Example:\n        get_income_statements(ticker='AAPL', period='annual', limit=2)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "Retrieves the balance sheets for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'MSFT').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of balance sheet records, sorted from most recent to oldest.\n\n    Example:\n        get_balance_sheets(ticker='MSFT', period='quarterly', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "Retrieves the cash flow statements for a specified company stock ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'GOOGL').\n        period (str): The reporting period. Accepts 'annual', 'quarterly'. Defaults to 'annual'.\n        limit (int): The maximum number of recent reports to return. Defaults to 4.\n\n    Returns:\n        str: A JSON string representing a list of cash flow statement records, sorted from most recent to oldest.\n\n    Example:\n        get_cash_flows(ticker='GOOGL', period='annual', limit=4)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 4,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "Retrieves historical OHLC (Open, High, Low, Close) stock price data for a specified ticker.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'TSLA').\n        start_date (str): The start date for the data in 'YYYY-MM-DD' format.\n        end_date (str): The end date for the data in 'YYYY-MM-DD' format.\n\n    Returns:\n        str: A JSON string representing a list of daily price records.\n\n    Example:\n        get_stock_prices(ticker='TSLA', start_date='2023-01-01', end_date='2023-01-31')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "ticker",
          "start_date",
          "end_date"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "Retrieves recent news articles related to a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NVDA').\n\n    Returns:\n        str: A JSON string representing a list of news articles.\n\n    Example:\n        get_market_news(ticker='NVDA')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "Retrieves the summary profile for a company, including sector, industry, employee count, and business summary.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AMZN').\n\n    Returns:\n        str: A JSON string representing a dictionary of the company's profile information.\n\n    Example:\n        get_company_profile(ticker='AMZN')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "Retrieves analyst recommendations and ratings for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'NFLX').\n\n    Returns:\n        str: A JSON string representing a list of analyst recommendation records over time.\n\n    Example:\n        get_analyst_estimates(ticker='NFLX')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "Retrieves the historical dividend payment data for a specific stock.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'KO').\n\n    Returns:\n        str: A JSON string representing a list of dividend payments, with date and amount for each.\n\n    Example:\n        get_dividend_history(ticker='KO')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "Retrieves the historical stock split data for a specific company.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'AAPL').\n\n    Returns:\n        str: A JSON string representing a list of stock splits, with date and ratio for each.\n\n    Example:\n        get_splits_history(ticker='AAPL')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "Retrieves the company's historical earnings data, including reported and estimated EPS.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'META').\n\n    Returns:\n        str: A JSON string representing a list of historical earnings events.\n\n    Example:\n        get_earnings_history(ticker='META')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "Retrieves key financial ratios for a company, such as P/E ratio, forward P/E, and price-to-book ratio.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'JPM').\n\n    Returns:\n        str: A JSON string representing a dictionary of selected financial ratios.\n\n    Example:\n        get_financial_ratios(ticker='JPM')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "Retrieves the company's ownership structure, including major and institutional holders.\n\n    Args:\n        ticker (str): The stock ticker symbol (e.g., 'BRK-A').\n\n    Returns:\n        str: A JSON string containing lists for 'major_holders' and 'institutional_holders'.\n\n    Example:\n        get_ownership_data(ticker='BRK-A')\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "Basic Company Profile Retrieval",
        "purpose": "验证工具可以成功获取指定公司的基本资料信息（正向测试）",
        "args": {
          "ticker": "AMZN"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
        },
        "execution_time": 1.3508098125457764,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 0.9490966796875,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.044272422790527344,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.2350759506225586,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.1906592845916748,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE companies;--'\"}"
        },
        "execution_time": 0.8773081302642822,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 1.1925098896026611,
        "is_functional_test": false
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "Basic Balance Sheet Retrieval",
        "purpose": "验证工具可以成功获取指定公司的资产负债表数据（正向测试）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.8806178569793701,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet Retrieval with Quarterly Period",
        "purpose": "验证工具在 period 参数为 'quarterly' 时能正确返回季度资产负债表",
        "args": {
          "ticker": "GOOG",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 0.941697359085083,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet Retrieval with Custom Limit",
        "purpose": "验证工具在 limit 参数为 2 时能正确返回最近两条年度报告",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.9646594524383545,
        "is_functional_test": true
      },
      {
        "case_name": "Balance Sheet Retrieval with Quarterly Period and Limit=1",
        "purpose": "验证工具在 period='quarterly' 且 limit=1 时能正确返回最近一条季度报告",
        "args": {
          "ticker": "FB",
          "period": "quarterly",
          "limit": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'FB'\"}"
        },
        "execution_time": 1.174264907836914,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE balance_sheets;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE balance_sheets;--'\"}"
        },
        "execution_time": 1.1986706256866455,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection in Ticker",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 5.916070461273193,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 0.8889415264129639,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 0.8751788139343262,
        "is_functional_test": false
      }
    ],
    "get_income_statements": [
      {
        "case_name": "Basic Income Statement Retrieval",
        "purpose": "验证工具可以成功获取指定公司的年度利润表数据（正向测试）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.2218844890594482,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement Retrieval with Quarterly Period",
        "purpose": "验证工具在 period 参数为 'quarterly' 时能正确返回季度利润表数据",
        "args": {
          "ticker": "GOOG",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOG'\"}"
        },
        "execution_time": 0.9251189231872559,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement Retrieval with Custom Limit",
        "purpose": "验证工具在 limit 参数为 2 时能正确返回最近两条年度利润表数据",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.8856430053710938,
        "is_functional_test": true
      },
      {
        "case_name": "Income Statement Retrieval with Quarterly Period and Limit=1",
        "purpose": "验证工具在 period='quarterly' 且 limit=1 时能正确返回最近一条季度利润表数据",
        "args": {
          "ticker": "FB",
          "period": "quarterly",
          "limit": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'FB'\"}"
        },
        "execution_time": 0.8599255084991455,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE income_statements;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE income_statements;--'\"}"
        },
        "execution_time": 0.8595459461212158,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection in Ticker",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 1.1361963748931885,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 0.9252560138702393,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.8630995750427246,
        "is_functional_test": false
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "Basic Cash Flow Retrieval",
        "purpose": "验证工具可以成功获取指定公司的现金流量表数据（正向测试）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 1.1172821521759033,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow Retrieval with Quarterly Period",
        "purpose": "验证工具在 period 参数为 'quarterly' 时能正确返回季度现金流量表",
        "args": {
          "ticker": "GOOGL",
          "period": "quarterly"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
        },
        "execution_time": 0.9240775108337402,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow Retrieval with Custom Limit",
        "purpose": "验证工具在 limit 参数为 2 时能正确返回最近两条年度现金流量报告",
        "args": {
          "ticker": "TSLA",
          "limit": 2
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 0.9085407257080078,
        "is_functional_test": true
      },
      {
        "case_name": "Cash Flow Retrieval with Quarterly Period and Limit=1",
        "purpose": "验证工具在 period='quarterly' 且 limit=1 时能正确返回最近一条季度现金流量报告",
        "args": {
          "ticker": "FB",
          "period": "quarterly",
          "limit": 1
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'FB'\"}"
        },
        "execution_time": 0.8334784507751465,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE cash_flows;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE cash_flows;--'\"}"
        },
        "execution_time": 1.2469768524169922,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection in Ticker",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 5.866157531738281,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.1279571056365967,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.2039909362792969,
        "is_functional_test": false
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "Basic Financial Ratios Retrieval",
        "purpose": "验证工具可以成功获取指定公司的关键财务比率（正向测试）",
        "args": {
          "ticker": "JPM"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'JPM'\"}"
        },
        "execution_time": 1.1988770961761475,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 5.910653591156006,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004508018493652344,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.5405902862548828,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 2.9717369079589844,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE financial_ratios;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE financial_ratios;--'\"}"
        },
        "execution_time": 0.9231982231140137,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 5.941345453262329,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "Basic Ownership Data Retrieval",
        "purpose": "验证工具可以成功获取指定公司的所有权结构数据（正向测试）",
        "args": {
          "ticker": "BRK-A"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
        },
        "execution_time": 1.5635871887207031,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE ownership;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE ownership;--'\"}"
        },
        "execution_time": 1.0419681072235107,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.9251117706298828,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.2066309452056885,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004013776779174805,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.4018933773040771,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.2347569465637207,
        "is_functional_test": false
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "Basic Analyst Estimates Retrieval",
        "purpose": "验证工具可以成功获取指定股票的分析师估计数据（正向测试）",
        "args": {
          "ticker": "NFLX"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
        },
        "execution_time": 0.9428806304931641,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 0.891202449798584,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005005598068237305,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 0.885159969329834,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 6.0089874267578125,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE analyst_estimates;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE analyst_estimates;--'\"}"
        },
        "execution_time": 1.285857915878296,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.8752806186676025,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "Basic Earnings History Retrieval",
        "purpose": "验证工具可以成功获取指定公司的历史收益数据（正向测试）",
        "args": {
          "ticker": "META"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
        },
        "execution_time": 1.237621545791626,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.0313420295715332,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.00793766975402832,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 0.9107487201690674,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.0642290115356445,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE earnings;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE earnings;--'\"}"
        },
        "execution_time": 0.879486083984375,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.8297915458679199,
        "is_functional_test": false
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "Basic Stock Price Retrieval",
        "purpose": "验证工具可以成功获取指定股票代码在指定日期范围内的历史OHLC价格数据（正向测试）",
        "args": {
          "ticker": "TSLA",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
        },
        "execution_time": 1.2767183780670166,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection in Ticker",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE stock_prices;--",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE stock_prices;--'\"}"
        },
        "execution_time": 1.4585745334625244,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection in Ticker",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.9162516593933105,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.1591005325317383,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": "",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.004005908966064453,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.2255632877349854,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()",
          "start_date": "2023-01-01",
          "end_date": "2023-01-31"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.1809635162353516,
        "is_functional_test": false
      },
      {
        "case_name": "Date Range Boundary - Same Start and End Date",
        "purpose": "验证工具在 start_date 和 end_date 相同时的行为",
        "args": {
          "ticker": "AAPL",
          "start_date": "2023-05-01",
          "end_date": "2023-05-01"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.9197866916656494,
        "is_functional_test": true
      }
    ],
    "get_market_news": [
      {
        "case_name": "Basic Market News Retrieval",
        "purpose": "验证工具可以成功获取指定公司的最新市场新闻（正向测试，使用合法 ticker）",
        "args": {
          "ticker": "NVDA"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
        },
        "execution_time": 1.2496283054351807,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 5.95993709564209,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.008000373840332031,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 1 validation error for get_market_newsArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.011998653411865234,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 0.9860303401947021,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.2223739624023438,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE news;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE news;--'\"}"
        },
        "execution_time": 7.151113986968994,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.959322452545166,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "Basic Dividend History Retrieval",
        "purpose": "验证工具可以成功获取指定股票的历史分红数据（正向测试）",
        "args": {
          "ticker": "KO"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
        },
        "execution_time": 2.266846179962158,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.2149734497070312,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.007994413375854492,
        "is_functional_test": false
      },
      {
        "case_name": "Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.008009195327758789,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.4816153049468994,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 0.9474279880523682,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE dividends;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE dividends;--'\"}"
        },
        "execution_time": 1.1685292720794678,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 0.931194543838501,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "Basic Splits History Retrieval",
        "purpose": "验证工具可以成功获取指定公司的股票拆分历史数据（正向测试）",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
        },
        "execution_time": 0.9364111423492432,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能够防止通过 ticker 参数注入 SQL 命令",
        "args": {
          "ticker": "'; DROP TABLE splits_history;--"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: ''; DROP TABLE splits_history;--'\"}"
        },
        "execution_time": 0.9680910110473633,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Command Injection Attempt",
        "purpose": "验证工具是否能够阻止通过 ticker 参数注入系统命令",
        "args": {
          "ticker": "; rm -rf /tmp/test;"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '; rm -rf /tmp/test;'\"}"
        },
        "execution_time": 1.1807425022125244,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Invalid Ticker Format",
        "purpose": "验证工具在提供无效股票代码时是否能正确处理错误",
        "args": {
          "ticker": "INVALID_TICKER_123"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID_TICKER_123'\"}"
        },
        "execution_time": 1.1399445533752441,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Empty Ticker Input",
        "purpose": "验证当 ticker 参数为空字符串时工具的错误处理能力",
        "args": {
          "ticker": ""
        },
        "response": {
          "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
        },
        "execution_time": 0.012002944946289062,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Null Ticker Input",
        "purpose": "验证当 ticker 参数为 null 时工具的行为",
        "args": {
          "ticker": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.01387929916381836,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Maximum Length Ticker",
        "purpose": "测试工具对超长 ticker 字符串的边界处理能力",
        "args": {
          "ticker": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\"}"
        },
        "execution_time": 1.1772465705871582,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Case - Special Characters in Ticker",
        "purpose": "验证工具能否安全处理包含特殊字符的 ticker 输入",
        "args": {
          "ticker": "!@#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid or unknown ticker symbol: '!@#$%^&*()'\"}"
        },
        "execution_time": 1.0928070545196533,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 96
}