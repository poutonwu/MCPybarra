{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_pdf_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_pdf_toolkit/refined/server.py",
  "timestamp": "2025-07-12T20:40:12.112671",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merges multiple specified PDF files into a single PDF file.\n\n    Args:\n        pdf_paths (list[str]): A list containing the full paths to the PDF files to be merged.\n        output_path (str): The save path for the merged PDF file.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Files merged successfully into output.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "pdf_paths": {
            "items": {
              "type": "string"
            },
            "title": "Pdf Paths",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "pdf_paths",
          "output_path"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extracts specified pages from a PDF file and creates a new PDF file.\n\n    Args:\n        source_path (str): The full path to the source PDF file.\n        pages (list[int]): A list of page numbers to extract (0-indexed).\n        output_path (str): The save path for the new PDF file with the extracted pages.\n\n    Returns:\n        dict: A dictionary containing the operation status and a message.\n              Example: {\"status\": \"success\", \"message\": \"Extracted 3 pages into new_file.pdf\"}\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "pages": {
            "items": {
              "type": "integer"
            },
            "title": "Pages",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "pages",
          "output_path"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Searches for PDF files matching a glob pattern in a specified directory.\n\n    Args:\n        directory (str): The path to the directory to search in.\n        pattern (str): The glob pattern to match filenames (e.g., '*.pdf', 'report-*.pdf').\n\n    Returns:\n        list[str]: A list containing the full paths of all matching PDF files.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Finds and merges PDF files in a specified order from a directory based on a list of filename patterns.\n    Supports both exact and fuzzy matching modes.\n\n    Args:\n        directory (str): The path to the directory to search for PDF files.\n        order_patterns (list[str]): A list of filename patterns that defines the merge order.\n        output_path (str): The save path for the merged PDF file.\n        match_mode (str): The matching mode, either 'exact' or 'fuzzy'. Defaults to 'exact'.\n\n    Returns:\n        dict: A dictionary containing the operation status, a message, and a list of the actual files merged.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_patterns": {
            "items": {
              "type": "string"
            },
            "title": "Order Patterns",
            "type": "array"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "match_mode": {
            "default": "exact",
            "title": "Match Mode",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "order_patterns",
          "output_path"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Finds PDFs in a directory that are related to a target PDF based on content similarity.\n    It analyzes the text content of the target PDF and compares it against other PDFs\n    in the search directory to find the most similar ones.\n\n    Args:\n        target_pdf (str): The full path to the target PDF file used as the baseline for comparison.\n        search_directory (str): The path to the directory where related files will be searched.\n        top_n (int): The maximum number of related PDF files to return. Defaults to 5.\n\n    Returns:\n        list[dict]: A list of related PDF files, where each element is a dictionary\n                    containing the file path and a similarity score. Returns a list\n                    with an error dictionary if an issue occurs.\n    ",
      "args_schema": {
        "properties": {
          "target_pdf": {
            "title": "Target Pdf",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          },
          "top_n": {
            "default": 5,
            "title": "Top N",
            "type": "integer"
          }
        },
        "required": [
          "target_pdf",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证工具能够正确搜索指定目录下的所有PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*.pdf"
        },
        "response": [
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        ],
        "execution_time": 0.0061206817626953125,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Specific Pattern",
        "purpose": "验证工具能根据特定命名模式匹配PDF文件（如 'paper*.pdf'）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "paper*.pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "execution_time": 0.008718490600585938,
        "is_functional_test": true
      },
      {
        "case_name": "No Matching Files",
        "purpose": "验证当没有文件匹配给定模式时，工具返回空列表",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "nonexistent_*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.009006977081298828,
        "is_functional_test": true
      },
      {
        "case_name": "Search in Subdirectories",
        "purpose": "验证工具是否支持递归搜索子目录中的PDF文件（使用**/模式）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "**/*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003996610641479492,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证工具在提供无效目录路径时能否优雅处理错误",
        "args": {
          "directory": "D:\\invalid\\path\\to\\directory",
          "pattern": "*.pdf"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Pattern",
        "purpose": "验证工具在未提供模式参数时的行为",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ""
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Pattern",
        "purpose": "验证工具是否能正确处理包含特殊字符的模式",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "rule[0-9].pdf"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
        },
        "execution_time": 0.007867097854614258,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path Handling",
        "purpose": "验证工具是否能处理包含长文件名的路径",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.*"
        },
        "response": {
          "result": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.docx"
        },
        "execution_time": 0.003854990005493164,
        "is_functional_test": true
      }
    ],
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证工具能够正确合并两个存在的PDF文件并输出到指定路径",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_output.pdf\"\n}"
        },
        "execution_time": 0.0837247371673584,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证工具在仅提供一个PDF文件时仍能生成有效输出文件",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into single_merged_output.pdf\"\n}"
        },
        "execution_time": 0.06048321723937988,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Empty PDF List",
        "purpose": "验证当输入的PDF列表为空时，工具是否返回错误信息",
        "args": {
          "pdf_paths": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_merge_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"The list of PDF paths cannot be empty.\"\n}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs to Invalid Output Path",
        "purpose": "验证工具在目标路径无效或不可写时能否优雅处理错误",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\invalid\\path\\to\\write\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\invalid\\\\\\\\path\\\\\\\\to\\\\\\\\write\\\\\\\\merged_output.pdf'\"\n}"
        },
        "execution_time": 0.05346250534057617,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Nonexistent PDF Files",
        "purpose": "验证工具在尝试合并不存在的PDF文件时的行为",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent2.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merge_nonexistent_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Input file not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent1.pdf\"\n}"
        },
        "execution_time": 0.006997108459472656,
        "is_functional_test": false
      },
      {
        "case_name": "Merge PDFs with Special Characters in Output Path",
        "purpose": "验证工具是否能正确处理包含特殊字符的输出路径",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into merged_@#$.pdf\"\n}"
        },
        "execution_time": 0.06009268760681152,
        "is_functional_test": true
      },
      {
        "case_name": "Merge PDFs with Long Output Path",
        "purpose": "验证工具是否能处理非常长的输出文件路径",
        "args": {
          "pdf_paths": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_merged.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged successfully into very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_merged.pdf\"\n}"
        },
        "execution_time": 0.06276106834411621,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Merge System File",
        "purpose": "验证工具是否限制对系统敏感文件的操作（如C:\\Windows\\system32\\config\\SAM）",
        "args": {
          "pdf_paths": [
            "C:\\Windows\\system32\\config\\SAM"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\security_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Input file not found: C:\\\\Windows\\\\system32\\\\config\\\\SAM\"\n}"
        },
        "execution_time": 0.0060024261474609375,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证工具能够正确从指定PDF文件中提取特定页面并生成新的PDF文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0,
            1,
            2
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_basic.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 3 pages into extracted_basic.pdf\"\n}"
        },
        "execution_time": 0.03700757026672363,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证工具能够提取单个页面并生成有效的PDF文件",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            1
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_single_page.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into extracted_single_page.pdf\"\n}"
        },
        "execution_time": 0.014991521835327148,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Pages List",
        "purpose": "验证当提供的页面列表为空时，工具是否返回错误信息",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_pages_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 0 pages into empty_pages_output.pdf\"\n}"
        },
        "execution_time": 0.009500503540039062,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Source Path",
        "purpose": "验证当提供无效的源PDF路径时，工具是否能优雅处理错误",
        "args": {
          "source_path": "D:\\invalid\\path\\to\\source.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_source_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Source file not found: D:\\\\invalid\\\\path\\\\to\\\\source.pdf\"\n}"
        },
        "execution_time": 0.005008697509765625,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Page Numbers",
        "purpose": "验证工具是否能处理负数页码（应视为无效）",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            -1,
            -2
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\negative_pages_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Invalid page number: -1. Must be between 0 and 6.\"\n}"
        },
        "execution_time": 0.009995460510253906,
        "is_functional_test": false
      },
      {
        "case_name": "Out of Range Page Numbers",
        "purpose": "验证工具能否处理超出实际页数的页面请求",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            999
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\out_of_range_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"Invalid page number: 999. Must be between 0 and 9.\"\n}"
        },
        "execution_time": 0.013582468032836914,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证工具是否能正确处理包含特殊字符的输出路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into extracted_@#$.pdf\"\n}"
        },
        "execution_time": 0.02960371971130371,
        "is_functional_test": true
      },
      {
        "case_name": "Long Output File Path",
        "purpose": "验证工具是否能处理非常长的输出文件路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "pages": [
            0
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Extracted 1 pages into very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"\n}"
        },
        "execution_time": 0.023577451705932617,
        "is_functional_test": true
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Similarity Search",
        "purpose": "验证工具能够基于内容相似性在指定目录中找到相关PDF文件（使用默认top_n=5）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_basic.pdf\",\n  \"similarity_score\": 0.8493\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\",\n  \"similarity_score\": 0.5982\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\",\n  \"similarity_score\": 0.0026\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\",\n  \"similarity_score\": 0.0014\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_single_page.pdf\",\n  \"similarity_score\": 0.0012\n}"
        ],
        "execution_time": 0.6848630905151367,
        "is_functional_test": true
      },
      {
        "case_name": "Similarity Search with Top N=3",
        "purpose": "验证工具能正确限制返回的最相似PDF文件数量为指定值（top_n=3）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 3
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\",\n  \"similarity_score\": 0.4196\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_single_page.pdf\",\n  \"similarity_score\": 0.4104\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_basic.pdf\",\n  \"similarity_score\": 0.0026\n}"
        ],
        "execution_time": 0.6469011306762695,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Empty Directory",
        "purpose": "验证当搜索目录为空时，工具是否返回空列表或适当错误信息",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.14166831970214844,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Target PDF Path",
        "purpose": "验证工具在目标PDF路径无效时能否优雅处理错误",
        "args": {
          "target_pdf": "D:\\invalid\\path\\to\\target.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: D:\\\\invalid\\\\path\\\\to\\\\target.pdf\"\n}"
        },
        "execution_time": 0.004510641098022461,
        "is_functional_test": false
      },
      {
        "case_name": "Search in Nonexistent Directory",
        "purpose": "验证工具在搜索目录不存在时是否返回错误信息",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\nonexistent\\directory\\path"
        },
        "response": {
          "result": "{\n  \"error\": \"Search directory not found: D:\\\\nonexistent\\\\directory\\\\path\"\n}"
        },
        "execution_time": 0.00843667984008789,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Access System File",
        "purpose": "验证工具是否限制对系统敏感文件的操作（如C:\\Windows\\system32\\config\\SAM）",
        "args": {
          "target_pdf": "C:\\Windows\\system32\\config\\SAM",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\n  \"error\": \"Target PDF not found: C:\\\\Windows\\\\system32\\\\config\\\\SAM\"\n}"
        },
        "execution_time": 0.006994485855102539,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Top N=0",
        "purpose": "验证工具在top_n参数为0时的行为是否符合预期（应返回空列表或错误）",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "top_n": 0
        },
        "response": {
          "result": ""
        },
        "execution_time": 0.5835983753204346,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in File Paths",
        "purpose": "验证工具是否能正确处理包含特殊字符的PDF文件路径",
        "args": {
          "target_pdf": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": [
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_basic.pdf\",\n  \"similarity_score\": 0.6985\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n  \"similarity_score\": 0.5982\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\",\n  \"similarity_score\": 0.002\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\",\n  \"similarity_score\": 0.001\n}",
          "{\n  \"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_single_page.pdf\",\n  \"similarity_score\": 0.0009\n}"
        ],
        "execution_time": 0.6674859523773193,
        "is_functional_test": true
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic PDF Merge Ordered Exact Match",
        "purpose": "验证工具在默认精确匹配模式下能按指定顺序正确合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_ordered_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.0831308364868164,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Ordered with Fuzzy Matching",
        "purpose": "验证模糊匹配模式下，工具能否根据部分文件名模式正确识别并按序合并PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper",
            "rule"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\fuzzy_merged_output.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\",\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.08486223220825195,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Ordered with No Matching Files",
        "purpose": "验证当没有文件匹配给定的顺序模式时，工具是否返回错误信息",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "nonexistent1",
            "nonexistent2"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Ordered to Invalid Output Path",
        "purpose": "验证工具在输出路径无效或不可写时能否优雅处理错误",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf",
            "rule1.pdf"
          ],
          "output_path": "D:\\invalid\\path\\to\\write\\merged_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"error\",\n  \"message\": \"[Errno 2] No such file or directory: 'D:\\\\\\\\invalid\\\\\\\\path\\\\\\\\to\\\\\\\\write\\\\\\\\merged_output.pdf'\"\n}"
        },
        "execution_time": 0.11704683303833008,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Ordered with Empty Order Patterns",
        "purpose": "验证当提供的排序模式列表为空时，工具是否返回参数错误",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_order_output.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.0045092105865478516,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Merge System File via Ordered Merge",
        "purpose": "验证工具是否限制对系统敏感文件的操作（如C:\\Windows\\system32\\config\\SAM）通过有序合并接口",
        "args": {
          "directory": "C:\\Windows\\system32\\config",
          "order_patterns": [
            "SAM"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\security_output.pdf",
          "match_mode": "fuzzy"
        },
        "response": {
          "result": "{\n  \"status\": \"warning\",\n  \"message\": \"No files found matching the patterns.\",\n  \"merged_files\": []\n}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Ordered with Special Characters in Output Path",
        "purpose": "验证工具是否能正确处理包含特殊字符的输出路径",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.0637657642364502,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Ordered PDFs with Long Output Path",
        "purpose": "验证工具是否能处理非常长的输出文件路径",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_patterns": [
            "paper1.pdf"
          ],
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_merged.pdf"
        },
        "response": {
          "result": "{\n  \"status\": \"success\",\n  \"message\": \"Files merged in specified order.\",\n  \"merged_files\": [\n    \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"\n  ]\n}"
        },
        "execution_time": 0.0635526180267334,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 40
}