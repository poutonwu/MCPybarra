{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_opencv_image_processing",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_opencv_image_processing/refined/server.py",
  "timestamp": "2025-07-12T20:36:08.558547",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "Saves an image to the file system in the desired format.\n\n    Args:\n        image_path (str): Path to the input image file.\n        output_path (str): Path to save the output image file.\n\n    Returns:\n        bool: True if the image is successfully saved, otherwise False.\n\n    Raises:\n        FileNotFoundError: If the input image file doesn't exist\n        ValueError: If the image can't be loaded or saved\n\n    Example:\n        save_image_tool(\"input.jpg\", \"output.png\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "Resizes the image to specific dimensions.\n\n    Args:\n        image_path (str): Path to the input image file.\n        width (int): The new width of the image. Must be positive.\n        height (int): The new height of the image. Must be positive.\n\n    Returns:\n        str: Path to the resized image file.\n\n    Raises:\n        ValueError: If width or height are not positive integers\n\n    Example:\n        resize_image_tool(\"input.jpg\", 800, 600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "Crops a specific rectangular region from the image.\n\n    Args:\n        image_path (str): Path to the input image file.\n        x (int): The x-coordinate of the top-left corner of the crop box.\n        y (int): The y-coordinate of the top-left corner of the crop box.\n        width (int): The width of the crop box. Must be positive.\n        height (int): The height of the crop box. Must be positive.\n\n    Returns:\n        str: Path to the cropped image file.\n\n    Raises:\n        ValueError: If any dimension parameters are invalid\n\n    Example:\n        crop_image_tool(\"input.jpg\", 10, 10, 100, 100)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "Retrieves basic statistics about the image, including dimensions and pixel intensity histograms.\n\n    Args:\n        image_path (str): Path to the input image file.\n\n    Returns:\n        str: JSON string containing dimensions and histogram data.\n\n    Example:\n        get_image_stats_tool(\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "Applies a specified filter to the image (e.g., Gaussian blur, median blur).\n\n    Args:\n        image_path (str): Path to the input image file.\n        filter_type (str): The type of filter to apply (\"gaussian\", \"median\", etc.).\n        kernel_size (int): The size of the kernel used for filtering. Must be odd and positive.\n\n    Returns:\n        str: Path to the filtered image file.\n\n    Raises:\n        ValueError: If filter_type is unsupported or kernel_size is invalid\n\n    Example:\n        apply_filter_tool(\"input.jpg\", \"gaussian\", 5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "Detects edges in the image using OpenCV's Canny edge detection algorithm.\n\n    Args:\n        image_path (str): Path to the input image file.\n        threshold1 (float): The first threshold for the hysteresis procedure.\n        threshold2 (float): The second threshold for the hysteresis procedure.\n\n    Returns:\n        str: Path to the edge-detected image file.\n\n    Example:\n        detect_edges_tool(\"input.jpg\", 50.0, 150.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "Applies a thresholding operation to the image.\n\n    Args:\n        image_path (str): Path to the input grayscale image file.\n        threshold_value (float): The threshold value.\n        max_value (float): The maximum value to assign to pixels exceeding the threshold.\n\n    Returns:\n        str: Path to the thresholded binary image file.\n\n    Example:\n        apply_threshold_tool(\"input.jpg\", 127.0, 255.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "Detects contours in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of contours.\n\n    Example:\n        detect_contours_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "Identifies and classifies simple geometric shapes (e.g., circles, squares) in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of detected shapes.\n\n    Example:\n        find_shapes_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save JPG to PNG",
        "purpose": "验证工具可以成功将JPG图像保存为PNG格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.3428637981414795,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Save PNG to JPG",
        "purpose": "验证工具可以成功将PNG图像保存为JPG格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Non-Existent Input Path",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image to Invalid Output Path",
        "purpose": "验证工具在输出路径无效或不可写时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\invalid_path\\output.png"
        },
        "response": {
          "result": "false"
        },
        "execution_time": 0.05901026725769043,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Save Non-Image File",
        "purpose": "验证工具是否能正确处理非图像文件的尝试保存",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.005000114440917969,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image with Special Characters in Output Path",
        "purpose": "验证工具是否支持特殊字符的输出路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#$.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.00500035285949707,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Very Long File Path",
        "purpose": "验证工具是否能处理超长文件路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.025999069213867188,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Output Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_output.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.007006168365478516,
        "is_functional_test": false
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Stats for JPG",
        "purpose": "验证工具可以成功获取JPG图像的基本统计信息（尺寸和直方图）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [66449.0, 24135.0, 28989.0, 31987.0, 25351.0, 24979.0, 25093.0, 28098.0, 30404.0, 32103.0, 33634.0, 34111.0, 34061.0, 33373.0, 32463.0, 33134.0, 33960.0, 34462.0, 35118.0, 34764.0, 34467.0, 34037.0, 35288.0, 36703.0, 37421.0, 37711.0, 38083.0, 38862.0, 38937.0, 39134.0, 39363.0, 39281.0, 39151.0, 38616.0, 38342.0, 37450.0, 37351.0, 37107.0, 36286.0, 36033.0, 35227.0, 34519.0, 33534.0, 32225.0, 31377.0, 30946.0, 31134.0, 31265.0, 31628.0, 32517.0, 32672.0, 32660.0, 32572.0, 32711.0, 31900.0, 31975.0, 31818.0, 31995.0, 31707.0, 31601.0, 31842.0, 31695.0, 31413.0, 31280.0, 31320.0, 31127.0, 30985.0, 30407.0, 30445.0, 30446.0, 30051.0, 29870.0, 29379.0, 28556.0, 27915.0, 27562.0, 27367.0, 26848.0, 26997.0, 26958.0, 26838.0, 27237.0, 26879.0, 26981.0, 26312.0, 25951.0, 25730.0, 25728.0, 25690.0, 25379.0, 24663.0, 24807.0, 24633.0, 23987.0, 23995.0, 24198.0, 23919.0, 23176.0, 23304.0, 23198.0, 23163.0, 22764.0, 22716.0, 22751.0, 22473.0, 22280.0, 22037.0, 22105.0, 21863.0, 21430.0, 21257.0, 21438.0, 21238.0, 21043.0, 20819.0, 20565.0, 20231.0, 20231.0, 20370.0, 19970.0, 19967.0, 19767.0, 19719.0, 19104.0, 18888.0, 18938.0, 18643.0, 18716.0, 18379.0, 18273.0, 17961.0, 17833.0, 17936.0, 17594.0, 17854.0, 17654.0, 17954.0, 18134.0, 17955.0, 18329.0, 17865.0, 18136.0, 18077.0, 18371.0, 18249.0, 18573.0, 18324.0, 18385.0, 18067.0, 17833.0, 17330.0, 17085.0, 16840.0, 16546.0, 16621.0, 16979.0, 17084.0, 17207.0, 17198.0, 17072.0, 16604.0, 16218...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2352字符，剩余852字符"
        },
        "execution_time": 0.0645451545715332,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Stats for PNG",
        "purpose": "验证工具可以成功获取PNG图像的基本统计信息（尺寸和直方图）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003520488739013672,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats with Non-Existent Input Path",
        "purpose": "验证工具在输入文件不存在时能否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.004005908966064453,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats for Non-Image File",
        "purpose": "验证工具是否能正确处理非图像文件的尝试分析",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Input Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats with Special Characters in Input Path",
        "purpose": "验证工具是否支持包含特殊字符的输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$.txt\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Very Long File Path",
        "purpose": "验证工具是否能处理超长文件路径作为输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.docx\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats for Empty File",
        "purpose": "验证工具是否能正确处理空文件的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_file.txt\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize Valid Dimensions",
        "purpose": "验证工具可以成功将图像调整为指定的有效尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.06459307670593262,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image with Non-Existent Input Path",
        "purpose": "验证工具在输入文件不存在时抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.012325763702392578,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Invalid Width",
        "purpose": "验证工具是否能正确处理宽度非正整数的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": -100,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=-100, height=600\"}"
        },
        "execution_time": 0.004004478454589844,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Invalid Height",
        "purpose": "验证工具是否能正确处理高度非正整数的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 0
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=800, height=0\"}"
        },
        "execution_time": 0.006886482238769531,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image to Very Large Dimensions",
        "purpose": "验证工具是否能处理非常大的宽高值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "width": 99999,
          "height": 99999
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\core\\\\src\\\\alloc.cpp:73: error: (-4:Insufficient memory) Failed to allocate 29999400003 bytes in function 'cv::OutOfMemoryError'\\n\"}"
        },
        "execution_time": 0.05566239356994629,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Image Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico",
          "width": 300,
          "height": 300
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.009895086288452148,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Special Characters in Image Path",
        "purpose": "验证工具是否支持包含特殊字符的输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#$.png",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.048986196517944336,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Non-Image File",
        "purpose": "验证工具是否能正确处理非图像文件的尝试调整大小",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.013000726699829102,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Image Crop Valid Parameters",
        "purpose": "验证工具可以使用有效参数成功裁剪图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.05700278282165527,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image with Zero X and Y Coordinates",
        "purpose": "验证工具是否能处理X和Y为0的裁剪操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 0,
          "y": 0,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.01101064682006836,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image with Maximum Possible Dimensions",
        "purpose": "验证工具是否能处理接近图像尺寸的裁剪操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot.png",
          "x": 50,
          "y": 50,
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.032289981842041016,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image with Special Characters in Output Path",
        "purpose": "验证工具是否支持输出路径包含特殊字符",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit.png",
          "x": 20,
          "y": 20,
          "width": 150,
          "height": 150
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.006006002426147461,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Crop with Negative X Coordinate",
        "purpose": "验证工具是否能正确处理负的X坐标输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": -10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Coordinates cannot be negative. Received: x=-10, y=10\"}"
        },
        "execution_time": 0.005992889404296875,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Crop with Zero Width or Height",
        "purpose": "验证工具是否能正确处理宽度或高度为0的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "x": 10,
          "y": 10,
          "width": 0,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=100\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Path Traversal in Image Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.007001638412475586,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Crop Non-Image File",
        "purpose": "验证工具是否能正确处理非图像文件的裁剪尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.003998517990112305,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Filter Application - Gaussian Blur",
        "purpose": "验证工具可以成功应用高斯模糊滤波器到图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.11149358749389648,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Filter Application - Median Blur",
        "purpose": "验证工具可以成功应用中值模糊滤波器到图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.014521360397338867,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter with Invalid Filter Type",
        "purpose": "验证工具在不支持的滤波器类型时能否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "invalid_filter",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Unsupported filter type 'invalid_filter'. Supported filters: ['gaussian', 'median']\"}"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Invalid Kernel Size",
        "purpose": "验证工具在无效的kernel_size（偶数）时能否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"error\": \"Kernel size should be odd for OpenCV filters. Received: 4\"}"
        },
        "execution_time": 0.007520437240600586,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Non-Existent Input Image",
        "purpose": "验证工具在输入图像文件不存在时能否抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.00900125503540039,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter to Non-Image File",
        "purpose": "验证工具是否能正确处理尝试对非图像文件应用滤波器的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.005997896194458008,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Path Traversal in Image Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.0045108795166015625,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter with Maximum Kernel Size",
        "purpose": "验证工具是否能处理最大允许的kernel_size（假设为45）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot.png",
          "filter_type": "gaussian",
          "kernel_size": 45
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.06305956840515137,
        "is_functional_test": true
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection with Valid Image",
        "purpose": "验证工具可以成功对有效的JPG图像执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.10316753387451172,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on PNG Image",
        "purpose": "验证工具可以处理PNG格式图像并执行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\icon_technology_circuit.png",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\icon_technology_circuit.png\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Non-Existent Input Path",
        "purpose": "验证工具在输入图像文件不存在时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Invalid Threshold Values",
        "purpose": "验证工具是否能处理无效的阈值参数（如负数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold1": -10.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.018291234970092773,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Input Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.00495457649230957,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Special Characters in Image Path",
        "purpose": "验证工具是否支持包含特殊字符的输入图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#$.png",
          "threshold1": 75.0,
          "threshold2": 125.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_@#$.png\"}"
        },
        "execution_time": 0.009003400802612305,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Very Long File Path",
        "purpose": "验证工具是否能处理超长文件路径作为输入图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.png\"}"
        },
        "execution_time": 0.0040073394775390625,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Thresholds at Boundary Values",
        "purpose": "验证工具是否能处理边界阈值，例如最小和最大浮点值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot.png",
          "threshold1": 0.0,
          "threshold2": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot.png\"}"
        },
        "execution_time": 0.005497932434082031,
        "is_functional_test": true
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Thresholding on Grayscale JPG",
        "purpose": "验证工具可以成功对JPG格式的灰度图像应用阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.0773477554321289,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Thresholding on Grayscale PNG",
        "purpose": "验证工具可以成功对PNG格式的灰度图像应用阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with Zero Threshold Value",
        "purpose": "验证工具在阈值为0时能否正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold_value": 0.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.013661623001098633,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with Max Threshold Value (255)",
        "purpose": "验证工具在最大阈值（255）下能否正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 255.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.06976628303527832,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold with Custom Max Value",
        "purpose": "验证工具是否支持自定义最大输出值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg",
          "threshold_value": 127.0,
          "max_value": 100.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.010000228881835938,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt Path Traversal in Image Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.00299835205078125,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Existent Input Image",
        "purpose": "验证工具在输入图像文件不存在时能否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Threshold Value Below Range (-1)",
        "purpose": "验证工具是否能正确处理低于允许范围的阈值",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": -1.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.06705141067504883,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection on Valid Binary Image",
        "purpose": "验证工具能够成功在有效的二值图像中检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 714]], [[1079, 714]], [[1079, 0]]]]}"
        },
        "execution_time": 0.009355783462524414,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Non-Existent Input Path",
        "purpose": "验证工具在输入文件不存在时能否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.007006168365478516,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Contour Detection on Non-Image File",
        "purpose": "验证工具是否能正确处理非图像文件的尝试检测轮廓",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.0039942264556884766,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Input Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection with Special Characters in Input Path",
        "purpose": "验证工具是否支持包含特殊字符的输入路径用于轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$.jpg\"}"
        },
        "execution_time": 0.005999088287353516,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection for Very Long File Path",
        "purpose": "验证工具是否能处理超长文件路径作为输入进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.jpg\"}"
        },
        "execution_time": 0.004002809524536133,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection on Empty File",
        "purpose": "验证工具是否能正确处理空文件的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_file.txt\"}"
        },
        "execution_time": 0.0050067901611328125,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection on Invalid Binary Image",
        "purpose": "验证工具是否能处理无效的二值图像（如彩色图像）进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.06135058403015137,
        "is_functional_test": true
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection in Valid Image",
        "purpose": "验证工具可以成功识别并分类图像中的简单几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 714]], [[1079, 714]], [[1079, 0]]]}]}"
        },
        "execution_time": 0.011006355285644531,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with Non-Existent Input Path",
        "purpose": "验证工具在输入文件不存在时能否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection with Invalid Image Format",
        "purpose": "验证工具是否能正确处理非图像文件的尝试识别",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.004998922348022461,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt Traversal Attack in Input Path",
        "purpose": "验证工具是否安全地处理路径遍历尝试作为输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\app.ico\"}"
        },
        "execution_time": 0.0060079097747802734,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection with Special Characters in Input Path",
        "purpose": "验证工具是否支持包含特殊字符的输入路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special_@#$.jpg\"}"
        },
        "execution_time": 0.005997657775878906,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection for Very Long File Path",
        "purpose": "验证工具是否能处理超长文件路径作为输入",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_new.jpg\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection for Empty File",
        "purpose": "验证工具是否能正确处理空文件的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_file.txt\"}"
        },
        "execution_time": 0.005999565124511719,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection with Corrupted Image File",
        "purpose": "验证工具是否能正确处理损坏的图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\corrupted_image.jpg\"}"
        },
        "execution_time": 0.004002094268798828,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}