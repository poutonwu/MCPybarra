{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_outlook_email_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_outlook_email_manager/refined/server.py",
  "timestamp": "2025-07-12T20:36:24.699791",
  "tools": [
    {
      "name": "list_folders",
      "description": "Lists all available Outlook email folders.\n\n    Returns:\n        A JSON string containing a list of folder names.\n\n    Example:\n        list_folders()\n        Output: [\"Inbox\", \"Sent Items\", \"CustomFolder1\"]\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_foldersArguments",
        "type": "object"
      }
    },
    {
      "name": "list_recent_emails",
      "description": "Fetches the titles of emails received within a specified number of days.\n\n    Args:\n        days: Number of days to look back for emails.\n        folder_name: Name of the folder to filter emails (optional).\n\n    Returns:\n        A JSON string containing a list of email titles.\n\n    Example:\n        list_recent_emails(7, \"Inbox\")\n        Output: [\"Meeting Reminder\", \"Invoice Due\"]\n    ",
      "args_schema": {
        "properties": {
          "days": {
            "title": "Days",
            "type": "integer"
          },
          "folder_name": {
            "default": "Inbox",
            "title": "Folder Name",
            "type": "string"
          }
        },
        "required": [
          "days"
        ],
        "title": "list_recent_emailsArguments",
        "type": "object"
      }
    },
    {
      "name": "search_emails",
      "description": "Searches for emails within a specified time range and folder, filtering by sender or keyword.\n\n    Args:\n        start_date: Start date for the search in \"YYYY-MM-DD\" format.\n        end_date: End date for the search in \"YYYY-MM-DD\" format.\n        folder_name: Name of the folder to search in.\n        filter_by: Filter criteria, either by sender's email or keyword.\n\n    Returns:\n        A JSON string containing a list of email titles matching the search criteria.\n\n    Example:\n        search_emails(\"2023-01-01\", \"2023-01-31\", \"Inbox\", \"john.doe@example.com\")\n        Output: [\"Project Update\", \"Meeting Schedule\"]\n    ",
      "args_schema": {
        "properties": {
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "folder_name": {
            "title": "Folder Name",
            "type": "string"
          },
          "filter_by": {
            "title": "Filter By",
            "type": "string"
          }
        },
        "required": [
          "start_date",
          "end_date",
          "folder_name",
          "filter_by"
        ],
        "title": "search_emailsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_email_by_number",
      "description": "Fetches detailed content and attachments for an email identified by its index.\n\n    Args:\n        email_number: The index number for the email in the cached list.\n\n    Returns:\n        A JSON string containing:\n            - subject: Email subject.\n            - body: Email body content.\n            - attachments: List of attachment file names.\n\n    Example:\n        get_email_by_number(1)\n        Output: {\"subject\": \"Meeting Reminder\", \"body\": \"Details about the meeting...\", \"attachments\": [\"agenda.pdf\"]}\n    ",
      "args_schema": {
        "properties": {
          "email_number": {
            "title": "Email Number",
            "type": "integer"
          }
        },
        "required": [
          "email_number"
        ],
        "title": "get_email_by_numberArguments",
        "type": "object"
      }
    },
    {
      "name": "reply_to_email_by_number",
      "description": "Replies to an email identified by its index and sends the reply content.\n\n    Args:\n        email_number: The index number for the email in the cached list.\n        reply_content: The content of the reply.\n\n    Returns:\n        A JSON string containing a success message.\n\n    Example:\n        reply_to_email_by_number(1, \"Thank you for the update.\")\n        Output: \"Reply sent successfully\"\n    ",
      "args_schema": {
        "properties": {
          "email_number": {
            "title": "Email Number",
            "type": "integer"
          },
          "reply_content": {
            "title": "Reply Content",
            "type": "string"
          }
        },
        "required": [
          "email_number",
          "reply_content"
        ],
        "title": "reply_to_email_by_numberArguments",
        "type": "object"
      }
    },
    {
      "name": "compose_email",
      "description": "Composes and sends a new email.\n\n    Args:\n        subject: Subject of the email.\n        body: Body content of the email.\n        recipients: List of recipient email addresses.\n        cc: List of CC email addresses (optional).\n\n    Returns:\n        A JSON string containing a success message.\n\n    Example:\n        compose_email(\"Meeting Reminder\", \"Details about the meeting...\", [\"john.doe@example.com\"], [\"jane.doe@example.com\"])\n        Output: \"Email sent successfully\"\n    ",
      "args_schema": {
        "properties": {
          "subject": {
            "title": "Subject",
            "type": "string"
          },
          "body": {
            "title": "Body",
            "type": "string"
          },
          "recipients": {
            "items": {},
            "title": "Recipients",
            "type": "array"
          },
          "cc": {
            "default": [],
            "items": {},
            "title": "Cc",
            "type": "array"
          }
        },
        "required": [
          "subject",
          "body",
          "recipients"
        ],
        "title": "compose_emailArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "list_folders": [
      {
        "case_name": "Basic Folder Listing",
        "purpose": "验证 list_folders 工具能够正确列出 Outlook 中的邮件文件夹",
        "args": {},
        "response": {
          "result": "[\"1291980381@qq.com\", \"zhihutangjiang@126.com\", \"outformcptest@outlook.com\"]"
        },
        "execution_time": 0.03344559669494629,
        "is_functional_test": true
      }
    ],
    "list_recent_emails": [
      {
        "case_name": "Basic Recent Emails Fetch",
        "purpose": "验证 list_recent_emails 工具在指定天数内正确获取最近邮件标题（使用默认文件夹 'Inbox'）",
        "args": {
          "days": 7
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.018999576568603516,
        "is_functional_test": true
      },
      {
        "case_name": "Recent Emails From Custom Folder",
        "purpose": "验证 list_recent_emails 工具可以指定文件夹并获取该文件夹中最近邮件标题",
        "args": {
          "days": 3,
          "folder_name": "Work"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Work' not found.\"}"
        },
        "execution_time": 0.021757125854492188,
        "is_functional_test": true
      },
      {
        "case_name": "Zero Days Input",
        "purpose": "测试工具对 days 参数为 0 的边界处理情况",
        "args": {
          "days": 0
        },
        "response": {
          "result": "{\"error\": \"Days must be a positive integer.\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Days Input",
        "purpose": "测试工具对无效负数 days 参数的错误处理能力",
        "args": {
          "days": -5
        },
        "response": {
          "result": "{\"error\": \"Days must be a positive integer.\"}"
        },
        "execution_time": 0.008002281188964844,
        "is_functional_test": false
      },
      {
        "case_name": "Non-existent Folder",
        "purpose": "测试工具对不存在的 folder_name 参数的错误处理能力",
        "args": {
          "days": 7,
          "folder_name": "InvalidFolder"
        },
        "response": {
          "result": "{\"error\": \"Folder 'InvalidFolder' not found.\"}"
        },
        "execution_time": 0.01800680160522461,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Folder Name",
        "purpose": "测试工具对包含特殊字符的 folder_name 参数的处理能力",
        "args": {
          "days": 7,
          "folder_name": "Test@#Folder"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Test@#Folder' not found.\"}"
        },
        "execution_time": 0.014006376266479492,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Integer Days",
        "purpose": "测试工具对最大整数值作为 days 参数的处理能力",
        "args": {
          "days": 2147483647
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.019994735717773438,
        "is_functional_test": false
      }
    ],
    "search_emails": [
      {
        "case_name": "Basic Email Search By Sender",
        "purpose": "验证 search_emails 工具能基于发送者在指定时间范围内搜索邮件标题",
        "args": {
          "start_date": "2023-01-01",
          "end_date": "2023-01-31",
          "folder_name": "Inbox",
          "filter_by": "john.doe@example.com"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.015079736709594727,
        "is_functional_test": true
      },
      {
        "case_name": "Email Search With Keyword In Inbox",
        "purpose": "验证 search_emails 工具能基于关键词在默认文件夹 'Inbox' 中搜索邮件标题",
        "args": {
          "start_date": "2023-02-01",
          "end_date": "2023-02-28",
          "folder_name": "Inbox",
          "filter_by": "Project"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.019159555435180664,
        "is_functional_test": true
      },
      {
        "case_name": "Search In Non-Existent Folder",
        "purpose": "测试工具对不存在的 folder_name 参数的错误处理能力",
        "args": {
          "start_date": "2023-03-01",
          "end_date": "2023-03-31",
          "folder_name": "InvalidFolder",
          "filter_by": "report"
        },
        "response": {
          "result": "{\"error\": \"Folder 'InvalidFolder' not found.\"}"
        },
        "execution_time": 0.015845775604248047,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Filter Input",
        "purpose": "测试 filter_by 参数为空时的参数验证失败处理",
        "args": {
          "start_date": "2023-04-01",
          "end_date": "2023-04-30",
          "folder_name": "Inbox",
          "filter_by": ""
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.01350855827331543,
        "is_functional_test": false
      },
      {
        "case_name": "Start Date After End Date",
        "purpose": "测试 start_date 晚于 end_date 的边界情况",
        "args": {
          "start_date": "2023-05-15",
          "end_date": "2023-05-01",
          "folder_name": "Inbox",
          "filter_by": "meeting"
        },
        "response": {
          "result": "{\"error\": \"Start date must be before end date.\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters In Filter",
        "purpose": "测试 filter_by 包含特殊字符时的处理能力",
        "args": {
          "start_date": "2023-06-01",
          "end_date": "2023-06-30",
          "folder_name": "Inbox",
          "filter_by": "test@#keyword"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.01500082015991211,
        "is_functional_test": false
      },
      {
        "case_name": "Future Date Range",
        "purpose": "测试未来日期范围下的行为，确保不会导致异常",
        "args": {
          "start_date": "2099-01-01",
          "end_date": "2099-12-31",
          "folder_name": "Inbox",
          "filter_by": "reminder"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.015828609466552734,
        "is_functional_test": false
      },
      {
        "case_name": "Same Start And End Date",
        "purpose": "测试 start_date 与 end_date 相同的边界条件",
        "args": {
          "start_date": "2023-07-10",
          "end_date": "2023-07-10",
          "folder_name": "Inbox",
          "filter_by": "daily"
        },
        "response": {
          "result": "{\"error\": \"Folder 'Inbox' not found.\"}"
        },
        "execution_time": 0.014626741409301758,
        "is_functional_test": false
      }
    ],
    "get_email_by_number": [
      {
        "case_name": "Basic Email Fetch by Number",
        "purpose": "验证 get_email_by_number 工具能够根据索引号正确获取指定邮件的详细内容和附件",
        "args": {
          "email_number": 1
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.00900721549987793,
        "is_functional_test": true
      },
      {
        "case_name": "Fetch Email with Maximum Integer Index",
        "purpose": "测试工具对最大整数值作为 email_number 参数的处理能力",
        "args": {
          "email_number": 2147483647
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.011002779006958008,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Email Number Input",
        "purpose": "测试工具对无效负数 email_number 参数的错误处理能力",
        "args": {
          "email_number": -1
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.012005329132080078,
        "is_functional_test": false
      },
      {
        "case_name": "Zero as Email Number",
        "purpose": "测试工具对 email_number 为 0 的边界处理情况",
        "args": {
          "email_number": 0
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.00851583480834961,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Email Index",
        "purpose": "测试工具对不存在的 email_number 的错误处理能力",
        "args": {
          "email_number": 9999
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.00481724739074707,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Email Number",
        "purpose": "测试工具对包含特殊字符的 email_number 参数的处理能力（例如字符串）",
        "args": {
          "email_number": "abc"
        },
        "response": {
          "error": "ToolException: Error executing tool get_email_by_number: 1 validation error for get_email_by_numberArguments\nemail_number\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='abc', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Large Email Index Value",
        "purpose": "验证工具在处理较大但合理的 email_number 输入时的行为",
        "args": {
          "email_number": 100000
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.006997108459472656,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - SQL Injection Attempt",
        "purpose": "测试工具是否能安全地处理包含潜在SQL注入攻击的 email_number 参数",
        "args": {
          "email_number": "1; DROP TABLE emails;"
        },
        "response": {
          "error": "ToolException: Error executing tool get_email_by_number: 1 validation error for get_email_by_numberArguments\nemail_number\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='1; DROP TABLE emails;', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.004567146301269531,
        "is_functional_test": false
      }
    ],
    "reply_to_email_by_number": [
      {
        "case_name": "Basic Reply to Email",
        "purpose": "验证 reply_to_email_by_number 工具能够根据索引号成功回复邮件，使用基本正向测试场景。",
        "args": {
          "email_number": 1,
          "reply_content": "Thank you for the update."
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": true
      },
      {
        "case_name": "Reply to First Email in List",
        "purpose": "验证工具可以正确回复列表中第一个邮件（边界值为最小有效索引）。",
        "args": {
          "email_number": 0,
          "reply_content": "This is a test reply to the first email."
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": true
      },
      {
        "case_name": "Reply with Empty Content",
        "purpose": "测试工具对空内容的处理能力，确保系统能接受空字符串作为合法内容。",
        "args": {
          "email_number": 2,
          "reply_content": ""
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.010524988174438477,
        "is_functional_test": false
      },
      {
        "case_name": "Reply to Invalid Email Index",
        "purpose": "测试工具对无效邮件索引号的错误处理能力（如负数或超出范围的数字）。",
        "args": {
          "email_number": -1,
          "reply_content": "This should not be sent."
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.0049953460693359375,
        "is_functional_test": false
      },
      {
        "case_name": "Reply with Special Characters in Content",
        "purpose": "测试工具是否支持在回复内容中包含特殊字符。",
        "args": {
          "email_number": 3,
          "reply_content": "Special characters: @#&*(){}[]<>?/\\\"'"
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.009006261825561523,
        "is_functional_test": true
      },
      {
        "case_name": "Reply to Maximum Valid Index",
        "purpose": "测试工具对最大有效邮件索引的处理能力（假设缓存中有大量邮件）。",
        "args": {
          "email_number": 2147483647,
          "reply_content": "This is a test reply to max index."
        },
        "response": {
          "result": "{\"error\": \"No emails are cached. Please run 'list_recent_emails' first.\"}"
        },
        "execution_time": 0.0048677921295166016,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Non-Integer Email Number",
        "purpose": "测试工具对非整数类型 email_number 参数的处理能力。",
        "args": {
          "email_number": "one",
          "reply_content": "This should fail due to invalid number format."
        },
        "response": {
          "error": "ToolException: Error executing tool reply_to_email_by_number: 1 validation error for reply_to_email_by_numberArguments\nemail_number\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='one', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.0060117244720458984,
        "is_functional_test": false
      }
    ],
    "compose_email": [
      {
        "case_name": "Basic Email Composition and Send",
        "purpose": "验证 compose_email 工具可以使用基本参数发送一封邮件",
        "args": {
          "subject": "Test Email",
          "body": "This is a test email body.",
          "recipients": [
            "test@example.com"
          ]
        },
        "response": {
          "result": "\"Email sent successfully\""
        },
        "execution_time": 28.747259378433228,
        "is_functional_test": true
      },
      {
        "case_name": "Email with CC Field",
        "purpose": "验证 compose_email 工具在提供 CC 地址时是否能正确处理",
        "args": {
          "subject": "Email with CC",
          "body": "This email includes a CC recipient.",
          "recipients": [
            "main@example.com"
          ],
          "cc": [
            "cc@example.com"
          ]
        },
        "response": {
          "result": "\"Email sent successfully\""
        },
        "execution_time": 7.086293458938599,
        "is_functional_test": true
      },
      {
        "case_name": "Empty CC Field",
        "purpose": "验证当 CC 字段为空时工具的默认行为（应使用默认空数组）",
        "args": {
          "subject": "Email with Empty CC",
          "body": "Testing empty CC field.",
          "recipients": [
            "user@example.com"
          ],
          "cc": []
        },
        "response": {
          "result": "{\"error\": \"(-2147467260, '\\u5df2\\u4e2d\\u6b62\\u64cd\\u4f5c', None, None)\"}"
        },
        "execution_time": 1.3420648574829102,
        "is_functional_test": true
      },
      {
        "case_name": "Long Subject Line",
        "purpose": "测试工具对长主题行的处理能力",
        "args": {
          "subject": "ThisIsAVeryLongSubjectLineThatExceedsTheTypicalLengthForEmailSubjectsAndMayCauseIssuesDuringTransmission",
          "body": "Testing long subject line handling.",
          "recipients": [
            "longsubject@example.com"
          ]
        },
        "response": {
          "result": "{\"error\": \"(-2147467260, '\\u5df2\\u4e2d\\u6b62\\u64cd\\u4f5c', None, None)\"}"
        },
        "execution_time": 0.18478751182556152,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Subject",
        "purpose": "测试工具能否处理包含特殊字符的邮件主题",
        "args": {
          "subject": "Test@#&*()_+=- Special Subject",
          "body": "Testing special characters in subject.",
          "recipients": [
            "specialsubject@example.com"
          ]
        },
        "response": {
          "result": "{\"error\": \"(-2147467260, '\\u5df2\\u4e2d\\u6b62\\u64cd\\u4f5c', None, None)\"}"
        },
        "execution_time": 1.8708109855651855,
        "is_functional_test": false
      },
      {
        "case_name": "Missing Recipient List",
        "purpose": "测试工具是否能够检测并拒绝缺少收件人列表的情况",
        "args": {
          "subject": "No Recipients",
          "body": "This email should fail due to missing recipients."
        },
        "response": {
          "error": "ToolException: Error executing tool compose_email: 1 validation error for compose_emailArguments\nrecipients\n  Field required [type=missing, input_value={'subject': 'No Recipient...to missing recipients.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0059359073638916016,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Email Format",
        "purpose": "测试工具对无效格式邮箱地址的容错能力",
        "args": {
          "subject": "Invalid Email Address Test",
          "body": "Testing invalid email address format.",
          "recipients": [
            "invalid-email"
          ]
        },
        "response": {
          "result": "{\"error\": \"(-2147467260, '\\u5df2\\u4e2d\\u6b62\\u64cd\\u4f5c', None, None)\"}"
        },
        "execution_time": 0.30316853523254395,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Recipients",
        "purpose": "验证工具支持多个收件人地址",
        "args": {
          "subject": "Multiple Recipients Test",
          "body": "This email is sent to multiple recipients.",
          "recipients": [
            "user1@example.com",
            "user2@example.com",
            "user3@example.com"
          ]
        },
        "response": {
          "result": "{\"error\": \"(-2147467260, '\\u5df2\\u4e2d\\u6b62\\u64cd\\u4f5c', None, None)\"}"
        },
        "execution_time": 0.39571118354797363,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 39
}