{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_ssh_remote_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_ssh_remote_manager/refined/server.py",
  "timestamp": "2025-07-12T20:35:41.881662",
  "tools": [
    {
      "name": "connect",
      "description": "\n    Establishes an SSH connection to a remote server.\n\n    Args:\n        hostname (str): The remote server's hostname or IP address.Defaults to 10.70.4.146.\n        username (str): The username for authentication.Defaults to pengbocheng.\n        password (str, optional): The password for authentication (used if private_key_path is not provided).\n        private_key_path (str, optional): The file path to the private key for key-based authentication.\n        port (int, optional): The port number for the SSH connection. Defaults to 26002.\n\n    Returns:\n        str: A unique identifier for the established SSH session in JSON format.\n\n    Raises:\n        AuthenticationException: If authentication fails.\n        SSHException: If the connection fails.\n    ",
      "args_schema": {
        "properties": {
          "hostname": {
            "default": "10.70.4.146",
            "title": "Hostname",
            "type": "string"
          },
          "username": {
            "default": "pengbocheng",
            "title": "Username",
            "type": "string"
          },
          "password": {
            "default": "123456",
            "title": "Password",
            "type": "string"
          },
          "private_key_path": {
            "default": null,
            "title": "Private Key Path",
            "type": "string"
          },
          "port": {
            "default": 26002,
            "title": "Port",
            "type": "integer"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "\n    Closes an active SSH session and releases its resources.\n\n    Args:\n        session_id (str): The unique identifier of the SSH session to be terminated.\n\n    Returns:\n        str: A confirmation message indicating the session was successfully terminated in JSON format.\n\n    Raises:\n        ValueError: If the session ID is invalid.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "\n    Lists all currently active SSH sessions.\n\n    Returns:\n        str: A JSON string containing all active sessions.\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "\n    Executes a command on a specified SSH session.\n\n    Args:\n        session_id (str): The unique identifier of the SSH session.\n        command (str): The command to be executed on the remote server.\n        stdin (str, optional): Data to be passed to the command's standard input.\n        timeout (int, optional): The maximum time (in seconds) to wait for the command's execution.\n\n    Returns:\n        str: A JSON string containing the command's output, error, and exit code.\n\n    Raises:\n        ValueError: If the session ID is invalid.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "default": null,
            "title": "Stdin",
            "type": "string"
          },
          "timeout": {
            "default": null,
            "title": "Timeout",
            "type": "integer"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "\n    Uploads a local file to a specified path on the remote server.\n\n    Args:\n        session_id (str): The unique identifier of the SSH session.\n        local_path (str): The file path of the local file to be uploaded.\n        remote_path (str): The destination file path on the remote server.\n\n    Returns:\n        str: A confirmation message indicating the file was successfully uploaded in JSON format.\n\n    Raises:\n        ValueError: If the session ID is invalid.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "\n    Downloads a file from the remote server to a specified local path.\n\n    Args:\n        session_id (str): The unique identifier of the SSH session.\n        remote_path (str): The file path on the remote server to be downloaded.\n        local_path (str): The destination file path on the local machine.\n\n    Returns:\n        str: A confirmation message indicating the file was successfully downloaded in JSON format.\n\n    Raises:\n        ValueError: If the session ID is invalid.\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "Basic SSH Connection with Default Parameters",
        "purpose": "验证使用默认参数能否成功建立SSH连接",
        "args": {
          "hostname": "10.70.4.146",
          "username": "pengbocheng",
          "port": 26002
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.01521110534668,
        "is_functional_test": true
      },
      {
        "case_name": "SSH Connection with Custom Hostname and Username",
        "purpose": "验证使用自定义主机名和用户名的SSH连接是否正常",
        "args": {
          "hostname": "example.com",
          "username": "testuser",
          "password": "securepassword"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.019285917282104,
        "is_functional_test": true
      },
      {
        "case_name": "SSH Connection Using Private Key Authentication",
        "purpose": "验证使用私钥认证方式的SSH连接是否成功",
        "args": {
          "hostname": "10.70.4.146",
          "username": "pengbocheng",
          "private_key_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.00929880142212,
        "is_functional_test": true
      },
      {
        "case_name": "SSH Connection with Non-default Port",
        "purpose": "验证使用非默认端口（如22）的SSH连接是否成功",
        "args": {
          "hostname": "10.70.4.146",
          "username": "pengbocheng",
          "port": 22
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.010416269302368,
        "is_functional_test": true
      },
      {
        "case_name": "Authentication Failure Due to Wrong Password",
        "purpose": "验证错误密码是否能正确抛出异常",
        "args": {
          "hostname": "10.70.4.146",
          "username": "pengbocheng",
          "password": "wrongpassword"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.01651644706726,
        "is_functional_test": false
      },
      {
        "case_name": "Connection Failure Due to Invalid Hostname",
        "purpose": "验证无效主机名是否能正确抛出连接异常",
        "args": {
          "hostname": "invalid.hostname.example",
          "username": "pengbocheng",
          "password": "123456"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: [Errno 11001] getaddrinfo failed\"}"
        },
        "execution_time": 0.11359214782714844,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Empty Private Key Path",
        "purpose": "验证空字符串作为私钥路径时的安全处理机制",
        "args": {
          "hostname": "10.70.4.146",
          "username": "pengbocheng",
          "private_key_path": ""
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: timed out\"}"
        },
        "execution_time": 10.011806011199951,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Long Hostname",
        "purpose": "验证超长主机名是否能被正确处理或失败而不崩溃",
        "args": {
          "hostname": "a.really.long.hostname.with.lots.of.characters.and.dots.example.org",
          "username": "pengbocheng",
          "password": "123456"
        },
        "response": {
          "result": "{\"error\": \"Unexpected error\", \"details\": \"An unexpected error occurred: [Errno 11001] getaddrinfo failed\"}"
        },
        "execution_time": 0.4032258987426758,
        "is_functional_test": false
      }
    ],
    "list_sessions": [
      {
        "case_name": "Basic List Sessions Test",
        "purpose": "验证能否成功列出当前所有活动的SSH会话（默认情况）",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions After Successful SSH Connection",
        "purpose": "验证在建立有效SSH连接后，list_sessions是否能正确显示该会话",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions During Concurrent Connections",
        "purpose": "验证多个并发SSH连接存在时，list_sessions是否能正确列出所有会话",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions with No Active Connections",
        "purpose": "验证没有活动SSH连接时，list_sessions是否返回空列表",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.00484919548034668,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Unauthorized Access to Session List",
        "purpose": "验证未授权用户尝试访问会话列表时的安全控制机制",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - System Resource Unavailable",
        "purpose": "验证系统资源不可用时，list_sessions是否能优雅处理错误",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.0072481632232666016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Maximum Number of Sessions",
        "purpose": "验证达到最大SSH会话数限制时，list_sessions的行为是否符合预期",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.0036499500274658203,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Zero-Length Session Data",
        "purpose": "验证当会话数据为空时，list_sessions是否能正确处理",
        "args": {},
        "response": {
          "result": "{\"sessions\": []}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": false
      }
    ],
    "execute": [
      {
        "case_name": "Basic Command Execution on Valid Session",
        "purpose": "验证在有效的SSH会话中执行基本命令（如 'ls'）是否成功返回结果",
        "args": {
          "session_id": "valid_session_123",
          "command": "ls"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Command Execution with Standard Input",
        "purpose": "验证带标准输入的命令能否正确执行，例如向脚本传递输入",
        "args": {
          "session_id": "valid_session_123",
          "command": "cat",
          "stdin": "test input data"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": true
      },
      {
        "case_name": "Command Execution with Timeout Limit",
        "purpose": "验证设置超时限制后长时间运行的命令是否会如期终止",
        "args": {
          "session_id": "valid_session_123",
          "command": "sleep 5",
          "timeout": 3
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": true
      },
      {
        "case_name": "Execution Failure Due to Invalid Session ID",
        "purpose": "验证使用无效的 session_id 是否能正确抛出 ValueError 异常",
        "args": {
          "session_id": "invalid_session",
          "command": "ls"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: invalid_session. No active session found.\"}"
        },
        "execution_time": 0.003998756408691406,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempting Malicious Command Injection",
        "purpose": "验证是否对潜在的恶意命令注入（如 rm -rf /）进行有效阻止或拒绝执行",
        "args": {
          "session_id": "valid_session_123",
          "command": "rm -rf /tmp/test"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.004003763198852539,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Command Not Found",
        "purpose": "验证执行不存在的命令时是否能正确捕获错误并返回非零退出码",
        "args": {
          "session_id": "valid_session_123",
          "command": "nonexistent_command"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.005990028381347656,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Command",
        "purpose": "验证包含特殊字符的命令（如含空格、引号、通配符等）是否能被正确转义和执行",
        "args": {
          "session_id": "valid_session_123",
          "command": "echo \"Hello & World > file.txt\""
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: valid_session_123. No active session found.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      }
    ],
    "upload": [
      {
        "case_name": "Basic File Upload with Valid Session",
        "purpose": "验证使用有效的session_id和合法文件路径能否成功上传文件",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/user/uploaded_test_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.0039975643157958984,
        "is_functional_test": true
      },
      {
        "case_name": "Upload with Invalid Session ID",
        "purpose": "验证使用无效的session_id是否能正确抛出ValueError异常",
        "args": {
          "session_id": "",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/user/uploaded_test_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: . No active session found.\"}"
        },
        "execution_time": 0.005513668060302734,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Non-existent Local File",
        "purpose": "验证尝试上传一个不存在的本地文件时工具的错误处理能力",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt",
          "remote_path": "/home/user/uploaded_missing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.008004903793334961,
        "is_functional_test": false
      },
      {
        "case_name": "Upload to Restricted Remote Path",
        "purpose": "验证尝试上传到受限制的远程路径时的安全控制机制",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/etc/restricted_upload_dir/uploaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Large File",
        "purpose": "验证上传大文件时的行为是否符合预期（边界测试）",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows.docx",
          "remote_path": "/home/user/large_uploaded_file.docx"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.007999181747436523,
        "is_functional_test": true
      },
      {
        "case_name": "Upload File with Special Characters in Remote Path",
        "purpose": "验证包含特殊字符的远程路径是否能被正确处理",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_@#$.txt",
          "remote_path": "/home/user/uploaded_@#$_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.007500886917114258,
        "is_functional_test": true
      },
      {
        "case_name": "Concurrent Uploads from Same Session",
        "purpose": "验证同一会话中多次连续调用upload命令的行为是否正常",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "remote_path": "/home/user/concurrent_upload_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.00799870491027832,
        "is_functional_test": true
      },
      {
        "case_name": "Upload to Non-existent Remote Directory",
        "purpose": "验证目标远程目录不存在时能否自动创建或正确失败",
        "args": {
          "session_id": "abc123xyz",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "remote_path": "/home/user/nonexistent_dir/uploaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123xyz. No active session found.\"}"
        },
        "execution_time": 0.0035729408264160156,
        "is_functional_test": false
      }
    ],
    "download": [
      {
        "case_name": "Basic File Download with Valid Session",
        "purpose": "验证使用有效的会话ID、远程路径和本地路径能否成功下载文件",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.004997968673706055,
        "is_functional_test": true
      },
      {
        "case_name": "Download Fails with Invalid Session ID",
        "purpose": "验证使用无效的会话ID时工具是否抛出ValueError",
        "args": {
          "session_id": "",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: . No active session found.\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "Download Fails Due to Nonexistent Remote File",
        "purpose": "验证远程文件不存在时，工具是否能正确处理错误",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/nonexistent_file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.0040056705474853516,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Path Traversal Attempt in Local Path",
        "purpose": "验证尝试进行路径穿越攻击时的安全处理机制",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.006006479263305664,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Special Characters in Local Path",
        "purpose": "验证包含特殊字符的本地路径是否能被正确处理",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\download_@#$.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.006148815155029297,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - No Write Permission on Local Path",
        "purpose": "验证没有写入权限的本地路径是否能优雅处理错误",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/testfile.txt",
          "local_path": "C:\\Windows\\system32\\downloaded_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": false
      },
      {
        "case_name": "Functional Test - Download Binary File (e.g., Image)",
        "purpose": "验证是否可以成功下载二进制文件（如图片）",
        "args": {
          "session_id": "abc123",
          "remote_path": "/home/pengbocheng/image.png",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_image.png"
        },
        "response": {
          "result": "{\"error\": \"Session error\", \"details\": \"Invalid session ID: abc123. No active session found.\"}"
        },
        "execution_time": 0.008006095886230469,
        "is_functional_test": true
      }
    ],
    "disconnect": [
      {
        "case_name": "Basic Session Termination",
        "purpose": "验证能否使用有效的session_id正常终止一个SSH会话",
        "args": {
          "session_id": "abc123"
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.0059926509857177734,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Invalid Session ID Format",
        "purpose": "验证无效格式的session_id是否被拒绝并抛出ValueError",
        "args": {
          "session_id": ""
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.008525609970092773,
        "is_functional_test": false
      },
      {
        "case_name": "Error Handling - Nonexistent Session ID",
        "purpose": "验证尝试终止不存在的SSH会话时是否能正确处理错误",
        "args": {
          "session_id": "nonexistent_session"
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.007996320724487305,
        "is_functional_test": false
      },
      {
        "case_name": "Functional Test - Terminate Session After Successful Connection",
        "purpose": "验证在成功建立SSH连接后，能否通过返回的session_id终止该会话",
        "args": {
          "session_id": "valid_session_abc123"
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.012007951736450195,
        "is_functional_test": true
      },
      {
        "case_name": "Error Handling - Missing Session ID",
        "purpose": "验证未提供session_id参数时是否抛出异常",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool disconnect: 1 validation error for disconnectArguments\nsession_id\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.008005857467651367,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Special Characters in Session ID",
        "purpose": "验证包含特殊字符的session_id是否能被安全处理",
        "args": {
          "session_id": "session@!#$%^&*()"
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.007997989654541016,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Test - Zero-Length Session ID",
        "purpose": "验证空字符串作为session_id时的行为是否符合预期",
        "args": {
          "session_id": ""
        },
        "response": {
          "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
        },
        "execution_time": 0.010514020919799805,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 45
}