{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_zotero_library_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_zotero_library_manager/refined/server.py",
  "timestamp": "2025-07-12T20:36:51.496635",
  "tools": [
    {
      "name": "get_item_metadata",
      "description": "\n    Fetch detailed metadata of a Zotero item using its unique item key.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A JSON string containing item metadata, such as title, creators, publication year, and other bibliographic details.\n            Example:\n            {\n                \"title\": \"Sample Title\",\n                \"creators\": [\"John Doe\", \"Jane Smith\"],\n                \"year\": 2023,\n                \"publisher\": \"Sample Publisher\",\n                \"DOI\": \"10.1234/sample.doi\"\n            }\n\n    Raises:\n        ValueError: If the item key is invalid.\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_metadataArguments",
        "type": "object"
      }
    },
    {
      "name": "get_item_fulltext",
      "description": "\n    Extract the full text content of a Zotero item. If the item contains a PDF, extract text from the PDF file.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A string containing the extracted full text content of the item.\n            Example: \"This is the extracted full text content of the PDF associated with the Zotero item.\"\n\n    Raises:\n        ValueError: If the item key is invalid or no PDF attachment is found.\n        Exception: If the Zotero API call or PDF extraction fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_fulltextArguments",
        "type": "object"
      }
    },
    {
      "name": "search_items",
      "description": "\n    Search the Zotero library based on specified criteria and return a list of formatted search results.\n\n    Args:\n        title (str, optional): Search by title.\n            Example: \"Sample Title\"\n        creators (str, optional): Search by creators.\n            Example: \"John Doe\"\n        year (int, optional): Search by publication year.\n            Example: 2023\n        fulltext (str, optional): Perform a full-text search.\n            Example: \"Keyword\"\n\n    Returns:\n        str: A JSON string containing a list of dictionaries, each containing metadata for a matching item.\n            Example:\n            [\n                {\n                    \"title\": \"Sample Title\",\n                    \"creators\": [\"John Doe\", \"Jane Smith\"],\n                    \"year\": 2023,\n                    \"DOI\": \"10.1234/sample.doi\"\n                },\n                {\n                    \"title\": \"Another Title\",\n                    \"creators\": [\"Alice Johnson\"],\n                    \"year\": 2022,\n                    \"DOI\": \"10.5678/another.doi\"\n                }\n            ]\n\n    Raises:\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "default": null,
            "title": "Title",
            "type": "string"
          },
          "creators": {
            "default": null,
            "title": "Creators",
            "type": "string"
          },
          "year": {
            "default": null,
            "title": "Year",
            "type": "integer"
          },
          "fulltext": {
            "default": null,
            "title": "Fulltext",
            "type": "string"
          }
        },
        "title": "search_itemsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_items": [
      {
        "case_name": "Search by Title",
        "purpose": "验证通过标题搜索可以正确返回匹配的结果",
        "args": {
          "title": "Sample Title"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 3.7545456886291504,
        "is_functional_test": true
      },
      {
        "case_name": "Search by Creator",
        "purpose": "验证通过作者名搜索可以正确返回匹配的结果",
        "args": {
          "creators": "John Doe"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.5322818756103516,
        "is_functional_test": true
      },
      {
        "case_name": "Search by Year",
        "purpose": "验证通过出版年份搜索可以正确返回匹配的结果",
        "args": {
          "year": 2023
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.9673330783843994,
        "is_functional_test": true
      },
      {
        "case_name": "Fulltext Search",
        "purpose": "验证全文本搜索功能是否正常工作",
        "args": {
          "fulltext": "Keyword"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 1.5584394931793213,
        "is_functional_test": true
      },
      {
        "case_name": "Combined Search with Title and Creator",
        "purpose": "验证同时使用标题和作者作为搜索条件时工具的正确性",
        "args": {
          "title": "Another Title",
          "creators": "Alice Johnson"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.214970350265503,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Returns No Results",
        "purpose": "验证无参数调用工具时返回空结果集",
        "args": {},
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 1.0241577625274658,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Special Characters in Fulltext",
        "purpose": "验证全文本搜索支持特殊字符",
        "args": {
          "fulltext": "@#%&"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 1.0134468078613281,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Year Input Handling",
        "purpose": "验证工具对非法年份输入的处理（如负数）",
        "args": {
          "year": -1
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.0209589004516602,
        "is_functional_test": false
      }
    ],
    "get_item_metadata": [
      {
        "case_name": "Fetch Metadata with Valid Item Key",
        "purpose": "验证使用有效的item_key可以成功获取Zotero条目的元数据",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.008467435836791992,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Invalid Item Key Format",
        "purpose": "验证当提供格式错误的item_key时工具是否抛出ValueError",
        "args": {
          "item_key": "invalid_key_format"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key_format'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.005355358123779297,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key Length Boundary Test - Minimum",
        "purpose": "验证最小合法item_key长度（通常为6字符）",
        "args": {
          "item_key": "ABC12X"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC12X'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.006753206253051758,
        "is_functional_test": true
      },
      {
        "case_name": "Item Key Length Boundary Test - Below Minimum",
        "purpose": "验证小于最小长度的item_key是否被拒绝",
        "args": {
          "item_key": "ABC12"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC12'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.00500798225402832,
        "is_functional_test": false
      },
      {
        "case_name": "Item Key with Special Characters",
        "purpose": "验证item_key支持特殊字符的情况",
        "args": {
          "item_key": "KEY@#$_123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@#$_123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004996061325073242,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证空字符串作为item_key输入时的行为",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Item Key",
        "purpose": "验证使用不存在的item_key是否会正确处理无结果的情况",
        "args": {
          "item_key": "NONEXIST123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXIST123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0037984848022460938,
        "is_functional_test": true
      },
      {
        "case_name": "Null Item Key Input",
        "purpose": "验证null作为item_key输入时的行为",
        "args": {
          "item_key": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_item_metadata: 1 validation error for get_item_metadataArguments\nitem_key\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006510257720947266,
        "is_functional_test": false
      }
    ],
    "get_item_fulltext": [
      {
        "case_name": "Extract Fulltext from Valid PDF Item",
        "purpose": "验证使用有效的item_key可以从关联PDF中提取全文本内容",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Item Without PDF Attachment",
        "purpose": "验证当指定Zotero条目不包含PDF附件时是否抛出ValueError",
        "args": {
          "item_key": "NO_PDF_ITEM"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NO_PDF_ITEM'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Item Key Format Handling",
        "purpose": "验证工具对非法item_key格式的处理（如含小写字母）",
        "args": {
          "item_key": "abc123xy"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'abc123xy'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004668712615966797,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "验证空字符串作为item_key输入时的行为",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.007999897003173828,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Existent Item Key",
        "purpose": "验证使用不存在的item_key是否会正确处理无结果的情况",
        "args": {
          "item_key": "NONEXIST123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NONEXIST123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0039055347442626953,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "验证item_key中包含特殊字符时是否被拒绝",
        "args": {
          "item_key": "KEY@#$_123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@#$_123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.006005287170410156,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Length Valid Item Key",
        "purpose": "验证最小合法item_key长度（8位）",
        "args": {
          "item_key": "ABC12XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to extract full text: \\nCode: 404\\nURL: https://api.zotero.org/users/16026771/items/ABC12XYZ?locale=en-US&format=json&limit=100\\nMethod: GET\\nResponse: Not found\"}"
        },
        "execution_time": 1.6353404521942139,
        "is_functional_test": true
      },
      {
        "case_name": "Null Item Key Input",
        "purpose": "验证null作为item_key输入时的行为",
        "args": {
          "item_key": null
        },
        "response": {
          "error": "ToolException: Error executing tool get_item_fulltext: 1 validation error for get_item_fulltextArguments\nitem_key\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0049991607666015625,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 24
}