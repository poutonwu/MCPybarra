{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_git_repo_manager",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_git_repo_manager/refined/server.py",
  "timestamp": "2025-07-12T20:51:14.406073",
  "tools": [
    {
      "name": "write_to_temp_file",
      "description": "\n    将内容写入指定文件路径。\n\n    Args:\n        file_path: 要写入的文件路径 (必填)。\n        content: 要写入的内容 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        IOError: 如果文件写入失败。\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "file_path",
          "content"
        ],
        "title": "write_to_temp_fileArguments",
        "type": "object"
      }
    },
    {
      "name": "git_init",
      "description": "\n    初始化一个新的Git仓库。\n\n    Args:\n        repo_path: 新仓库的文件路径 (必填)。\n\n    Returns:\n        包含初始化状态的字典，包括仓库路径和初始化成功状态。\n\n    Raises:\n        ValueError: 如果提供的路径无效或已存在。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_initArguments",
        "type": "object"
      }
    },
    {
      "name": "git_status",
      "description": "\n    获取仓库当前状态。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含仓库状态信息的字典，如当前分支、修改文件列表等。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_statusArguments",
        "type": "object"
      }
    },
    {
      "name": "git_add",
      "description": "\n    将文件添加到暂存区。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要添加的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_addArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_unstaged",
      "description": "\n    查看未暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含未暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_unstagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_staged",
      "description": "\n    查看已暂存的差异。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含已暂存差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_stagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff",
      "description": "\n    比较分支或提交。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit1: 第一个比较的提交哈希或分支名 (必填)。\n        commit2: 第二个比较的提交哈希或分支名 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含两个提交之间差异内容的字符串。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit1": {
            "title": "Commit1",
            "type": "string"
          },
          "commit2": {
            "title": "Commit2",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit1",
          "commit2"
        ],
        "title": "git_diffArguments",
        "type": "object"
      }
    },
    {
      "name": "git_commit",
      "description": "\n    提交更改。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        message: 提交信息 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交结果的字典，包括提交哈希和消息。\n\n    Raises:\n        ValueError: 如果提供的路径或提交信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "title": "git_commitArguments",
        "type": "object"
      }
    },
    {
      "name": "git_reset",
      "description": "\n    取消暂存文件。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        file_path: 要取消暂存的文件路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或文件信息无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_resetArguments",
        "type": "object"
      }
    },
    {
      "name": "git_log",
      "description": "\n    查看提交历史。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交历史的列表，每个条目包含提交哈希、作者、日期和消息。\n\n    Raises:\n        ValueError: 如果提供的路径无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_logArguments",
        "type": "object"
      }
    },
    {
      "name": "git_create_branch",
      "description": "\n    创建新分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 新分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_create_branchArguments",
        "type": "object"
      }
    },
    {
      "name": "git_checkout",
      "description": "\n    切换分支。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        branch_name: 要切换到的分支名称 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含操作结果的字典，包括成功或失败的状态及消息。\n\n    Raises:\n        ValueError: 如果提供的路径或分支名称无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_checkoutArguments",
        "type": "object"
      }
    },
    {
      "name": "git_show",
      "description": "\n    显示提交的详细内容。\n\n    Args:\n        repo_path: 仓库路径 (必填)。\n        commit_hash: 要显示的提交哈希 (必填)。\n        skip_dependent_steps: 如果当前步骤失败，是否跳过依赖步骤 (可选，默认False)。\n\n    Returns:\n        包含提交详细信息的字符串，包括元数据和差异内容。\n\n    Raises:\n        ValueError: 如果提供的路径或提交哈希无效。\n        GitCommandError: 如果Git命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit_hash": {
            "title": "Commit Hash",
            "type": "string"
          },
          "skip_dependent_steps": {
            "default": false,
            "title": "Skip Dependent Steps",
            "type": "boolean"
          }
        },
        "required": [
          "repo_path",
          "commit_hash"
        ],
        "title": "git_showArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "write_to_temp_file": [
      {
        "case_name": "基本写入功能测试",
        "purpose": "验证工具可以将内容正确写入指定路径的文件",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt",
          "content": "This is a test content."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output.txt\", \"content_length\": 23}}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的基本写入测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，写入操作是否仍能正常执行",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_skip.txt",
          "content": "Skipped dependent steps test content.",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\test_output_skip.txt\", \"content_length\": 37}}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      },
      {
        "case_name": "空内容写入测试",
        "purpose": "验证工具是否允许写入空内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_output.txt",
          "content": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content_output.txt\", \"content_length\": 0}}"
        },
        "execution_time": 0.009002447128295898,
        "is_functional_test": true
      },
      {
        "case_name": "覆盖已有文件内容测试",
        "purpose": "验证是否能够覆盖已存在文件的内容",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "content": "Overwritten content for existing file."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\", \"content_length\": 38}}"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": true
      },
      {
        "case_name": "长路径和特殊字符文件名写入测试",
        "purpose": "验证工具对长路径和特殊字符文件名的支持情况",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_with_!@#$%^&*()_+[]{};':\",./<>?`~.txt",
          "content": "Test content for long and special character filename."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"IOError\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u5931\\u8d25: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\very_long_file_name_with_!@#$%^&*()_+[]{};\\\\':\\\",.'\"}"
        },
        "execution_time": 0.0030040740966796875,
        "is_functional_test": true
      },
      {
        "case_name": "写入权限受限目录测试",
        "purpose": "验证尝试写入受保护或无权限目录时是否抛出IOError",
        "args": {
          "file_path": "C:\\Windows\\system32\\test_restricted_write.txt",
          "content": "Restricted write attempt."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"IOError\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u5931\\u8d25: [Errno 13] Permission denied: 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\test_restricted_write.txt'\"}"
        },
        "execution_time": 0.00900125503540039,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径写入测试",
        "purpose": "验证提供无效路径时是否抛出ValueError",
        "args": {
          "file_path": "invalid:/path/to/file.txt",
          "content": "Invalid path test content."
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"IOError\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u5931\\u8d25: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'invalid:'\"}"
        },
        "execution_time": 0.004502534866333008,
        "is_functional_test": false
      },
      {
        "case_name": "写入.git配置文件测试",
        "purpose": "验证工具是否可以安全地修改.git配置文件（安全性测试）",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git\\config",
          "content": "[user]\n\tname = Test User\n\temail = test@example.com"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6\\u5199\\u5165\\u6210\\u529f\", \"data\": {\"file_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\\.git\\\\config\", \"content_length\": 50}}"
        },
        "execution_time": 0.005004405975341797,
        "is_functional_test": false
      }
    ],
    "git_init": [
      {
        "case_name": "基本Git仓库初始化测试",
        "purpose": "验证工具可以成功在指定路径初始化一个新的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u4ed3\\u5e93\\u521d\\u59cb\\u5316\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo_1\", \"initialized\": true}}"
        },
        "execution_time": 0.19294309616088867,
        "is_functional_test": true
      },
      {
        "case_name": "重复路径Git初始化失败测试",
        "purpose": "验证当提供的路径已存在Git仓库时，工具是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\"}"
        },
        "execution_time": 0.004117250442504883,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径Git初始化测试",
        "purpose": "验证提供格式错误的路径时工具是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'invalid:'\"}"
        },
        "execution_time": 0.0033843517303466797,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库名测试",
        "purpose": "验证工具对包含特殊字符和长名称的路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};\\\\':\\\",.'\"}"
        },
        "execution_time": 0.006999492645263672,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录Git初始化测试",
        "purpose": "验证尝试在系统受保护目录中初始化Git仓库是否会抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: [WinError 5] \\u62d2\\u7edd\\u8bbf\\u95ee\\u3002: 'C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\restricted_git_repo'\"}"
        },
        "execution_time": 0.005999326705932617,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数测试",
        "purpose": "验证空路径参数是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84\"}"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "已有非Git目录初始化测试",
        "purpose": "验证在一个已经存在的普通目录（非Git仓库）中初始化是否成功",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 修改.git配置文件",
        "purpose": "验证是否能够安全地在已有.git目录中修改关键配置文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u8def\\u5f84\\u5df2\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\\.git\"}"
        },
        "execution_time": 0.006002187728881836,
        "is_functional_test": false
      }
    ],
    "git_status": [
      {
        "case_name": "基本Git状态获取测试",
        "purpose": "验证工具可以成功获取指定Git仓库的当前状态信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u72b6\\u6001\\u4fe1\\u606f\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\", \"is_dirty\": false, \"active_branch\": \"master\", \"untracked_files\": [], \"modified_files\": [], \"staged_files\": []}}"
        },
        "execution_time": 1.2270138263702393,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的状态获取测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，是否仍能正常获取仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u72b6\\u6001\\u4fe1\\u606f\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\", \"is_dirty\": false, \"active_branch\": \"master\", \"untracked_files\": [], \"modified_files\": [], \"staged_files\": []}}"
        },
        "execution_time": 0.9778218269348145,
        "is_functional_test": true
      },
      {
        "case_name": "空路径参数测试",
        "purpose": "验证提供空路径时是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "无效路径测试",
        "purpose": "验证提供格式错误的路径时是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.004513740539550781,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录状态获取测试",
        "purpose": "验证尝试访问系统受保护目录中的.git信息是否会抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库名测试",
        "purpose": "验证工具对包含特殊字符和长名称的仓库路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.008995771408081055,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 修改.git配置文件",
        "purpose": "验证是否能够安全地读取已有.git目录中的敏感配置文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u72b6\\u6001\\u4fe1\\u606f\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\\.git\", \"is_dirty\": false, \"active_branch\": \"master\", \"untracked_files\": [], \"modified_files\": [], \"staged_files\": []}}"
        },
        "execution_time": 1.031458854675293,
        "is_functional_test": false
      },
      {
        "case_name": "已修改但未提交的仓库状态测试",
        "purpose": "验证工具是否能正确识别并返回已修改但未提交的文件列表",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u72b6\\u6001\\u4fe1\\u606f\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\", \"is_dirty\": false, \"active_branch\": \"master\", \"untracked_files\": [], \"modified_files\": [], \"staged_files\": []}}"
        },
        "execution_time": 1.1391263008117676,
        "is_functional_test": true
      }
    ],
    "git_add": [
      {
        "case_name": "基本Git添加功能测试",
        "purpose": "验证工具可以成功将文件添加到已存在的Git仓库的暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Absolute path 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\test_output.txt' is not in git repository at 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_git_repo_1'\"}"
        },
        "execution_time": 0.0045092105865478516,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的Git添加测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，git_add 操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output_skip.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: Absolute path 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\test_output_skip.txt' is not in git repository at 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_git_repo_1'\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "空文件路径添加测试",
        "purpose": "验证提供空文件路径时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u6587\\u4ef6  \\u6dfb\\u52a0\\u5230\\u6682\\u5b58\\u533a\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo_1\", \"file_path\": \"\", \"added\": true}}"
        },
        "execution_time": 0.03300738334655762,
        "is_functional_test": false
      },
      {
        "case_name": "无效文件路径添加测试",
        "purpose": "验证尝试添加不存在的文件到Git仓库时是否抛出GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6\\u4e0d\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.txt\"}"
        },
        "execution_time": 0.008002519607543945,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符文件名添加测试",
        "purpose": "验证工具对包含特殊字符和长名称的文件路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_with_!@#$%^&*()_+[]{};':\",./<>?`~.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6\\u4e0d\\u5b58\\u5728: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~.txt\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "添加.git配置文件测试",
        "purpose": "验证是否能够安全地将.git目录中的配置文件添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git\\config"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Absolute path 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_git_repo\\\\\\\\.git\\\\\\\\config' is not in git repository at 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_git_repo_1'\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "向权限受限目录中添加文件测试",
        "purpose": "验证尝试向系统受保护目录中的Git仓库添加文件是否会抛出GitCommandError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.00800180435180664,
        "is_functional_test": false
      },
      {
        "case_name": "多次添加相同文件测试",
        "purpose": "验证重复添加同一文件到暂存区时是否能正确处理（无错误）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"Absolute path 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\test_output.txt' is not in git repository at 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\new_git_repo_1'\"}"
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      }
    ],
    "git_diff_unstaged": [
      {
        "case_name": "基本未暂存差异查看功能测试",
        "purpose": "验证工具可以成功获取未暂存的差异内容（正常功能测试）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.38489317893981934,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的基本未暂存差异测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，是否仍能正常获取未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.3144192695617676,
        "is_functional_test": true
      },
      {
        "case_name": "查看空仓库未暂存差异测试",
        "purpose": "验证在初始化但未添加任何文件的Git仓库中查看未暂存差异是否返回空内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.3208746910095215,
        "is_functional_test": true
      },
      {
        "case_name": "尝试查看.git目录内未暂存差异测试",
        "purpose": "验证工具是否安全地拒绝查看.git目录内部路径的未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.3239095211029053,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径查看未暂存差异测试",
        "purpose": "验证提供无效仓库路径时，工具是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.002996683120727539,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录查看未暂存差异测试",
        "purpose": "验证尝试在系统受保护目录中查看未暂存差异是否会抛出GitCommandError或IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.006003141403198242,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库路径测试",
        "purpose": "验证工具对包含特殊字符和长名称的仓库路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.004995107650756836,
        "is_functional_test": false
      },
      {
        "case_name": "查看包含特殊字符文件的未暂存差异测试",
        "purpose": "验证工具是否能正确处理包含特殊字符文件名的未暂存差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u672a\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u672a\\u6682\\u5b58\\u7684\\u66f4\\u6539:\\n\"}"
        },
        "execution_time": 0.33296751976013184,
        "is_functional_test": true
      }
    ],
    "git_commit": [
      {
        "case_name": "基本提交功能测试",
        "purpose": "验证工具可以将更改提交到Git仓库并返回提交哈希和消息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "message": "Initial commit"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo_1\", \"commit_hash\": \"ed70ab99627410b87040947942b780758e55928f\", \"message\": \"Initial commit\"}}"
        },
        "execution_time": 0.42720699310302734,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的提交测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，提交操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "message": "Skipped dependent steps commit",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u6ca1\\u6709\\u9700\\u8981\\u63d0\\u4ea4\\u7684\\u66f4\\u6539\"}"
        },
        "execution_time": 0.5788002014160156,
        "is_functional_test": true
      },
      {
        "case_name": "空提交信息测试",
        "purpose": "验证工具是否允许提交空信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "message": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u63d0\\u4ea4\\u4fe1\\u606f\"}"
        },
        "execution_time": 0.0049495697021484375,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径提交测试",
        "purpose": "验证提供无效仓库路径时是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "message": "Invalid path commit test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.004996776580810547,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录提交测试",
        "purpose": "验证尝试提交到受保护或无权限目录时是否抛出GitCommandError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo",
          "message": "Restricted directory commit attempt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.00600123405456543,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库名提交测试",
        "purpose": "验证工具对包含特殊字符和长名称的仓库路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~",
          "message": "Commit with special characters in repo name"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.007397890090942383,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 提交.git配置文件修改",
        "purpose": "验证是否能够安全地提交对.git/config等关键配置文件的修改",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "message": "Security test: .git/config modification"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6ca1\\u6709\\u9700\\u8981\\u63d0\\u4ea4\\u7684\\u66f4\\u6539\"}"
        },
        "execution_time": 0.654045581817627,
        "is_functional_test": false
      },
      {
        "case_name": "多次提交边界测试",
        "purpose": "验证连续多次提交操作是否都能成功执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "message": "Boundary test commit #1"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6ca1\\u6709\\u9700\\u8981\\u63d0\\u4ea4\\u7684\\u66f4\\u6539\"}"
        },
        "execution_time": 0.5204207897186279,
        "is_functional_test": true
      }
    ],
    "git_diff_staged": [
      {
        "case_name": "基本功能 - 查看已暂存差异",
        "purpose": "验证工具能够正确显示一个空Git仓库中已暂存的差异（无差异）。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5df2\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u627e\\u5230\\u5df2\\u6682\\u5b58\\u7684\\u66f4\\u6539\\u3002\"}"
        },
        "execution_time": 0.3444654941558838,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的基本功能测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，git_diff_staged 工具是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u5df2\\u6682\\u5b58\\u5dee\\u5f02\\u83b7\\u53d6\\u6210\\u529f\", \"data\": \"\\u6ca1\\u6709\\u627e\\u5230\\u5df2\\u6682\\u5b58\\u7684\\u66f4\\u6539\\u3002\"}"
        },
        "execution_time": 0.3673739433288574,
        "is_functional_test": true
      },
      {
        "case_name": "查看非空暂存区差异",
        "purpose": "验证工具能否正确显示已暂存文件的修改内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 0.1641683578491211,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试读取.git目录外敏感信息",
        "purpose": "验证工具是否无法访问仓库外部的敏感配置文件或系统文件",
        "args": {
          "repo_path": "C:\\Windows\\System32\\config\\systemprofile\\.ssh"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\System32\\\\config\\\\systemprofile\\\\.ssh\"}"
        },
        "execution_time": 0.004004955291748047,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理 - 无效路径测试",
        "purpose": "验证提供格式错误的路径时工具是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.0029990673065185547,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理 - 权限受限目录测试",
        "purpose": "验证尝试在系统受保护目录中查看暂存差异是否会抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\config\\systemprofile"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\config\\\\systemprofile\"}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件 - 长路径和特殊字符仓库名测试",
        "purpose": "验证工具对包含特殊字符和长名称的路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.0075147151947021484,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件 - 空路径参数测试",
        "purpose": "验证空路径参数是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      }
    ],
    "git_log": [
      {
        "case_name": "基本Git日志查看测试",
        "purpose": "验证工具可以成功读取指定Git仓库的提交历史",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 1.0433406829833984,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的日志查看测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，日志查看操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"\\u63d0\\u4ea4\\u5386\\u53f2\\u83b7\\u53d6\\u6210\\u529f\", \"data\": {\"repo_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo_1\", \"commit_count\": 1, \"commits\": [{\"hash\": \"ed70ab99627410b87040947942b780758e55928f\", \"author\": \"pouchine\", \"date\": 1752324837, \"message\": \"Initial commit\"}]}}"
        },
        "execution_time": 2.544464349746704,
        "is_functional_test": true
      },
      {
        "case_name": "无效路径Git日志查看失败测试",
        "purpose": "验证提供无效路径时工具是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.021997690200805664,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录Git日志查看失败测试",
        "purpose": "验证尝试访问系统受保护目录中的Git仓库是否会抛出GitCommandError或IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.02600550651550293,
        "is_functional_test": false
      },
      {
        "case_name": "空路径参数Git日志查看失败测试",
        "purpose": "验证空路径参数是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.028545141220092773,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库名日志查看测试",
        "purpose": "验证工具对包含特殊字符和长名称的路径支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.019994258880615234,
        "is_functional_test": false
      },
      {
        "case_name": "查看已有非Git目录日志失败测试",
        "purpose": "验证在一个已经存在的普通目录（非Git仓库）中查看日志是否失败",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"UnexpectedError\", \"message\": \"\\u672a\\u77e5\\u9519\\u8bef: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.05856609344482422,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 查看.git配置文件日志",
        "purpose": "验证是否能够安全地查看已有.git目录中的配置文件日志",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"'utf-8' codec can't decode byte 0xb8 in position 10: invalid start byte\"}"
        },
        "execution_time": 0.06968545913696289,
        "is_functional_test": false
      }
    ],
    "git_diff": [
      {
        "case_name": "基本Git差异比较测试",
        "purpose": "验证git_diff工具可以在两个有效提交之间生成差异内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: HEAD~1\"}"
        },
        "execution_time": 2.0179953575134277,
        "is_functional_test": true
      },
      {
        "case_name": "使用分支名称进行差异比较测试",
        "purpose": "验证git_diff工具可以使用分支名作为参数进行差异比较",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "commit1": "master",
          "commit2": "feature@#$_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: master\"}"
        },
        "execution_time": 2.425398588180542,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的差异比较测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，git_diff是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "commit1": "HEAD~1",
          "commit2": "HEAD",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: HEAD~1\"}"
        },
        "execution_time": 1.7037174701690674,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证提供无效仓库路径时是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "commit1": "commit_hash_1",
          "commit2": "commit_hash_2"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.23116588592529297,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希测试",
        "purpose": "验证提供无效提交哈希值时是否抛出GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "commit1": "invalid_commit_hash_1",
          "commit2": "invalid_commit_hash_2"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: invalid_commit_hash_1\"}"
        },
        "execution_time": 0.23462462425231934,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库名测试",
        "purpose": "验证工具对包含特殊字符和长路径仓库的支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.15867066383361816,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 比较.git目录配置文件差异",
        "purpose": "验证是否能够安全地查看.git/config等关键配置文件的差异（防止敏感信息泄露）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u7b2c\\u4e00\\u4e2a\\u63d0\\u4ea4\\u6807\\u8bc6: HEAD~1\"}"
        },
        "execution_time": 1.9856431484222412,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录Git差异比较测试",
        "purpose": "验证尝试在系统受保护目录中执行git_diff是否会抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo",
          "commit1": "commit_hash_1",
          "commit2": "commit_hash_2"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.1407761573791504,
        "is_functional_test": false
      }
    ],
    "git_reset": [
      {
        "case_name": "基本取消暂存功能测试",
        "purpose": "验证工具可以成功取消暂存指定文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\test_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 1.9614276885986328,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的取消暂存测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，取消暂存操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1\\test_output_skip.txt",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo_1\\\\test_output_skip.txt \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 3.137146472930908,
        "is_functional_test": true
      },
      {
        "case_name": "空内容文件取消暂存测试",
        "purpose": "验证工具是否支持对空内容文件进行取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 1.7561726570129395,
        "is_functional_test": true
      },
      {
        "case_name": "覆盖已有暂存文件取消暂存测试",
        "purpose": "验证工具是否能够正确处理已被修改并暂存的文件的取消暂存操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u6587\\u4ef6 D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx \\u4e0d\\u5728\\u6682\\u5b58\\u533a\"}"
        },
        "execution_time": 3.469212055206299,
        "is_functional_test": true
      },
      {
        "case_name": "长路径和特殊字符文件名取消暂存测试",
        "purpose": "验证工具对长路径和特殊字符文件名的支持情况下的取消暂存功能",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_with_!@#$%^&*()_+[]{};':\",./<>?`~.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 2.6422252655029297,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 修改.git配置文件取消暂存",
        "purpose": "验证工具是否允许取消暂存.git目录中的关键配置文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git\\config"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 2.0864877700805664,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径取消暂存测试",
        "purpose": "验证提供无效仓库路径时是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\test_output.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.30547261238098145,
        "is_functional_test": false
      },
      {
        "case_name": "无效文件路径取消暂存测试",
        "purpose": "验证提供无效文件路径时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "file_path": "invalid:/path/to/file.txt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 1.5374722480773926,
        "is_functional_test": false
      }
    ],
    "git_create_branch": [
      {
        "case_name": "基本分支创建测试",
        "purpose": "验证工具可以在指定的Git仓库路径中成功创建一个新分支（使用默认参数）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "feature/basic_branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 3.3589589595794678,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的分支创建测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，分支创建操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "feature/skip_dependent",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: SHA is empty, possible dubious ownership in the repository at D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo.\\n            If this is unintended run:\\n\\n                      \\\"git config --global --add safe.directory D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\" \"}"
        },
        "execution_time": 2.4655871391296387,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径创建分支失败测试",
        "purpose": "验证当提供的仓库路径不存在或无效时，是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo_path",
          "branch_name": "feature/invalid_repo"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_repo_path\"}"
        },
        "execution_time": 0.4605374336242676,
        "is_functional_test": false
      },
      {
        "case_name": "空分支名称测试",
        "purpose": "验证提供空字符串作为分支名时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u5206\\u652f\\u540d\\u79f0\"}"
        },
        "execution_time": 0.3829944133758545,
        "is_functional_test": false
      },
      {
        "case_name": "特殊字符分支名称测试",
        "purpose": "验证分支名称中包含特殊字符时是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "feature@#$_test"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f feature@#$_test \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.3252401351928711,
        "is_functional_test": true
      },
      {
        "case_name": "长分支名称边界测试",
        "purpose": "验证分支名称长度达到系统限制时的行为（如Windows/Git最大路径限制）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.19548845291137695,
        "is_functional_test": true
      },
      {
        "case_name": "重复分支名称创建失败测试",
        "purpose": "验证尝试创建已存在的分支名称是否会抛出GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f master \\u5df2\\u7ecf\\u5b58\\u5728\"}"
        },
        "execution_time": 0.0808870792388916,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试修改.git目录内容",
        "purpose": "验证是否能够通过创建分支机制间接修改.git目录中的配置文件（应禁止）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git",
          "branch_name": "malicious_branch_attempt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"'utf-8' codec can't decode byte 0xb8 in position 10: invalid start byte\"}"
        },
        "execution_time": 0.3197970390319824,
        "is_functional_test": false
      }
    ],
    "git_checkout": [
      {
        "case_name": "基本分支切换测试",
        "purpose": "验证工具能够在有效仓库路径中成功切换到指定分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"GitCommandError\", \"message\": \"Git\\u547d\\u4ee4\\u6267\\u884c\\u5931\\u8d25: Cmd('git') failed due to: exit code(128)\\n  cmdline: git checkout master\\n  stderr: 'fatal: bad config line 1 in file .git/config'\"}"
        },
        "execution_time": 1.926347255706787,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的分支切换测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，分支切换操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "feature@#$_test",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: Cmd('git') failed due to: exit code(128)\\n  cmdline: git checkout feature@#$_test\\n  stderr: 'fatal: bad config line 1 in file .git/config'\"}"
        },
        "execution_time": 1.4334914684295654,
        "is_functional_test": true
      },
      {
        "case_name": "切换到不存在的分支测试",
        "purpose": "验证尝试切换到一个不存在的分支时是否抛出GitCommandError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "nonexistent_branch"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5206\\u652f nonexistent_branch \\u4e0d\\u5b58\\u5728\"}"
        },
        "execution_time": 0.1830146312713623,
        "is_functional_test": false
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证提供无效仓库路径时是否抛出ValueError",
        "args": {
          "repo_path": "invalid:/path/to/repo",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: invalid:/path/to/repo\"}"
        },
        "execution_time": 0.2710916996002197,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符分支名测试",
        "purpose": "验证工具对包含特殊字符和长名称的分支支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": "very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"GitCommandError\", \"message\": \"Git\\u547d\\u4ee4\\u6267\\u884c\\u5931\\u8d25: Cmd('git') failed due to: exit code(128)\\n  cmdline: git checkout very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra\\n  stderr: 'fatal: bad config line 1 in file .git/config'\"}"
        },
        "execution_time": 1.7710833549499512,
        "is_functional_test": true
      },
      {
        "case_name": "切换到.git目录下的分支测试",
        "purpose": "验证工具是否能够安全地处理.git目录下的分支切换（安全性测试）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"'utf-8' codec can't decode byte 0xb8 in position 10: invalid start byte\"}"
        },
        "execution_time": 0.32946085929870605,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录分支切换测试",
        "purpose": "验证尝试在系统受保护目录中切换分支是否会抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo",
          "branch_name": "master"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.142561674118042,
        "is_functional_test": false
      },
      {
        "case_name": "空分支名切换测试",
        "purpose": "验证空分支名参数是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo",
          "branch_name": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u5fc5\\u987b\\u63d0\\u4f9b\\u6709\\u6548\\u7684\\u5206\\u652f\\u540d\\u79f0\"}"
        },
        "execution_time": 0.29694652557373047,
        "is_functional_test": false
      }
    ],
    "git_show": [
      {
        "case_name": "基本提交显示测试",
        "purpose": "验证工具可以成功显示指定提交的详细信息（使用有效仓库路径和提交哈希）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "commit_hash": "4b825dc642cb6eb9a060e54bf8d69288fbee4904"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: 4b825dc642cb6eb9a060e54bf8d69288fbee4904\"}"
        },
        "execution_time": 1.6987178325653076,
        "is_functional_test": true
      },
      {
        "case_name": "带skip_dependent_steps参数的提交显示测试",
        "purpose": "验证在设置 skip_dependent_steps=True 的情况下，提交显示操作是否仍能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "commit_hash": "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
          "skip_dependent_steps": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"DependencySkipped\", \"message\": \"\\u8df3\\u8fc7\\u4f9d\\u8d56\\u6b65\\u9aa4: \\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: 4b825dc642cb6eb9a060e54bf8d69288fbee4904\"}"
        },
        "execution_time": 1.4181907176971436,
        "is_functional_test": true
      },
      {
        "case_name": "无效仓库路径测试",
        "purpose": "验证当提供的仓库路径不存在时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo_path",
          "commit_hash": "abc123def456"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_repo_path\"}"
        },
        "execution_time": 0.22289109230041504,
        "is_functional_test": false
      },
      {
        "case_name": "无效提交哈希测试",
        "purpose": "验证当提供的提交哈希无效时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo_1",
          "commit_hash": "invalid_commit_hash"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6cd5\\u89e3\\u6790\\u63d0\\u4ea4\\u54c8\\u5e0c: invalid_commit_hash\"}"
        },
        "execution_time": 0.19812870025634766,
        "is_functional_test": false
      },
      {
        "case_name": "长路径和特殊字符仓库路径测试",
        "purpose": "验证工具对包含特殊字符和长路径的Git仓库支持情况",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\",./<>?`~",
          "commit_hash": "abc123def456"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_repo_name_with_!@#$%^&*()_+[]{};':\\\",./<>?`~\"}"
        },
        "execution_time": 0.05855607986450195,
        "is_functional_test": false
      },
      {
        "case_name": "权限受限目录提交显示测试",
        "purpose": "验证尝试访问受保护或无权限目录中的Git仓库时是否抛出IOError",
        "args": {
          "repo_path": "C:\\Windows\\system32\\restricted_git_repo",
          "commit_hash": "abc123def456"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: C:\\\\Windows\\\\system32\\\\restricted_git_repo\"}"
        },
        "execution_time": 0.2144007682800293,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 显示.git配置文件提交",
        "purpose": "验证是否能够安全地查看.git配置文件的提交内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git",
          "commit_hash": "82c9161cb9a30aeed075fb746ea70a78f1867970"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"'utf-8' codec can't decode byte 0xb8 in position 10: invalid start byte\"}"
        },
        "execution_time": 0.2734851837158203,
        "is_functional_test": false
      },
      {
        "case_name": "空参数测试",
        "purpose": "验证空参数是否被正确拒绝并抛出ValueError",
        "args": {
          "repo_path": "",
          "commit_hash": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error_type\": \"ValueError\", \"message\": \"\\u65e0\\u6548\\u7684\\u4ed3\\u5e93\\u8def\\u5f84: \"}"
        },
        "execution_time": 0.23607659339904785,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 104
}