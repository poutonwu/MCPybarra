{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_pdf_file_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_pdf_file_processor/refined/server.py",
  "timestamp": "2025-07-12T20:47:18.678929",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merge multiple PDF files into a single PDF file.\n\n    Args:\n        input_files: List of paths to the PDF files to be merged.\n        output_file: Path where the merged PDF will be saved.\n\n    Returns:\n        A JSON string containing the operation status, merged file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_files": {
            "items": {},
            "title": "Input Files",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_files",
          "output_file"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extract specific pages from a PDF file and save them as a new PDF.\n\n    Args:\n        input_file: Path to the source PDF file.\n        page_numbers: List of page numbers to extract (1-based index).\n        output_file: Path where the extracted pages will be saved.\n\n    Returns:\n        A JSON string containing the operation status, extracted file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the extraction process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_file": {
            "title": "Input File",
            "type": "string"
          },
          "page_numbers": {
            "items": {},
            "title": "Page Numbers",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_file",
          "page_numbers",
          "output_file"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Search for PDF files matching a specific pattern in a given directory.\n\n    Args:\n        directory: Path to the directory to search in.\n        pattern: Regular expression pattern to match PDF filenames.\n\n    Returns:\n        A JSON string containing the operation status, list of matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Merge PDF files in a specific order based on a pattern.\n\n    Args:\n        directory: Path to the directory containing PDF files.\n        order_pattern: Pattern to determine the merge order (exact filename or partial match).\n        output_file: Path where the merged PDF will be saved.\n        exact_match: Boolean indicating whether to use exact match (True) or partial match (False).\n\n    Returns:\n        A JSON string containing the operation status, merged file path, matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_pattern": {
            "title": "Order Pattern",
            "type": "string"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          },
          "exact_match": {
            "default": false,
            "title": "Exact Match",
            "type": "boolean"
          }
        },
        "required": [
          "directory",
          "order_pattern",
          "output_file"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Find PDF files related to a target PDF based on filename patterns and content similarity.\n\n    Args:\n        target_file: Path to the target PDF file.\n        search_directory: Path to the directory to search for related files.\n\n    Returns:\n        A JSON string containing the operation status, related files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "target_file": {
            "title": "Target File",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          }
        },
        "required": [
          "target_file",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证多个有效PDF文件可以被成功合并为一个PDF文件。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\"}"
        },
        "execution_time": 0.07150912284851074,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证当输入只有一个PDF文件时，工具仍能正确处理并生成相同的输出文件。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.043005943298339844,
        "is_functional_test": true
      },
      {
        "case_name": "Merge With Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符是否能正常处理。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_@#$.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_@#$.pdf\"}"
        },
        "execution_time": 0.07432150840759277,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Input Files List",
        "purpose": "验证输入文件列表为空时是否抛出ValueError异常。",
        "args": {
          "input_files": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input_list_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.017007112503051758,
        "is_functional_test": false
      },
      {
        "case_name": "Non-PDF File in Input List",
        "purpose": "验证输入文件列表中包含非PDF文件时是否抛出错误。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_cropped.png"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_pdf_merge_attempt.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.01849961280822754,
        "is_functional_test": false
      },
      {
        "case_name": "Long Output File Path",
        "purpose": "测试最大长度的输出文件路径是否能被系统支持。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_merged.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_merged.pdf\"}"
        },
        "execution_time": 0.12219429016113281,
        "is_functional_test": true
      },
      {
        "case_name": "Output Directory Does Not Exist",
        "purpose": "验证输出目录不存在时是否能抛出运行时错误。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\invalid_directory\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.027524471282958984,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否能抛出ValueError。",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_from_nonexistent.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.025027751922607422,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证可以从PDF中提取指定页面并保存为新PDF文件。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_pages_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_pages_output.pdf\"}"
        },
        "execution_time": 0.03582286834716797,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证从PDF中提取单个页面是否能成功生成一个仅包含该页的PDF。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            3
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_page_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\"}"
        },
        "execution_time": 0.011067867279052734,
        "is_functional_test": true
      },
      {
        "case_name": "Page Number Out of Range",
        "purpose": "验证当请求的页码超出PDF总页数时是否抛出运行时错误。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            999
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\out_of_range_page.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Some page numbers are out of range (document has 7 pages): [999]\"}"
        },
        "execution_time": 0.03129458427429199,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input File Path",
        "purpose": "验证输入文件路径无效或文件不存在时是否抛出ValueError。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_input_extract.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Input file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.024999618530273438,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符是否能正常处理。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            1,
            2,
            3
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"}"
        },
        "execution_time": 0.01947951316833496,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Page Numbers List",
        "purpose": "验证空的页码列表是否导致ValueError被抛出。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_page_list.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least one page number must be specified for extraction\"}"
        },
        "execution_time": 0.023006200790405273,
        "is_functional_test": false
      },
      {
        "case_name": "Long Output File Path",
        "purpose": "测试最大长度的输出文件路径是否能被系统支持。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.021718978881835938,
        "is_functional_test": true
      },
      {
        "case_name": "Output Directory Does Not Exist",
        "purpose": "验证输出目录不存在时是否能抛出运行时错误。",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\invalid_directory\\extracted_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\invalid_directory\\\\extracted_output.pdf\"}"
        },
        "execution_time": 0.026559114456176758,
        "is_functional_test": false
      }
    ],
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证在指定目录中能正确搜索到符合正则表达式模式的PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_pages_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"]}"
        },
        "execution_time": 0.004999637603759766,
        "is_functional_test": true
      },
      {
        "case_name": "Search With Specific Pattern",
        "purpose": "验证工具能够根据特定正则表达式匹配文件名中的关键词，如包含 'merged' 的PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ".*merged.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.004003286361694336,
        "is_functional_test": true
      },
      {
        "case_name": "Search Empty Directory",
        "purpose": "验证当目标目录中没有匹配的PDF文件时，返回空列表而不是错误。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_dir\"}"
        },
        "execution_time": 0.027144908905029297,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证传入无效或不存在的目录路径时是否抛出运行时错误。",
        "args": {
          "directory": "D:\\invalid_directory\\search_test",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\invalid_directory\\\\search_test\"}"
        },
        "execution_time": 0.02205038070678711,
        "is_functional_test": false
      },
      {
        "case_name": "Pattern Matching No Files",
        "purpose": "验证当提供的正则表达式不匹配任何PDF文件时返回空列表。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "^nonexistentfile.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.007005929946899414,
        "is_functional_test": true
      },
      {
        "case_name": "Long Pattern Expression",
        "purpose": "测试最大长度的正则表达式是否能被系统支持。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "^.*very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_.*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"]}"
        },
        "execution_time": 0.00499725341796875,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Hidden Git Directory",
        "purpose": "验证工具不能访问隐藏的.git目录中的PDF文件（防止非法访问内部结构）。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": ".*\\.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic Ordered PDF Merge with Exact Match",
        "purpose": "验证在exact_match=True模式下，工具能根据指定顺序成功合并PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper1.pdf,rule1.pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ordered_merge_exact.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: paper1.pdf,rule1.pdf\"}"
        },
        "execution_time": 0.0353856086730957,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Ordered PDF Merge with Partial Match",
        "purpose": "验证在exact_match=False模式下，工具能根据部分匹配的pattern正确排序并合并PDF文件。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\ordered_merge_partial.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\ordered_merge_partial.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.06100654602050781,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Without Output Directory",
        "purpose": "验证输出路径所在目录不存在时是否抛出错误。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\invalid_output_dir\\merge_result.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\invalid_output_dir\\\\merge_result.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.06384801864624023,
        "is_functional_test": false
      },
      {
        "case_name": "Merge Using Empty Directory",
        "purpose": "验证当指定目录中没有匹配文件时是否抛出错误。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_pattern": "nonexistent",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_merge_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: nonexistent\"}"
        },
        "execution_time": 0.034940242767333984,
        "is_functional_test": false
      },
      {
        "case_name": "Merge With Special Characters in Order Pattern",
        "purpose": "测试order_pattern中包含特殊字符时是否能正常处理。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "feature@#$_test",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special_pattern_merge.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: feature@#$_test\"}"
        },
        "execution_time": 0.039968252182006836,
        "is_functional_test": true
      },
      {
        "case_name": "Merge With Very Long File Path",
        "purpose": "测试最大长度的输入文件路径是否能被系统支持。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git\\refs\\heads\\very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra",
          "order_pattern": "HEAD",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\long_path_merge_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\\.git\\\\refs\\\\heads\\\\very_long_branch_name_that_tests_the_maximum_allowed_length_of_a_git_branch_name_in_windows_systems_extra\"}"
        },
        "execution_time": 0.03438711166381836,
        "is_functional_test": true
      },
      {
        "case_name": "Merge With Non-PDF Files in Directory",
        "purpose": "验证当目录中存在非PDF文件但未匹配到时是否仍能正确合并。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_pdf_files_ignored.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\non_pdf_files_ignored.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.059273719787597656,
        "is_functional_test": true
      },
      {
        "case_name": "Merge With Missing Required Parameter",
        "purpose": "验证缺少必填参数（如order_pattern）时是否抛出ValueError。",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_order_pattern.pdf",
          "exact_match": false
        },
        "response": {
          "error": "ToolException: Error executing tool merge_pdfs_ordered: 1 validation error for merge_pdfs_orderedArguments\norder_pattern\n  Field required [type=missing, input_value={'directory': 'D:\\\\devWor...', 'exact_match': False}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00962972640991211,
        "is_functional_test": false
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Related PDF Search",
        "purpose": "验证工具能基于文件名模式和内容相似性成功找到相关PDF文件。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.6778552532196045,
        "is_functional_test": true
      },
      {
        "case_name": "Target File Not Found",
        "purpose": "验证目标文件不存在时是否抛出ValueError。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Target file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.040618896484375,
        "is_functional_test": false
      },
      {
        "case_name": "Search Directory Does Not Exist",
        "purpose": "验证搜索目录不存在时是否抛出RuntimeError。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\invalid_directory"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.7300851345062256,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证当搜索目录中没有PDF文件时是否返回空列表。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.6726360321044922,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Target File Path",
        "purpose": "测试目标文件路径中包含特殊字符是否能正常处理。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.24820303916931152,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Paths",
        "purpose": "验证工具能否处理包含长文件路径的目录。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf_dir\"}"
        },
        "execution_time": 0.03665757179260254,
        "is_functional_test": true
      },
      {
        "case_name": "Non-PDF Files in Search Directory",
        "purpose": "验证搜索目录中存在非PDF文件时是否被正确忽略。",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_images"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.9466564655303955,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Input Parameters",
        "purpose": "验证传入空字符串或无效参数时是否抛出ValueError。",
        "args": {
          "target_file": "",
          "search_directory": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid target file path: \"}"
        },
        "execution_time": 0.05071067810058594,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 39
}