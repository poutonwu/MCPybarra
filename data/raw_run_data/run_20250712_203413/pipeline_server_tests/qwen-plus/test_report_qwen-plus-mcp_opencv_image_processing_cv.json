{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_opencv_image_processing_cv",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_opencv_image_processing_cv/refined/server.py",
  "timestamp": "2025-07-12T20:49:53.434860",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    保存图片文件。\n\n    Args:\n        image_path: 源图像的文件路径 (必填)。\n        output_path: 目标保存路径 (必填)。\n\n    Returns:\n        包含成功或失败消息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果输出路径无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        save_image_tool(image_path=\"input.jpg\", output_path=\"output.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    调整图片尺寸。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        width: 新宽度，必须为正整数 (必填)。\n        height: 新高度，必须为正整数 (必填)。\n\n    Returns:\n        包含调整后的尺寸和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果宽度或高度不是正整数。\n        Exception: 对于其他意外错误。\n\n    示例:\n        resize_image_tool(image_path=\"input.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    裁剪图片区域。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        x: 裁剪区域左上角 x 坐标 (必填)。\n        y: 裁剪区域左上角 y 坐标 (必填)。\n        width: 裁剪区域宽度，必须为正整数 (必填)。\n        height: 裁剪区域高度，必须为正整数 (必填)。\n\n    Returns:\n        包含裁剪区域信息和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果坐标或尺寸无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        crop_image_tool(image_path=\"input.jpg\", x=100, y=100, width=400, height=300)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    获取图片统计信息。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n\n    Returns:\n        包含图像尺寸、颜色空间和像素值范围等信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        Exception: 对于其他意外错误。\n\n    示例:\n        get_image_stats_tool(image_path=\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    应用图像滤镜。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        filter_type: 滤镜类型（例如 \"gaussian\", \"median\"） (必填)。\n        kernel_size: 核大小，必须为正奇数 (必填)。\n\n    Returns:\n        包含应用的滤镜类型和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_filter_tool(image_path=\"input.jpg\", filter_type=\"gaussian\", kernel_size=5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    检测图像边缘。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        method: 边缘检测方法（例如 \"canny\"） (必填)。\n        threshold1: 第一个阈值，必须为非负整数 (必填)。\n        threshold2: 第二个阈值，必须为非负整数且大于第一个阈值 (必填)。\n\n    Returns:\n        包含检测到的边缘数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_edges_tool(image_path=\"input.jpg\", method=\"canny\", threshold1=100, threshold2=200)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "integer"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "method",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    进行阈值分割。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        threshold_value: 阈值，必须为非负整数 (必填)。\n        max_value: 最大值，必须为正整数且大于阈值 (必填)。\n\n    Returns:\n        包含应用的阈值和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        apply_threshold_tool(image_path=\"input.jpg\", threshold_value=127, max_value=255)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "integer"
          },
          "max_value": {
            "title": "Max Value",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    检测图像轮廓。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        mode: 轮廓检索模式（例如 \"external\", \"tree\"） (必填)。\n        method: 轮廓近似方法（例如 \"simple\", \"chain_approx_none\"） (必填)。\n\n    Returns:\n        包含检测到的轮廓数量和保存路径的信息字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        detect_contours_tool(image_path=\"input.jpg\", mode=\"external\", method=\"simple\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "mode",
          "method"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    查找图像形状。\n\n    Args:\n        image_path: 图像的文件路径 (必填)。\n        shape_type: 形状类型（例如 \"circle\", \"rectangle\"） (必填)。\n\n    Returns:\n        包含找到的形状数量和位置信息的 JSON 字符串。\n\n    Raises:\n        FileNotFoundError: 如果源文件不存在。\n        ValueError: 如果参数无效。\n        Exception: 对于其他意外错误。\n\n    示例:\n        find_shapes_tool(image_path=\"input.jpg\", shape_type=\"circle\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_image_stats_tool": [
      {
        "case_name": "基本功能测试 - 获取有效图片的统计信息",
        "purpose": "验证工具可以正确获取一个存在的图片文件的统计信息，包括尺寸、颜色空间和像素值范围。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004641056060791016,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个格式图片的统计信息",
        "purpose": "验证工具可以处理不同格式的图像文件（如 JPG）并返回正确的统计信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 3568, \"height\": 2416, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Blue)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 1, \"min\": 0, \"max\": 255, \"range\": 255}, {\"channel\": 2, \"min\": 0, \"max\": 255, \"range\": 255}], \"total_pixels\": 25860864, \"memory_usage_kb\": 25254.75}}"
        },
        "execution_time": 0.10265922546386719,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试访问隐藏文件",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的访问请求，防止敏感文件被读取。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.0050084590911865234,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0070989131927490234,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.004506826400756836,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 文件路径长度极限",
        "purpose": "验证工具是否能处理超长文件路径的图像文件。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.008362531661987305,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_images\\nature_cropped.jpeg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"stats\": {\"dimensions\": {\"width\": 300, \"height\": 200, \"channels\": 3}, \"color_space\": \"BGR (Dominant: Yellow)\", \"pixel_value_ranges\": [{\"channel\": 0, \"min\": 65, \"max\": 247, \"range\": 182}, {\"channel\": 1, \"min\": 108, \"max\": 251, \"range\": 143}, {\"channel\": 2, \"min\": 106, \"max\": 252, \"range\": 146}], \"total_pixels\": 180000, \"memory_usage_kb\": 175.78}}"
        },
        "execution_time": 0.004965782165527344,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空格和符号文件名",
        "purpose": "验证工具是否支持带有空格或特殊符号的文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"}"
        },
        "execution_time": 0.006001472473144531,
        "is_functional_test": false
      }
    ],
    "save_image_tool": [
      {
        "case_name": "基本功能测试 - 保存有效图片",
        "purpose": "验证工具可以正确将一个存在的图片文件复制到指定的输出路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_xue.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_xue.jpg\"}"
        },
        "execution_time": 0.08844947814941406,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 保存PNG格式图片",
        "purpose": "验证工具能够处理并保存PNG格式图像文件。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_hit.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 保存特殊字符命名的图片",
        "purpose": "验证工具能够正确处理包含特殊字符的源文件名和目标文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#$.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.004007101058959961,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 尝试保存敏感隐藏文件",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的写入请求，防止敏感文件被覆盖或篡改。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 源文件不存在",
        "purpose": "验证当指定的源文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_nonexistent_image.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.008516788482666016,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 输出路径无效",
        "purpose": "验证当指定的输出路径非法或不可写时，工具是否能抛出 ValueError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\invalid\\path\\with\\no\\access\\output.jpg"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image saved successfully to D:\\\\invalid\\\\path\\\\with\\\\no\\\\access\\\\output.jpg\"}"
        },
        "execution_time": 0.08475804328918457,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长文件路径保存",
        "purpose": "验证工具是否能处理超长输入/输出文件路径的图像保存操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_saved.png"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空格和符号文件路径",
        "purpose": "验证工具是否支持带有空格或特殊符号的输入/输出文件路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output @#$.jpg"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "基本功能测试 - 调整有效图片尺寸",
        "purpose": "验证工具可以正确调整一个存在的图片文件的尺寸，并返回保存路径和新尺寸。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image resized to 800x600 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_resized.jpg\"}"
        },
        "execution_time": 0.06272554397583008,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用默认参数调整常见格式图片",
        "purpose": "验证工具在使用默认目标尺寸（如 1024x768）时，是否能处理不同格式的图像文件（如 PNG）并返回正确的结果。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试调整隐藏文件路径的图片尺寸",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的访问请求，防止敏感文件被读取或操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.004500627517700195,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.006800651550292969,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误并提示无法解码。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.docx\"}"
        },
        "execution_time": 0.004763126373291016,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 文件路径长度极限",
        "purpose": "验证工具是否能处理超长文件路径的图像文件进行尺寸调整。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf",
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.0033860206604003906,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名进行尺寸调整。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_images\\nature_cropped.jpeg",
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\converted_images\\\\nature_cropped.jpeg\"}"
        },
        "execution_time": 0.00677180290222168,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空格和符号文件名",
        "purpose": "验证工具是否支持带有空格或特殊符号的文件路径进行尺寸调整。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_@#$.pdf",
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_@#$.pdf\"}"
        },
        "execution_time": 0.004261016845703125,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "基本功能测试 - 裁剪有效图片区域",
        "purpose": "验证工具可以正确裁剪指定图片的特定区域并返回保存路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 100,
          "y": 100,
          "width": 400,
          "height": 300
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 400x300 at position (100, 100) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.05413556098937988,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 裁剪PNG格式图片",
        "purpose": "验证工具能够处理PNG格式图像并进行裁剪操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.007005929946899414,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试访问隐藏文件进行裁剪",
        "purpose": "验证工具是否能够安全地拒绝裁剪隐藏文件（如 .git/config）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "x": 0,
          "y": 0,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "x": 0,
          "y": 0,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.03199887275695801,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名进行裁剪。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_images\\nature_cropped.jpeg",
          "x": 0,
          "y": 0,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\converted_images\\\\nature_cropped.jpeg\"}"
        },
        "execution_time": 0.006011962890625,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 空坐标和最大尺寸裁剪",
        "purpose": "验证工具是否能处理 x=0, y=0 且宽度/高度等于原图极限值的情况。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 0,
          "y": 0,
          "width": 3568,
          "height": 2416
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Image cropped to 3568x2416 at position (0, 0) and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.09338879585266113,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 负坐标或零尺寸参数",
        "purpose": "验证当提供无效坐标或尺寸（负数、零）时，工具是否能抛出 ValueError。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": -10,
          "y": 100,
          "width": 0,
          "height": 300
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"X coordinate must be non-negative integer, got -10\"}"
        },
        "execution_time": 0.008999347686767578,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "基本功能测试 - 应用高斯滤镜到有效图片",
        "purpose": "验证工具可以正确对存在的图片应用高斯滤镜并保存。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied gaussian filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_gaussian_filtered.jpg\"}"
        },
        "execution_time": 0.09557747840881348,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 应用中值滤镜到PNG图片",
        "purpose": "验证工具能够处理PNG格式图像并应用中值滤镜。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004065990447998047,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试访问隐藏文件作为图像",
        "purpose": "验证工具是否能安全地拒绝读取隐藏或敏感图像文件。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.005855083465576172,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.003996372222900391,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.036225318908691406,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最小核大小1",
        "purpose": "验证工具是否支持最小允许的核大小（1）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "median",
          "kernel_size": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied median filter with kernel size 1 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_median_filtered.jpg\"}"
        },
        "execution_time": 0.09031248092651367,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 使用最大常用奇数核大小",
        "purpose": "验证工具是否支持较大的核大小如21。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "filter_type": "gaussian",
          "kernel_size": 21
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test.png",
          "filter_type": "median",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied median filter with kernel size 5 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$_test_median_filtered.png\"}"
        },
        "execution_time": 0.06931900978088379,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "基本功能测试 - 使用默认参数检测有效图像边缘",
        "purpose": "验证工具可以正确使用默认方法和阈值检测一个存在的图片文件的边缘。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1043927 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges_canny.jpg\"}"
        },
        "execution_time": 0.10926246643066406,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 检测PNG格式图像的边缘",
        "purpose": "验证工具能够处理并检测PNG格式图像的边缘。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005001544952392578,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用不同方法检测图像边缘",
        "purpose": "验证工具支持除默认方法外的其他边缘检测方法（如 sobel）。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_cropped.jpg",
          "method": "sobel",
          "threshold1": 50,
          "threshold2": 150
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Unsupported edge detection method: sobel. Supported methods are ['canny']\"}"
        },
        "execution_time": 0.007425069808959961,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试访问隐藏文件进行边缘检测",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的访问请求，防止敏感文件被读取。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.007998466491699219,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.008000612258911133,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.03901076316833496,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 文件路径长度极限",
        "purpose": "验证工具是否能处理超长文件路径的图像。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.004510402679443359,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test.png",
          "method": "canny",
          "threshold1": 100,
          "threshold2": 200
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 154591 edges using canny method and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$_test_edges_canny.png\"}"
        },
        "execution_time": 0.047841787338256836,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "基本功能测试 - 应用阈值分割到有效图片",
        "purpose": "验证工具可以正确对存在的图片文件应用阈值分割，使用推荐参数。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.07638001441955566,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 对PNG格式图片应用阈值分割",
        "purpose": "验证工具能够处理并正确对PNG格式图像文件进行阈值分割。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "threshold_value": 100,
          "max_value": 200
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0039980411529541016,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用特殊字符命名的图像进行阈值处理",
        "purpose": "验证工具能够正确处理包含特殊字符的图像文件名，并执行阈值分割。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test.png",
          "threshold_value": 150,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 150 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$_test_thresholded.png\"}"
        },
        "execution_time": 0.03993821144104004,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试对隐藏文件应用阈值分割",
        "purpose": "验证工具是否能安全地处理尝试对隐藏或敏感文件（如 .git/config）进行图像处理操作。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_git_repo\\.git\\config",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_git_repo\\\\.git\\\\config\"}"
        },
        "execution_time": 0.0034818649291992188,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.006998777389526367,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 阈值大于最大值",
        "purpose": "验证当提供的阈值大于 max_value 时，工具是否能抛出 ValueError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 300,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Max value must be an integer greater than threshold value, got 255\"}"
        },
        "execution_time": 0.0029976367950439453,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 阈值为0",
        "purpose": "验证工具在阈值为0时是否能正确执行阈值分割。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 0,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 0 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_thresholded.jpg\"}"
        },
        "execution_time": 0.06777286529541016,
        "is_functional_test": true
      },
      {
        "case_name": "边界条件测试 - 超长文件路径应用阈值分割",
        "purpose": "验证工具是否能处理超长输入文件路径的图像进行阈值分割。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_filename_in_windows_systems_extra.jpg",
          "threshold_value": 127,
          "max_value": 255
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Applied threshold 127 with max value 255 and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_filename_in_windows_systems_extra_thresholded.jpg\"}"
        },
        "execution_time": 0.04148459434509277,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "基本功能测试 - 检测有效图片的轮廓",
        "purpose": "验证工具可以正确检测一个存在的图片文件的轮廓，并返回数量和保存路径。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_contours_external_simple.jpg\"}"
        },
        "execution_time": 0.07831764221191406,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用默认参数检测轮廓",
        "purpose": "验证工具在使用推荐的默认参数时，能够正确检测图像轮廓并返回结果。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "mode": "tree",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Error reading image with Unicode path: Failed to decode image: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004082441329956055,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 处理不同格式图片的轮廓检测",
        "purpose": "验证工具可以处理PNG格式图像并成功检测其轮廓。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1 contours using mode 'external' and method 'simple', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$_test_contours_external_simple.png\"}"
        },
        "execution_time": 0.04614138603210449,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试访问隐藏文件进行轮廓检测",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的访问请求，防止敏感文件被读取。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 0.002996206283569336,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.png\"}"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "mode": "tree",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.06274747848510742,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 文件路径长度极限",
        "purpose": "验证工具是否能处理超长文件路径的图像文件。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf",
          "mode": "external",
          "method": "simple"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"File not found: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf\"}"
        },
        "execution_time": 0.005004167556762695,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test_median_filtered.png",
          "mode": "tree",
          "method": "chain_approx_none"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Detected 1484 contours using mode 'tree' and method 'chain_approx_none', saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\screenshot@#$_test_median_filtered_contours_tree_chain_approx_none.png\"}"
        },
        "execution_time": 0.049149513244628906,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "基本功能测试 - 查找圆形形状",
        "purpose": "验证工具可以正确查找图像中的圆形形状，并返回数量和位置信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_cropped.jpg",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.04161763191223,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 查找矩形形状",
        "purpose": "验证工具可以正确查找图像中的矩形形状，并返回数量和位置信息。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test_thresholded.png",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.16496205329895,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 查找其他支持的形状类型",
        "purpose": "验证工具是否支持除圆和矩形外的其他形状类型，如三角形。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test_median_filtered_contours_tree_chain_approx_none.png",
          "shape_type": "triangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.251174211502075,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - 尝试在隐藏目录中查找形状",
        "purpose": "验证工具是否能够安全地处理对隐藏文件路径的访问请求，防止敏感图像被读取。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.29319977760315,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 图像文件不存在",
        "purpose": "验证当指定的图像文件不存在时，工具是否能抛出 FileNotFoundError 异常。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.png",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.04403805732727,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 非图像文件输入",
        "purpose": "验证当提供的文件不是图像格式时，工具是否能优雅地处理错误。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.docx",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.076152086257935,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 超长文件路径",
        "purpose": "验证工具是否能处理超长文件路径的图像文件。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_filename_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_extracted.pdf",
          "shape_type": "circle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.19437289237976,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊字符文件名",
        "purpose": "验证工具是否能正确处理包含特殊字符的图像文件名。",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\screenshot@#$_test.png",
          "shape_type": "rectangle"
        },
        "response": {
          "error": "Tool call 'find_shapes_tool' was cancelled."
        },
        "execution_time": 40.068278074264526,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}