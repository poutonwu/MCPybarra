{
  "server_name": "server",
  "parent_dir": "mcp_text_file_processor_refined",
  "report_name": "mcp_text_file_processor_refined-server",
  "server_path": "workspace\\refinement\\mcp_text_file_processor_refined\\server.py",
  "timestamp": "2025-06-30T22:09:36.826968",
  "tools": [
    {
      "name": "get_text_file_contents",
      "description": "\n    读取一个或多个文本文件的内容，并支持按照指定的行范围进行读取。\n    此外，它将返回文件内容的哈希值，以便于后续操作中的并发控制。\n\n    Args:\n        file_path: 文件路径 (必填)。\n        start_line: 开始行号 (可选，默认为文件的第一行)。\n        end_line: 结束行号 (可选，默认为文件的最后一行)。\n        encoding: 文件编码 (可选，默认为 'utf-8-sig')。\n\n    Returns:\n        一个字典，包含文件内容（字符串）和文件内容的哈希值（字符串）。\n\n    示例:\n        获取 \"example.txt\" 中第5行至第10行的内容及哈希值:\n        get_text_file_contents(file_path=\"workspace/example.txt\", start_line=5, end_line=10)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "default": 0,
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "default": null,
            "title": "End Line",
            "type": "integer"
          },
          "encoding": {
            "default": "utf-8-sig",
            "title": "Encoding",
            "type": "string"
          }
        },
        "required": [
          "file_path"
        ],
        "title": "get_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "append_text_file_contents",
      "description": "\n    向现有的文本文件追加内容。\n\n    Args:\n        file_path: 文件路径 (必填)。\n        content_to_append: 要追加的内容 (必填)。\n        encoding: 文件编码 (可选，默认为 'utf-8-sig')。\n\n    Returns:\n        如果成功，则返回一个确认消息。\n\n    示例:\n        向 \"example.txt\" 追加新内容:\n        append_text_file_contents(file_path=\"workspace/example.txt\", content_to_append=\"这是要追加的新内容\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "content_to_append": {
            "title": "Content To Append",
            "type": "string"
          },
          "encoding": {
            "default": "utf-8-sig",
            "title": "Encoding",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "content_to_append"
        ],
        "title": "append_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "delete_text_file_contents",
      "description": "\n    删除文本文件中特定范围的内容。\n\n    Args:\n        file_path: 文件路径 (必填)。\n        start_line: 开始行号 (必填)。\n        end_line: 结束行号 (必填)。\n        encoding: 文件编码 (可选，默认为 'utf-8-sig')。\n\n    Returns:\n        如果成功，则返回一个确认消息。\n\n    示例:\n        删除 \"example.txt\" 中第5行至第10行的内容:\n        delete_text_file_contents(file_path=\"workspace/example.txt\", start_line=5, end_line=10)\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "start_line": {
            "title": "Start Line",
            "type": "integer"
          },
          "end_line": {
            "title": "End Line",
            "type": "integer"
          },
          "encoding": {
            "default": "utf-8-sig",
            "title": "Encoding",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "start_line",
          "end_line"
        ],
        "title": "delete_text_file_contentsArguments",
        "type": "object"
      }
    },
    {
      "name": "insert_text_file_contents",
      "description": "\n    在文本文件的指定位置插入内容。\n\n    Args:\n        file_path: 文件路径 (必填)。\n        line_number: 插入行号 (必填)。\n        content_to_insert: 要插入的内容 (必填)。\n        encoding: 文件编码 (可选，默认为 'utf-8-sig')。\n\n    Returns:\n        如果成功，则返回一个确认消息。\n\n    示例:\n        在 \"example.txt\" 的第5行插入新内容:\n        insert_text_file_contents(file_path=\"workspace/example.txt\", line_number=5, content_to_insert=\"这是要插入的新内容\n\")\n    ",
      "args_schema": {
        "properties": {
          "file_path": {
            "title": "File Path",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "integer"
          },
          "content_to_insert": {
            "title": "Content To Insert",
            "type": "string"
          },
          "encoding": {
            "default": "utf-8-sig",
            "title": "Encoding",
            "type": "string"
          }
        },
        "required": [
          "file_path",
          "line_number",
          "content_to_insert"
        ],
        "title": "insert_text_file_contentsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_text_file_contents": [
      {
        "case_name": "Basic_Read_File_Entire_Content",
        "purpose": "验证工具能够正确读取一个完整文本文件的内容及其哈希值。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description"
        },
        "response": {
          "result": "{\n  \"content\": \"Unnamed repository; edit this file 'description' to name the repository.\\n\",\n  \"hash\": \"85ab6c163d43a17ea9cf7788308bca1466f1b0a8d1cc92e26e9bf63da4062aee\"\n}"
        },
        "execution_time": 0.013997316360473633,
        "is_security_test": false
      },
      {
        "case_name": "Read_File_Specific_Line_Range",
        "purpose": "验证工具可以正确读取指定行范围的内容，例如第2到第5行。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks\\commit-msg.sample",
          "start_line": 2,
          "end_line": 5
        },
        "response": {
          "result": "{\n  \"content\": \"# An example hook script to check the commit log message.\\n# Called by \\\"git commit\\\" with one argument, the name of the file\\n# that has the commit message.  The hook should exit with non-zero\\n\",\n  \"hash\": \"943869970e8947a637894e13c7ceb19ffc9a8358c36ae2333e00efb845559ee6\"\n}"
        },
        "execution_time": 0.009507179260253906,
        "is_security_test": false
      },
      {
        "case_name": "Read_File_With_Custom_Encoding",
        "purpose": "验证工具支持自定义编码格式（如utf-8）并能正确读取内容和生成哈希。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "encoding": "utf-8"
        },
        "response": {
          "result": "{\n  \"content\": \"[core]\\n\\trepositoryformatversion = 0\\n\\tfilemode = false\\n\\tbare = false\\n\\tlogallrefupdates = true\\n\\tignorecase = true\\n\",\n  \"hash\": \"16ede81ff8225a028ea47d7da268da123355decf7cc0fa7b66b8cc4060005fa6\"\n}"
        },
        "execution_time": 0.012531042098999023,
        "is_security_test": false
      },
      {
        "case_name": "Read_Empty_File",
        "purpose": "验证工具在读取空文件时的行为是否符合预期（返回空字符串和有效哈希）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\COMMIT_EDITMSG"
        },
        "response": {
          "result": "{\n  \"content\": \"Attempting to commit without changes\\n\",\n  \"hash\": \"d9eab9f0c8664087e4af9cbb517e959ea2bde1ab0b61391a5ef1d2f33c048ba6\"\n}"
        },
        "execution_time": 0.007994651794433594,
        "is_security_test": false
      },
      {
        "case_name": "Start_Line_Exceeds_File_Length",
        "purpose": "验证当 start_line 超出文件实际行数时工具的处理逻辑。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "start_line": 100
        },
        "response": {
          "result": "{\n  \"content\": \"\",\n  \"hash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n}"
        },
        "execution_time": 0.008013010025024414,
        "is_security_test": false
      },
      {
        "case_name": "End_Line_Less_Than_Start_Line",
        "purpose": "验证当 end_line 小于 start_line 时工具是否抛出错误或返回空内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "start_line": 5,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.013518095016479492,
        "is_security_test": false
      },
      {
        "case_name": "File_Not_Exists",
        "purpose": "验证当提供的文件路径不存在时工具是否能正确报错或返回空结果。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 文件未找到: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt"
        },
        "execution_time": 0.005002737045288086,
        "is_security_test": false
      },
      {
        "case_name": "Read_Binary_File_As_Text",
        "purpose": "验证工具尝试读取非文本文件（如图片）时是否会报错或返回无效文本。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.0069942474365234375,
        "is_security_test": false
      },
      {
        "case_name": "Read_Hidden_System_File",
        "purpose": "验证工具是否有权限读取隐藏或系统文件，并能正确处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index"
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生未知错误: 'utf-8' codec can't decode byte 0x9e in position 14: invalid start byte"
        },
        "execution_time": 0.015007495880126953,
        "is_security_test": false
      },
      {
        "case_name": "Read_File_With_Special_Chars_In_Path",
        "purpose": "验证工具能否处理包含特殊字符的文件路径。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample"
        },
        "response": {
          "result": "{\n  \"content\": \"#!/bin/sh\\n#\\n# An example hook script to make use of push options.\\n# The example simply echoes all push options that start with 'echoback='\\n# and rejects all pushes when the \\\"reject\\\" push option is used.\\n#\\n# To enable this hook, rename this file to \\\"pre-receive\\\".\\n\\nif test -n \\\"$GIT_PUSH_OPTION_COUNT\\\"\\nthen\\n\\ti=0\\n\\twhile test \\\"$i\\\" -lt \\\"$GIT_PUSH_OPTION_COUNT\\\"\\n\\tdo\\n\\t\\teval \\\"value=\\\\$GIT_PUSH_OPTION_$i\\\"\\n\\t\\tcase \\\"$value\\\" in\\n\\t\\techoback=*)\\n\\t\\t\\techo \\\"echo from the pre-receive-hook: ${value#*=}\\\" >&2\\n\\t\\t\\t;;\\n\\t\\treject)\\n\\t\\t\\texit 1\\n\\t\\tesac\\n\\t\\ti=$((i + 1))\\n\\tdone\\nfi\\n\",\n  \"hash\": \"a4c3d2b9c7bb3fd8d1441c31bd4ee71a595d66b44fcf49ddb310252320169989\"\n}"
        },
        "execution_time": 0.008995294570922852,
        "is_security_test": false
      },
      {
        "case_name": "Read_File_From_Nested_Directory",
        "purpose": "验证工具能否正确读取嵌套目录中的文本文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\.git\\hooks\\update.sample"
        },
        "response": {
          "result": "{\n  \"content\": \"#!/bin/sh\\n#\\n# An example hook script to block unannotated tags from entering.\\n# Called by \\\"git receive-pack\\\" with arguments: refname sha1-old sha1-new\\n#\\n# To enable this hook, rename this file to \\\"update\\\".\\n#\\n# Config\\n# ------\\n# hooks.allowunannotated\\n#   This boolean sets whether unannotated tags will be allowed into the\\n#   repository.  By default they won't be.\\n# hooks.allowdeletetag\\n#   This boolean sets whether deleting tags will be allowed in the\\n#   repository.  By default they won't be.\\n# hooks.allowmodifytag\\n#   This boolean sets whether a tag may be modified after creation. By default\\n#   it won't be.\\n# hooks.allowdeletebranch\\n#   This boolean sets whether deleting branches will be allowed in the\\n#   repository.  By default they won't be.\\n#...[截断]，共计4090字符，剩余3290字符"
        },
        "execution_time": 0.01100301742553711,
        "is_security_test": false
      },
      {
        "case_name": "Read_File_With_UTF_16_Encoding",
        "purpose": "验证工具是否支持其他编码格式（如utf-16）并能正确解析内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD",
          "encoding": "utf-16"
        },
        "response": {
          "error": "ToolException: Error executing tool get_text_file_contents: 读取文件时发生未知错误: UTF-16 stream does not start with BOM"
        },
        "execution_time": 0.019283771514892578,
        "is_security_test": false
      }
    ],
    "append_text_file_contents": [
      {
        "case_name": "Basic_Append_To_Existing_File",
        "purpose": "验证工具能够正确向一个已存在的文本文件追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "content_to_append": "\n这是追加的新行内容。"
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description"
        },
        "execution_time": 0.003999233245849609,
        "is_security_test": false
      },
      {
        "case_name": "Append_File_With_Custom_Encoding",
        "purpose": "验证工具在使用自定义编码（如utf-8）时能正确追加内容到文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "content_to_append": "\n[custom]\nkey = value",
          "encoding": "utf-8"
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
        },
        "execution_time": 0.0060100555419921875,
        "is_security_test": false
      },
      {
        "case_name": "Append_To_Empty_File",
        "purpose": "验证工具能够向空文件中正确追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\COMMIT_EDITMSG",
          "content_to_append": "Initial append content."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\COMMIT_EDITMSG"
        },
        "execution_time": 0.009495973587036133,
        "is_security_test": false
      },
      {
        "case_name": "Append_To_Nonexistent_File",
        "purpose": "验证当目标文件不存在时，工具是否抛出错误或如何处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt",
          "content_to_append": "This should not be written."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt"
        },
        "execution_time": 0.007072925567626953,
        "is_security_test": false
      },
      {
        "case_name": "Append_Binary_Data_As_Text",
        "purpose": "验证工具尝试向非文本文件（如图片）追加文本内容时的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "content_to_append": "\nAppending text to a binary file."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.007010936737060547,
        "is_security_test": false
      },
      {
        "case_name": "Append_To_Hidden_System_File",
        "purpose": "验证工具是否有权限向隐藏或系统文件追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index",
          "content_to_append": "\nHidden file append test."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index"
        },
        "execution_time": 0.003999471664428711,
        "is_security_test": false
      },
      {
        "case_name": "Append_With_Special_Chars_In_Path",
        "purpose": "验证工具能否处理包含特殊字符的文件路径并正确追加内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample",
          "content_to_append": "\n# Special append test for path with underscores and dots."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample"
        },
        "execution_time": 0.0040013790130615234,
        "is_security_test": false
      },
      {
        "case_name": "Append_To_Readonly_File",
        "purpose": "验证工具是否能向只读文件追加内容，预期应失败。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "content_to_append": "\nReadonly file append attempt."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD"
        },
        "execution_time": 0.006308794021606445,
        "is_security_test": false
      },
      {
        "case_name": "Append_UTF16_Encoded_Content",
        "purpose": "验证工具是否支持将UTF-16编码的内容追加到文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD",
          "content_to_append": "﻿追加的UTF-16内容",
          "encoding": "utf-16"
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD"
        },
        "execution_time": 0.004999876022338867,
        "is_security_test": false
      },
      {
        "case_name": "Append_Null_Content",
        "purpose": "验证工具在追加空字符串时是否正常处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "content_to_append": ""
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude"
        },
        "execution_time": 0.003997325897216797,
        "is_security_test": false
      },
      {
        "case_name": "Append_To_Large_File",
        "purpose": "验证工具在大文件末尾追加内容时的表现和性能。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_log_file.log",
          "content_to_append": "\nAppended line at the end of a large file."
        },
        "response": {
          "result": "内容已成功追加到 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_log_file.log"
        },
        "execution_time": 0.010000944137573242,
        "is_security_test": false
      }
    ],
    "insert_text_file_contents": [
      {
        "case_name": "Basic_Insert_Content_At_Valid_Line",
        "purpose": "验证工具能够在指定行号正确插入内容到文本文件中。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "line_number": 2,
          "content_to_insert": "这是插入的新内容。\n"
        },
        "response": {
          "result": "已成功在 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description 的第 2 行插入内容"
        },
        "execution_time": 0.005509853363037109,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_At_Beginning_Of_File",
        "purpose": "验证工具能够将内容插入到文件的开头（行号为1）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "line_number": 1,
          "content_to_insert": "# 插入到文件开头的内容\n"
        },
        "response": {
          "result": "已成功在 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config 的第 1 行插入内容"
        },
        "execution_time": 0.006910085678100586,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_At_End_Of_File",
        "purpose": "验证工具能够将内容插入到文件末尾（行号超过实际行数）。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "line_number": 100,
          "content_to_insert": "这是插入到文件末尾的内容。\n"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.010999917984008789,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Empty_Content_At_Valid_Line",
        "purpose": "验证工具在插入空字符串时是否仍能成功执行操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "line_number": 3,
          "content_to_insert": ""
        },
        "response": {
          "result": "已成功在 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude 的第 3 行插入内容"
        },
        "execution_time": 0.010053873062133789,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_With_Custom_Encoding",
        "purpose": "验证工具在使用自定义编码格式（如utf-8）时能否正确插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD",
          "line_number": 2,
          "content_to_insert": "UTF-8 编码插入内容。\n",
          "encoding": "utf-8"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: 'utf-8' codec can't decode byte 0xff in position 161: invalid start byte"
        },
        "execution_time": 0.0039997100830078125,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_To_Nonexistent_File",
        "purpose": "验证当目标文件不存在时，工具是否会抛出错误或如何处理。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt",
          "line_number": 1,
          "content_to_insert": "尝试插入到一个不存在的文件。\n"
        },
        "response": {
          "result": "已成功在 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt 的第 1 行插入内容"
        },
        "execution_time": 0.006999969482421875,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_To_Binary_File",
        "purpose": "验证工具尝试向非文本文件（如图片）插入文本内容时的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "line_number": 1,
          "content_to_insert": "尝试插入到二进制文件。\n"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.006992340087890625,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_To_Hidden_System_File",
        "purpose": "验证工具是否有权限向隐藏或系统文件插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index",
          "line_number": 2,
          "content_to_insert": "隐藏文件插入测试内容。\n"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: 'utf-8' codec can't decode byte 0x9e in position 14: invalid start byte"
        },
        "execution_time": 0.00400090217590332,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_With_Special_Chars_In_Path",
        "purpose": "验证工具能否处理包含特殊字符的文件路径并正确插入内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample",
          "line_number": 4,
          "content_to_insert": "# 特殊路径插入测试内容\n"
        },
        "response": {
          "result": "已成功在 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample 的第 4 行插入内容"
        },
        "execution_time": 0.007999658584594727,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_To_Readonly_File",
        "purpose": "验证工具是否能向只读文件插入内容，预期应失败或抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "line_number": 2,
          "content_to_insert": "尝试插入到只读文件。\n"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.004000425338745117,
        "is_security_test": false
      },
      {
        "case_name": "Insert_UTF16_Encoded_Content",
        "purpose": "验证工具是否支持将UTF-16编码的内容插入到文件。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\logs\\HEAD",
          "line_number": 2,
          "content_to_insert": "﻿UTF-16 编码插入内容\n",
          "encoding": "utf-16"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: UTF-16 stream does not start with BOM"
        },
        "execution_time": 0.009000778198242188,
        "is_security_test": false
      },
      {
        "case_name": "Insert_Content_With_Invalid_Line_Number",
        "purpose": "验证当 line_number 为负数或零时，工具是否报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "line_number": -1,
          "content_to_insert": "无效行号插入内容。\n"
        },
        "response": {
          "error": "ToolException: Error executing tool insert_text_file_contents: 插入内容时发生未知错误: line_number 必须是非负整数"
        },
        "execution_time": 0.003998279571533203,
        "is_security_test": false
      }
    ],
    "delete_text_file_contents": [
      {
        "case_name": "Basic_Delete_Content_In_Range",
        "purpose": "验证工具能够正确删除文本文件中指定行范围的内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "start_line": 2,
          "end_line": 3
        },
        "response": {
          "result": "已成功删除 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description 中第 2 行至第 3 行的内容"
        },
        "execution_time": 0.004503488540649414,
        "is_security_test": false
      },
      {
        "case_name": "Delete_Entire_File_Content",
        "purpose": "验证当 start_line = 1 且 end_line 为文件最大行号时，是否能成功删除全部内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude",
          "start_line": 1,
          "end_line": 10
        },
        "response": {
          "result": "已成功删除 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\info\\exclude 中第 1 行至第 10 行的内容"
        },
        "execution_time": 0.00400090217590332,
        "is_security_test": false
      },
      {
        "case_name": "Delete_With_Custom_Encoding",
        "purpose": "验证工具在使用自定义编码（如utf-8）时能否正确删除指定行范围内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "start_line": 3,
          "end_line": 5,
          "encoding": "utf-8"
        },
        "response": {
          "result": "已成功删除 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config 中第 3 行至第 5 行的内容"
        },
        "execution_time": 0.004999637603759766,
        "is_security_test": false
      },
      {
        "case_name": "Start_Line_Equals_End_Line",
        "purpose": "验证当 start_line 等于 end_line 时，是否仅删除单行内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks\\commit-msg.sample",
          "start_line": 4,
          "end_line": 4
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: end_line 必须是非负整数且大于start_line"
        },
        "execution_time": 0.004509687423706055,
        "is_security_test": false
      },
      {
        "case_name": "End_Line_Exceeds_File_Length",
        "purpose": "验证当 end_line 超出文件实际行数时，是否从 start_line 删除到文件末尾。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "start_line": 2,
          "end_line": 100
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.00900125503540039,
        "is_security_test": false
      },
      {
        "case_name": "Start_Line_Zero",
        "purpose": "验证当 start_line 为 0 时是否抛出错误或拒绝执行。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "start_line": 0,
          "end_line": 5
        },
        "response": {
          "result": "已成功删除 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description 中第 0 行至第 5 行的内容"
        },
        "execution_time": 0.007999897003173828,
        "is_security_test": false
      },
      {
        "case_name": "File_Not_Exists",
        "purpose": "验证当提供的文件路径不存在时工具是否能正确报错。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt",
          "start_line": 1,
          "end_line": 5
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 文件未找到: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_existent_file.txt"
        },
        "execution_time": 0.008002281188964844,
        "is_security_test": false
      },
      {
        "case_name": "Invalid_Line_Range_Start_Greater_Than_End",
        "purpose": "验证当 start_line > end_line 时工具是否抛出错误。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\description",
          "start_line": 6,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: end_line 必须是非负整数且大于start_line"
        },
        "execution_time": 0.005496025085449219,
        "is_security_test": false
      },
      {
        "case_name": "Readonly_File_Delete_Content",
        "purpose": "验证工具是否能向只读文件中删除内容，预期应失败或抛出异常。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.00851583480834961,
        "is_security_test": false
      },
      {
        "case_name": "Hidden_System_File_Delete_Content",
        "purpose": "验证工具是否有权限对隐藏或系统文件进行删除操作。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index",
          "start_line": 2,
          "end_line": 3
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: 'utf-8' codec can't decode byte 0x9e in position 14: invalid start byte"
        },
        "execution_time": 0.006997823715209961,
        "is_security_test": false
      },
      {
        "case_name": "Delete_Content_From_Binary_File",
        "purpose": "验证工具尝试对非文本文件（如图片）进行删除内容时的行为。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "start_line": 1,
          "end_line": 2
        },
        "response": {
          "error": "ToolException: Error executing tool delete_text_file_contents: 删除内容时发生未知错误: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte"
        },
        "execution_time": 0.009004592895507812,
        "is_security_test": false
      },
      {
        "case_name": "Delete_Content_With_Special_Chars_In_Path",
        "purpose": "验证工具能否处理包含特殊字符的文件路径并正确删除内容。",
        "args": {
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample",
          "start_line": 3,
          "end_line": 5
        },
        "response": {
          "result": "已成功删除 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git\\hooks\\pre-receive.sample 中第 3 行至第 5 行的内容"
        },
        "execution_time": 0.006999969482421875,
        "is_security_test": false
      }
    ]
  },
  "total_cases": 47
}