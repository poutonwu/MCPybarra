{
  "server_name": "server",
  "parent_dir": "mongodb_mcp_server_operations_refined",
  "report_name": "mongodb_mcp_server_operations_refined-server",
  "server_path": "workspace\\refinement\\mongodb_mcp_server_operations_refined\\server.py",
  "timestamp": "2025-06-30T22:10:03.900674",
  "tools": [
    {
      "name": "mcp_list_databases",
      "description": "\n    列出MongoDB服务器上的所有数据库。\n\n    Returns:\n        一个包含数据库名称列表的JSON格式字符串。\n\n    示例:\n        >>> mcp_list_databases()\n        '{\"databases\": [\"test_db\", \"admin\", \"local\"]}'\n    ",
      "args_schema": {
        "properties": {},
        "title": "mcp_list_databasesArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_list_collections",
      "description": "\n    列出指定数据库中的所有集合。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n\n    Returns:\n        一个包含集合名称列表的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库名称无效或不存在。\n\n    示例:\n        >>> mcp_list_collections(database_name=\"test_db\")\n        '{\"collections\": [\"users\", \"orders\"]}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          }
        },
        "required": [
          "database_name"
        ],
        "title": "mcp_list_collectionsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_insert_document",
      "description": "\n    向指定数据库和集合中插入新文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        document: 要插入的文档数据，必须是一个字典 (必填)。\n\n    Returns:\n        一个包含插入结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或文档不是字典。\n\n    示例:\n        >>> mcp_insert_document(database_name=\"test_db\", collection_name=\"users\", \n        ...                     document={\"name\": \"Alice\", \"age\": 30})\n        '{\"inserted_id\": \"5f9d1b3b9c9d6e1d9c9d6e1d\"}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "object"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "document"
        ],
        "title": "mcp_insert_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_find_documents",
      "description": "\n    在指定数据库和集合中查询符合条件的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 查询过滤条件，一个字典 (可选，默认为None，即返回所有文档)。\n        projection: 投影字段，指定要返回的字段 (可选，默认为None，即返回所有字段)。\n        limit: 结果数量限制，0表示无限制 (可选，默认为0)。\n\n    Returns:\n        一个包含查询结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_find_documents(database_name=\"test_db\", collection_name=\"users\",\n        ...                   filter={\"age\": {\"$gt\": 25}}, projection={\"name\": 1}, limit=2)\n        '[{\"_id\": \"5f9d1b3b9c9d6e1d9c9d6e1d\", \"name\": \"Alice\"}]'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "default": null,
            "title": "Filter",
            "type": "object"
          },
          "projection": {
            "default": null,
            "title": "Projection",
            "type": "object"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "database_name",
          "collection_name"
        ],
        "title": "mcp_find_documentsArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_update_document",
      "description": "\n    更新指定数据库和集合中的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 更新过滤条件，一个字典 (必填)。\n        update: 更新操作符和值，一个字典 (必填)。\n        multi: 是否更新多个文档 (可选，默认为False，即只更新第一个匹配的文档)。\n\n    Returns:\n        一个包含更新结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_update_document(database_name=\"test_db\", collection_name=\"users\",\n        ...                     filter={\"name\": \"Alice\"}, update={\"$set\": {\"age\": 31}}, multi=False)\n        '{\"matched_count\": 1, \"modified_count\": 1}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "title": "Filter",
            "type": "object"
          },
          "update": {
            "title": "Update",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "filter",
          "update"
        ],
        "title": "mcp_update_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "mcp_delete_document",
      "description": "\n    删除指定数据库和集合中的文档。\n\n    Args:\n        database_name: 数据库名称 (必填)。\n        collection_name: 集合名称 (必填)。\n        filter: 删除过滤条件，一个字典 (必填)。\n        multi: 是否删除多个文档 (可选，默认为False，即只删除第一个匹配的文档)。\n\n    Returns:\n        一个包含删除结果的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果数据库、集合名称无效或参数类型不正确。\n\n    示例:\n        >>> mcp_delete_document(database_name=\"test_db\", collection_name=\"users\",\n        ...                     filter={\"name\": \"Alice\"}, multi=False)\n        '{\"deleted_count\": 1}'\n    ",
      "args_schema": {
        "properties": {
          "database_name": {
            "title": "Database Name",
            "type": "string"
          },
          "collection_name": {
            "title": "Collection Name",
            "type": "string"
          },
          "filter": {
            "title": "Filter",
            "type": "object"
          },
          "multi": {
            "default": false,
            "title": "Multi",
            "type": "boolean"
          }
        },
        "required": [
          "database_name",
          "collection_name",
          "filter"
        ],
        "title": "mcp_delete_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "mcp_list_databases": [
      {
        "case_name": "基本功能测试 - 列出所有数据库",
        "purpose": "验证工具可以正确连接到MongoDB服务器并列出所有存在的数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.008002996444702148,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - MongoDB服务器中无数据库",
        "purpose": "验证当MongoDB服务器中没有用户创建的数据库时，是否返回默认数据库或空列表。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.005002021789550781,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - MongoDB服务器未运行",
        "purpose": "验证当MongoDB服务器未启动时，工具是否能正确捕获连接异常并返回相应错误信息。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.007999420166015625,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 非授权访问尝试",
        "purpose": "验证在没有适当权限的情况下调用该工具时，是否会因认证失败而拒绝访问，并返回安全错误信息。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.003998279571533203,
        "is_security_test": true
      },
      {
        "case_name": "性能测试 - 大量数据库存在时的响应",
        "purpose": "验证在系统中存在大量数据库（例如100个以上）时，工具能否正常列出所有数据库且响应时间在合理范围内。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.009005308151245117,
        "is_security_test": false
      },
      {
        "case_name": "兼容性测试 - 不同版本MongoDB服务器",
        "purpose": "验证工具在不同版本的MongoDB服务器上是否都能正确列出数据库。",
        "args": {},
        "response": {
          "result": "{\"databases\": [\"admin\", \"config\", \"does_not_exist_db\", \"large_db\", \"local\", \"mcp-test\", \"nonexistent_db\", \"restricted_db\", \"secure_db\", \"test_db\", \"users\"]}"
        },
        "execution_time": 0.0039958953857421875,
        "is_security_test": false
      }
    ],
    "mcp_list_collections": [
      {
        "case_name": "基本功能测试 - 列出存在的数据库中的集合",
        "purpose": "验证工具可以正确连接到MongoDB并列出指定数据库中存在的集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it\", \"test_collection\", \"invalid/collection*name\", \"user_profiles\", \"special_chars_collection\", \"nonexistent_collection\", \"a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues\", \"users\"]}"
        },
        "execution_time": 0.006000518798828125,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 数据库中无集合时返回空数组",
        "purpose": "验证当指定的数据库存在但没有任何集合时，工具是否返回空集合列表。",
        "args": {
          "database_name": "empty_db"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'empty_db' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 多个集合存在时的响应",
        "purpose": "验证当指定数据库中存在多个集合时，工具是否能正确列出所有集合名称。",
        "args": {
          "database_name": "mcp-test"
        },
        "response": {
          "result": "{\"collections\": [\"users\", \"test\"]}"
        },
        "execution_time": 0.008000850677490234,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最大长度数据库名称",
        "purpose": "验证工具在数据库名称达到最大允许长度（如128字符）时是否仍能正常处理。",
        "args": {
          "database_name": "a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.006001472473144531,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 空字符串作为数据库名称",
        "purpose": "验证工具是否拒绝空字符串作为数据库名称输入，并抛出相应错误。",
        "args": {
          "database_name": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.006996870040893555,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 提供无效的数据库名称",
        "purpose": "验证工具在数据库名称包含非法字符（如/、\\、空格等）时是否能正确捕获错误。",
        "args": {
          "database_name": "invalid/db name"
        },
        "response": {
          "result": "{\"error\": \"Failed to list collections: \\u6570\\u636e\\u5e93 'invalid/db name' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 数据库不存在",
        "purpose": "验证当提供的数据库名称不存在时，工具是否能抛出ValueError并给出明确提示。",
        "args": {
          "database_name": "nonexistent_db"
        },
        "response": {
          "result": "{\"collections\": [\"users\", \"test_collection\"]}"
        },
        "execution_time": 0.009003877639770508,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 非授权用户尝试访问受限制数据库",
        "purpose": "验证未授权用户尝试列出受限制数据库集合时，是否因权限不足被拒绝访问。",
        "args": {
          "database_name": "restricted_db"
        },
        "response": {
          "result": "{\"collections\": [\"restricted_collection\"]}"
        },
        "execution_time": 0.0039980411529541016,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问系统保留数据库",
        "purpose": "验证工具是否阻止用户访问MongoDB内部系统数据库（如admin、local）的集合。",
        "args": {
          "database_name": "admin"
        },
        "response": {
          "result": "{\"collections\": [\"system.version\", \"system_logs\"]}"
        },
        "execution_time": 0.0039997100830078125,
        "is_security_test": false
      },
      {
        "case_name": "性能测试 - 大量集合存在时的响应时间",
        "purpose": "验证在指定数据库中存在大量集合（例如1000个以上）时，工具能否正常响应且耗时在合理范围内。",
        "args": {
          "database_name": "large_db"
        },
        "response": {
          "result": "{\"collections\": [\"large_collection\"]}"
        },
        "execution_time": 0.007018327713012695,
        "is_security_test": false
      },
      {
        "case_name": "兼容性测试 - MongoDB不同版本下的行为一致性",
        "purpose": "验证工具在不同版本的MongoDB服务器上是否都能正确列出集合。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it\", \"test_collection\", \"invalid/collection*name\", \"user_profiles\", \"special_chars_collection\", \"nonexistent_collection\", \"a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues\", \"users\"]}"
        },
        "execution_time": 0.0049991607666015625,
        "is_security_test": false
      },
      {
        "case_name": "健壮性测试 - MongoDB服务未启动时的行为",
        "purpose": "验证当MongoDB服务未运行时，调用该工具是否会正确捕获连接异常并返回错误信息。",
        "args": {
          "database_name": "test_db"
        },
        "response": {
          "result": "{\"collections\": [\"a_collection_with_a_very_long_name_that_may_reach_the_limit_of_mongodb_max_key_length_and_test_how_tool_handles_it\", \"test_collection\", \"invalid/collection*name\", \"user_profiles\", \"special_chars_collection\", \"nonexistent_collection\", \"a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues\", \"users\"]}"
        },
        "execution_time": 0.0050008296966552734,
        "is_security_test": false
      }
    ],
    "mcp_insert_document": [
      {
        "case_name": "基本功能测试 - 成功插入文档到现有集合",
        "purpose": "验证工具可以向存在的数据库和集合中正确插入一个合法文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": {
            "name": "Bob",
            "age": 25
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef544567d\"}"
        },
        "execution_time": 0.0069942474365234375,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 插入包含特殊字符的文档",
        "purpose": "验证工具可以插入包含特殊字符（如中文、符号）的文档数据。",
        "args": {
          "database_name": "test_db",
          "collection_name": "special_chars_collection",
          "document": {
            "用户名": "张三",
            "address": "北京市朝阳区@123号"
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef544567e\"}"
        },
        "execution_time": 0.005011081695556641,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 插入嵌套结构文档",
        "purpose": "验证工具支持插入包含嵌套对象的复杂结构文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "user_profiles",
          "document": {
            "name": "Alice",
            "profile": {
              "email": "alice@example.com",
              "preferences": {
                "theme": "dark",
                "notifications": true
              }
            }
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef544567f\"}"
        },
        "execution_time": 0.008000612258911133,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最大长度数据库名称",
        "purpose": "验证工具在数据库名称达到最大允许长度时是否仍能正常处理插入操作。",
        "args": {
          "database_name": "a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling",
          "collection_name": "test",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.004515647888183594,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最大长度集合名称",
        "purpose": "验证工具在集合名称达到最大允许长度时是否仍能正常处理插入操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "document": {
            "key": "value"
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef5445680\"}"
        },
        "execution_time": 0.004995107650756836,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 数据库名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为数据库名称输入，并抛出相应错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "document": {
            "name": "ErrorUser"
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.006994962692260742,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 集合名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为集合名称输入，并抛出相应错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "document": {
            "name": "ErrorUser"
          }
        },
        "response": {
          "result": "{\"error\": \"Failed to insert document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 文档参数不是字典",
        "purpose": "验证工具是否拒绝非字典类型的文档参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "document": [
            "name",
            "age"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_insert_document: 1 validation error for mcp_insert_documentArguments\ndocument\n  Input should be a valid dictionary [type=dict_type, input_value=['name', 'age'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.0030007362365722656,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试插入文档到受限制数据库",
        "purpose": "验证未授权用户尝试插入文档到受限制数据库时，是否因权限不足被拒绝访问。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "document": {
            "name": "UnauthorizedInsert"
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef5445681\"}"
        },
        "execution_time": 0.0070667266845703125,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试插入文档到系统保留数据库",
        "purpose": "验证工具是否阻止用户向MongoDB内部系统数据库（如admin、local）插入文档。",
        "args": {
          "database_name": "admin",
          "collection_name": "system_logs",
          "document": {
            "log": "security test attempt"
          }
        },
        "response": {
          "result": "{\"inserted_id\": \"68629b068d98df9ef5445682\"}"
        },
        "execution_time": 0.0040056705474853516,
        "is_security_test": false
      }
    ],
    "mcp_find_documents": [
      {
        "case_name": "基本功能测试 - 查询集合中所有文档",
        "purpose": "验证工具可以正确查询指定数据库和集合中的所有文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users"
        },
        "response": {
          "result": "[{\"_id\": \"68629b068d98df9ef544567d\", \"name\": \"Bob\", \"age\": 25}]"
        },
        "execution_time": 0.0060694217681884766,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 使用过滤条件查询文档",
        "purpose": "验证工具支持使用过滤条件查询符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$gt": 25
            }
          }
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.008001327514648438,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 使用过滤与投影组合查询",
        "purpose": "验证工具支持同时使用过滤条件和字段投影来查询特定字段。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$lt": 30
            }
          },
          "projection": {
            "name": 1,
            "_id": 0
          }
        },
        "response": {
          "result": "[{\"name\": \"Bob\"}]"
        },
        "execution_time": 0.00751042366027832,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 查询空集合",
        "purpose": "验证当指定集合为空时，工具是否返回空结果。",
        "args": {
          "database_name": "test_db",
          "collection_name": "empty_collection"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.003999471664428711,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最大长度数据库名称进行查询",
        "purpose": "验证工具在数据库名称达到最大允许长度时是否仍能正常处理查询操作。",
        "args": {
          "database_name": "a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling",
          "collection_name": "test"
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.004001140594482422,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 使用最大长度集合名称进行查询",
        "purpose": "验证工具在集合名称达到最大允许长度时是否仍能正常处理查询操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues"
        },
        "response": {
          "result": "[{\"_id\": \"6857ee5f75df00337e4c0c6f\", \"name\": \"Test User\", \"age\": 28}, {\"_id\": \"68629b068d98df9ef5445680\", \"key\": \"value\"}]"
        },
        "execution_time": 0.00829768180847168,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 数据库名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为数据库名称输入，并抛出相应错误。",
        "args": {
          "database_name": "",
          "collection_name": "users"
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 集合名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为集合名称输入，并抛出相应错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": ""
        },
        "response": {
          "result": "{\"error\": \"Failed to find documents: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.0040018558502197266,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 过滤参数不是字典类型",
        "purpose": "验证工具是否拒绝非字典类型的filter参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.008002042770385742,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 投影参数不是字典类型",
        "purpose": "验证工具是否拒绝非字典类型的projection参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "projection": "invalid_projection_string"
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_find_documents: 1 validation error for mcp_find_documentsArguments\nprojection\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_projection_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.0030012130737304688,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问受限制数据库",
        "purpose": "验证未授权用户尝试查询受限制数据库中的集合时，是否因权限不足被拒绝访问。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection"
        },
        "response": {
          "result": "[{\"_id\": \"6862968254d99b844f558b8e\", \"data\": \"modified unauthorized data\"}, {\"_id\": \"68629b068d98df9ef5445681\", \"name\": \"UnauthorizedInsert\"}]"
        },
        "execution_time": 0.005692481994628906,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试访问系统保留数据库",
        "purpose": "验证工具是否阻止用户访问MongoDB内部系统数据库（如admin、local）的文档。",
        "args": {
          "database_name": "admin",
          "collection_name": "system.version"
        },
        "response": {
          "result": "[{\"_id\": \"featureCompatibilityVersion\", \"version\": \"7.0\"}, {\"_id\": \"68626d55029e5cd2f7c9b28f\", \"key\": \"test_key\", \"value\": \"test_value\"}]"
        },
        "execution_time": 0.008001565933227539,
        "is_security_test": false
      }
    ],
    "mcp_update_document": [
      {
        "case_name": "基本功能测试 - 成功更新单个匹配文档",
        "purpose": "验证工具可以正确更新指定数据库和集合中第一个匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": {
            "$set": {
              "age": 31
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 0, \"modified_count\": 0}"
        },
        "execution_time": 0.005999088287353516,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 更新多个匹配文档",
        "purpose": "验证当multi参数设置为True时，工具能够更新所有符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Bob"
          },
          "update": {
            "$inc": {
              "age": 1
            }
          },
          "multi": true
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.010007143020629883,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 使用复杂查询条件更新嵌套字段",
        "purpose": "验证工具支持使用嵌套字段作为过滤条件并更新嵌套结构数据。",
        "args": {
          "database_name": "test_db",
          "collection_name": "user_profiles",
          "filter": {
            "profile.preferences.theme": "dark"
          },
          "update": {
            "$set": {
              "profile.preferences.notifications": false
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 0}"
        },
        "execution_time": 0.006949186325073242,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 更新最大长度数据库名称中的文档",
        "purpose": "验证工具在数据库名称达到最大允许长度（如128字符）时是否仍能正常处理更新操作。",
        "args": {
          "database_name": "a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling",
          "collection_name": "test",
          "filter": {
            "key": "value"
          },
          "update": {
            "$set": {
              "new_key": "updated_value"
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.006999015808105469,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 更新最大长度集合名称中的文档",
        "purpose": "验证工具在集合名称达到最大允许长度时是否仍能正常处理更新操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "filter": {
            "key": "value"
          },
          "update": {
            "$set": {
              "new_key": "updated_value"
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.011003255844116211,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 数据库名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为数据库名称输入，并抛出相应错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "filter": {
            "name": "ErrorUser"
          },
          "update": {
            "$set": {
              "age": 99
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.007985830307006836,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 集合名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为集合名称输入，并抛出相应错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "filter": {
            "name": "ErrorUser"
          },
          "update": {
            "$set": {
              "age": 99
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to update document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.005004405975341797,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - filter参数不是字典类型",
        "purpose": "验证工具是否拒绝非字典类型的filter参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string",
          "update": {
            "$set": {
              "age": 99
            }
          },
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.004999399185180664,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - update参数不是字典类型",
        "purpose": "验证工具是否拒绝非字典类型的update参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Alice"
          },
          "update": "invalid_update_string",
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_update_document: 1 validation error for mcp_update_documentArguments\nupdate\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_update_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.010004997253417969,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试更新受限制数据库中的文档",
        "purpose": "验证未授权用户尝试更新受限制数据库中的文档时，是否因权限不足被拒绝访问。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "filter": {
            "name": "UnauthorizedUpdate"
          },
          "update": {
            "$set": {
              "status": "blocked"
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 0, \"modified_count\": 0}"
        },
        "execution_time": 0.0059986114501953125,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试更新系统保留数据库中的文档",
        "purpose": "验证工具是否阻止用户更新MongoDB内部系统数据库（如admin、local）中的文档。",
        "args": {
          "database_name": "admin",
          "collection_name": "system_logs",
          "filter": {
            "log": "security test attempt"
          },
          "update": {
            "$set": {
              "log": "modified_attempt"
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 1, \"modified_count\": 1}"
        },
        "execution_time": 0.008000373840332031,
        "is_security_test": false
      },
      {
        "case_name": "性能测试 - 大量数据存在时更新响应时间",
        "purpose": "验证在集合中存在大量文档时，工具能否正常执行更新操作且耗时在合理范围内。",
        "args": {
          "database_name": "large_db",
          "collection_name": "large_collection",
          "filter": {
            "_id": "6857ee5f75df00337e4c0c6f"
          },
          "update": {
            "$set": {
              "processed": true
            }
          },
          "multi": false
        },
        "response": {
          "result": "{\"matched_count\": 0, \"modified_count\": 0}"
        },
        "execution_time": 0.006585597991943359,
        "is_security_test": false
      }
    ],
    "mcp_delete_document": [
      {
        "case_name": "基本功能测试 - 删除单个匹配文档",
        "purpose": "验证工具可以正确删除指定数据库和集合中第一个匹配的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "name": "Bob"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.009999990463256836,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 删除多个匹配文档",
        "purpose": "验证当multi参数设置为True时，工具能够删除所有符合条件的文档。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": {
            "age": {
              "$lt": 30
            }
          },
          "multi": true
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.012000799179077148,
        "is_security_test": false
      },
      {
        "case_name": "基本功能测试 - 使用复杂查询条件删除嵌套字段文档",
        "purpose": "验证工具支持使用嵌套字段作为过滤条件并删除嵌套结构数据。",
        "args": {
          "database_name": "test_db",
          "collection_name": "user_profiles",
          "filter": {
            "profile.preferences.notifications": true
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.011004209518432617,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 删除最大长度数据库名称中的文档",
        "purpose": "验证工具在数据库名称达到最大允许长度（如128字符）时是否仍能正常处理删除操作。",
        "args": {
          "database_name": "a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling",
          "collection_name": "test",
          "filter": {
            "key": "value"
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: \\u6570\\u636e\\u5e93 'a_very_long_database_name_that_is_exactly_128_characters_in_length_to_test_boundary_conditions_and_ensure_correct_handling' \\u4e0d\\u5b58\\u5728\\u3002\"}"
        },
        "execution_time": 0.009992599487304688,
        "is_security_test": false
      },
      {
        "case_name": "边界条件测试 - 删除最大长度集合名称中的文档",
        "purpose": "验证工具在集合名称达到最大允许长度时是否仍能正常处理删除操作。",
        "args": {
          "database_name": "test_db",
          "collection_name": "a_very_long_collection_name_that_exceeds_normal_limits_and_might_cause_issues",
          "filter": {
            "key": "value"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 1}"
        },
        "execution_time": 0.010512113571166992,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 数据库名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为数据库名称输入，并抛出相应错误。",
        "args": {
          "database_name": "",
          "collection_name": "users",
          "filter": {
            "name": "ErrorUser"
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: 'database_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.011430501937866211,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - 集合名称为空字符串",
        "purpose": "验证工具是否拒绝空字符串作为集合名称输入，并抛出相应错误。",
        "args": {
          "database_name": "test_db",
          "collection_name": "",
          "filter": {
            "name": "ErrorUser"
          },
          "multi": false
        },
        "response": {
          "result": "{\"error\": \"Failed to delete document: 'collection_name' \\u5fc5\\u987b\\u662f\\u6709\\u6548\\u7684\\u5b57\\u7b26\\u4e32\\u3002\"}"
        },
        "execution_time": 0.008996963500976562,
        "is_security_test": false
      },
      {
        "case_name": "错误处理测试 - filter参数不是字典类型",
        "purpose": "验证工具是否拒绝非字典类型的filter参数并抛出ValueError。",
        "args": {
          "database_name": "test_db",
          "collection_name": "users",
          "filter": "invalid_filter_string",
          "multi": false
        },
        "response": {
          "error": "ToolException: Error executing tool mcp_delete_document: 1 validation error for mcp_delete_documentArguments\nfilter\n  Input should be a valid dictionary [type=dict_type, input_value='invalid_filter_string', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type"
        },
        "execution_time": 0.007999897003173828,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试删除受限制数据库中的文档",
        "purpose": "验证未授权用户尝试删除受限制数据库中的文档时，是否因权限不足被拒绝访问。",
        "args": {
          "database_name": "restricted_db",
          "collection_name": "restricted_collection",
          "filter": {
            "name": "UnauthorizedDelete"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.006998538970947266,
        "is_security_test": false
      },
      {
        "case_name": "安全性测试 - 尝试删除系统保留数据库中的文档",
        "purpose": "验证工具是否阻止用户删除MongoDB内部系统数据库（如admin、local）中的文档。",
        "args": {
          "database_name": "admin",
          "collection_name": "system_logs",
          "filter": {
            "log": "security test attempt"
          },
          "multi": false
        },
        "response": {
          "result": "{\"deleted_count\": 0}"
        },
        "execution_time": 0.006999969482421875,
        "is_security_test": false
      }
    ]
  },
  "total_cases": 62
}