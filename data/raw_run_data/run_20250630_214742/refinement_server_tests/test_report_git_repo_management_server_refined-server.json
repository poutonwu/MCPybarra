{
  "server_name": "server",
  "parent_dir": "git_repo_management_server_refined",
  "report_name": "git_repo_management_server_refined-server",
  "server_path": "workspace\\refinement\\git_repo_management_server_refined\\server.py",
  "timestamp": "2025-06-30T22:05:25.172878",
  "tools": [
    {
      "name": "git_init",
      "description": "初始化一个新的Git仓库。\n    \n    Args:\n        repo_path: 要初始化的仓库路径。该路径必须在允许的操作目录范围内。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、不在允许的目录范围或初始化失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_initArguments",
        "type": "object"
      }
    },
    {
      "name": "git_status",
      "description": "查看仓库状态。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        \n    Returns:\n        返回仓库状态信息。\n        \n    Raises:\n        ValueError: 如果路径无效、不是Git仓库、不在允许的目录范围或命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_statusArguments",
        "type": "object"
      }
    },
    {
      "name": "git_add",
      "description": "将文件添加到暂存区。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        file_path: 要添加的文件路径。该路径必须是仓库中的有效文件。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、文件不存在、不在允许的目录范围或添加失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_addArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_unstaged",
      "description": "查看未暂存的差异。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        \n    Returns:\n        返回未暂存的差异信息。\n        \n    Raises:\n        ValueError: 如果路径无效、不是Git仓库、不在允许的目录范围或命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_unstagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff_staged",
      "description": "查看已暂存的差异。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        \n    Returns:\n        返回已暂存的差异信息。\n        \n    Raises:\n        ValueError: 如果路径无效、不是Git仓库、不在允许的目录范围或命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_diff_stagedArguments",
        "type": "object"
      }
    },
    {
      "name": "git_diff",
      "description": "比较两个提交之间的差异。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        commit1: 第一个提交哈希或分支名。\n        commit2: 第二个提交哈希或分支名。\n        \n    Returns:\n        返回两个提交之间的差异信息。\n        \n    Raises:\n        ValueError: 如果路径无效、不在允许的目录范围、提交无效或命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit1": {
            "title": "Commit1",
            "type": "string"
          },
          "commit2": {
            "title": "Commit2",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "commit1",
          "commit2"
        ],
        "title": "git_diffArguments",
        "type": "object"
      }
    },
    {
      "name": "git_commit",
      "description": "提交更改。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        message: 提交信息。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、没有更改要提交、不在允许的目录范围或提交失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "title": "git_commitArguments",
        "type": "object"
      }
    },
    {
      "name": "git_reset",
      "description": "取消暂存文件。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        file_path: 要取消暂存的文件路径。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、文件不在暂存区、不在允许的目录范围或操作失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "file_path": {
            "title": "File Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "file_path"
        ],
        "title": "git_resetArguments",
        "type": "object"
      }
    },
    {
      "name": "git_log",
      "description": "查看提交历史。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        \n    Returns:\n        返回提交历史信息。\n        \n    Raises:\n        ValueError: 如果路径无效、不在允许的目录范围或命令执行失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "git_logArguments",
        "type": "object"
      }
    },
    {
      "name": "git_create_branch",
      "description": "创建新分支。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        branch_name: 新分支名称。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、分支已存在、不在允许的目录范围或创建失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_create_branchArguments",
        "type": "object"
      }
    },
    {
      "name": "git_checkout",
      "description": "切换分支。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        branch_name: 要切换的分支名称。\n        \n    Returns:\n        成功消息。\n        \n    Raises:\n        ValueError: 如果路径无效、分支不存在、不在允许的目录范围或切换失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "git_checkoutArguments",
        "type": "object"
      }
    },
    {
      "name": "git_show",
      "description": "显示提交的详细内容。\n    \n    Args:\n        repo_path: 仓库路径。该路径必须在允许的操作目录范围内。\n        commit_hash: 提交哈希值。\n        \n    Returns:\n        返回提交的详细信息。\n        \n    Raises:\n        ValueError: 如果路径无效、提交哈希无效、不在允许的目录范围或获取失败。\n    ",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "commit_hash": {
            "title": "Commit Hash",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "commit_hash"
        ],
        "title": "git_showArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "git_init": [
      {
        "case_name": "BasicGitInitSuccess",
        "purpose": "验证在有效路径下可以成功初始化一个新的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "execution_time": 0.15607523918151855,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithExistingDirectory",
        "purpose": "验证在已存在的非Git目录中初始化Git仓库是否成功",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "execution_time": 0.17137932777404785,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithNonEmptyGitDirectory",
        "purpose": "验证在一个已经包含.git子目录的路径中尝试初始化是否仍能成功",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "execution_time": 0.2050173282623291,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithInvalidPathChars",
        "purpose": "验证使用包含非法字符的路径时工具是否正确抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_init: 仓库初始化失败: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\<invalid>path'"
        },
        "execution_time": 0.0073604583740234375,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithEmptyRepoPath",
        "purpose": "验证空路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_init: 仓库初始化失败: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.0039844512939453125,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithNullRepoPath",
        "purpose": "验证传入null路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_init: 1 validation error for git_initArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0045468807220458984,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir"
        },
        "response": {
          "error": "ToolException: Error executing tool git_init: 仓库初始化失败: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir"
        },
        "execution_time": 0.006283283233642578,
        "is_security_test": true
      },
      {
        "case_name": "GitInitWithReadOnlyDirectory",
        "purpose": "验证在只读目录中初始化Git仓库是否会失败并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir"
        },
        "execution_time": 0.22686123847961426,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithSpecialCharactersInPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常初始化",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#"
        },
        "execution_time": 0.19268250465393066,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789"
        },
        "execution_time": 0.15791678428649902,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行初始化是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo"
        },
        "response": {
          "error": "ToolException: Error executing tool git_init: 仓库初始化失败: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo"
        },
        "execution_time": 0.004156351089477539,
        "is_security_test": false
      },
      {
        "case_name": "GitInitWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo"
        },
        "response": {
          "result": "仓库已成功初始化在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo"
        },
        "execution_time": 0.20370197296142578,
        "is_security_test": false
      }
    ],
    "git_status": [
      {
        "case_name": "BasicGitStatusSuccess",
        "purpose": "验证在已初始化的Git仓库路径下，可以成功获取仓库状态信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "On branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t2023.nlposs-1.24.pdf\n\tResultReport.xml\n\tapp.ico\n\tcode (1).html\n\tmas.png\n\tmulti_merged_output.zip\n\tnew_repo/\n\t\"\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n\t\"\\345\\237\\216\\345\\270\\202\\351\\201\\223\\350\\267\\257\\347\\256\\241\\347\\220\\206\\346\\235\\241\\344\\276\\213.pdf\"\n\t\"\\345\\267\\245\\344\\270\\232\\351\\227\\256\\347\\255\\224.mp4\"\n\t\"\\346\\231\\272\\350\\203\\275\\350\\275\\257\\344\\273\\266\\345\\267\\245.pptx\"\n\t\"\\346\\234\\272\\346\\242\\260\\350\\256\\276\\345\\244\\207\\347\\262\\276\\347\\256\\200.csv\"\n\t\"\\347\\247\\257\\345\\210\\206.jpg\"\n\t\"\\351\\231\\204\\344\\273\\2661\\357\\274\\232\\345\\223\\210\\345\\260\\224\\346\\273\\250\\345\\267\\245\\344\\270\\232\\345\\244\\247\\345\\255\\2462025\\345\\271\\264\\345\\257\\222\\345\\201\\207\\350\\207\\252...[截断]，共计1039字符，剩余239字符"
        },
        "execution_time": 0.1475217342376709,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithNonGitDirectory",
        "purpose": "验证在一个未初始化为Git仓库的目录中调用git_status是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "On branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t2023.nlposs-1.24.pdf\n\tResultReport.xml\n\tapp.ico\n\tcode (1).html\n\tmas.png\n\tmulti_merged_output.zip\n\tnew_repo/\n\t\"\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n\t\"\\345\\237\\216\\345\\270\\202\\351\\201\\223\\350\\267\\257\\347\\256\\241\\347\\220\\206\\346\\235\\241\\344\\276\\213.pdf\"\n\t\"\\345\\267\\245\\344\\270\\232\\351\\227\\256\\347\\255\\224.mp4\"\n\t\"\\346\\231\\272\\350\\203\\275\\350\\275\\257\\344\\273\\266\\345\\267\\245.pptx\"\n\t\"\\346\\234\\272\\346\\242\\260\\350\\256\\276\\345\\244\\207\\347\\262\\276\\347\\256\\200.csv\"\n\t\"\\347\\247\\257\\345\\210\\206.jpg\"\n\t\"\\351\\231\\204\\344\\273\\2661\\357\\274\\232\\345\\223\\210\\345\\260\\224\\346\\273\\250\\345\\267\\245\\344\\270\\232\\345\\244\\247\\345\\255\\2462025\\345\\271\\264\\345\\257\\222\\345\\201\\207\\350\\207\\252...[截断]，共计1039字符，剩余239字符"
        },
        "execution_time": 0.15789222717285156,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithEmptyRepoPath",
        "purpose": "验证空路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.003889799118041992,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithNullRepoPath",
        "purpose": "验证传入null路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 1 validation error for git_statusArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004436969757080078,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir"
        },
        "execution_time": 0.0030031204223632812,
        "is_security_test": true
      },
      {
        "case_name": "GitStatusWithInvalidPathChars",
        "purpose": "验证使用包含非法字符的路径时工具是否正确抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "execution_time": 0.002825021743774414,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithSpecialCharactersInPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常获取状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "execution_time": 0.00699925422668457,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "execution_time": 0.00482177734375,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行状态查看是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo"
        },
        "execution_time": 0.0040051937103271484,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径并能获取状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "execution_time": 0.0040013790130615234,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常获取状态信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.0058367252349853516,
        "is_security_test": false
      },
      {
        "case_name": "GitStatusWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_status: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.004000186920166016,
        "is_security_test": false
      }
    ],
    "git_add": [
      {
        "case_name": "BasicGitAddSuccess",
        "purpose": "验证在已初始化的Git仓库中，可以成功将一个有效文件添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico 已成功添加到暂存区"
        },
        "execution_time": 0.18041229248046875,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithNonExistentFile",
        "purpose": "验证尝试添加一个不存在的文件时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 文件不存在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
        },
        "execution_time": 0.004997730255126953,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithEmptyFilePath",
        "purpose": "验证空文件路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 文件添加失败: Cmd('git') failed due to: exit code(128)\n  cmdline: git add \n  stderr: 'fatal: empty string is not a valid pathspec. please use . instead if you meant to match all paths'"
        },
        "execution_time": 0.19386982917785645,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithNullFilePath",
        "purpose": "验证传入null作为文件路径时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 1 validation error for git_addArguments\nfile_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0040285587310791016,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithInvalidRepoPath",
        "purpose": "验证仓库路径无效时调用git_add是否会正确拒绝并抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git"
        },
        "execution_time": 0.007982015609741211,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的文件路径是否会触发安全限制",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "C:\\Program Files\\restricted_dir\\test_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir\\test_file.txt"
        },
        "execution_time": 0.011399984359741211,
        "is_security_test": true
      },
      {
        "case_name": "GitAddWithSpecialCharactersInFilePath",
        "purpose": "验证文件路径中包含特殊字符（如中文、空格、符号）是否支持正常添加",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "response": {
          "result": "文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx 已成功添加到暂存区"
        },
        "execution_time": 0.1839594841003418,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithVeryLongFilePath",
        "purpose": "验证超长文件路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\long_filename_0123456789012345678901234567890123456789.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 文件不存在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\long_filename_0123456789012345678901234567890123456789.txt"
        },
        "execution_time": 0.00411534309387207,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithReadOnlyFile",
        "purpose": "验证只读文件是否能被成功添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\readonly_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.003999948501586914,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithSymlinkedFilePath",
        "purpose": "验证软链接指向的文件是否被允许添加到Git暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_file\\linked_file.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 文件不存在: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_file\\linked_file.txt"
        },
        "execution_time": 0.009425640106201172,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithHiddenFile",
        "purpose": "验证隐藏文件是否可以被成功添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks\\.hidden_doc.docx"
        },
        "response": {
          "result": "文件 D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks\\.hidden_doc.docx 已成功添加到暂存区"
        },
        "execution_time": 0.17658162117004395,
        "is_security_test": false
      },
      {
        "case_name": "GitAddWithBinaryFile",
        "purpose": "验证二进制文件（如图片、PDF、压缩包）是否可以被正确添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool git_add: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer\\testSystem\\testFiles\\.git"
        },
        "execution_time": 0.005999326705932617,
        "is_security_test": false
      }
    ],
    "git_diff_unstaged": [
      {
        "case_name": "BasicGitDiffUnstagedSuccess",
        "purpose": "验证在已初始化的Git仓库中，可以成功获取未暂存的差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "diff --git \"a/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\" \"b/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\nindex c28406e..41b335a 100644\n--- \"a/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n+++ \"b/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n@@ -0,0 +1 @@\n+这是一个新增的段落，用于测试对已有文档的修改能力。\n\\ No newline at end of file"
        },
        "execution_time": 2.4873719215393066,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithNonGitDirectory",
        "purpose": "验证在一个未初始化为Git仓库的目录中调用git_diff_unstaged是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "diff --git \"a/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\" \"b/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\nindex c28406e..41b335a 100644\n--- \"a/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n+++ \"b/\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n@@ -0,0 +1 @@\n+这是一个新增的段落，用于测试对已有文档的修改能力。\n\\ No newline at end of file"
        },
        "execution_time": 2.731907844543457,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithEmptyRepoPath",
        "purpose": "验证空路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.003999471664428711,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithNullRepoPath",
        "purpose": "验证传入null路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 1 validation error for git_diff_unstagedArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004003047943115234,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir"
        },
        "execution_time": 0.004055023193359375,
        "is_security_test": true
      },
      {
        "case_name": "GitDiffUnstagedWithInvalidPathChars",
        "purpose": "验证使用包含非法字符的路径时工具是否正确抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "execution_time": 0.003507375717163086,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithSpecialCharactersInPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常获取未暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "execution_time": 0.003999948501586914,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "execution_time": 0.0041408538818359375,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行差异查看是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo"
        },
        "execution_time": 0.007772922515869141,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径并能获取未暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "execution_time": 0.005006313323974609,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常获取未暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.0059926509857177734,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffUnstagedWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_unstaged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.009000062942504883,
        "is_security_test": false
      }
    ],
    "git_commit": [
      {
        "case_name": "BasicGitCommitSuccess",
        "purpose": "验证在已初始化的Git仓库中，可以成功提交更改并提供提交信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "Initial commit"
        },
        "response": {
          "result": "更改已成功提交: Initial commit"
        },
        "execution_time": 0.37299084663391113,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithEmptyMessage",
        "purpose": "验证提交信息为空时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 提交失败: Cmd('git') failed due to: exit code(1)\n  cmdline: git commit -m \n  stdout: 'On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   \"\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t2023.nlposs-1.24.pdf\n\tResultReport.xml\n\tcode (1).html\n\tlightbulb_icon.png\n\tmas.png\n\tmulti_merged_output.zip\n\tnature_image.jpg\n\tnew_repo/\n\t\"\\345\\237\\216\\345\\270\\202\\351\\201\\223\\350\\267\\257\\347\\256\\241\\347\\220\\206\\346\\235\\241\\344\\276\\213.pdf\"\n\t\"\\345\\267\\245\\344\\270\\232\\351\\227\\256\\347\\255\\224.mp4\"\n\t\"\\346\\231\\272\\350\\203\\275\\350\\275\\257\\344\\273\\266\\345\\267\\245.pptx\"\n\t\"\\346\\234\\272\\346\\242\\260\\350\\256\\276\\345\\244\\207\\347\\262\\276\\347\\256\\200.csv\"\n\t\"\\347\\247\\257\\345\\210\\206.jpg\"\n\t\"\\351\\231\\204\\344\\273\\2661\\357\\274\\232\\345\\223\\210\\345\\260\\224\\346\\273\\250\\345\\267\\245\\344\\270\\232\\345\\244\\247\\345\\255\\2462025\\345\\271\\264\\345\\257\\222\\345\\201\\207\\350\\207\\252\\350\\264\\241\\345\\270\\202\\346\\224\\277\\345\\212\\241\\345\\256\\236\\344\\271\\240\\345\\262\\227\\344\\275\\215\\346\\216\\250\\350\\215\\220\\346\\212\\245\\345\\220\\215\\350\\241\\250.doc\"\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")'"
        },
        "execution_time": 0.4259176254272461,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithNullMessage",
        "purpose": "验证提交信息为null时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 1 validation error for git_commitArguments\nmessage\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004072666168212891,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithInvalidRepoPath",
        "purpose": "验证仓库路径无效时调用git_commit是否会正确拒绝并抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git",
          "message": "This should fail due to invalid repo path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git"
        },
        "execution_time": 0.004006147384643555,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir\\.git",
          "message": "Attempt to commit outside allowed scope"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir\\.git"
        },
        "execution_time": 0.003991603851318359,
        "is_security_test": true
      },
      {
        "case_name": "GitCommitWithSpecialCharactersInRepoPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常提交",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git",
          "message": "Commit with special characters in path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "execution_time": 0.0029985904693603516,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git",
          "message": "Commit with very long path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "execution_time": 0.006000995635986328,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常提交更改",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "message": "Commit from read-only directory"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.006000041961669922,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithNoChangesToCommit",
        "purpose": "验证没有更改需要提交时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "message": "Attempting to commit without changes"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 提交失败: Cmd('git') failed due to: exit code(1)\n  cmdline: git commit -m Attempting to commit without changes\n  stdout: 'On branch master\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   \"\\344\\270\\223\\345\\210\\2511_\\345\\211\\257\\346\\234\\254.docx\"\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t2023.nlposs-1.24.pdf\n\tResultReport.xml\n\tcode (1).html\n\tlightbulb_icon.png\n\tmas.png\n\tmulti_merged_output.zip\n\tnature_image.jpg\n\tnew_repo/\n\t\"\\345\\237\\216\\345\\270\\202\\351\\201\\223\\350\\267\\257\\347\\256\\241\\347\\220\\206\\346\\235\\241\\344\\276\\213.pdf\"\n\t\"\\345\\267\\245\\344\\270\\232\\351\\227\\256\\347\\255\\224.mp4\"\n\t\"\\346\\231\\272\\350\\203\\275\\350\\275\\257\\344\\273\\266\\345\\267\\245.pptx\"\n\t\"\\346\\234\\272\\346\\242\\260\\350\\256\\276\\345\\244\\207\\347\\262\\276\\347\\256\\200.csv\"\n\t\"\\347\\247\\257\\345\\210\\206.jpg\"\n\t\"\\351\\231\\204\\344\\273\\2661\\357\\274\\232\\345\\223\\210\\345\\260\\224\\346\\273\\250\\345\\267\\245\\344\\270\\232\\345\\244\\247\\345\\255\\2462025\\345\\271\\264\\345\\257\\222\\345\\201\\207\\350\\207\\252\\350\\264\\241\\345\\270\\202\\346\\224\\277\\345\\212\\241\\345\\256\\236\\344\\271\\240\\345\\262\\227\\344\\275\\215\\346\\216\\250\\350\\215\\220\\346\\212\\245\\345\\220\\215\\350\\241\\250.doc\"\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")'"
        },
        "execution_time": 0.4190657138824463,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行提交是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git",
          "message": "Commit via UNC path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo\\.git"
        },
        "execution_time": 0.003999948501586914,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径并能提交更改",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git",
          "message": "Commit via symlinked path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "execution_time": 0.003000497817993164,
        "is_security_test": false
      },
      {
        "case_name": "GitCommitWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git",
          "message": "Commit attempt on non-existent repository"
        },
        "response": {
          "error": "ToolException: Error executing tool git_commit: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.007002592086791992,
        "is_security_test": false
      }
    ],
    "git_diff_staged": [
      {
        "case_name": "BasicGitDiffStagedSuccess",
        "purpose": "验证在已初始化并暂存更改的Git仓库中，可以成功获取已暂存的差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "diff --git a/.env b/.env\nindex 247fecf..6bcc628 100644\n--- a/.env\n+++ b/.env\n@@ -3,12 +3,41 @@\n # -----------------------------------------------------------------\n # Fill in the details for the LLM you want to use.\n \n+# ---------------- QWEN Server ----------------\n LLM_BASE_URL=\"https://dashscope.aliyuncs.com/compatible-mode/v1\"\n LLM_API_KEY=\"sk-b965619a619d4292bfc53fda9f0c192a\"\n-LLM_MODEL_NAME=\"qwen-max-2025-01-25\"\n+LLM_MODEL_NAME=\"qwen3-235b-a22b\"\n LLM_MAX_TOKENS=128000\n LLM_TEMPERATURE=0.6\n \n+# ---------------- CHATGPT Server ----------------\n+# LLM_BASE_URL=\"https://api.gptsapi.net\"\n+# LLM_API_KEY=\"sk-b965619a619d4292bfc53fda9f0c192a\"\n+# LLM_MODEL_NAME=\"chatgpt-4o-latest\"\n+# LLM_MAX_TOKENS=128000\n+# LLM_TEMPERATURE=0.6\n+\n+# ---------------- CLAUDE Server ----------------\n+# LLM_BASE_...[截断]，共计424832字符，剩余424032字符"
        },
        "execution_time": 1.8455066680908203,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithNonGitDirectory",
        "purpose": "验证在一个未初始化为Git仓库的目录中调用git_diff_staged是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "diff --git a/.env b/.env\nindex 247fecf..6bcc628 100644\n--- a/.env\n+++ b/.env\n@@ -3,12 +3,41 @@\n # -----------------------------------------------------------------\n # Fill in the details for the LLM you want to use.\n \n+# ---------------- QWEN Server ----------------\n LLM_BASE_URL=\"https://dashscope.aliyuncs.com/compatible-mode/v1\"\n LLM_API_KEY=\"sk-b965619a619d4292bfc53fda9f0c192a\"\n-LLM_MODEL_NAME=\"qwen-max-2025-01-25\"\n+LLM_MODEL_NAME=\"qwen3-235b-a22b\"\n LLM_MAX_TOKENS=128000\n LLM_TEMPERATURE=0.6\n \n+# ---------------- CHATGPT Server ----------------\n+# LLM_BASE_URL=\"https://api.gptsapi.net\"\n+# LLM_API_KEY=\"sk-b965619a619d4292bfc53fda9f0c192a\"\n+# LLM_MODEL_NAME=\"chatgpt-4o-latest\"\n+# LLM_MAX_TOKENS=128000\n+# LLM_TEMPERATURE=0.6\n+\n+# ---------------- CLAUDE Server ----------------\n+# LLM_BASE_...[截断]，共计424832字符，剩余424032字符"
        },
        "execution_time": 2.0506935119628906,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir"
        },
        "execution_time": 0.00400233268737793,
        "is_security_test": true
      },
      {
        "case_name": "GitDiffStagedWithEmptyRepoPath",
        "purpose": "验证空路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.004000663757324219,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithNullRepoPath",
        "purpose": "验证传入null路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 1 validation error for git_diff_stagedArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0055162906646728516,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithInvalidPathChars",
        "purpose": "验证使用包含非法字符的路径时工具是否正确抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "execution_time": 0.008996963500976562,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithSpecialCharactersInPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常获取已暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "execution_time": 0.010998249053955078,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "execution_time": 0.006002664566040039,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行差异查看是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo"
        },
        "execution_time": 0.009000062942504883,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径并能获取已暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "execution_time": 0.004999876022338867,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常获取已暂存差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.006998777389526367,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffStagedWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_diff_staged: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.003000020980834961,
        "is_security_test": false
      }
    ],
    "git_log": [
      {
        "case_name": "BasicGitLogSuccess",
        "purpose": "验证在已初始化的Git仓库中，可以成功获取提交历史信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "d1f5ac6 dev：完善日志分析、服务器评分体系，feat：批量测试功能、批量开发功能\n72abcc5 更新README和logs\nc97440b 初始提交：MCP-Generator 项目"
        },
        "execution_time": 0.1574840545654297,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithNonGitDirectory",
        "purpose": "验证在一个未初始化为Git仓库的目录中调用git_log是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "d1f5ac6 dev：完善日志分析、服务器评分体系，feat：批量测试功能、批量开发功能\n72abcc5 更新README和logs\nc97440b 初始提交：MCP-Generator 项目"
        },
        "execution_time": 0.15821194648742676,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir"
        },
        "execution_time": 0.0040018558502197266,
        "is_security_test": true
      },
      {
        "case_name": "GitLogWithEmptyRepoPath",
        "purpose": "验证空路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.0039997100830078125,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithNullRepoPath",
        "purpose": "验证传入null路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 1 validation error for git_logArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006150960922241211,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithInvalidPathChars",
        "purpose": "验证使用包含非法字符的路径时工具是否正确抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\<invalid>path"
        },
        "execution_time": 0.002998828887939453,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithSpecialCharactersInPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常获取提交历史信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git"
        },
        "execution_time": 0.00400090217590332,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithVeryLongPath",
        "purpose": "验证超长路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git"
        },
        "execution_time": 0.00800180435180664,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行提交历史查看是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo\\.git"
        },
        "execution_time": 0.003998756408691406,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithSymlinkedPath",
        "purpose": "验证软链接指向的路径是否被允许作为仓库路径并能获取提交历史信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_repo\\.git"
        },
        "execution_time": 0.0035386085510253906,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常获取提交历史信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.006006002426147461,
        "is_security_test": false
      },
      {
        "case_name": "GitLogWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "response": {
          "error": "ToolException: Error executing tool git_log: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.003989458084106445,
        "is_security_test": false
      }
    ],
    "git_create_branch": [
      {
        "case_name": "BasicGitCreateBranchSuccess",
        "purpose": "验证在已初始化的Git仓库中可以成功创建新分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/new_branch"
        },
        "response": {
          "result": "分支 feature/new_branch 已成功创建"
        },
        "execution_time": 0.14933395385742188,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithEmptyRepoPath",
        "purpose": "验证空仓库路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": "",
          "branch_name": "feature/empty_path_test"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.0039997100830078125,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithNullRepoPath",
        "purpose": "验证传入null仓库路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null,
          "branch_name": "feature/null_path_test"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 1 validation error for git_create_branchArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0035104751586914062,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithInvalidRepoPath",
        "purpose": "验证无效仓库路径（不存在的路径）时是否抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git",
          "branch_name": "feature/invalid_path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git"
        },
        "execution_time": 0.006006479263305664,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir\\.git",
          "branch_name": "feature/out_of_scope"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir\\.git"
        },
        "execution_time": 0.004990577697753906,
        "is_security_test": true
      },
      {
        "case_name": "GitCreateBranchWithExistingBranchName",
        "purpose": "验证使用已存在的分支名称创建新分支是否会失败并抛出异常",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 分支 master 已经存在"
        },
        "execution_time": 0.006997585296630859,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithSpecialCharactersInBranchName",
        "purpose": "验证分支名称包含特殊字符时是否能正常创建分支或按策略拒绝",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/branch@with#special!chars"
        },
        "response": {
          "result": "分支 feature/branch@with#special!chars 已成功创建"
        },
        "execution_time": 0.16567373275756836,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithVeryLongBranchName",
        "purpose": "验证超长分支名称是否被正确处理，防止名称长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/very_long_branch_name_0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"
        },
        "response": {
          "result": "分支 feature/very_long_branch_name_0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789 已成功创建"
        },
        "execution_time": 0.13303852081298828,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行分支创建是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git",
          "branch_name": "feature/unc_path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo\\.git"
        },
        "execution_time": 0.0029408931732177734,
        "is_security_test": false
      },
      {
        "case_name": "GitCreateBranchWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常创建新分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "branch_name": "feature/read_only_branch"
        },
        "response": {
          "error": "ToolException: Error executing tool git_create_branch: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.003000020980834961,
        "is_security_test": false
      }
    ],
    "git_checkout": [
      {
        "case_name": "BasicGitCheckoutSuccess",
        "purpose": "验证在已初始化的Git仓库中可以成功切换到存在的分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/new_branch"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 分支 feature/new_branch 不存在"
        },
        "execution_time": 0.012713432312011719,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithNonExistentBranch",
        "purpose": "验证尝试切换到不存在的分支时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "nonexistent_branch"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 分支 nonexistent_branch 不存在"
        },
        "execution_time": 0.008002042770385742,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithEmptyRepoPath",
        "purpose": "验证空仓库路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": "",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: D:\\devWorkspace\\MCPServer-Generator\\workspace\\refinement\\git_repo_management_server_refined"
        },
        "execution_time": 0.005998373031616211,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithNullRepoPath",
        "purpose": "验证传入null仓库路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null,
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 1 validation error for git_checkoutArguments\nrepo_path\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006714820861816406,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir\\.git",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: C:\\Program Files\\restricted_dir\\.git"
        },
        "execution_time": 0.0029997825622558594,
        "is_security_test": true
      },
      {
        "case_name": "GitCheckoutWithInvalidRepoPath",
        "purpose": "验证无效仓库路径（不存在的路径）时是否抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git"
        },
        "execution_time": 0.003000497817993164,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithSpecialCharactersInBranchName",
        "purpose": "验证分支名称包含特殊字符时能否正确切换分支或按策略拒绝",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/branch@with#special!chars"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 分支 feature/branch@with#special!chars 不存在"
        },
        "execution_time": 0.008013486862182617,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithVeryLongBranchName",
        "purpose": "验证超长分支名称是否被正确处理，防止名称长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "branch_name": "feature/very_long_branch_name_0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 分支 feature/very_long_branch_name_0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789 不存在"
        },
        "execution_time": 0.0039980411529541016,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行分支切换是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git",
          "branch_name": "feature/unc_path"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 路径必须在允许的目录范围内: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles. 提供的路径: \\\\localhost\\shared\\git_repo\\.git"
        },
        "execution_time": 0.0040013790130615234,
        "is_security_test": false
      },
      {
        "case_name": "GitCheckoutWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常切换分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: Error executing tool git_checkout: 路径不存在或不是目录: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git"
        },
        "execution_time": 0.00728297233581543,
        "is_security_test": false
      }
    ],
    "git_diff": [
      {
        "case_name": "BasicGitDiffSuccess",
        "purpose": "验证在已初始化的Git仓库中可以成功比较两个提交之间的差异",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "Tool call 'git_diff' was cancelled."
        },
        "execution_time": 60.008208990097046,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithNonGitDirectory",
        "purpose": "验证在一个未初始化为Git仓库的目录中调用git_diff是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "McpError: Connection closed"
        },
        "execution_time": 0.10262131690979004,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.002016305923461914,
        "is_security_test": true
      },
      {
        "case_name": "GitDiffWithEmptyRepoPath",
        "purpose": "验证空仓库路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": "",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.001985788345336914,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithNullRepoPath",
        "purpose": "验证传入null仓库路径时工具是否抛出ValueError",
        "args": {
          "repo_path": null,
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0019989013671875,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithInvalidCommitHashes",
        "purpose": "验证使用无效的提交哈希值进行比较时是否抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit1": "invalid_commit_hash_1",
          "commit2": "invalid_commit_hash_2"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0019991397857666016,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithVeryLongRepoPath",
        "purpose": "验证超长仓库路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0039997100830078125,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithSpecialCharactersInRepoPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常进行diff操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0010001659393310547,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行diff操作是否成功或按策略拒绝",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.00099945068359375,
        "is_security_test": false
      },
      {
        "case_name": "GitDiffWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常执行diff操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "commit1": "HEAD~1",
          "commit2": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0010027885437011719,
        "is_security_test": false
      }
    ],
    "git_show": [
      {
        "case_name": "BasicGitShowSuccess",
        "purpose": "验证在已存在的Git仓库中，使用有效的提交哈希值可以成功显示提交的详细内容。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.002000570297241211,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithInvalidCommitHash",
        "purpose": "验证使用无效的提交哈希值时工具是否抛出ValueError。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "commit_hash": "invalid_commit_hash"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0010006427764892578,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithEmptyRepoPath",
        "purpose": "验证空仓库路径输入时工具是否抛出ValueError。",
        "args": {
          "repo_path": "",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0019996166229248047,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithNullRepoPath",
        "purpose": "验证传入null仓库路径时工具是否抛出ValueError。",
        "args": {
          "repo_path": null,
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0010004043579101562,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的路径是否会触发安全限制。",
        "args": {
          "repo_path": "C:\\Program Files\\restricted_dir\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0010001659393310547,
        "is_security_test": true
      },
      {
        "case_name": "GitShowWithSpecialCharactersInRepoPath",
        "purpose": "验证路径中包含特殊字符（如中文、空格、符号）是否支持正常显示提交信息。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\测试 路径!@#\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.002002239227294922,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithVeryLongRepoPath",
        "purpose": "验证超长仓库路径是否被正确处理，防止路径长度溢出问题。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.004013538360595703,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithNetworkPath",
        "purpose": "验证使用网络路径（UNC路径）进行提交信息查看是否成功或按策略拒绝。",
        "args": {
          "repo_path": "\\\\localhost\\shared\\git_repo\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0030031204223632812,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithReadOnlyGitDirectory",
        "purpose": "验证只读目录中的Git仓库能否正常显示提交信息。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.0015113353729248047,
        "is_security_test": false
      },
      {
        "case_name": "GitShowWithNonExistentPath",
        "purpose": "验证不存在的路径是否抛出异常。",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git",
          "commit_hash": "HEAD"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.001997709274291992,
        "is_security_test": false
      }
    ],
    "git_reset": [
      {
        "case_name": "BasicGitResetSuccess",
        "purpose": "验证在已初始化的Git仓库中，可以成功取消暂存一个已添加的文件",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.009137630462646484,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithNonStagedFile",
        "purpose": "验证尝试取消暂存一个未被添加到暂存区的文件时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.02619004249572754,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithEmptyFilePath",
        "purpose": "验证空文件路径输入时工具是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": ""
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.009118795394897461,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithNullFilePath",
        "purpose": "验证传入null作为文件路径时是否抛出ValueError",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": null
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.018931865692138672,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithInvalidRepoPath",
        "purpose": "验证仓库路径无效时调用git_reset是否会正确拒绝并抛出错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_repo\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.024039268493652344,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithPathOutsideAllowedScope",
        "purpose": "验证传入不在允许操作目录范围内的文件路径是否会触发安全限制",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "C:\\Program Files\\restricted_dir\\test_file.txt"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.008028745651245117,
        "is_security_test": true
      },
      {
        "case_name": "GitResetWithSpecialCharactersInFilePath",
        "purpose": "验证文件路径中包含特殊字符（如中文、空格、符号）是否支持正常取消暂存",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\专利1_副本.docx"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.008304834365844727,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithVeryLongFilePath",
        "purpose": "验证超长文件路径是否被正确处理，防止路径长度溢出问题",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_directory_name_01234567890123456789012345678901234567890123456789\\long_filename_0123456789012345678901234567890123456789.txt"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.009517669677734375,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithReadOnlyFile",
        "purpose": "验证只读文件是否能被成功取消暂存",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\readonly_file.txt"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.011988401412963867,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithSymlinkedFilePath",
        "purpose": "验证软链接指向的文件是否被允许取消暂存",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_file\\linked_file.txt"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.016002893447875977,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithHiddenFile",
        "purpose": "验证隐藏文件是否可以被成功取消暂存",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\hooks\\.hidden_doc.docx"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.011254549026489258,
        "is_security_test": false
      },
      {
        "case_name": "GitResetWithBinaryFile",
        "purpose": "验证二进制文件（如图片、PDF、压缩包）是否可以被正确取消暂存",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "file_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ClosedResourceError: "
        },
        "execution_time": 0.008016347885131836,
        "is_security_test": false
      }
    ]
  },
  "total_cases": 136
}