{
  "server_name": "server",
  "parent_dir": "mcp_word_processor_refined",
  "report_name": "mcp_word_processor_refined-server",
  "server_path": "workspace\\refinement\\mcp_word_processor_refined\\server.py",
  "timestamp": "2025-07-01T18:37:53.378367",
  "tools": [
    {
      "name": "create_document",
      "description": "\n    创建一个新的Word文档并设置元数据。\n\n    Args:\n        title: 文档标题 (必填)。\n        author: 文档作者 (必填)。\n        subject: 文档主题 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        create_document(title=\"Sample Title\", author=\"John Doe\", subject=\"Sample Subject\")\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "author": {
            "title": "Author",
            "type": "string"
          },
          "subject": {
            "title": "Subject",
            "type": "string"
          }
        },
        "required": [
          "title",
          "author",
          "subject"
        ],
        "title": "create_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_paragraph",
      "description": "\n    向文档添加段落文本。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        text: 要添加的段落文本 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        add_paragraph(document_path=\"temp_document.docx\", text=\"This is a new paragraph.\")\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "document_path",
          "text"
        ],
        "title": "add_paragraphArguments",
        "type": "object"
      }
    },
    {
      "name": "add_heading",
      "description": "\n    向文档添加标题。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        text: 要添加的标题文本 (必填)。\n        level: 标题级别，范围为0-9 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        add_heading(document_path=\"temp_document.docx\", text=\"Main Title\", level=0)\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          }
        },
        "required": [
          "document_path",
          "text",
          "level"
        ],
        "title": "add_headingArguments",
        "type": "object"
      }
    },
    {
      "name": "create_custom_style",
      "description": "\n    创建自定义样式。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        style_name: 自定义样式的名称 (必填)。\n        font_name: 字体名称 (必填)。\n        font_size: 字体大小 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        create_custom_style(document_path=\"temp_document.docx\", style_name=\"MyStyle\", font_name=\"Arial\", font_size=12)\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "style_name": {
            "title": "Style Name",
            "type": "string"
          },
          "font_name": {
            "title": "Font Name",
            "type": "string"
          },
          "font_size": {
            "title": "Font Size",
            "type": "integer"
          }
        },
        "required": [
          "document_path",
          "style_name",
          "font_name",
          "font_size"
        ],
        "title": "create_custom_styleArguments",
        "type": "object"
      }
    },
    {
      "name": "format_text",
      "description": "\n    格式化指定文本区域。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        text: 要格式化的文本 (必填)。\n        bold: 是否加粗，默认为False。\n        italic: 是否斜体，默认为False。\n        underline: 是否下划线，默认为False。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        format_text(document_path=\"temp_document.docx\", text=\"Important text\", bold=True, italic=True)\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bold": {
            "default": false,
            "title": "Bold",
            "type": "boolean"
          },
          "italic": {
            "default": false,
            "title": "Italic",
            "type": "boolean"
          },
          "underline": {
            "default": false,
            "title": "Underline",
            "type": "boolean"
          }
        },
        "required": [
          "document_path",
          "text"
        ],
        "title": "format_textArguments",
        "type": "object"
      }
    },
    {
      "name": "protect_document",
      "description": "\n    设置文档密码保护。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        password: 用于保护文档的密码 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        protect_document(document_path=\"temp_document.docx\", password=\"securepassword123\")\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "document_path",
          "password"
        ],
        "title": "protect_documentArguments",
        "type": "object"
      }
    },
    {
      "name": "add_footnote_to_document",
      "description": "\n    添加文档脚注。\n\n    Args:\n        document_path: Word文档的文件路径 (必填)。\n        text: 脚注文本 (必填)。\n\n    Returns:\n        一个包含成功消息或错误信息的JSON字符串。\n\n    示例:\n        add_footnote_to_document(document_path=\"temp_document.docx\", text=\"This is a footnote.\")\n    ",
      "args_schema": {
        "properties": {
          "document_path": {
            "title": "Document Path",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "document_path",
          "text"
        ],
        "title": "add_footnote_to_documentArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "create_document": [
      {
        "case_name": "创建文档_基本功能",
        "purpose": "验证create_document工具在提供所有必填参数时能够成功创建Word文档并设置元数据。",
        "args": {
          "title": "Sample Title",
          "author": "John Doe",
          "subject": "Sample Subject"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.026567697525024414,
        "is_functional_test": true
      },
      {
        "case_name": "创建文档_中文元数据",
        "purpose": "验证create_document工具支持使用中文作为元数据字段值。",
        "args": {
          "title": "测试文档标题",
          "author": "张三",
          "subject": "技术文档"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.031075000762939453,
        "is_functional_test": true
      },
      {
        "case_name": "创建文档_特殊字符元数据",
        "purpose": "验证create_document工具支持包含特殊字符的元数据字段值。",
        "args": {
          "title": "Test@Title#123!",
          "author": "User$Name%",
          "subject": "Testing&Special*Chars"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.02404928207397461,
        "is_functional_test": true
      },
      {
        "case_name": "创建文档_空字符串参数",
        "purpose": "验证create_document工具处理空字符串输入的情况。",
        "args": {
          "title": "",
          "author": "",
          "subject": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to create document: \\u6240\\u6709\\u53c2\\u6570 (title, author, subject) \\u5fc5\\u987b\\u975e\\u7a7a\\u4e14\\u6709\\u6548\\u3002\"}"
        },
        "execution_time": 0.0029969215393066406,
        "is_functional_test": true
      },
      {
        "case_name": "创建文档_超长元数据",
        "purpose": "验证create_document工具是否能处理超长的元数据字段值。",
        "args": {
          "title": "ThisIsAVeryLongTitleThatExceedsTheNormalLengthOfATitleFieldInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt",
          "author": "ThisIsAVeryLongAuthorNameThatExceedsTheNormalLengthOfAnAuthorFieldInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt",
          "subject": "ThisIsAVeryLongSubjectThatExceedsTheNormalLengthOfASubjectFieldInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.021526098251342773,
        "is_functional_test": true
      },
      {
        "case_name": "创建文档_缺少标题参数",
        "purpose": "验证create_document工具在缺少必填title参数时能否正确返回错误信息。",
        "args": {
          "author": "John Doe",
          "subject": "Sample Subject"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\ntitle\n  Field required [type=missing, input_value={'author': 'John Doe', 's...ject': 'Sample Subject'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0060062408447265625,
        "is_functional_test": false
      },
      {
        "case_name": "创建文档_缺少作者参数",
        "purpose": "验证create_document工具在缺少必填author参数时能否正确返回错误信息。",
        "args": {
          "title": "Sample Title",
          "subject": "Sample Subject"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nauthor\n  Field required [type=missing, input_value={'title': 'Sample Title',...ject': 'Sample Subject'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0035123825073242188,
        "is_functional_test": false
      },
      {
        "case_name": "创建文档_缺少主题参数",
        "purpose": "验证create_document工具在缺少必填subject参数时能否正确返回错误信息。",
        "args": {
          "title": "Sample Title",
          "author": "John Doe"
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 1 validation error for create_documentArguments\nsubject\n  Field required [type=missing, input_value={'title': 'Sample Title', 'author': 'John Doe'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0025048255920410156,
        "is_functional_test": false
      },
      {
        "case_name": "创建文档_无效类型参数",
        "purpose": "验证create_document工具在传入非字符串类型参数时能否正确处理。",
        "args": {
          "title": 123,
          "author": true,
          "subject": [
            "list",
            "of",
            "subjects"
          ]
        },
        "response": {
          "error": "ToolException: Error executing tool create_document: 3 validation errors for create_documentArguments\ntitle\n  Input should be a valid string [type=string_type, input_value=123, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nauthor\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\nsubject\n  Input should be a valid string [type=string_type, input_value=['list', 'of', 'subjects'], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004514217376708984,
        "is_functional_test": false
      },
      {
        "case_name": "创建文档_文件路径注入测试",
        "purpose": "验证create_document工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "title": "../malicious_title",
          "author": "../../etc/passwd",
          "subject": "malicious_subject"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.03051161766052246,
        "is_functional_test": false
      },
      {
        "case_name": "创建文档_保留文件权限测试",
        "purpose": "验证create_document工具在只读目录中是否能正确处理文件创建和权限问题。",
        "args": {
          "title": "locked_output",
          "author": "system",
          "subject": "restricted_access"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Document created successfully.\", \"file_path\": \"temp_document.docx\"}"
        },
        "execution_time": 0.023041486740112305,
        "is_functional_test": false
      }
    ],
    "add_paragraph": [
      {
        "case_name": "添加段落_基本功能",
        "purpose": "验证add_paragraph工具在提供所有必填参数时能够成功向文档中添加段落文本。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx",
          "text": "This is a new paragraph."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document.docx\"}"
        },
        "execution_time": 0.009504318237304688,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落_中文内容",
        "purpose": "验证add_paragraph工具支持将包含中文的文本作为段落插入到Word文档中。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文档.docx",
          "text": "这是一个新的段落。"
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.03207540512084961,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落_特殊字符内容",
        "purpose": "验证add_paragraph工具能正确处理包含特殊字符的文本，并将其添加为文档中的新段落。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@chars#path!.docx",
          "text": "This paragraph contains special characters: !@#$%^&*()_+=-`~[]{};':\",./<>?"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@chars#path!.docx\"}"
        },
        "execution_time": 0.007995128631591797,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落_空字符串文本",
        "purpose": "验证当传入空字符串作为文本参数时，add_paragraph工具能否返回合理的错误提示。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx",
          "text": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document.docx\"}"
        },
        "execution_time": 0.014021158218383789,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_超长文本",
        "purpose": "验证add_paragraph工具是否能处理超长文本输入，并正确将其添加为文档中的段落。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_very_long_filename_that_tests_the_maximum_allowed_length_for_file_paths_in_windows_systems.docx",
          "text": "ThisIsAVeryLongTextThatExceedsTheNormalLengthOfTypicalParagraphsInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt. ThisIsAVeryLongTextThatExceedsTheNormalLengthOfTypicalParagraphsInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt. ThisIsAVeryLongTextThatExceedsTheNormalLengthOfTypicalParagraphsInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_very_long_filename_that_tests_the_maximum_allowed_length_for_file_paths_in_windows_systems.docx\"}"
        },
        "execution_time": 0.03268241882324219,
        "is_functional_test": true
      },
      {
        "case_name": "添加段落_无效文件路径",
        "purpose": "验证add_paragraph工具在指定不存在的文档路径时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should fail because the document does not exist."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx\"}"
        },
        "execution_time": 0.030800342559814453,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_只读文档",
        "purpose": "验证add_paragraph工具在尝试向只读文档添加段落时能否正确处理权限问题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\locked_output.docx",
          "text": "This paragraph should not be added due to read-only file permissions."
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Paragraph added successfully.\"}"
        },
        "execution_time": 0.03972005844116211,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_路径遍历注入测试",
        "purpose": "验证add_paragraph工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_document.docx",
          "text": "Potential path traversal attempt should be blocked."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\malicious_document.docx\"}"
        },
        "execution_time": 0.019654512405395508,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_缺少文档路径参数",
        "purpose": "验证add_paragraph工具在缺少必填document_path参数时能否正确返回错误信息。",
        "args": {
          "text": "This should fail due to missing document_path parameter."
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ndocument_path\n  Field required [type=missing, input_value={'text': 'This should fai...cument_path parameter.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005515575408935547,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_缺少文本参数",
        "purpose": "验证add_paragraph工具在缺少必填text参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 1 validation error for add_paragraphArguments\ntext\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...les\\\\new_document.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.015584468841552734,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_非字符串参数类型",
        "purpose": "验证add_paragraph工具在传入非字符串类型的参数时能否正确处理并返回错误。",
        "args": {
          "document_path": 12345,
          "text": true
        },
        "response": {
          "error": "ToolException: Error executing tool add_paragraph: 2 validation errors for add_paragraphArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\ntext\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.05051827430725098,
        "is_functional_test": false
      },
      {
        "case_name": "添加段落_空白文档测试",
        "purpose": "验证add_paragraph工具能否成功将段落添加到一个空白文档中。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.docx",
          "text": "This paragraph is added to an empty document."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add paragraph: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.docx\"}"
        },
        "execution_time": 0.03506302833557129,
        "is_functional_test": true
      }
    ],
    "add_heading": [
      {
        "case_name": "添加标题_基本功能",
        "purpose": "验证add_heading工具在提供所有必填参数时能够成功向文档中添加标题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "Main Title",
          "level": 0
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.02375316619873047,
        "is_functional_test": true
      },
      {
        "case_name": "添加标题_中文内容",
        "purpose": "验证add_heading工具支持将包含中文的文本作为标题插入到Word文档中。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文档.docx",
          "text": "中文标题",
          "level": 1
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.036752939224243164,
        "is_functional_test": true
      },
      {
        "case_name": "添加标题_特殊字符内容",
        "purpose": "验证add_heading工具能正确处理包含特殊字符的文本，并将其添加为文档中的标题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "Title with !@#$%^&*()",
          "level": 2
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.022970914840698242,
        "is_functional_test": true
      },
      {
        "case_name": "添加标题_空字符串文本",
        "purpose": "验证当传入空字符串作为text参数时，add_heading工具能否返回合理的错误提示。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "",
          "level": 3
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.02324819564819336,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_超长文本",
        "purpose": "验证add_heading工具是否能处理超长文本输入，并正确将其添加为文档中的标题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "ThisIsAVeryLongTitleThatExceedsTheNormalLengthOfATitleFieldInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt",
          "level": 4
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.025635719299316406,
        "is_functional_test": true
      },
      {
        "case_name": "添加标题_无效文件路径",
        "purpose": "验证add_heading工具在指定不存在的文档路径时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should fail because the document does not exist.",
          "level": 5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add heading: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx\"}"
        },
        "execution_time": 0.004507780075073242,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_只读文档",
        "purpose": "验证add_heading工具在尝试向只读文档添加标题时能否正确处理权限问题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\locked_output.docx",
          "text": "This title should not be added due to read-only file permissions.",
          "level": 6
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Heading added successfully.\"}"
        },
        "execution_time": 0.024606943130493164,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_路径遍历注入测试",
        "purpose": "验证add_heading工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_document.docx",
          "text": "Potential path traversal attempt should be blocked.",
          "level": 7
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add heading: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\malicious_document.docx\"}"
        },
        "execution_time": 0.004574298858642578,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_缺少文档路径参数",
        "purpose": "验证add_heading工具在缺少必填document_path参数时能否正确返回错误信息。",
        "args": {
          "text": "This should fail due to missing document_path parameter.",
          "level": 8
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ndocument_path\n  Field required [type=missing, input_value={'text': 'This should fai...parameter.', 'level': 8}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029473304748535156,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_缺少文本参数",
        "purpose": "验证add_heading工具在缺少必填text参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "level": 9
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 1 validation error for add_headingArguments\ntext\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...ument.docx', 'level': 9}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0019996166229248047,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_非字符串参数类型",
        "purpose": "验证add_heading工具在传入非字符串类型的参数时能否正确处理并返回错误。",
        "args": {
          "document_path": 12345,
          "text": true,
          "level": 1
        },
        "response": {
          "error": "ToolException: Error executing tool add_heading: 2 validation errors for add_headingArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\ntext\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004515409469604492,
        "is_functional_test": false
      },
      {
        "case_name": "添加标题_空白文档测试",
        "purpose": "验证add_heading工具能否成功将标题添加到一个空白文档中。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.docx",
          "text": "This heading is added to an empty document.",
          "level": 0
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add heading: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.docx\"}"
        },
        "execution_time": 0.00507044792175293,
        "is_functional_test": true
      }
    ],
    "create_custom_style": [
      {
        "case_name": "创建自定义样式_基本功能",
        "purpose": "验证create_custom_style工具在提供所有必填参数时能够成功创建自定义样式并设置字体属性。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "MyStyle",
          "font_name": "Arial",
          "font_size": 12
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.05140113830566406,
        "is_functional_test": true
      },
      {
        "case_name": "创建自定义样式_中文样式名",
        "purpose": "验证create_custom_style工具是否支持使用中文作为样式名称。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "我的样式",
          "font_name": "宋体",
          "font_size": 14
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.04279971122741699,
        "is_functional_test": true
      },
      {
        "case_name": "创建自定义样式_特殊字符样式名",
        "purpose": "验证create_custom_style工具是否能处理包含特殊字符的样式名称。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "Style#1!@",
          "font_name": "Times New Roman",
          "font_size": 10
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.041547298431396484,
        "is_functional_test": true
      },
      {
        "case_name": "创建自定义样式_超长样式名",
        "purpose": "验证create_custom_style工具是否能处理超长样式名称。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "ThisIsAVeryLongStyleNameThatExceedsTheNormalLengthOfTypicalStyleNamesInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt",
          "font_name": "Courier New",
          "font_size": 16
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.04643869400024414,
        "is_functional_test": true
      },
      {
        "case_name": "创建自定义样式_路径遍历注入测试",
        "purpose": "验证create_custom_style工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_document.docx",
          "style_name": "InjectedStyle",
          "font_name": "Verdana",
          "font_size": 18
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to create custom style: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\malicious_document.docx\"}"
        },
        "execution_time": 0.028077363967895508,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_只读文档",
        "purpose": "验证create_custom_style工具在尝试向只读文档添加样式时能否正确处理权限问题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\locked_output.docx",
          "style_name": "ReadOnlyStyle",
          "font_name": "Calibri",
          "font_size": 11
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.05391979217529297,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_无效字体名称",
        "purpose": "验证create_custom_style工具在传入无效字体名称时能否返回错误提示。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "InvalidFontStyle",
          "font_name": "InvalidFontName123!",
          "font_size": 12
        },
        "response": {
          "result": "{\"status\": \"success\", \"message\": \"Custom style created successfully.\"}"
        },
        "execution_time": 0.04488253593444824,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_非法字体大小",
        "purpose": "验证create_custom_style工具在传入非法字体大小值（如负数或零）时能否正确处理。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "NegativeFontSizeStyle",
          "font_name": "Arial",
          "font_size": -5
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to create custom style: Invalid font size: -5. Font size must be positive.\"}"
        },
        "execution_time": 0.0501093864440918,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_缺少文档路径参数",
        "purpose": "验证create_custom_style工具在缺少必填document_path参数时能否正确返回错误信息。",
        "args": {
          "style_name": "MissingDocPathStyle",
          "font_name": "Arial",
          "font_size": 12
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\ndocument_path\n  Field required [type=missing, input_value={'style_name': 'MissingDo...Arial', 'font_size': 12}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.030725955963134766,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_缺少样式名称参数",
        "purpose": "验证create_custom_style工具在缺少必填style_name参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "font_name": "Arial",
          "font_size": 12
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\nstyle_name\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...Arial', 'font_size': 12}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.04417061805725098,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_缺少字体名称参数",
        "purpose": "验证create_custom_style工具在缺少必填font_name参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "MissingFontNameStyle",
          "font_size": 12
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\nfont_name\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...Style', 'font_size': 12}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.034270524978637695,
        "is_functional_test": false
      },
      {
        "case_name": "创建自定义样式_缺少字体大小参数",
        "purpose": "验证create_custom_style工具在缺少必填font_size参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "style_name": "MissingFontSizeStyle",
          "font_name": "Arial"
        },
        "response": {
          "error": "ToolException: Error executing tool create_custom_style: 1 validation error for create_custom_styleArguments\nfont_size\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...', 'font_name': 'Arial'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.01912856101989746,
        "is_functional_test": false
      }
    ],
    "format_text": [],
    "add_footnote_to_document": [
      {
        "case_name": "添加脚注_基本功能",
        "purpose": "验证add_footnote_to_document工具在提供所有必填参数时能够成功向文档中添加脚注。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "This is a footnote."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.034252166748046875,
        "is_functional_test": true
      },
      {
        "case_name": "添加脚注_中文内容",
        "purpose": "验证add_footnote_to_document工具支持将包含中文的文本作为脚注插入到Word文档中。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文档.docx",
          "text": "这是一个脚注。"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.029661178588867188,
        "is_functional_test": true
      },
      {
        "case_name": "添加脚注_特殊字符内容",
        "purpose": "验证add_footnote_to_document工具能正确处理包含特殊字符的文本，并将其添加为文档中的脚注。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "Footnote with !@#$%^&*()_+=-`~[]{};':\",./<>?"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.046563148498535156,
        "is_functional_test": true
      },
      {
        "case_name": "添加脚注_超长文本",
        "purpose": "验证add_footnote_to_document工具是否能处理超长文本输入，并正确将其添加为文档中的脚注。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": "ThisIsAVeryLongFootnoteTextThatExceedsTheNormalLengthOfTypicalFootnotesInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt. ThisIsAVeryLongFootnoteTextThatExceedsTheNormalLengthOfTypicalFootnotesInMostDocumentManagementSystemsAndTestsHowTheToolHandlesIt."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.0378570556640625,
        "is_functional_test": true
      },
      {
        "case_name": "添加脚注_路径遍历注入测试",
        "purpose": "验证add_footnote_to_document工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_document.docx",
          "text": "Potential path traversal attempt should be blocked."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\malicious_document.docx\"}"
        },
        "execution_time": 0.033531904220581055,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_只读文档",
        "purpose": "验证add_footnote_to_document工具在尝试向只读文档添加脚注时能否正确处理权限问题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\locked_output.docx",
          "text": "This footnote should not be added due to read-only file permissions."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.056891679763793945,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_无效文件路径",
        "purpose": "验证add_footnote_to_document工具在指定不存在的文档路径时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "text": "This should fail because the document does not exist."
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx\"}"
        },
        "execution_time": 0.032645463943481445,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_缺少文档路径参数",
        "purpose": "验证add_footnote_to_document工具在缺少必填document_path参数时能否正确返回错误信息。",
        "args": {
          "text": "This should fail due to missing document_path parameter."
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\ndocument_path\n  Field required [type=missing, input_value={'text': 'This should fai...cument_path parameter.'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.046576499938964844,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_缺少文本参数",
        "purpose": "验证add_footnote_to_document工具在缺少必填text参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 1 validation error for add_footnote_to_documentArguments\ntext\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...saved_as_document.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.017028093338012695,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_空字符串文本",
        "purpose": "验证当传入空字符串作为text参数时，add_footnote_to_document工具能否返回合理的错误提示。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "text": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to add footnote: 'Document' object has no attribute 'add_footnote'\"}"
        },
        "execution_time": 0.055120229721069336,
        "is_functional_test": false
      },
      {
        "case_name": "添加脚注_非字符串参数类型",
        "purpose": "验证add_footnote_to_document工具在传入非字符串类型的参数时能否正确处理并返回错误。",
        "args": {
          "document_path": 12345,
          "text": true
        },
        "response": {
          "error": "ToolException: Error executing tool add_footnote_to_document: 2 validation errors for add_footnote_to_documentArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\ntext\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.03395509719848633,
        "is_functional_test": false
      }
    ],
    "protect_document": [
      {
        "case_name": "保护文档_基本功能",
        "purpose": "验证protect_document工具在提供所有必填参数时能够成功设置文档密码保护。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "password": "securepassword123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Setting password protection is not supported by python-docx.\"}"
        },
        "execution_time": 0.032605648040771484,
        "is_functional_test": true
      },
      {
        "case_name": "保护文档_中文路径测试",
        "purpose": "验证protect_document工具是否支持包含中文字符的文档路径。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文档.docx",
          "password": "chinesepassword"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Setting password protection is not supported by python-docx.\"}"
        },
        "execution_time": 0.07684659957885742,
        "is_functional_test": true
      },
      {
        "case_name": "保护文档_特殊字符路径测试",
        "purpose": "验证protect_document工具是否能处理包含特殊字符的文档路径。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special@chars#path!.docx",
          "password": "special!@#password"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to protect document: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special@chars#path!.docx\"}"
        },
        "execution_time": 0.045767784118652344,
        "is_functional_test": true
      },
      {
        "case_name": "保护文档_超长密码测试",
        "purpose": "验证protect_document工具是否能处理超长密码输入。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "password": "ThisIsAVeryLongPasswordThatExceedsTheNormalLengthOfTypicalPasswordsAndTestsHowTheToolHandlesIt"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Setting password protection is not supported by python-docx.\"}"
        },
        "execution_time": 0.02657318115234375,
        "is_functional_test": true
      },
      {
        "case_name": "保护文档_空字符串密码",
        "purpose": "验证当传入空字符串作为密码参数时，protect_document工具能否返回合理的错误提示。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx",
          "password": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to protect document: Password cannot be empty or whitespace.\"}"
        },
        "execution_time": 0.06625747680664062,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_无效文件路径",
        "purpose": "验证protect_document工具在指定不存在的文档路径时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_document.docx",
          "password": "securepassword123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to protect document: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_document.docx\"}"
        },
        "execution_time": 0.0351107120513916,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_只读文档测试",
        "purpose": "验证protect_document工具在尝试对只读文档进行密码保护时能否正确处理权限问题。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\read_only_dir\\locked_output.docx",
          "password": "readonlypassword"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Setting password protection is not supported by python-docx.\"}"
        },
        "execution_time": 0.028564929962158203,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_路径遍历注入测试",
        "purpose": "验证protect_document工具是否对文件路径参数进行安全检查，防止路径遍历攻击。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\..\\malicious_document.docx",
          "password": "traversalpassword"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to protect document: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\..\\\\malicious_document.docx\"}"
        },
        "execution_time": 0.04585003852844238,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_缺少文档路径参数",
        "purpose": "验证protect_document工具在缺少必填document_path参数时能否正确返回错误信息。",
        "args": {
          "password": "missingpathpassword"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\ndocument_path\n  Field required [type=missing, input_value={'password': 'missingpathpassword'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.03355884552001953,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_缺少密码参数",
        "purpose": "验证protect_document工具在缺少必填password参数时能否正确返回错误信息。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_as_document.docx"
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 1 validation error for protect_documentArguments\npassword\n  Field required [type=missing, input_value={'document_path': 'D:\\\\de...saved_as_document.docx'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.055500030517578125,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_非字符串参数类型",
        "purpose": "验证protect_document工具在传入非字符串类型的参数时能否正确处理并返回错误。",
        "args": {
          "document_path": 12345,
          "password": true
        },
        "response": {
          "error": "ToolException: Error executing tool protect_document: 2 validation errors for protect_documentArguments\ndocument_path\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type\npassword\n  Input should be a valid string [type=string_type, input_value=True, input_type=bool]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.03361988067626953,
        "is_functional_test": false
      },
      {
        "case_name": "保护文档_空白文档测试",
        "purpose": "验证protect_document工具能否成功为一个空白文档设置密码保护。",
        "args": {
          "document_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_content.docx",
          "password": "blankdocpassword"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Failed to protect document: The document path does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_content.docx\"}"
        },
        "execution_time": 0.08244895935058594,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 70
}