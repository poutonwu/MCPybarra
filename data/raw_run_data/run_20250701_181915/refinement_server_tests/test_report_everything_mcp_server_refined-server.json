{
  "server_name": "server",
  "parent_dir": "everything_mcp_server_refined",
  "report_name": "everything_mcp_server_refined-server",
  "server_path": "workspace\\refinement\\everything_mcp_server_refined\\server.py",
  "timestamp": "2025-07-01T18:34:10.968659",
  "tools": [
    {
      "name": "search_files_with_everything",
      "description": "\n    Perform a high-speed search on Windows files and folders using Everything's capabilities.\n\n    This tool allows you to leverage the power of Everything to quickly find files based on various criteria such as wildcard, regex, path, size, time, and attributes.\n\n    Args:\n        query (str): The search query string. You can use wildcards (*, ?), paths, sizes, times, etc., according to Everything's syntax.\n        match_case (bool): Enable case-sensitive matching. Defaults to False.\n        match_whole_word (bool): Match whole words only. Defaults to False.\n        regex (bool): Use regular expression matching. Defaults to False.\n        max_results (Optional[int]): Limit the number of returned results. Defaults to None, meaning no limit.\n\n    Returns:\n        str: A JSON-formatted string containing a list of dictionaries with detailed information about each found file.\n\n    Raises:\n        ValueError: If the input parameters are invalid.\n        EverythingSearchError: If there is an issue while performing the search.\n\n    Example:\n        To search for all .txt files in C:\\Users\\JohnDoe without case sensitivity and get at most 50 results:\n        ```python\n        search_files_with_everything(query=r\"C:\\Users\\JohnDoe\\*.txt\", match_case=False, max_results=50)\n        ```\n    ",
      "args_schema": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "match_case": {
            "default": false,
            "title": "Match Case",
            "type": "boolean"
          },
          "match_whole_word": {
            "default": false,
            "title": "Match Whole Word",
            "type": "boolean"
          },
          "regex": {
            "default": false,
            "title": "Regex",
            "type": "boolean"
          },
          "max_results": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Max Results"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_files_with_everythingArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_files_with_everything": [
      {
        "case_name": "Basic File Search By Extension",
        "purpose": "验证工具能否使用默认参数搜索指定扩展名的文件",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\*.pdf"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.15627503395080566,
        "is_functional_test": true
      },
      {
        "case_name": "Case Sensitive Search Test",
        "purpose": "验证工具是否支持大小写敏感搜索",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\code.html",
          "match_case": true
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.1817915439605713,
        "is_functional_test": true
      },
      {
        "case_name": "Regex Search For Image Files",
        "purpose": "验证正则表达式搜索图像文件的功能",
        "args": {
          "query": ".*nature_image_template_heatmap_.*\\.jpg",
          "regex": true
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.01050877571105957,
        "is_functional_test": true
      },
      {
        "case_name": "Limit Maximum Results",
        "purpose": "验证返回结果数量限制功能",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\*.jpg",
          "max_results": 3
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.12387943267822266,
        "is_functional_test": true
      },
      {
        "case_name": "Whole Word Match Test",
        "purpose": "验证全字匹配搜索功能",
        "args": {
          "query": "附件1",
          "match_whole_word": true
        },
        "response": {
          "result": "[{\"filename\": -143671440, \"path\": -143671352, \"size\": 0, \"date_modified\": 0}, {\"filename\": -143671278, \"path\": -143671182, \"size\": 0, \"date_modified\": 0}, {\"filename\": -143671094, \"path\": -143671008, \"size\": 0, \"date_modified\": 0}]"
        },
        "execution_time": 0.07729744911193848,
        "is_functional_test": true
      },
      {
        "case_name": "Search In Subdirectory",
        "purpose": "验证子目录中文件的搜索能力",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\*.docx"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.11500859260559082,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters In Query",
        "purpose": "验证包含特殊字符的文件名搜索",
        "args": {
          "query": "文档_另存为测试_unicodethis_is_a_very_long_suffix_that_exceeds_normal_length_limits_and_tests_the_maximum_allowed_size_for_suffix_in_the_tool_implementation_it_should_be_accepted_if_within_system_constraints.docx"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.01701641082763672,
        "is_functional_test": true
      },
      {
        "case_name": "Wildcard Path Search",
        "purpose": "验证通配符路径搜索功能",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\*道路*"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.13014769554138184,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Hidden Git Files",
        "purpose": "验证工具不会暴露隐藏或系统保护文件（如.git目录）",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\.git\\\\*"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.10941195487976074,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Query Parameter",
        "purpose": "验证无效查询参数时的错误处理",
        "args": {
          "query": ""
        },
        "response": {
          "error": "ToolException: Error executing tool search_files_with_everything: Failed to execute search: 'query' must be a non-empty string."
        },
        "execution_time": 0.0029375553131103516,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Path Search",
        "purpose": "验证对不存在路径进行搜索时的错误处理",
        "args": {
          "query": "D:\\\\nonexistent\\\\path\\\\*.txt"
        },
        "response": {
          "result": "[]"
        },
        "execution_time": 0.11495327949523926,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Max Results",
        "purpose": "验证负数最大结果值的边界条件处理",
        "args": {
          "query": "D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\*.jpg",
          "max_results": -5
        },
        "response": {
          "error": "ToolException: Error executing tool search_files_with_everything: Failed to execute search: 'max_results' must be a positive integer or None."
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 12
}