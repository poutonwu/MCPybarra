{
  "server_name": "server",
  "parent_dir": "financial_data_mcp_server_refined",
  "report_name": "financial_data_mcp_server_refined-server",
  "server_path": "workspace\\refinement\\financial_data_mcp_server_refined\\server.py",
  "timestamp": "2025-07-01T18:34:10.985188",
  "tools": [
    {
      "name": "get_income_statements",
      "description": "\n    获取指定公司的利润表数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        period: 报告周期，可选值: annual(年度), quarterly(季度), ttm(滚动12个月)。\n        limit: 返回结果的最大数量，默认10条，最大100条。\n\n    Returns:\n        包含利润表数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_income_statements(ticker=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_income_statementsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_balance_sheets",
      "description": "\n    获取指定公司的资产负债表数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        period: 报告周期，可选值: annual(年度), quarterly(季度), ttm(滚动12个月)。\n        limit: 返回结果的最大数量，默认10条，最大100条。\n\n    Returns:\n        包含资产负债表数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_balance_sheets(ticker=\"AAPL\", period=\"quarterly\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_balance_sheetsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_cash_flows",
      "description": "\n    获取指定公司的现金流量表数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        period: 报告周期，可选值: annual(年度), quarterly(季度), ttm(滚动12个月)。\n        limit: 返回结果的最大数量，默认10条，最大100条。\n\n    Returns:\n        包含现金流量表数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_cash_flows(ticker=\"AAPL\", period=\"annual\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_cash_flowsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_stock_prices",
      "description": "\n    获取指定股票的历史价格数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        start_date: 开始日期，格式: YYYY-MM-DD (可选)。\n        end_date: 结束日期，格式: YYYY-MM-DD (可选)。\n        interval: 时间间隔，可选值: minute, hour, day, week, month，默认为 day。\n        interval_multiplier: 时间间隔乘数，默认为 1。\n\n    Returns:\n        包含历史股价数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_stock_prices(ticker=\"AAPL\", start_date=\"2023-01-01\", end_date=\"2023-12-31\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "start_date": {
            "default": null,
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "default": null,
            "title": "End Date",
            "type": "string"
          },
          "interval": {
            "default": "day",
            "title": "Interval",
            "type": "string"
          },
          "interval_multiplier": {
            "default": 1,
            "title": "Interval Multiplier",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_stock_pricesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_market_news",
      "description": "\n    获取与公司或市场相关的最新金融新闻。\n\n    Args:\n        topic: 新闻主题，可以是公司名称、行业或市场关键词 (必填)。\n        limit: 返回结果的最大数量，默认10条，最大100条。\n\n    Returns:\n        包含最新金融新闻数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_market_news(topic=\"technology\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "topic": {
            "title": "Topic",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "topic"
        ],
        "title": "get_market_newsArguments",
        "type": "object"
      }
    },
    {
      "name": "get_company_profile",
      "description": "\n    获取公司简介信息。\n\n    Args:\n        ticker: 股票代码 (必填)。\n\n    Returns:\n        包含公司简介信息的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_company_profile(ticker=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_company_profileArguments",
        "type": "object"
      }
    },
    {
      "name": "get_analyst_estimates",
      "description": "\n    获取分析师预测数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n\n    Returns:\n        包含分析师预测数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_analyst_estimates(ticker=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_analyst_estimatesArguments",
        "type": "object"
      }
    },
    {
      "name": "get_dividend_history",
      "description": "\n    获取公司股息历史记录。\n\n    Args:\n        ticker: 股票代码 (必填)。\n\n    Returns:\n        包含股息历史记录的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_dividend_history(ticker=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_dividend_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_splits_history",
      "description": "\n    查询股票分割历史。\n\n    Args:\n        ticker: 股票代码 (必填)。\n\n    Returns:\n        包含股票分割历史记录的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_splits_history(ticker=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_splits_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_earnings_history",
      "description": "\n    获取公司历史财报数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        limit: 返回结果的最大数量，默认10条，最大100条。\n\n    Returns:\n        包含历史财报数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_earnings_history(ticker=\"AAPL\", limit=5)\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "limit": {
            "default": 10,
            "title": "Limit",
            "type": "integer"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_earnings_historyArguments",
        "type": "object"
      }
    },
    {
      "name": "get_financial_ratios",
      "description": "\n    获取公司财务比率数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n        period: 报告周期，可选值: annual(年度), quarterly(季度)。\n\n    Returns:\n        包含财务比率数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_financial_ratios(ticker=\"AAPL\", period=\"annual\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          },
          "period": {
            "default": "annual",
            "title": "Period",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_financial_ratiosArguments",
        "type": "object"
      }
    },
    {
      "name": "get_ownership_data",
      "description": "\n    获取公司股权结构数据。\n\n    Args:\n        ticker: 股票代码 (必填)。\n\n    Returns:\n        包含股权结构数据的JSON格式字符串。\n\n    Raises:\n        ValueError: 如果参数无效。\n        httpx.HTTPStatusError: 如果API请求失败。\n\n    示例:\n        get_ownership_data(ticker=\"AAPL\")\n    ",
      "args_schema": {
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string"
          }
        },
        "required": [
          "ticker"
        ],
        "title": "get_ownership_dataArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "get_company_profile": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的公司简介",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的公司简介信息。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.2523078918457031,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的公司简介",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的公司简介信息。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8084490299224854,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 股票代码不能为空"
        },
        "execution_time": 0.0040607452392578125,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: 1 validation error for get_company_profileArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全处理包含特殊字符的 ticker 输入，防止注入攻击。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35972070693969727,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8097610473632812,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用中文 ticker 测试",
        "purpose": "验证工具对中文 ticker 的处理能力（虽然 ticker 通常为英文，但应能识别无效输入）。",
        "args": {
          "ticker": "中文股票代码"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35576415061950684,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3607795238494873,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35421276092529297,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 跨站脚本攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35007596015930176,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3557157516479492,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用数字和字母组合 ticker",
        "purpose": "验证工具是否能正确处理包含数字和字母组合的 ticker（如 NVDA123 是无效的，但应有明确反馈）。",
        "args": {
          "ticker": "NVDA123"
        },
        "response": {
          "error": "ToolException: Error executing tool get_company_profile: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37736964225769043,
        "is_functional_test": true
      }
    ],
    "get_stock_prices": [
      {
        "case_name": "基本功能测试 - 获取默认参数的股票价格数据",
        "purpose": "验证工具能够使用默认参数（interval='day'）成功获取指定股票的历史价格数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 1.2075998783111572,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 指定日期范围获取股票价格数据",
        "purpose": "验证工具能够在指定的 start_date 和 end_date 范围内获取股票的历史价格数据。",
        "args": {
          "ticker": "AAPL",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31"
        },
        "response": {
          "result": "{\"ticker\":\"AAPL\",\"prices\":[{\"ticker\":\"AAPL\",\"open\":130.28,\"close\":125.07,\"high\":130.9,\"low\":124.17,\"volume\":112117471,\"time\":\"2023-01-03T05:00:00Z\",\"time_milliseconds\":1672722000000},{\"ticker\":\"AAPL\",\"open\":126.89,\"close\":126.36,\"high\":128.66,\"low\":125.08,\"volume\":89100633,\"time\":\"2023-01-04T05:00:00Z\",\"time_milliseconds\":1672808400000},{\"ticker\":\"AAPL\",\"open\":127.13,\"close\":125.02,\"high\":127.77,\"low\":124.76,\"volume\":80716808,\"time\":\"2023-01-05T05:00:00Z\",\"time_milliseconds\":1672894800000},{\"ticker\":\"AAPL\",\"open\":126.01,\"close\":129.62,\"high\":130.29,\"low\":124.89,\"volume\":87754715,\"time\":\"2023-01-06T05:00:00Z\",\"time_milliseconds\":1672981200000},{\"ticker\":\"AAPL\",\"open\":130.47,\"close\":130.15,\"high\":133.41,\"low\":129.89,\"volume\":70790813,\"time\":\"2023-01-09T05:00:00Z\",\"time_milliseconds\":16732404...[截断]，共计38876字符，剩余38076字符"
        },
        "execution_time": 1.2159390449523926,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小时粒度获取数据",
        "purpose": "验证工具在 interval 设置为 'hour' 时能正确获取股票的历史小时级价格数据。",
        "args": {
          "ticker": "AAPL",
          "interval": "hour"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.3646824359893799,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用周粒度和乘数获取数据",
        "purpose": "验证工具在 interval 设置为 'week'，interval_multiplier 设置为 2 时能正确获取股票的历史双周价格数据。",
        "args": {
          "ticker": "MSFT",
          "interval": "week",
          "interval_multiplier": 2
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.35771632194519043,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空 ticker 参数",
        "purpose": "验证当 ticker 参数为空字符串时，工具是否抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 股票代码不能为空"
        },
        "execution_time": 0.003190279006958008,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - ticker 参数为非字符串类型",
        "purpose": "验证当 ticker 参数传入整数等非字符串类型时，工具是否抛出类型验证错误。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 1 validation error for get_stock_pricesArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0035140514373779297,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供无效日期格式",
        "purpose": "验证当 start_date 或 end_date 格式不合法时，工具是否能正确抛出异常。",
        "args": {
          "ticker": "AAPL",
          "start_date": "2023/01/01",
          "end_date": "2023-13-01"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: 无效的开始日期格式: '2023/01/01'。正确格式应为YYYY-MM-DD"
        },
        "execution_time": 0.008720159530639648,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE stocks;--'。",
        "args": {
          "ticker": "'; DROP TABLE stocks;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.8066768646240234,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能拒绝或过滤包含HTML/JavaScript代码的 ticker 输入，防止跨站脚本攻击。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.35378265380859375,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 名称",
        "purpose": "验证工具能否正确处理极长的 ticker 字符串输入（例如超过常规限制长度的字符串）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.3557589054107666,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.3438701629638672,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 获取数据",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_stock_prices: API请求失败: 400 - {\"error\":\"Missing required parameter: start_date\",\"message\":\"Please include start_date\"}"
        },
        "execution_time": 0.7819027900695801,
        "is_functional_test": true
      }
    ],
    "get_income_statements": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的年度利润表",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的年度利润表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "result": "{\"income_statements\":[{\"ticker\":\"AAPL\",\"report_period\":\"2024-09-28\",\"fiscal_period\":\"2024-FY\",\"period\":\"annual\",\"currency\":\"USD\",\"revenue\":391035000000.0,\"cost_of_revenue\":210352000000.0,\"gross_profit\":180683000000.0,\"operating_expense\":57467000000.0,\"selling_general_and_administrative_expenses\":26097000000.0,\"research_and_development\":31370000000.0,\"operating_income\":123216000000.0,\"interest_expense\":0.0,\"ebit\":123485000000.0,\"income_tax_expense\":29749000000.0,\"net_income_discontinued_operations\":0.0,\"net_income_non_controlling_interests\":0.0,\"net_income\":93736000000.0,\"net_income_common_stock\":93736000000.0,\"preferred_dividends_impact\":0.0,\"consolidated_income\":93736000000.0,\"earnings_per_share\":6.11,\"earnings_per_share_diluted\":6.08,\"dividends_per_common_share\":0.98,\"weighted_average_sh...[截断]，共计8542字符，剩余7742字符"
        },
        "execution_time": 0.8375101089477539,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的季度利润表",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的季度利润表数据。",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 10
        },
        "response": {
          "result": "{\"income_statements\":[{\"ticker\":\"MSFT\",\"report_period\":\"2025-03-31\",\"fiscal_period\":\"2025-Q3\",\"period\":\"quarterly\",\"currency\":\"USD\",\"revenue\":70066000000.0,\"cost_of_revenue\":21919000000.0,\"gross_profit\":48147000000.0,\"operating_expense\":16147000000.0,\"selling_general_and_administrative_expenses\":7949000000.0,\"research_and_development\":8198000000.0,\"operating_income\":32000000000.0,\"interest_expense\":594000000.0,\"ebit\":31971000000.0,\"income_tax_expense\":5553000000.0,\"net_income_discontinued_operations\":0.0,\"net_income_non_controlling_interests\":0.0,\"net_income\":25824000000.0,\"net_income_common_stock\":25824000000.0,\"preferred_dividends_impact\":0.0,\"consolidated_income\":25824000000.0,\"earnings_per_share\":3.47,\"earnings_per_share_diluted\":3.46,\"dividends_per_common_share\":0.83,\"weighted_average...[截断]，共计8498字符，剩余7698字符"
        },
        "execution_time": 0.8176677227020264,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取滚动12个月利润表",
        "purpose": "验证工具能够正确获取某股票代码（例如 GOOG）的TTM（滚动12个月）利润表数据。",
        "args": {
          "ticker": "GOOG",
          "period": "ttm",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.35535550117492676,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": "",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 股票代码不能为空"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345,
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: 1 validation error for get_income_statementsArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0031354427337646484,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全处理包含特殊字符的 ticker 输入，防止注入攻击。",
        "args": {
          "ticker": "'; DROP TABLE companies;--",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.7966549396514893,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.35219812393188477,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3601386547088623,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 跨站脚本攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3524909019470215,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.38097572326660156,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.36772847175598145,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用数字和字母组合 ticker",
        "purpose": "验证工具是否能正确处理包含数字和字母组合的 ticker（如 NVDA123 是无效的，但应有明确反馈）。",
        "args": {
          "ticker": "NVDA123",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_income_statements: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3540079593658447,
        "is_functional_test": true
      }
    ],
    "get_balance_sheets": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的年度资产负债表",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的年度资产负债表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "result": "{\"balance_sheets\":[{\"ticker\":\"AAPL\",\"report_period\":\"2024-09-28\",\"fiscal_period\":\"2024-FY\",\"period\":\"annual\",\"currency\":\"USD\",\"total_assets\":364980000000.0,\"current_assets\":152987000000.0,\"cash_and_equivalents\":29943000000.0,\"inventory\":7286000000.0,\"current_investments\":35228000000.0,\"trade_and_non_trade_receivables\":66243000000.0,\"non_current_assets\":211993000000.0,\"property_plant_and_equipment\":45680000000.0,\"goodwill_and_intangible_assets\":0.0,\"investments\":126707000000.0,\"non_current_investments\":91479000000.0,\"tax_assets\":0.0,\"total_liabilities\":308030000000.0,\"current_liabilities\":176392000000.0,\"current_debt\":20879000000.0,\"trade_and_non_trade_payables\":68960000000.0,\"deferred_revenue\":8249000000.0,\"deposit_liabilities\":0.0,\"non_current_liabilities\":131638000000.0,\"non_current_debt...[截断]，共计10122字符，剩余9322字符"
        },
        "execution_time": 1.2665746212005615,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的季度资产负债表",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的季度资产负债表数据。",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "result": "{\"balance_sheets\":[{\"ticker\":\"MSFT\",\"report_period\":\"2025-03-31\",\"fiscal_period\":\"2025-Q3\",\"period\":\"quarterly\",\"currency\":\"USD\",\"total_assets\":562624000000.0,\"current_assets\":156644000000.0,\"cash_and_equivalents\":79618000000.0,\"inventory\":848000000.0,\"current_investments\":0.0,\"trade_and_non_trade_receivables\":51700000000.0,\"non_current_assets\":405980000000.0,\"property_plant_and_equipment\":208414000000.0,\"goodwill_and_intangible_assets\":143297000000.0,\"investments\":16035000000.0,\"non_current_investments\":16035000000.0,\"tax_assets\":0.0,\"total_liabilities\":240733000000.0,\"current_liabilities\":114206000000.0,\"current_debt\":2999000000.0,\"trade_and_non_trade_payables\":26250000000.0,\"deferred_revenue\":47476000000.0,\"deposit_liabilities\":0.0,\"non_current_liabilities\":126527000000.0,\"non_current_d...[截断]，共计5129字符，剩余4329字符"
        },
        "execution_time": 0.7785360813140869,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取某股票代码的TTM资产负债表",
        "purpose": "验证工具能够正确获取某股票代码（例如 GOOG）的TTM（滚动12个月）资产负债表数据。",
        "args": {
          "ticker": "GOOG",
          "period": "ttm",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.3408045768737793,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": "",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 股票代码不能为空"
        },
        "execution_time": 0.004514455795288086,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345,
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: 1 validation error for get_balance_sheetsArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0070056915283203125,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全处理包含特殊字符的 ticker 输入，防止注入攻击。",
        "args": {
          "ticker": "'; DROP TABLE companies;--",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.35781025886535645,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.8133409023284912,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.8031449317932129,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 跨站脚本攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.36064720153808594,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3443024158477783,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.3505113124847412,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用数字和字母组合 ticker",
        "purpose": "验证工具是否能正确处理包含数字和字母组合的 ticker（如 NVDA123 是无效的，但应有明确反馈）。",
        "args": {
          "ticker": "NVDA123",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_balance_sheets: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3536961078643799,
        "is_functional_test": true
      }
    ],
    "get_cash_flows": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的现金流量表数据",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的年度现金流量表数据。",
        "args": {
          "ticker": "AAPL",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "result": "{\"cash_flow_statements\":[{\"ticker\":\"AAPL\",\"report_period\":\"2024-09-28\",\"fiscal_period\":\"2024-FY\",\"period\":\"annual\",\"currency\":\"USD\",\"net_income\":93736000000.0,\"depreciation_and_amortization\":11445000000.0,\"share_based_compensation\":11688000000.0,\"net_cash_flow_from_operations\":118254000000.0,\"net_cash_flow_from_investing\":2935000000.0,\"capital_expenditure\":-9447000000.0,\"property_plant_and_equipment\":-1965000000.0,\"business_acquisitions_and_disposals\":0.0,\"investment_acquisitions_and_disposals\":13690000000.0,\"net_cash_flow_from_financing\":-121983000000.0,\"issuance_or_repayment_of_debt_securities\":-5998000000.0,\"issuance_or_purchase_of_equity_shares\":-94949000000.0,\"dividends_and_other_cash_distributions\":-15234000000.0,\"change_in_cash_and_equivalents\":-794000000.0,\"effect_of_exchange_rate_...[截断]，共计8644字符，剩余7844字符"
        },
        "execution_time": 1.2339766025543213,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的季度现金流量表数据",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的季度现金流量表数据。",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly",
          "limit": 5
        },
        "response": {
          "result": "{\"cash_flow_statements\":[{\"ticker\":\"MSFT\",\"report_period\":\"2025-03-31\",\"fiscal_period\":\"2025-Q3\",\"period\":\"quarterly\",\"currency\":\"USD\",\"net_income\":25824000000.0,\"depreciation_and_amortization\":8740000000.0,\"share_based_compensation\":2980000000.0,\"net_cash_flow_from_operations\":37044000000.0,\"net_cash_flow_from_investing\":-12714000000.0,\"capital_expenditure\":-16745000000.0,\"property_plant_and_equipment\":-18696000000.0,\"business_acquisitions_and_disposals\":-981000000.0,\"investment_acquisitions_and_disposals\":4408000000.0,\"net_cash_flow_from_financing\":-13036000000.0,\"issuance_or_repayment_of_debt_securities\":-2250000000.0,\"issuance_or_purchase_of_equity_shares\":-4235000000.0,\"dividends_and_other_cash_distributions\":-6169000000.0,\"change_in_cash_and_equivalents\":11346000000.0,\"effect_of_exch...[截断]，共计4388字符，剩余3588字符"
        },
        "execution_time": 0.8226640224456787,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取某股票代码的TTM现金流量表数据",
        "purpose": "验证工具能够正确获取某股票代码（例如 GOOG）的TTM（滚动12个月）现金流量表数据。",
        "args": {
          "ticker": "GOOG",
          "period": "ttm",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.7879087924957275,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": "",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 股票代码不能为空"
        },
        "execution_time": 0.0025076866149902344,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345,
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: 1 validation error for get_cash_flowsArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 注入攻击尝试",
        "purpose": "验证工具是否能安全处理包含特殊字符的 ticker 输入，防止注入攻击。",
        "args": {
          "ticker": "'; DROP TABLE companies;--",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.35800838470458984,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.364591121673584,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.8003342151641846,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - 跨站脚本攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.3534204959869385,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.35406947135925293,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid ticker\",\"message\":\"Please provide a valid ticker.\"}"
        },
        "execution_time": 0.35408496856689453,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用数字和字母组合 ticker",
        "purpose": "验证工具是否能正确处理包含数字和字母组合的 ticker（如 NVDA123 是无效的，但应有明确反馈）。",
        "args": {
          "ticker": "NVDA123",
          "period": "annual",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_cash_flows: API请求失败: 400 - {\"error\":\"Invalid TICKER\",\"message\":\"Please provide a valid TICKER.\"}"
        },
        "execution_time": 0.35663533210754395,
        "is_functional_test": true
      }
    ],
    "get_financial_ratios": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的年度财务比率数据",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的年度财务比率数据。",
        "args": {
          "ticker": "AAPL",
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.278482437133789,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的季度财务比率数据",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的季度财务比率数据。",
        "args": {
          "ticker": "MSFT",
          "period": "quarterly"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3611912727355957,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用默认周期参数获取财务比率",
        "purpose": "验证工具在未指定 period 参数时，默认使用 annual 周期获取财务比率数据。",
        "args": {
          "ticker": "GOOG"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.39257264137268066,
        "is_functional_test": true
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--",
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3562021255493164,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": "",
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 股票代码不能为空"
        },
        "execution_time": 0.003998279571533203,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345,
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: 1 validation error for get_financial_ratiosArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.0044820308685302734,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY",
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7916247844696045,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*",
          "period": "annual"
        },
        "response": {
          "error": "ToolException: Error executing tool get_financial_ratios: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7974803447723389,
        "is_functional_test": false
      }
    ],
    "get_earnings_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的历史财报数据",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的历史财报数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.2722806930541992,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用默认limit参数获取历史财报数据",
        "purpose": "验证工具在未指定 limit 参数时，默认返回10条历史财报数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8297469615936279,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的历史财报数据",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的历史财报数据。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8006670475006104,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 指定最大limit值获取财报数据",
        "purpose": "验证工具在 limit 参数为最大允许值（100）时能正确返回相应数量的历史财报数据。",
        "args": {
          "ticker": "AAPL",
          "limit": 100
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36528658866882324,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 股票代码不能为空"
        },
        "execution_time": 0.01350712776184082,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: 1 validation error for get_earnings_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.011519670486450195,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36930418014526367,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37502217292785645,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36686182022094727,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.37354350090026855,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3684375286102295,
        "is_functional_test": false
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_earnings_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8521089553833008,
        "is_functional_test": true
      }
    ],
    "get_analyst_estimates": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的分析师预测数据",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的分析师预测数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.2759723663330078,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的分析师预测数据",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的分析师预测数据。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.38161277770996094,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8192958831787109,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 股票代码不能为空"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: 1 validation error for get_analyst_estimatesArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.004507541656494141,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.806185245513916,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.359560489654541,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35932326316833496,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.34009456634521484,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "error": "ToolException: Error executing tool get_analyst_estimates: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.378171443939209,
        "is_functional_test": false
      }
    ],
    "get_dividend_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的股息历史记录",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的股息历史记录。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.2044103145599365,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的股息历史记录",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的股息历史记录。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8084220886230469,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3691372871398926,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 股票代码不能为空"
        },
        "execution_time": 0.0030019283294677734,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: 1 validation error for get_dividend_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.005319833755493164,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8101863861083984,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35106587409973145,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.4095282554626465,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35274553298950195,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "error": "ToolException: Error executing tool get_dividend_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.817638635635376,
        "is_functional_test": false
      }
    ],
    "get_splits_history": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的股票分割历史",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的股票分割历史信息。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.2555699348449707,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的股票分割历史",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的股票分割历史信息。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35637974739074707,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7834227085113525,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 股票代码不能为空"
        },
        "execution_time": 0.0030069351196289062,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: 1 validation error for get_splits_historyArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.006002902984619141,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8131279945373535,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3457915782928467,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_splits_history: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3578805923461914,
        "is_functional_test": false
      }
    ],
    "get_ownership_data": [
      {
        "case_name": "基本功能测试 - 获取有效股票代码的股权结构数据",
        "purpose": "验证工具能够正确获取指定股票代码（例如 AAPL）的股权结构数据。",
        "args": {
          "ticker": "AAPL"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 1.5098867416381836,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取另一个有效股票代码的股权结构数据",
        "purpose": "验证工具能够正确获取另一个有效股票代码（例如 MSFT）的股权结构数据。",
        "args": {
          "ticker": "MSFT"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7729275226593018,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 使用小写 ticker 测试",
        "purpose": "验证工具是否支持小写 ticker（如 goog），并能正确处理大小写问题。",
        "args": {
          "ticker": "goog"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.7956013679504395,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为股票代码",
        "purpose": "验证当 ticker 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 股票代码不能为空"
        },
        "execution_time": 0.0060062408447265625,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型参数",
        "purpose": "验证当 ticker 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "ticker": 12345
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: 1 validation error for get_ownership_dataArguments\nticker\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.016092300415039062,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 ticker 输入，如 '; DROP TABLE companies;--'。",
        "args": {
          "ticker": "'; DROP TABLE companies;--"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.34911012649536133,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的 ticker 字符串",
        "purpose": "验证工具能否正确处理极长的 ticker 输入（超过常规长度限制）。",
        "args": {
          "ticker": "THIS_IS_A_VERY_LONG_TICKER_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.36379265785217285,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号 ticker",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 ticker 输入。",
        "args": {
          "ticker": "!@#$%^&*"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.35506606101989746,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 ticker 输入。",
        "args": {
          "ticker": "<script>alert('xss')</script>"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.8137698173522949,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供不存在的 ticker",
        "purpose": "验证当 ticker 参数为一个格式合法但不存在的股票代码（如 XYZABC）时，API 是否返回 HTTP 错误并触发异常。",
        "args": {
          "ticker": "XYZABC"
        },
        "response": {
          "error": "ToolException: Error executing tool get_ownership_data: API请求失败: 404 - \n<!doctype html>\n<html lang=\"en\">\n<head>\n  <title>Not Found</title>\n</head>\n<body>\n  <h1>Not Found</h1><p>The requested resource was not found on this server.</p>\n</body>\n</html>\n"
        },
        "execution_time": 0.3515894412994385,
        "is_functional_test": false
      }
    ],
    "get_market_news": [
      {
        "case_name": "基本功能测试 - 获取科技主题的市场新闻",
        "purpose": "验证工具能够正确获取指定主题（technology）的市场新闻数据。",
        "args": {
          "topic": "technology"
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 1.3058302402496338,
        "is_functional_test": true
      },
      {
        "case_name": "基本功能测试 - 获取金融主题并限制返回数量为5条",
        "purpose": "验证工具在指定 topic 为 'finance' 且 limit 为 5 时能正确返回相应数量的市场新闻。",
        "args": {
          "topic": "finance",
          "limit": 5
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 0.382704496383667,
        "is_functional_test": true
      },
      {
        "case_name": "错误处理测试 - 提供空字符串作为主题",
        "purpose": "验证当 topic 参数为空字符串时，工具能抛出 ValueError 异常。",
        "args": {
          "topic": "",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 新闻主题不能为空"
        },
        "execution_time": 0.0064547061920166016,
        "is_functional_test": false
      },
      {
        "case_name": "错误处理测试 - 提供非字符串类型主题",
        "purpose": "验证当 topic 参数为非字符串类型（如整数）时，工具能抛出 ValueError 异常。",
        "args": {
          "topic": 12345,
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: 1 validation error for get_market_newsArguments\ntopic\n  Input should be a valid string [type=string_type, input_value=12345, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.10/v/string_type"
        },
        "execution_time": 0.010753154754638672,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - SQL注入尝试",
        "purpose": "验证工具是否能安全处理包含SQL注入尝试的 topic 输入，如 '; DROP TABLE news;--'。",
        "args": {
          "topic": "'; DROP TABLE news;--",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 0.8281714916229248,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 极长的主题字符串",
        "purpose": "验证工具能否正确处理极长的 topic 输入（超过常规长度限制）。",
        "args": {
          "topic": "THIS_IS_A_VERY_LONG_TOPIC_NAME_THAT_SHOULD_NOT_EXIST_BUT_WE_TEST_IT_ANYWAY",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 0.38614869117736816,
        "is_functional_test": false
      },
      {
        "case_name": "边界条件测试 - 特殊符号主题",
        "purpose": "验证工具是否能正确拒绝包含特殊符号的 topic 输入。",
        "args": {
          "topic": "!@#$%^&*",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 0.8545560836791992,
        "is_functional_test": false
      },
      {
        "case_name": "安全性测试 - XSS攻击模拟",
        "purpose": "验证工具是否能正确过滤或拒绝包含 HTML 或 JavaScript 代码的 topic 输入。",
        "args": {
          "topic": "<script>alert('xss')</script>",
          "limit": 10
        },
        "response": {
          "error": "ToolException: Error executing tool get_market_news: API请求失败: 301 - "
        },
        "execution_time": 0.4500997066497803,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 126
}