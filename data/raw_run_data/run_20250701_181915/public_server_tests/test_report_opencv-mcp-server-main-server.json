{
  "server_name": "server",
  "parent_dir": "opencv-mcp-server-main",
  "report_name": "opencv-mcp-server-main-server",
  "server_path": "workspace\\public-mcp-servers\\opencv-mcp-server-main\\server.py",
  "timestamp": "2025-07-01T18:25:09.232194",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "\n    Save an image to a file\n    \n    Args:\n        path_in: Path to input image\n        path_out: Output file path\n        \n    Returns:\n        Dict: Status information\n    ",
      "args_schema": {
        "properties": {
          "path_in": {
            "title": "Path In",
            "type": "string"
          },
          "path_out": {
            "title": "Path Out",
            "type": "string"
          }
        },
        "required": [
          "path_in",
          "path_out"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "\n    Resize an image to specific dimensions\n    \n    Args:\n        image_path: Path to the image file\n        width: Target width in pixels\n        height: Target height in pixels\n        interpolation: Interpolation method\n        \n    Returns:\n        Dict: Resized image information and path\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "interpolation": {
            "default": "INTER_LINEAR",
            "title": "Interpolation",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "\n    Crop a region from an image\n    \n    Args:\n        image_path: Path to the image file\n        x: X-coordinate of top-left corner\n        y: Y-coordinate of top-left corner\n        width: Width of crop region\n        height: Height of crop region\n        \n    Returns:\n        Dict: Cropped image information and path\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "\n    Get statistical information about an image\n    \n    Args:\n        image_path: Path to the image file\n        channels: Whether to calculate stats per channel\n        \n    Returns:\n        Dict: Image statistics and paths\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "channels": {
            "default": true,
            "title": "Channels",
            "type": "boolean"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "\n    Apply various filters to an image\n    \n    Args:\n        image_path: Path to the image file\n        filter_type: Type of filter ('blur', 'gaussian', 'median', 'bilateral')\n        kernel_size: Size of the kernel, should be odd (e.g., 3, 5, 7)\n        sigma: Standard deviation for Gaussian filter\n        sigma_color: Filter sigma in the color space for bilateral filter\n        sigma_space: Filter sigma in the coordinate space for bilateral filter\n        \n    Returns:\n        Dict: Filtered image and filter information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ],
            "title": "Kernel Size"
          },
          "sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma"
          },
          "sigma_color": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma Color"
          },
          "sigma_space": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sigma Space"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "\n    Detect edges in an image\n    \n    Args:\n        image_path: Path to the image file\n        method: Edge detection method ('canny', 'sobel', 'laplacian', 'scharr')\n        threshold1: First threshold for Canny detector\n        threshold2: Second threshold for Canny detector\n        aperture_size: Aperture size for Canny and Laplacian\n        l2gradient: Flag for L2 gradient in Canny\n        ksize: Kernel size for Sobel and Laplacian\n        scale: Scale factor for Sobel, Laplacian, and Scharr\n        delta: Delta value added to results for Sobel, Laplacian, and Scharr\n        \n    Returns:\n        Dict: Edge-detected image and method information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "method": {
            "default": "canny",
            "title": "Method",
            "type": "string"
          },
          "threshold1": {
            "default": 100.0,
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "default": 200.0,
            "title": "Threshold2",
            "type": "number"
          },
          "aperture_size": {
            "default": 3,
            "title": "Aperture Size",
            "type": "integer"
          },
          "l2gradient": {
            "default": false,
            "title": "L2Gradient",
            "type": "boolean"
          },
          "ksize": {
            "default": 3,
            "title": "Ksize",
            "type": "integer"
          },
          "scale": {
            "default": 1.0,
            "title": "Scale",
            "type": "number"
          },
          "delta": {
            "default": 0.0,
            "title": "Delta",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "\n    Apply threshold to an image\n    \n    Args:\n        image_path: Path to the image file\n        threshold_type: Type of thresholding ('binary', 'binary_inv', 'trunc', 'tozero', 'tozero_inv', 'adaptive')\n        threshold_value: Threshold value for global thresholding\n        max_value: Maximum value to use with the THRESH_BINARY and THRESH_BINARY_INV types\n        adaptive_method: Adaptive method for adaptive thresholding ('mean', 'gaussian')\n        block_size: Size of a pixel neighborhood for adaptive thresholding\n        c: Constant subtracted from the mean or weighted mean for adaptive thresholding\n        \n    Returns:\n        Dict: Thresholded image and threshold information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_type": {
            "default": "binary",
            "title": "Threshold Type",
            "type": "string"
          },
          "threshold_value": {
            "default": 127.0,
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "default": 255.0,
            "title": "Max Value",
            "type": "number"
          },
          "adaptive_method": {
            "default": "gaussian",
            "title": "Adaptive Method",
            "type": "string"
          },
          "block_size": {
            "default": 11,
            "title": "Block Size",
            "type": "integer"
          },
          "c": {
            "default": 2.0,
            "title": "C",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "\n    Detect and optionally draw contours in an image\n    \n    Args:\n        image_path: Path to the image file\n        mode: Contour retrieval mode ('external', 'list', 'ccomp', 'tree')\n        method: Contour approximation method ('none', 'simple', 'tc89_l1', 'tc89_kcos')\n        draw: Whether to draw the contours on the image\n        thickness: Thickness of contour lines\n        color: Color for drawing contours (BGR format)\n        threshold_value: Threshold for binary conversion before contour detection\n        \n    Returns:\n        Dict: Image with contours and contour information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "mode": {
            "default": "external",
            "title": "Mode",
            "type": "string"
          },
          "method": {
            "default": "simple",
            "title": "Method",
            "type": "string"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "thickness": {
            "default": 1,
            "title": "Thickness",
            "type": "integer"
          },
          "color": {
            "default": [
              0,
              255,
              0
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          },
          "threshold_value": {
            "default": 127.0,
            "title": "Threshold Value",
            "type": "number"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "\n    Find basic shapes in an image\n    \n    Args:\n        image_path: Path to the image file\n        shape_type: Type of shape to find ('circles', 'lines', 'lines_p')\n        param1: First method-specific parameter (depends on shape_type)\n        param2: Second method-specific parameter (depends on shape_type)\n        min_radius: Minimum circle radius (for circles)\n        max_radius: Maximum circle radius (for circles)\n        min_dist: Minimum distance between detected circles\n        threshold: Threshold for Hough transform (for lines)\n        min_line_length: Minimum line length (for probabilistic Hough transform)\n        max_line_gap: Maximum gap between line segments (for probabilistic Hough transform)\n        draw: Whether to draw the detected shapes\n        thickness: Thickness of the drawn shapes\n        color: Color for drawing shapes (BGR format)\n        \n    Returns:\n        Dict: Image with shapes and shape information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "shape_type": {
            "title": "Shape Type",
            "type": "string"
          },
          "param1": {
            "default": 100.0,
            "title": "Param1",
            "type": "number"
          },
          "param2": {
            "default": 30.0,
            "title": "Param2",
            "type": "number"
          },
          "min_radius": {
            "default": 0,
            "title": "Min Radius",
            "type": "integer"
          },
          "max_radius": {
            "default": 0,
            "title": "Max Radius",
            "type": "integer"
          },
          "min_dist": {
            "default": 50,
            "title": "Min Dist",
            "type": "integer"
          },
          "threshold": {
            "default": 150.0,
            "title": "Threshold",
            "type": "number"
          },
          "min_line_length": {
            "default": 50.0,
            "title": "Min Line Length",
            "type": "number"
          },
          "max_line_gap": {
            "default": 10.0,
            "title": "Max Line Gap",
            "type": "number"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "thickness": {
            "default": 2,
            "title": "Thickness",
            "type": "integer"
          },
          "color": {
            "default": [
              0,
              0,
              255
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          }
        },
        "required": [
          "image_path",
          "shape_type"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "match_template_tool",
      "description": "\n    Find a template in an image\n    \n    Args:\n        image_path: Path to the source image file\n        template_path: Path to the template image file\n        method: Template matching method\n        threshold: Threshold for good matches\n        draw: Whether to draw rectangle around matches\n        color: Color for drawing rectangles (BGR format)\n        thickness: Thickness of the rectangle\n        \n    Returns:\n        Dict: Image with matches and match information\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "template_path": {
            "title": "Template Path",
            "type": "string"
          },
          "method": {
            "default": "ccoeff_normed",
            "title": "Method",
            "type": "string"
          },
          "threshold": {
            "default": 0.8,
            "title": "Threshold",
            "type": "number"
          },
          "draw": {
            "default": true,
            "title": "Draw",
            "type": "boolean"
          },
          "color": {
            "default": [
              0,
              255,
              0
            ],
            "maxItems": 3,
            "minItems": 3,
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Color",
            "type": "array"
          },
          "thickness": {
            "default": 2,
            "title": "Thickness",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "template_path"
        ],
        "title": "match_template_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Save Valid Image to New File",
        "purpose": "验证工具可以成功将一个有效的图像文件保存到指定的输出路径",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_nature_image_save_20250701_182608.jpg\",\n  \"size_bytes\": 166387,\n  \"size_mb\": 0.16,\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_nature_image_save_20250701_182608.jpg\"\n}"
        },
        "execution_time": 0.285477876663208,
        "is_functional_test": true
      },
      {
        "case_name": "Save PNG Image Successfully",
        "purpose": "验证工具能够正确处理并保存PNG格式图像文件",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_mas.png"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_mas_save_20250701_182609.png\",\n  \"size_bytes\": 218066,\n  \"size_mb\": 0.21,\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\output_mas_save_20250701_182609.png\"\n}"
        },
        "execution_time": 0.12636780738830566,
        "is_functional_test": true
      },
      {
        "case_name": "Overwrite Existing Output File",
        "purpose": "验证工具在目标路径已有文件时仍能覆盖写入新内容",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg"
        },
        "execution_time": 0.03495955467224121,
        "is_functional_test": true
      },
      {
        "case_name": "Use Chinese Characters in Output Path",
        "purpose": "测试输出路径包含中文字符是否能正常处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文_output.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: [WinError 2] 系统找不到指定的文件。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\中文_output_save_20250701_182609.jpg'"
        },
        "execution_time": 0.03316307067871094,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Input File Path",
        "purpose": "测试输入路径不存在或无效时工具的错误处理能力",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_invalid.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg"
        },
        "execution_time": 0.020145416259765625,
        "is_functional_test": false
      },
      {
        "case_name": "No Write Permission in Output Directory",
        "purpose": "测试当输出目录无写权限时工具能否优雅地处理错误",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "path_out": "C:\\Windows\\System32\\output_restricted.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: [WinError 2] 系统找不到指定的文件。: 'C:\\\\Windows\\\\System32\\\\output_restricted_save_20250701_182609.png'"
        },
        "execution_time": 0.05621528625488281,
        "is_functional_test": false
      },
      {
        "case_name": "Input is Not an Image File",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当的错误信息",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_nonimage.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.015476703643798828,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符（如空格、括号）时的行为",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output (1).jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg"
        },
        "execution_time": 0.020960569381713867,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Input Path",
        "purpose": "测试输入路径为空字符串时的错误处理",
        "args": {
          "path_in": "",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.02838587760925293,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Output Path",
        "purpose": "测试输出路径为空字符串时的错误处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "path_out": ""
        },
        "response": {
          "error": "ToolException: Error executing tool save_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:836: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\n"
        },
        "execution_time": 0.03215169906616211,
        "is_functional_test": false
      },
      {
        "case_name": "Symbolic Link in Output Path",
        "purpose": "验证工具在输出路径为符号链接时的安全性处理",
        "args": {
          "path_in": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "path_out": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_output.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\symlink_output_save_20250701_182609.jpg\",\n  \"size_bytes\": 190961,\n  \"size_mb\": 0.18,\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\symlink_output_save_20250701_182609.jpg\"\n}"
        },
        "execution_time": 0.194655179977417,
        "is_functional_test": false
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Statistics with Channels Enabled",
        "purpose": "验证工具能正确获取图像的基本统计信息并默认按通道计算",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"min\": 0.0,\n  \"max\": 255.0,\n  \"mean\": 202.76201329534663,\n  \"stddev\": 62.567381000930084,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 178.46773763273762,\n      \"stddev\": 83.17233451706119\n    },\n    {\n      \"channel\": 1,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 208.031632996633,\n      \"stddev\": 49.655518978358174\n    },\n    {\n      \"channel\": 2,\n      \"min\": 21.0,\n      \"max\": 255.0,\n      \"mean\": 221.78666925666926,\n      \"stddev\": 37.15919059539518\n    }\n  ],\n  \"histogram\": [\n    [\n      9321.0,\n      1209.0,\n      1103.0,\n      1206.0,\n      1094.0,\n      1173.0,\n      1208.0,\n     ...[截断]，共计11311字符，剩余10511字符"
        },
        "execution_time": 0.4282057285308838,
        "is_functional_test": true
      },
      {
        "case_name": "Image Statistics Without Channel Separation",
        "purpose": "测试关闭通道分离时的图像整体统计功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "channels": false
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"min\": 1.0,\n  \"max\": 255.0,\n  \"mean\": 213.13655000939323,\n  \"stddev\": 65.69821359454926,\n  \"histogram\": [\n    [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      7111.0,\n      545.0,\n      230.0,\n      233.0,\n      2697.0,\n      139.0,\n      192.0,\n      133.0,\n      152.0,\n      97.0,\n      778.0,\n      85.0,\n      92.0,\n      184.0,\n      77.0,\n      43.0,\n      81.0,\n      682.0,\n      58.0,\n      56.0,\n      93.0,\n      60.0,\n      163.0,\n      357...[截断]，共计10217字符，剩余9417字符"
        },
        "execution_time": 0.626185417175293,
        "is_functional_test": true
      },
      {
        "case_name": "Statistics for PNG Image Format",
        "purpose": "验证工具对PNG格式图像的支持及统计准确性",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"min\": 1.0,\n  \"max\": 255.0,\n  \"mean\": 213.13655000939323,\n  \"stddev\": 65.69821359454926,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 22.0,\n      \"max\": 255.0,\n      \"mean\": 214.63475001527817,\n      \"stddev\": 66.68847409619703\n    },\n    {\n      \"channel\": 1,\n      \"min\": 21.0,\n      \"max\": 255.0,\n      \"mean\": 222.23061540446395,\n      \"stddev\": 63.95532241715608\n    },\n    {\n      \"channel\": 2,\n      \"min\": 1.0,\n      \"max\": 255.0,\n      \"mean\": 202.5442846084376,\n      \"stddev\": 64.9152312696472\n    }\n  ],\n  \"histogram\": [\n    [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      ...[截断]，共计10654字符，剩余9854字符"
        },
        "execution_time": 0.9668960571289062,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Nonexistent Image File",
        "purpose": "测试输入路径不存在时的错误处理机制",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.4426100254058838,
        "is_functional_test": false
      },
      {
        "case_name": "Process Invalid File Type as Image",
        "purpose": "验证工具能否识别非图像文件并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.29538488388061523,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats with Special Characters in Path",
        "purpose": "测试包含特殊字符的图像路径是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg"
        },
        "execution_time": 0.33353161811828613,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Image Path Input",
        "purpose": "测试空字符串作为图像路径时的错误处理",
        "args": {
          "image_path": ""
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: "
        },
        "execution_time": 0.1115567684173584,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Size Image Handling",
        "purpose": "验证工具能否处理大尺寸图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_nature_image_save_20250701_182608.jpg"
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"min\": 0.0,\n  \"max\": 255.0,\n  \"mean\": 202.76952387119053,\n  \"stddev\": 62.45492590305914,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 178.50118363118364,\n      \"stddev\": 82.94703830818905\n    },\n    {\n      \"channel\": 1,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 208.02764827764827,\n      \"stddev\": 49.6522544927205\n    },\n    {\n      \"channel\": 2,\n      \"min\": 24.0,\n      \"max\": 255.0,\n      \"mean\": 221.7797397047397,\n      \"stddev\": 37.12556062934402\n    }\n  ],\n  \"histogram\": [\n    [\n      7127.0,\n      1131.0,\n      1150.0,\n      1187.0,\n      1187.0,\n      1166.0,\n      1161.0,\n      1...[截断]，共计11393字符，剩余10593字符"
        },
        "execution_time": 0.4315624237060547,
        "is_functional_test": true
      },
      {
        "case_name": "Symbolic Link Image Source Handling",
        "purpose": "测试从符号链接读取图像时的功能与安全性",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_output_save_20250701_182609.jpg"
        },
        "response": {
          "result": "{\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"min\": 0.0,\n  \"max\": 255.0,\n  \"mean\": 213.04645467364708,\n  \"stddev\": 65.58554056425386,\n  \"channels\": [\n    {\n      \"channel\": 0,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 214.46848623946656,\n      \"stddev\": 66.8763709232945\n    },\n    {\n      \"channel\": 1,\n      \"min\": 13.0,\n      \"max\": 255.0,\n      \"mean\": 222.10794702211598,\n      \"stddev\": 63.62060381820018\n    },\n    {\n      \"channel\": 2,\n      \"min\": 0.0,\n      \"max\": 255.0,\n      \"mean\": 202.56293075935872,\n      \"stddev\": 64.73269718030218\n    }\n  ],\n  \"histogram\": [\n    [\n      108.0,\n      2.0,\n      4.0,\n      4.0,\n      10.0,\n      11.0,\n      9.0,\n      15.0,\n      26.0,\n...[截断]，共计11254字符，剩余10454字符"
        },
        "execution_time": 0.8285131454467773,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Character in Image Path",
        "purpose": "验证中文路径下的图像统计功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.3563251495361328,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - System Directory Access Attempt",
        "purpose": "测试尝试访问系统受保护目录中的图像文件",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\networks"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: C:\\Windows\\System32\\drivers\\etc\\networks"
        },
        "execution_time": 0.2533833980560303,
        "is_functional_test": false
      },
      {
        "case_name": "Corrupted Image File Handling",
        "purpose": "验证工具在遇到损坏图像文件时的错误恢复能力",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool get_image_stats_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.jpg"
        },
        "execution_time": 0.1438004970550537,
        "is_functional_test": false
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Resize Valid Image with Default Interpolation",
        "purpose": "验证工具使用默认插值方法成功调整有效图像尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\n  \"width\": 800,\n  \"height\": 600,\n  \"interpolation\": \"INTER_LINEAR\",\n  \"info\": {\n    \"width\": 800,\n    \"height\": 600,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1440000,\n    \"size_mb\": 1.37\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_800x600_20250701_182726.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_resize_800x600_20250701_182726.jpg\"\n}"
        },
        "execution_time": 0.3253655433654785,
        "is_functional_test": true
      },
      {
        "case_name": "Resize PNG Image with Custom Interpolation",
        "purpose": "验证工具支持PNG格式图像并使用指定插值方法进行缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "width": 400,
          "height": 300,
          "interpolation": "INTER_CUBIC"
        },
        "response": {
          "result": "{\n  \"width\": 400,\n  \"height\": 300,\n  \"interpolation\": \"INTER_CUBIC\",\n  \"info\": {\n    \"width\": 400,\n    \"height\": 300,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 360000,\n    \"size_mb\": 0.34\n  },\n  \"original_info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_resize_400x300_20250701_182727.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_resize_400x300_20250701_182727.png\"\n}"
        },
        "execution_time": 0.4172370433807373,
        "is_functional_test": true
      },
      {
        "case_name": "Attempt Resize with Invalid Width",
        "purpose": "测试无效宽度参数时的错误处理（负数）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "width": -100,
          "height": 500
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\resize.cpp:4211: error: (-215:Assertion failed) inv_scale_x > 0 in function 'cv::resize'\n"
        },
        "execution_time": 0.3626861572265625,
        "is_functional_test": false
      },
      {
        "case_name": "Attempt Resize with Zero Dimensions",
        "purpose": "测试零尺寸参数时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "width": 0,
          "height": 0
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\resize.cpp:4211: error: (-215:Assertion failed) inv_scale_x > 0 in function 'cv::resize'\n"
        },
        "execution_time": 0.036125898361206055,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Resize from System Directory",
        "purpose": "测试尝试从系统受保护目录读取并调整图像大小的安全性",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\networks",
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: C:\\Windows\\System32\\drivers\\etc\\networks"
        },
        "execution_time": 0.02543926239013672,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Corrupted Image File",
        "purpose": "验证工具在遇到损坏图像文件时的错误恢复能力",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.jpg",
          "width": 300,
          "height": 200
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\corrupted_image.jpg"
        },
        "execution_time": 0.026124954223632812,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Chinese Path",
        "purpose": "测试包含中文字符的图像路径是否能被正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "width": 500,
          "height": 400
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.03681635856628418,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Using Symbolic Link Source",
        "purpose": "测试从符号链接读取图像进行缩放的功能与安全性",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_output_save_20250701_182609.jpg",
          "width": 600,
          "height": 400
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.016975879669189453,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Non-Image File Attempt",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.03346753120422363,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Empty Image Path",
        "purpose": "测试空字符串作为图像路径时的错误处理",
        "args": {
          "image_path": "",
          "width": 1024,
          "height": 768
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.02635502815246582,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Crop Valid Image with Normal Parameters",
        "purpose": "验证工具可以使用标准参数成功裁剪图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 100,
          "y": 100,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\n  \"x\": 100,\n  \"y\": 100,\n  \"width\": 300,\n  \"height\": 200,\n  \"info\": {\n    \"width\": 300,\n    \"height\": 200,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 180000,\n    \"size_mb\": 0.17\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_100_100_300_200_20250701_182810.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_100_100_300_200_20250701_182810.jpg\"\n}"
        },
        "execution_time": 0.12723135948181152,
        "is_functional_test": true
      },
      {
        "case_name": "Crop PNG Image Successfully",
        "purpose": "验证工具能够正确处理并裁剪PNG格式图像文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 150
        },
        "response": {
          "result": "{\n  \"x\": 50,\n  \"y\": 50,\n  \"width\": 200,\n  \"height\": 150,\n  \"info\": {\n    \"width\": 200,\n    \"height\": 150,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 90000,\n    \"size_mb\": 0.09\n  },\n  \"original_info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_50_50_200_150_20250701_182810.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_crop_50_50_200_150_20250701_182810.png\"\n}"
        },
        "execution_time": 0.12435221672058105,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Region at Image Edge",
        "purpose": "测试在图像边缘进行裁剪时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 1000,
          "y": 600,
          "width": 80,
          "height": 100
        },
        "response": {
          "result": "{\n  \"x\": 1000,\n  \"y\": 600,\n  \"width\": 80,\n  \"height\": 100,\n  \"info\": {\n    \"width\": 80,\n    \"height\": 100,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 24000,\n    \"size_mb\": 0.02\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_1000_600_80_100_20250701_182810.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_1000_600_80_100_20250701_182810.jpg\"\n}"
        },
        "execution_time": 0.13463854789733887,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Region Exceeds Image Bounds",
        "purpose": "测试裁剪区域超出原始图像边界时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "x": 800,
          "y": 600,
          "width": 500,
          "height": 400
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Crop region (800, 600, 500, 400) is outside image bounds (874, 674)"
        },
        "execution_time": 0.010544300079345703,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Coordinates for Crop Region",
        "purpose": "测试负坐标值作为裁剪区域左上角位置的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": -50,
          "y": -30,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Crop region (-50, -30, 200, 150) is outside image bounds (1080, 715)"
        },
        "execution_time": 0.015033721923828125,
        "is_functional_test": false
      },
      {
        "case_name": "Zero or Negative Crop Dimensions",
        "purpose": "测试零或负数宽度/高度参数时的错误处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "x": 100,
          "y": 100,
          "width": 0,
          "height": -100
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgcodecs\\src\\loadsave.cpp:929: error: (-215:Assertion failed) !_img.empty() in function 'cv::imwrite'\n"
        },
        "execution_time": 0.014111757278442383,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Image Path Input",
        "purpose": "测试空字符串作为图像路径时的错误处理",
        "args": {
          "image_path": "",
          "x": 100,
          "y": 100,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: "
        },
        "execution_time": 0.011653423309326172,
        "is_functional_test": false
      },
      {
        "case_name": "Nonexistent Image File",
        "purpose": "测试输入路径不存在时的错误处理机制",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "x": 50,
          "y": 50,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.02010798454284668,
        "is_functional_test": false
      },
      {
        "case_name": "Process Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "x": 100,
          "y": 100,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.005513191223144531,
        "is_functional_test": false
      },
      {
        "case_name": "Security Test - Attempt to Crop System File",
        "purpose": "测试尝试从系统受保护目录读取并裁剪图像的安全性",
        "args": {
          "image_path": "C:\\Windows\\System32\\drivers\\etc\\networks",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: C:\\Windows\\System32\\drivers\\etc\\networks"
        },
        "execution_time": 0.011533260345458984,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "测试输出路径中包含特殊字符（如空格、括号）时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "x": 200,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\n  \"x\": 200,\n  \"y\": 150,\n  \"width\": 300,\n  \"height\": 200,\n  \"info\": {\n    \"width\": 300,\n    \"height\": 200,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 180000,\n    \"size_mb\": 0.17\n  },\n  \"original_info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_200_150_300_200_20250701_182810.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_crop_200_150_300_200_20250701_182810.jpg\"\n}"
        },
        "execution_time": 0.18364596366882324,
        "is_functional_test": true
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的图像裁剪功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "x": 100,
          "y": 100,
          "width": 200,
          "height": 150
        },
        "response": {
          "error": "ToolException: Error executing tool crop_image_tool: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.012545347213745117,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Apply Blur Filter with Minimum Kernel Size",
        "purpose": "验证使用最小有效核大小对图像应用模糊滤波器的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "result": "{\n  \"filter\": {\n    \"type\": \"blur\",\n    \"kernel_size\": [\n      3,\n      3\n    ]\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_filter_blur_20250701_182844.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_filter_blur_20250701_182844.jpg\"\n}"
        },
        "execution_time": 0.08650803565979004,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Gaussian Filter with Default Sigma",
        "purpose": "验证使用默认sigma值对图像应用高斯滤波器的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "gaussian",
          "kernel_size": 5,
          "sigma": null
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.02002692222595215,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Median Filter to PNG Image",
        "purpose": "验证中值滤波器在PNG格式图像上的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "median",
          "kernel_size": 7
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.03185558319091797,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Bilateral Filter with Custom Sigmas",
        "purpose": "验证双边滤波器在自定义颜色和空间sigma值下的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "bilateral",
          "kernel_size": 9,
          "sigma_color": 75.0,
          "sigma_space": 75.0
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "execution_time": 0.023656606674194336,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Apply Filter on System Directory File",
        "purpose": "测试尝试对系统受保护目录中的文件应用滤波器的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe",
          "filter_type": "blur",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.028387784957885742,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.026118040084838867,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\code (1).html",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.049265384674072266,
        "is_functional_test": false
      },
      {
        "case_name": "Even Kernel Size Rejection",
        "purpose": "测试工具是否拒绝偶数核大小的参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg",
          "filter_type": "blur",
          "kernel_size": 4
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "execution_time": 0.01774311065673828,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的滤波器应用功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.030792951583862305,
        "is_functional_test": false
      },
      {
        "case_name": "Maximum Kernel Size Application",
        "purpose": "测试最大支持核大小下滤波器的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png",
          "filter_type": "median",
          "kernel_size": 31
        },
        "response": {
          "error": "ToolException: Error executing tool apply_filter_tool: Failed to apply filter: Failed to read image from path: D:\\devWorkspace\\MCPServer\\Generator\\testSystem\\testFiles\\mas.png"
        },
        "execution_time": 0.030914306640625,
        "is_functional_test": true
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Detect Edges Using Default Canny Method",
        "purpose": "验证使用默认Canny方法和参数时，工具能否成功检测图像边缘并返回结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"canny\",\n    \"threshold1\": 100.0,\n    \"threshold2\": 200.0,\n    \"aperture_size\": 3,\n    \"l2gradient\": false\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_182929.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_182929.jpg\"\n}"
        },
        "execution_time": 0.08403992652893066,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges with Sobel Method",
        "purpose": "测试Sobel方法在自定义核大小和缩放因子下的边缘检测功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "sobel",
          "ksize": 5,
          "scale": 2.0
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"sobel\",\n    \"ksize\": 5,\n    \"scale\": 2.0,\n    \"delta\": 0.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_sobel_20250701_182929.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_sobel_20250701_182929.png\"\n}"
        },
        "execution_time": 0.139085054397583,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges with Laplacian Method",
        "purpose": "验证Laplacian方法在指定核大小和缩放因子下对图像进行边缘检测的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "laplacian",
          "ksize": 7,
          "scale": 1.5
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"laplacian\",\n    \"ksize\": 7,\n    \"scale\": 1.5,\n    \"delta\": 0.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_laplacian_20250701_182929.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_laplacian_20250701_182929.jpg\"\n}"
        },
        "execution_time": 0.1517961025238037,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges with Scharr Method",
        "purpose": "测试Scharr方法在自定义缩放因子和增量值下的边缘检测功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "scharr",
          "scale": 1.2,
          "delta": 10.0
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"scharr\",\n    \"scale\": 1.2,\n    \"delta\": 10.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_scharr_20250701_182930.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_scharr_20250701_182930.png\"\n}"
        },
        "execution_time": 0.1841740608215332,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Read System File",
        "purpose": "测试尝试从系统受保护目录读取文件进行边缘检测的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.0045506954193115234,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.018235445022583008,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "method": "sobel"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.012435674667358398,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的边缘检测功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "method": "canny"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_edges_tool: Failed to detect edges: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.020162105560302734,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges with Minimum Threshold Values",
        "purpose": "测试最小阈值设置下Canny方法的边缘检测行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "method": "canny",
          "threshold1": 10.0,
          "threshold2": 20.0
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"canny\",\n    \"threshold1\": 10.0,\n    \"threshold2\": 20.0,\n    \"aperture_size\": 3,\n    \"l2gradient\": false\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_182930.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_edges_canny_20250701_182930.jpg\"\n}"
        },
        "execution_time": 0.19986653327941895,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges with Maximum Aperture Size",
        "purpose": "测试最大支持孔径尺寸下Canny方法的边缘检测功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "canny",
          "aperture_size": 7,
          "l2gradient": true
        },
        "response": {
          "result": "{\n  \"method_info\": {\n    \"method\": \"canny\",\n    \"threshold1\": 100.0,\n    \"threshold2\": 200.0,\n    \"aperture_size\": 7,\n    \"l2gradient\": true\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_canny_20250701_182930.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_edges_canny_20250701_182930.png\"\n}"
        },
        "execution_time": 0.2234358787536621,
        "is_functional_test": true
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Apply Binary Threshold with Default Parameters",
        "purpose": "验证使用默认参数对图像应用二值化阈值处理的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "binary"
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"binary\",\n    \"threshold_value\": 127.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_binary_20250701_183025.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_binary_20250701_183025.jpg\"\n}"
        },
        "execution_time": 0.1064901351928711,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Inverse Binary Threshold to PNG Image",
        "purpose": "验证对PNG格式图像应用反向二值化阈值处理的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "binary_inv",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"binary_inv\",\n    \"threshold_value\": 127.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_binary_inv_20250701_183025.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_binary_inv_20250701_183025.png\"\n}"
        },
        "execution_time": 0.15718388557434082,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Truncate Threshold with Custom Values",
        "purpose": "测试使用自定义阈值和最大值的截断阈值方法",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "trunc",
          "threshold_value": 100.0,
          "max_value": 200.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"trunc\",\n    \"threshold_value\": 100.0,\n    \"max_value\": 200.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_trunc_20250701_183025.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_trunc_20250701_183025.jpg\"\n}"
        },
        "execution_time": 0.14103102684020996,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Zero Thresholding Method",
        "purpose": "验证将像素值设置为零的阈值方法",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "tozero"
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"tozero\",\n    \"threshold_value\": 127.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_tozero_20250701_183025.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_tozero_20250701_183025.png\"\n}"
        },
        "execution_time": 0.15691184997558594,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Adaptive Threshold with Gaussian Method",
        "purpose": "验证使用高斯自适应阈值方法的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "adaptive",
          "adaptive_method": "gaussian",
          "block_size": 11,
          "c": 2.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"gaussian\",\n    \"block_size\": 11,\n    \"c\": 2.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_183026.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_183026.jpg\"\n}"
        },
        "execution_time": 0.23827242851257324,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Adaptive Threshold with Mean Method",
        "purpose": "验证使用均值自适应阈值方法的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "adaptive",
          "adaptive_method": "mean",
          "block_size": 15,
          "c": 3.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"mean\",\n    \"block_size\": 15,\n    \"c\": 3.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_183026.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_183026.png\"\n}"
        },
        "execution_time": 0.21439480781555176,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Process System File",
        "purpose": "测试尝试从系统受保护目录读取文件进行阈值处理的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe",
          "threshold_type": "binary"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.02266550064086914,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "threshold_type": "binary"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.032614946365356445,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "threshold_type": "binary"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.021587610244750977,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的阈值处理功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "threshold_type": "binary"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold_tool: Failed to apply threshold: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.03000640869140625,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Block Size for Adaptive Threshold",
        "purpose": "测试最小支持块大小下自适应阈值方法的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_type": "adaptive",
          "adaptive_method": "gaussian",
          "block_size": 3,
          "c": 2.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"gaussian\",\n    \"block_size\": 3,\n    \"c\": 2.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 772200,\n    \"size_mb\": 0.74\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_183026.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_threshold_adaptive_20250701_183026.jpg\"\n}"
        },
        "execution_time": 0.3037140369415283,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Block Size for Adaptive Threshold",
        "purpose": "测试最大支持块大小下自适应阈值方法的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_type": "adaptive",
          "adaptive_method": "mean",
          "block_size": 31,
          "c": 5.0
        },
        "response": {
          "result": "{\n  \"threshold_info\": {\n    \"threshold_type\": \"adaptive\",\n    \"adaptive_method\": \"mean\",\n    \"block_size\": 31,\n    \"c\": 5.0,\n    \"max_value\": 255.0\n  },\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 1,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 589076,\n    \"size_mb\": 0.56\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_183026.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_threshold_adaptive_20250701_183026.png\"\n}"
        },
        "execution_time": 0.2720973491668701,
        "is_functional_test": true
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Detect Contours with Default Parameters",
        "purpose": "验证工具使用默认参数成功检测图像轮廓的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"contour_count\": 281,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3....[截断]，共计3066字符，剩余2266字符"
        },
        "execution_time": 0.20241546630859375,
        "is_functional_test": true
      },
      {
        "case_name": "Detect and Draw Contours with Custom Color and Thickness",
        "purpose": "测试自定义颜色和线宽的轮廓绘制功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "draw": true,
          "thickness": 3,
          "color": [
            255,
            0,
            0
          ]
        },
        "response": {
          "result": "{\n  \"contour_count\": 4,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 142.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 19,\n      \"bounding_rect\": [\n        0,\n        530,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        544\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 140.0,\n      \"perimeter\": 66.28427028656006,\n      \"point_count\": 18,\n      \"bounding_rect\": [\n        0,\n        304,\n        11,\n        30\n      ],\n      \"center\": [\n        4,\n        318\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 141.0,\n      \"perimeter\": 64.28427016735077,\n      \"point_count\": 17,\n      \"bounding_rect\": [\n        0,\n        87,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        100\n      ]\n    },\n    {\n      \"index\": 3...[截断]，共计1662字符，剩余862字符"
        },
        "execution_time": 0.2873878479003906,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours without Drawing",
        "purpose": "验证仅检测轮廓但不绘制到图像上的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "draw": false
        },
        "response": {
          "result": "{\n  \"contour_count\": 281,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3....[截断]，共计3066字符，剩余2266字符"
        },
        "execution_time": 0.43448638916015625,
        "is_functional_test": true
      },
      {
        "case_name": "Use Different Contour Retrieval Mode",
        "purpose": "测试不同轮廓检索模式（tree）下的轮廓检测功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "mode": "tree"
        },
        "response": {
          "result": "{\n  \"contour_count\": 2098,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        883,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        883,\n        714\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 0.0,\n      \"perimeter\": 0.0,\n      \"point_count\": 1,\n      \"bounding_rect\": [\n        383,\n        714,\n        1,\n        1\n      ],\n      \"center\": [\n        383,\n        714\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 0.0,\n      \"perimeter\": 2.0,\n      \"point_count\": 2,\n      \"bounding_rect\": [\n        164,\n        714,\n        2,\n        1\n      ],\n      \"center\": [\n        164,\n        714\n      ]\n    },\n    {\n      \"index\": 3,\n      \"area\": 0.5,\n      \"perimeter\": 3...[截断]，共计3055字符，剩余2255字符"
        },
        "execution_time": 0.6375298500061035,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Custom Threshold for Binary Conversion",
        "purpose": "测试使用自定义阈值进行二值化转换后的轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold_value": 100.0
        },
        "response": {
          "result": "{\n  \"contour_count\": 4,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 146.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 16,\n      \"bounding_rect\": [\n        0,\n        530,\n        11,\n        29\n      ],\n      \"center\": [\n        4,\n        544\n      ]\n    },\n    {\n      \"index\": 1,\n      \"area\": 144.0,\n      \"perimeter\": 66.28427028656006,\n      \"point_count\": 18,\n      \"bounding_rect\": [\n        0,\n        304,\n        11,\n        30\n      ],\n      \"center\": [\n        4,\n        318\n      ]\n    },\n    {\n      \"index\": 2,\n      \"area\": 145.0,\n      \"perimeter\": 64.28427028656006,\n      \"point_count\": 18,\n      \"bounding_rect\": [\n        0,\n        87,\n        11,\n        29\n      ],\n      \"center\": [\n        5,\n        101\n      ]\n    },\n    {\n      \"index\": 3...[截断]，共计1662字符，剩余862字符"
        },
        "execution_time": 0.8191640377044678,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Read System File",
        "purpose": "测试尝试从系统受保护目录读取文件进行轮廓检测的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.04080772399902344,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.15650486946105957,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.046736955642700195,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的轮廓检测功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours_tool: Failed to detect contours: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.07554435729980469,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Threshold Value Boundary",
        "purpose": "测试最小阈值设置下轮廓检测的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_value": 0.0
        },
        "response": {
          "result": "{\n  \"contour_count\": 1,\n  \"contour_info\": [\n    {\n      \"index\": 0,\n      \"area\": 770406.0,\n      \"perimeter\": 3586.0,\n      \"point_count\": 4,\n      \"bounding_rect\": [\n        0,\n        0,\n        1080,\n        715\n      ],\n      \"center\": [\n        539,\n        357\n      ]\n    }\n  ],\n  \"contour_parameters\": {\n    \"mode\": \"external\",\n    \"method\": \"simple\",\n    \"threshold_value\": 0.0\n  },\n  \"binary_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_binary_for_contours_20250701_183112.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_contours_external_simple_20250701_183111.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_contours_external_simple_20250701_183111.jpg\",...[截断]，共计944字符，剩余144字符"
        },
        "execution_time": 1.791440486907959,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Threshold Value Boundary",
        "purpose": "测试最大阈值设置下轮廓检测的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "threshold_value": 255.0
        },
        "response": {
          "result": "{\n  \"contour_count\": 0,\n  \"contour_info\": [],\n  \"contour_parameters\": {\n    \"mode\": \"external\",\n    \"method\": \"simple\",\n    \"threshold_value\": 255.0\n  },\n  \"binary_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_binary_for_contours_20250701_183113.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_contours_external_simple_20250701_183113.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_contours_external_simple_20250701_183113.jpg\",\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  }\n}"
        },
        "execution_time": 0.5670192241668701,
        "is_functional_test": true
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Find Circles with Default Parameters",
        "purpose": "验证工具使用默认参数成功检测图像中的圆形",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "circles"
        },
        "response": {
          "result": "{\n  \"shape_count\": 220,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"center\": [\n        476,\n        184\n      ],\n      \"radius\": 512,\n      \"diameter\": 1024,\n      \"area\": 823549.6645826427\n    },\n    {\n      \"index\": 1,\n      \"center\": [\n        528,\n        142\n      ],\n      \"radius\": 556,\n      \"diameter\": 1112,\n      \"area\": 971179.3865601342\n    },\n    {\n      \"index\": 2,\n      \"center\": [\n        512,\n        260\n      ],\n      \"radius\": 447,\n      \"diameter\": 894,\n      \"area\": 627718.486521123\n    },\n    {\n      \"index\": 3,\n      \"center\": [\n        478,\n        124\n      ],\n      \"radius\": 554,\n      \"diameter\": 1108,\n      \"area\": 964205.050869165\n    },\n    {\n      \"index\": 4,\n      \"center\": [\n        576,\n        268\n      ],\n      \"radius\": 440,\n      \"diameter\": 880,\n     ...[截断]，共计35870字符，剩余35070字符"
        },
        "execution_time": 2.199718952178955,
        "is_functional_test": true
      },
      {
        "case_name": "Find Lines Using Hough Transform",
        "purpose": "测试Hough变换方法检测直线的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "lines",
          "threshold": 100.0,
          "min_line_length": 50.0
        },
        "response": {
          "result": "{\n  \"shape_count\": 8794,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"rho\": 477.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"rho\": 479.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"rho\": 482.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"rho\": 484.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 4,\n      \"rho\": 486.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 5,\n      \"rho\": 489.0,\n      \"theta\": 0.7853981852531433,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 6,\n      \"rho\": 491.0,\n      \"theta\": 0.7853981852531433...[截断]，共计1075266字符，剩余1074466字符"
        },
        "execution_time": 0.7041299343109131,
        "is_functional_test": true
      },
      {
        "case_name": "Find Probabilistic Lines with Custom Parameters",
        "purpose": "验证概率Hough变换方法在自定义参数下检测直线的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "lines_p",
          "threshold": 80.0,
          "min_line_length": 30.0,
          "max_line_gap": 5.0
        },
        "response": {
          "result": "{\n  \"shape_count\": 1197,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"start_point\": [\n        210,\n        0\n      ],\n      \"end_point\": [\n        924,\n        714\n      ],\n      \"length\": 1009.7484835343898,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 1,\n      \"start_point\": [\n        333,\n        0\n      ],\n      \"end_point\": [\n        1047,\n        714\n      ],\n      \"length\": 1009.7484835343898,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 2,\n      \"start_point\": [\n        224,\n        0\n      ],\n      \"end_point\": [\n        938,\n        714\n      ],\n      \"length\": 1009.7484835343898,\n      \"angle_degrees\": 45.0\n    },\n    {\n      \"index\": 3,\n      \"start_point\": [\n        97,\n        0\n      ],\n      \"end_point\": [\n        811,\n        714\n      ],\n      \"lengt...[截断]，共计248479字符，剩余247679字符"
        },
        "execution_time": 0.604935884475708,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Circles with Custom Radius Range",
        "purpose": "测试自定义半径范围下的圆形检测功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "circles",
          "min_radius": 10,
          "max_radius": 100,
          "min_dist": 30
        },
        "response": {
          "result": "{\n  \"shape_count\": 174,\n  \"shapes\": [\n    {\n      \"index\": 0,\n      \"center\": [\n        698,\n        332\n      ],\n      \"radius\": 92,\n      \"diameter\": 184,\n      \"area\": 26590.440219984008\n    },\n    {\n      \"index\": 1,\n      \"center\": [\n        768,\n        266\n      ],\n      \"radius\": 93,\n      \"diameter\": 186,\n      \"area\": 27171.634860898117\n    },\n    {\n      \"index\": 2,\n      \"center\": [\n        758,\n        318\n      ],\n      \"radius\": 95,\n      \"diameter\": 190,\n      \"area\": 28352.873698647883\n    },\n    {\n      \"index\": 3,\n      \"center\": [\n        756,\n        196\n      ],\n      \"radius\": 95,\n      \"diameter\": 190,\n      \"area\": 28352.873698647883\n    },\n    {\n      \"index\": 4,\n      \"center\": [\n        620,\n        218\n      ],\n      \"radius\": 91,\n      \"diameter\": 182,\n      \"...[截断]，共计28289字符，剩余27489字符"
        },
        "execution_time": 0.32967185974121094,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Read System File",
        "purpose": "测试尝试从系统受保护目录读取文件进行形状检测的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe",
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.011995315551757812,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "shape_type": "lines"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.02857685089111328,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Input",
        "purpose": "验证工具能否识别非图像文件作为输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "shape_type": "lines_p"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.01834273338317871,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的形状检测功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "shape_type": "circles"
        },
        "response": {
          "error": "ToolException: Error executing tool find_shapes_tool: Failed to find shapes: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.031978607177734375,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Radius Boundary Test",
        "purpose": "测试最小半径边界值对圆形检测的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "shape_type": "circles",
          "min_radius": 1,
          "max_radius": 1
        },
        "response": {
          "result": "{\n  \"shape_count\": 0,\n  \"shapes\": [],\n  \"shape_parameters\": {\n    \"shape_type\": \"circles\",\n    \"min_dist\": 50,\n    \"param1\": 100.0,\n    \"param2\": 30.0,\n    \"min_radius\": 1,\n    \"max_radius\": 1\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_shapes_circles_20250701_183158.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_shapes_circles_20250701_183158.jpg\",\n  \"info\": {\n    \"width\": 1080,\n    \"height\": 715,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 2316600,\n    \"size_mb\": 2.21\n  }\n}"
        },
        "execution_time": 0.2309246063232422,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Line Length Boundary Test",
        "purpose": "测试最大线长边界值对直线检测的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "shape_type": "lines_p",
          "min_line_length": 1000.0
        },
        "response": {
          "result": "{\n  \"shape_count\": 0,\n  \"shapes\": [],\n  \"shape_parameters\": {\n    \"shape_type\": \"lines_p\",\n    \"threshold\": 150.0,\n    \"min_line_length\": 1000.0,\n    \"max_line_gap\": 10.0\n  },\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_shapes_lines_p_20250701_183159.png\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\mas_shapes_lines_p_20250701_183159.png\",\n  \"info\": {\n    \"width\": 874,\n    \"height\": 674,\n    \"channels\": 3,\n    \"dtype\": \"uint8\",\n    \"size_bytes\": 1767228,\n    \"size_mb\": 1.69\n  }\n}"
        },
        "execution_time": 0.36010193824768066,
        "is_functional_test": true
      }
    ],
    "match_template_tool": [
      {
        "case_name": "Basic Template Matching with Default Parameters",
        "purpose": "验证工具使用默认参数成功执行模板匹配的基本功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_183235.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_183235.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.304551362991333,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching with Custom Threshold",
        "purpose": "测试自定义阈值对模板匹配结果的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "ccoeff_normed",
          "threshold": 0.95
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.95,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_183236.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_183235.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templ...[截断]，共计1142字符，剩余342字符"
        },
        "execution_time": 0.3766512870788574,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching with Different Method",
        "purpose": "验证不同匹配方法（如相关系数归一化）的正确性",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "method": "ccorr_normed"
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": 0.9181163311004639,\n      \"top_left\": [\n        193,\n        0\n      ],\n      \"bottom_right\": [\n        1067,\n        674\n      ],\n      \"match_confidence\": 0.9181163311004639\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccorr_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccorr_normed_20250701_183236.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccorr_normed_20250701_183236.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches...[截断]，共计1130字符，剩余330字符"
        },
        "execution_time": 0.5643413066864014,
        "is_functional_test": true
      },
      {
        "case_name": "Template Matching Without Drawing Matches",
        "purpose": "测试不绘制匹配区域时的功能",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "draw": false
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.8,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_183237.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_183236.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.591057538986206,
        "is_functional_test": true
      },
      {
        "case_name": "Security Test - Attempt to Access System File",
        "purpose": "测试尝试从系统受保护目录读取文件进行模板匹配的安全性处理",
        "args": {
          "image_path": "C:\\Windows\\System32\\notepad.exe",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: C:\\Windows\\System32\\notepad.exe"
        },
        "execution_time": 0.024178028106689453,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Image Path Handling",
        "purpose": "验证工具在输入图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "execution_time": 0.1323540210723877,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Template Path Handling",
        "purpose": "验证工具在模板图像路径无效时能否正确处理错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_template.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read template from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_template.png"
        },
        "execution_time": 0.048838138580322266,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Image Input",
        "purpose": "验证工具能否识别非图像文件作为主图像输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.04419541358947754,
        "is_functional_test": false
      },
      {
        "case_name": "Non-Image File as Template Input",
        "purpose": "验证工具能否识别非图像文件作为模板输入并返回适当错误",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read template from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html"
        },
        "execution_time": 0.03365349769592285,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Image Path",
        "purpose": "验证中文路径下的模板匹配功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read image from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.024104833602905273,
        "is_functional_test": false
      },
      {
        "case_name": "Chinese Characters in Template Path",
        "purpose": "验证中文路径下的模板文件匹配功能是否正常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool match_template_tool: Failed to match template: Failed to read template from path: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "execution_time": 0.04826688766479492,
        "is_functional_test": false
      },
      {
        "case_name": "Minimum Threshold Boundary Test",
        "purpose": "测试最小阈值边界值对模板匹配的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold": 0.0
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 0.0,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_183238.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_183238.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.9035913944244385,
        "is_functional_test": true
      },
      {
        "case_name": "Maximum Threshold Boundary Test",
        "purpose": "测试最大阈值边界值对模板匹配的影响",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "template_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "threshold": 1.0
        },
        "response": {
          "result": "{\n  \"match_count\": 1,\n  \"matches\": [\n    {\n      \"index\": 0,\n      \"is_global_best\": true,\n      \"value\": -0.006042689085006714,\n      \"top_left\": [\n        198,\n        39\n      ],\n      \"bottom_right\": [\n        1072,\n        713\n      ],\n      \"match_confidence\": -0.006042689085006714\n    }\n  ],\n  \"match_parameters\": {\n    \"method\": \"ccoeff_normed\",\n    \"threshold\": 1.0,\n    \"is_min_method\": false\n  },\n  \"visualization_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_heatmap_ccoeff_normed_20250701_183239.jpg\",\n  \"path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_template_matches_ccoeff_normed_20250701_183238.jpg\",\n  \"output_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image_templa...[截断]，共计1141字符，剩余341字符"
        },
        "execution_time": 0.8890957832336426,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 111
}