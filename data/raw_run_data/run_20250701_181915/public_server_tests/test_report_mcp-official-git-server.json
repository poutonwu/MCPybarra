{
  "server_name": "server",
  "parent_dir": "mcp-official-git",
  "report_name": "mcp-official-git-server",
  "server_path": "workspace\\public-mcp-servers\\mcp-official-git\\server.py",
  "timestamp": "2025-07-01T18:19:18.365202",
  "tools": [
    {
      "name": "git_status",
      "description": "Shows the working tree status",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitStatus",
        "type": "object"
      }
    },
    {
      "name": "git_diff_unstaged",
      "description": "Shows changes in the working directory that are not yet staged",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitDiffUnstaged",
        "type": "object"
      }
    },
    {
      "name": "git_diff_staged",
      "description": "Shows changes that are staged for commit",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitDiffStaged",
        "type": "object"
      }
    },
    {
      "name": "git_diff",
      "description": "Shows differences between branches or commits",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "target": {
            "title": "Target",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "target"
        ],
        "title": "GitDiff",
        "type": "object"
      }
    },
    {
      "name": "git_commit",
      "description": "Records changes to the repository",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "title": "GitCommit",
        "type": "object"
      }
    },
    {
      "name": "git_add",
      "description": "Adds file contents to the staging area",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "files": {
            "items": {
              "type": "string"
            },
            "title": "Files",
            "type": "array"
          }
        },
        "required": [
          "repo_path",
          "files"
        ],
        "title": "GitAdd",
        "type": "object"
      }
    },
    {
      "name": "git_reset",
      "description": "Unstages all staged changes",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitReset",
        "type": "object"
      }
    },
    {
      "name": "git_log",
      "description": "Shows the commit logs",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "max_count": {
            "default": 10,
            "title": "Max Count",
            "type": "integer"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitLog",
        "type": "object"
      }
    },
    {
      "name": "git_create_branch",
      "description": "Creates a new branch from an optional base branch",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "base_branch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Base Branch"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "GitCreateBranch",
        "type": "object"
      }
    },
    {
      "name": "git_checkout",
      "description": "Switches branches",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "title": "GitCheckout",
        "type": "object"
      }
    },
    {
      "name": "git_show",
      "description": "Shows the contents of a commit",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "revision": {
            "title": "Revision",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "revision"
        ],
        "title": "GitShow",
        "type": "object"
      }
    },
    {
      "name": "git_init",
      "description": "Initialize a new Git repository",
      "args_schema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "title": "GitInit",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "git_init": [
      {
        "case_name": "Initialize Git Repository in New Directory",
        "purpose": "验证工具能否在指定路径下成功初始化一个新的Git仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git"
        },
        "execution_time": 0.15422821044921875,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository with Empty Path",
        "purpose": "测试当提供空路径时，工具是否能正确处理错误输入",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\workspace\\public-mcp-servers\\mcp-official-git\\.git"
        },
        "execution_time": 0.1850450038909912,
        "is_functional_test": false
      },
      {
        "case_name": "Initialize Git Repository in Non-Existent Directory",
        "purpose": "测试在不存在的目录中初始化仓库是否会正确报错",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo\\.git"
        },
        "execution_time": 0.18196845054626465,
        "is_functional_test": false
      },
      {
        "case_name": "Initialize Git Repository with Special Characters in Path",
        "purpose": "测试包含特殊字符的路径是否能正常初始化仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#\\.git"
        },
        "execution_time": 0.23596715927124023,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository with Chinese Path",
        "purpose": "测试中文路径是否支持初始化仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx\\.git"
        },
        "execution_time": 0.24778270721435547,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository in Read-Only Directory",
        "purpose": "测试在只读目录中初始化仓库是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo\\.git"
        },
        "execution_time": 0.3098869323730469,
        "is_functional_test": false
      },
      {
        "case_name": "Initialize Git Repository in Existing Git Repo",
        "purpose": "测试在已存在的Git仓库中再次初始化是否会提示警告或失败",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git"
        },
        "execution_time": 0.27291011810302734,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z\\.git"
        },
        "execution_time": 0.27868199348449707,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository with Trailing Spaces in Path",
        "purpose": "测试路径末尾带有空格是否仍能成功初始化仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\.git"
        },
        "execution_time": 0.24518918991088867,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository on Network Drive Path",
        "purpose": "测试网络路径是否支持初始化仓库",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "result": "Error initializing repository: [WinError 123] 文件名、目录名或卷标语法不正确。: '\\\\\\\\network_drive\\\\shared_folder\\\\'"
        },
        "execution_time": 7.269442796707153,
        "is_functional_test": true
      },
      {
        "case_name": "Initialize Git Repository with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并初始化仓库",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "result": "Initialized empty Git repository in D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo\\.git"
        },
        "execution_time": 0.2030808925628662,
        "is_functional_test": true
      }
    ],
    "git_status": [
      {
        "case_name": "Check Status of Clean Git Repository",
        "purpose": "验证工具能否正确显示一个干净Git仓库的状态信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t\"\\344\\270\\255\\346\\226\\207\\346\\226\\207\\344\\273\\266\\345\\220\\215.docx\"\n\nnothing added to commit but untracked files present (use \"git add\" to track)"
        },
        "execution_time": 0.16334128379821777,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Modified Files",
        "purpose": "测试修改文件后git status是否能正确识别变更状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t\"\\344\\270\\255\\346\\226\\207\\346\\226\\207\\344\\273\\266\\345\\220\\215.docx\"\n\nnothing added to commit but untracked files present (use \"git add\" to track)"
        },
        "execution_time": 0.19383025169372559,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status in Non-Git Directory",
        "purpose": "验证在未初始化的目录中执行git status是否会返回错误提示",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.1467890739440918,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Special Characters in Path",
        "purpose": "测试路径包含特殊字符时能否正确获取仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.13059544563293457,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Chinese Path",
        "purpose": "测试中文路径是否支持查看仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.156477689743042,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status on Read-Only Git Repository",
        "purpose": "测试只读权限下是否能查看仓库状态或返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.12746024131774902,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t\"\\344\\270\\255\\346\\226\\207\\346\\226\\207\\344\\273\\266\\345\\220\\215.docx\"\n\nnothing added to commit but untracked files present (use \"git add\" to track)"
        },
        "execution_time": 0.16004419326782227,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取仓库状态",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.15918254852294922,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status of Bare Git Repository",
        "purpose": "验证是否能正确处理裸仓库的状态查询",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.14099740982055664,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status in Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "Repository status:\nOn branch master\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\t.gitignore\n\t.python-version\n\tDockerfile\n\tLICENSE\n\tREADME.md\n\t__init__.py\n\t__main__.py\n\tpyproject.toml\n\tserver.py\n\ttests/\n\tuv.lock\n\nnothing added to commit but untracked files present (use \"git add\" to track)"
        },
        "execution_time": 0.19999384880065918,
        "is_functional_test": false
      },
      {
        "case_name": "Check Status with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.2024555206298828,
        "is_functional_test": false
      },
      {
        "case_name": "Check Status with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "result": "Repository status:\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)"
        },
        "execution_time": 0.18922996520996094,
        "is_functional_test": true
      },
      {
        "case_name": "Check Status with Network Drive Path",
        "purpose": "测试网络路径是否支持查看仓库状态",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.284067869186401,
        "is_functional_test": false
      }
    ],
    "git_diff_unstaged": [
      {
        "case_name": "Show Unstaged Changes in Working Directory",
        "purpose": "验证工具能否正确显示工作目录中尚未暂存的修改内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Unstaged changes:\n"
        },
        "execution_time": 0.22672152519226074,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes with Chinese Path",
        "purpose": "测试中文路径下是否能正确显示未暂存的变更",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 0.0019989013671875,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes in Read-Only Repository",
        "purpose": "验证在只读仓库中执行git diff unstaged是否会返回适当的错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.002999544143676758,
        "is_functional_test": false
      },
      {
        "case_name": "Show Unstaged Changes with Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "Unstaged changes:\n"
        },
        "execution_time": 0.2057971954345703,
        "is_functional_test": false
      },
      {
        "case_name": "Show Unstaged Changes with Special Characters in Path",
        "purpose": "测试路径包含特殊字符时能否正确获取未暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.004002809524536133,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes in Non-Git Directory",
        "purpose": "验证在未初始化的Git目录中执行git diff unstaged是否会返回错误提示",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_repo"
        },
        "execution_time": 0.0030031204223632812,
        "is_functional_test": false
      },
      {
        "case_name": "Show Unstaged Changes with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.007047176361083984,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取未暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "result": "Unstaged changes:\n"
        },
        "execution_time": 0.24427294731140137,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取未暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.005005836486816406,
        "is_functional_test": true
      },
      {
        "case_name": "Show Unstaged Changes on Network Drive Path",
        "purpose": "测试网络路径是否支持查看未暂存变更信息",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 2.7066080570220947,
        "is_functional_test": false
      },
      {
        "case_name": "Show Unstaged Changes with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.002997875213623047,
        "is_functional_test": false
      },
      {
        "case_name": "Show Unstaged Changes in Bare Git Repository",
        "purpose": "验证是否能正确处理裸仓库的未暂存变更查询",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.0021026134490966797,
        "is_functional_test": true
      }
    ],
    "git_add": [
      {
        "case_name": "Add Single File to Staging Area",
        "purpose": "验证工具能否在指定路径下成功将单个文件添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo\\中文文件名.docx"
          ]
        },
        "response": {
          "result": "Files staged successfully"
        },
        "execution_time": 0.009511947631835938,
        "is_functional_test": true
      },
      {
        "case_name": "Add Multiple Files to Staging Area",
        "purpose": "测试工具是否支持一次添加多个文件到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_document.docx",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc@#_测试.docx"
          ]
        },
        "response": {
          "error": "ToolException: Absolute path 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_document.docx' is not in git repository at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo'"
        },
        "execution_time": 0.0713813304901123,
        "is_functional_test": true
      },
      {
        "case_name": "Add File with Special Characters in Name",
        "purpose": "测试包含特殊字符的文件名是否能被正确添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\doc@#_测试.docx"
          ]
        },
        "response": {
          "error": "ToolException: Absolute path 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\doc@#_测试.docx' is not in git repository at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo'"
        },
        "execution_time": 0.0040090084075927734,
        "is_functional_test": true
      },
      {
        "case_name": "Add Chinese Named File to Staging Area",
        "purpose": "验证中文命名的文件是否能正常添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
          ]
        },
        "response": {
          "error": "ToolException: Absolute path 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\中文文件名.docx' is not in git repository at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo'"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Add Nonexistent File to Staging Area",
        "purpose": "测试尝试添加不存在的文件时是否会返回错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: Absolute path 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_file.txt' is not in git repository at 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo'"
        },
        "execution_time": 0.007039308547973633,
        "is_functional_test": false
      },
      {
        "case_name": "Add File in Read-Only Directory",
        "purpose": "测试尝试添加只读目录中的文件是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo\\locked_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.004503726959228516,
        "is_functional_test": false
      },
      {
        "case_name": "Add File with Maximum Length Path",
        "purpose": "测试最大长度的文件路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z\\longpathfile.txt"
          ]
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.003992795944213867,
        "is_functional_test": true
      },
      {
        "case_name": "Add File with Trailing Spaces in Path",
        "purpose": "测试路径末尾带有空格的文件是否仍能成功添加",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   ",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   \\trailing_space_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: [WinError 3] 系统找不到指定的路径。: '..\\\\new_repo   \\\\trailing_space_file.txt'"
        },
        "execution_time": 0.0039997100830078125,
        "is_functional_test": true
      },
      {
        "case_name": "Add File from Network Drive Path",
        "purpose": "测试网络路径中的文件是否能被添加到暂存区",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "files": [
            "\\\\network_drive\\shared_folder\\git_repo\\network_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.248687744140625,
        "is_functional_test": false
      },
      {
        "case_name": "Add Symbolically Linked File",
        "purpose": "测试符号链接指向的文件是否能正确解析并添加到暂存区",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo\\linked_file.txt"
          ]
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.006528377532958984,
        "is_functional_test": true
      },
      {
        "case_name": "Add File to Non-Git Repository",
        "purpose": "验证尝试将文件添加到未初始化的Git仓库目录中是否会返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo\\file.txt"
          ]
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.0029985904693603516,
        "is_functional_test": false
      }
    ],
    "git_diff_staged": [
      {
        "case_name": "Show Staged Changes in New Git Repository",
        "purpose": "验证工具能否正确显示新创建Git仓库中已暂存的变更内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "error": "Tool call 'git_diff_staged' was cancelled."
        },
        "execution_time": 60.14794683456421,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes with Chinese Path",
        "purpose": "测试中文路径下是否能正确显示已暂存的变更",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 9.60775351524353,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes in Read-Only Repository",
        "purpose": "验证在只读仓库中执行git diff staged是否会返回适当的错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.003588438034057617,
        "is_functional_test": false
      },
      {
        "case_name": "Show Staged Changes with Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "Staged changes:\n"
        },
        "execution_time": 0.30348873138427734,
        "is_functional_test": false
      },
      {
        "case_name": "Show Staged Changes with Special Characters in Path",
        "purpose": "测试路径包含特殊字符时能否正确获取暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.005003690719604492,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes in Non-Git Directory",
        "purpose": "验证在未初始化的Git目录中执行git diff staged是否会返回错误提示",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.01650857925415039,
        "is_functional_test": false
      },
      {
        "case_name": "Show Staged Changes with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.008009910583496094,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "error": "Tool call 'git_diff_staged' was cancelled."
        },
        "execution_time": 60.16451859474182,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 14.264050483703613,
        "is_functional_test": true
      },
      {
        "case_name": "Show Staged Changes on Network Drive Path",
        "purpose": "测试网络路径是否支持查看暂存变更信息",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.243278503417969,
        "is_functional_test": false
      },
      {
        "case_name": "Show Staged Changes with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.00751185417175293,
        "is_functional_test": false
      },
      {
        "case_name": "Show Staged Changes in Bare Git Repository",
        "purpose": "验证是否能正确处理裸仓库的暂存变更查询",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\bare_repo.git"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\bare_repo.git"
        },
        "execution_time": 0.0065097808837890625,
        "is_functional_test": true
      }
    ],
    "git_commit": [
      {
        "case_name": "Commit Changes with Valid Message and Repo Path",
        "purpose": "验证工具能否在指定路径下成功提交已暂存的变更",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": "Initial commit"
        },
        "response": {
          "result": "Changes committed successfully with hash 7d2397483e89b8ac93c2659005d2de102c154c25"
        },
        "execution_time": 0.32890987396240234,
        "is_functional_test": true
      },
      {
        "case_name": "Commit Without Staged Changes",
        "purpose": "测试在没有暂存任何更改的情况下尝试提交是否会返回适当提示",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": "Empty commit"
        },
        "response": {
          "result": "Changes committed successfully with hash 22b65b0e9abc2b5802762d28ec49c70e9e0250ee"
        },
        "execution_time": 0.39452576637268066,
        "is_functional_test": true
      },
      {
        "case_name": "Commit with Empty Message",
        "purpose": "测试使用空提交信息是否会被拒绝并返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": ""
        },
        "response": {
          "result": "Changes committed successfully with hash b548ef77547b837a8cd3b764cf63b46ca3375e58"
        },
        "execution_time": 0.4060664176940918,
        "is_functional_test": true
      },
      {
        "case_name": "Commit to Non-Git Repository",
        "purpose": "验证尝试在未初始化Git仓库的目录中执行提交是否会失败并返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "message": "Invalid repo commit"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.017617225646972656,
        "is_functional_test": false
      },
      {
        "case_name": "Commit with Special Characters in Message",
        "purpose": "测试包含特殊字符的提交信息是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": "Commit @2025# with special chars"
        },
        "response": {
          "result": "Changes committed successfully with hash feb3679e89c4efba158b6de98a582a1c6023cc9f"
        },
        "execution_time": 0.4124324321746826,
        "is_functional_test": true
      },
      {
        "case_name": "Commit with Chinese Message",
        "purpose": "验证中文提交信息是否能正常工作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": "首次提交"
        },
        "response": {
          "result": "Changes committed successfully with hash eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2"
        },
        "execution_time": 0.5256576538085938,
        "is_functional_test": true
      },
      {
        "case_name": "Commit in Read-Only Repository",
        "purpose": "测试在只读权限下尝试提交是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "message": "Readonly commit attempt"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.021540164947509766,
        "is_functional_test": false
      },
      {
        "case_name": "Commit with Trailing Spaces in Message",
        "purpose": "验证提交信息末尾带有空格是否仍能成功提交",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "message": "Commit message with trailing spaces   "
        },
        "response": {
          "result": "Changes committed successfully with hash 151b179fda7d9376dd02530240df016d7059783d"
        },
        "execution_time": 0.5492761135101318,
        "is_functional_test": true
      },
      {
        "case_name": "Commit Using Network Drive Path",
        "purpose": "测试网络路径中的仓库是否支持提交操作",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "message": "Network drive commit"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.236922979354858,
        "is_functional_test": false
      },
      {
        "case_name": "Commit with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并完成提交操作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo",
          "message": "Symbolic link commit"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.012510538101196289,
        "is_functional_test": true
      },
      {
        "case_name": "Commit with Long Path Name",
        "purpose": "测试长路径名下的提交操作是否能正常执行",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z",
          "message": "Long path commit"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.012020587921142578,
        "is_functional_test": true
      }
    ],
    "git_log": [
      {
        "case_name": "Basic Git Log Retrieval",
        "purpose": "验证工具能否在默认参数下成功获取Git提交日志",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "Commit history:\nCommit: 151b179fda7d9376dd02530240df016d7059783d\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: Commit message with trailing spaces   \n\nCommit: eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: 首次提交\n\nCommit: feb3679e89c4efba158b6de98a582a1c6023cc9f\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: Commit @2025# with special chars\n\nCommit: b548ef77547b837a8cd3b764cf63b46ca3375e58\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: \n\nCommit: 22b65b0e9abc2b5802762d28ec49c70e9e0250ee\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Empty commit\n\nCommit: 7d2397483e89b8ac93c2659005d2de102c154c25\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Initial commit\n"
        },
        "execution_time": 0.6189720630645752,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log with Max Count Parameter",
        "purpose": "测试使用max_count参数限制返回的提交日志数量",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "max_count": 5
        },
        "response": {
          "result": "Commit history:\nCommit: 151b179fda7d9376dd02530240df016d7059783d\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: Commit message with trailing spaces   \n\nCommit: eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: 首次提交\n\nCommit: feb3679e89c4efba158b6de98a582a1c6023cc9f\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: Commit @2025# with special chars\n\nCommit: b548ef77547b837a8cd3b764cf63b46ca3375e58\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: \n\nCommit: 22b65b0e9abc2b5802762d28ec49c70e9e0250ee\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Empty commit\n"
        },
        "execution_time": 0.6333310604095459,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log with Chinese Path",
        "purpose": "验证中文路径下的Git提交日志是否能正常获取",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 0.14924168586730957,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log with Special Characters in Path",
        "purpose": "测试包含特殊字符的路径是否能正确获取提交日志",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.06913352012634277,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log from Read-Only Repository",
        "purpose": "测试只读权限仓库是否能正常获取提交日志或返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.05454277992248535,
        "is_functional_test": false
      },
      {
        "case_name": "Git Log with Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "Commit history:\nCommit: a0fa09f9cd4e1f1a13c0eac3d0c66f7f0b12f85b\nAuthor: pouchine\nDate: 2025-07-01 16:03:00+08:00\nMessage: Null path test\n"
        },
        "execution_time": 0.7516775131225586,
        "is_functional_test": false
      },
      {
        "case_name": "Git Log from Non-Git Directory",
        "purpose": "验证尝试从未初始化的Git目录获取提交日志是否会返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.07904458045959473,
        "is_functional_test": false
      },
      {
        "case_name": "Git Log with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.19716835021972656,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取提交日志",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "result": "Commit history:\nCommit: 151b179fda7d9376dd02530240df016d7059783d\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: Commit message with trailing spaces   \n\nCommit: eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: 首次提交\n\nCommit: feb3679e89c4efba158b6de98a582a1c6023cc9f\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: Commit @2025# with special chars\n\nCommit: b548ef77547b837a8cd3b764cf63b46ca3375e58\nAuthor: pouchine\nDate: 2025-07-01 18:25:58+08:00\nMessage: \n\nCommit: 22b65b0e9abc2b5802762d28ec49c70e9e0250ee\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Empty commit\n\nCommit: 7d2397483e89b8ac93c2659005d2de102c154c25\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Initial commit\n"
        },
        "execution_time": 0.772221565246582,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取提交日志",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.09192395210266113,
        "is_functional_test": true
      },
      {
        "case_name": "Git Log from Network Drive Path",
        "purpose": "测试网络路径是否支持获取提交日志",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.328611373901367,
        "is_functional_test": false
      },
      {
        "case_name": "Git Log with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.23347997665405273,
        "is_functional_test": false
      }
    ],
    "git_diff": [
      {
        "case_name": "Basic Git Diff Between Branches",
        "purpose": "验证工具能否在默认参数下成功获取不同分支之间的差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "target": "main..feature-branch"
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(128)\n  cmdline: git diff main..feature-branch\n  stderr: 'fatal: ambiguous argument 'main..feature-branch': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]''"
        },
        "execution_time": 0.20736336708068848,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff with Chinese Path",
        "purpose": "测试中文路径下的Git diff功能是否能正常工作",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx",
          "target": "HEAD~1..HEAD"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 0.007556438446044922,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff with Special Characters in Path",
        "purpose": "测试包含特殊字符的路径是否能正确获取差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#",
          "target": "master"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.015019416809082031,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff on Read-Only Repository",
        "purpose": "验证只读仓库是否能正确处理diff请求或返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "target": "develop"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.010265350341796875,
        "is_functional_test": false
      },
      {
        "case_name": "Git Diff with Empty Target",
        "purpose": "测试空目标参数是否会触发默认行为或报错",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "target": ""
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(128)\n  cmdline: git diff \n  stderr: 'fatal: ambiguous argument '': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]''"
        },
        "execution_time": 0.13459038734436035,
        "is_functional_test": false
      },
      {
        "case_name": "Git Diff from Non-Git Directory",
        "purpose": "验证从未初始化的Git目录执行diff是否会返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "target": "master"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.009009838104248047,
        "is_functional_test": false
      },
      {
        "case_name": "Git Diff with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z",
          "target": "main"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.011019468307495117,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   ",
          "target": "feature"
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(128)\n  cmdline: git diff feature\n  stderr: 'fatal: ambiguous argument 'feature': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]''"
        },
        "execution_time": 0.14544987678527832,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取差异信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo",
          "target": "develop"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.0240175724029541,
        "is_functional_test": true
      },
      {
        "case_name": "Git Diff from Network Drive Path",
        "purpose": "测试网络路径是否支持获取差异信息",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "target": "main"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.271390199661255,
        "is_functional_test": false
      },
      {
        "case_name": "Git Diff with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "target": "feature"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.006519794464111328,
        "is_functional_test": false
      },
      {
        "case_name": "Git Diff with Long Target Name",
        "purpose": "测试长目标名称是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "target": "very_long_branch_name_that_exceeds_normal_length_expectations"
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(128)\n  cmdline: git diff very_long_branch_name_that_exceeds_normal_length_expectations\n  stderr: 'fatal: ambiguous argument 'very_long_branch_name_that_exceeds_normal_length_expectations': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]''"
        },
        "execution_time": 0.16822528839111328,
        "is_functional_test": true
      }
    ],
    "git_show": [
      {
        "case_name": "Show Contents of Valid Commit",
        "purpose": "验证工具能否在指定路径下成功显示有效提交的内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "revision": "7d2397483e89b8ac93c2659005d2de102c154c25"
        },
        "response": {
          "result": "Commit: 7d2397483e89b8ac93c2659005d2de102c154c25\nAuthor: pouchine\nDate: 2025-07-01 18:25:57+08:00\nMessage: Initial commit\n\n--- 中文文件名.docx\n+++ 中文文件名.docx\nBinary files /dev/null and \"b/\\344\\270\\255\\346\\226\\207\\346\\226\\207\\344\\273\\266\\345\\220\\215.docx\" differ\n"
        },
        "execution_time": 0.39716458320617676,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents with Chinese Path and Valid Revision",
        "purpose": "测试中文路径下是否能正确显示指定提交的内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx",
          "revision": "eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 0.016802072525024414,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents with Special Characters in Path",
        "purpose": "测试包含特殊字符的路径是否能正确获取提交内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#",
          "revision": "feb3679e89c4efba158b6de98a582a1c6023cc9f"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.020426034927368164,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents from Read-Only Repository",
        "purpose": "验证在只读仓库中执行git show是否会返回适当的错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "revision": "b548ef77547b837a8cd3b764cf63b46ca3375e58"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.01713252067565918,
        "is_functional_test": false
      },
      {
        "case_name": "Show Contents with Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": "",
          "revision": "22b65b0e9abc2b5802762d28ec49c70e9e0250ee"
        },
        "response": {
          "error": "ToolException: SHA b'22b65b0e9abc2b5802762d28ec49c70e9e0250ee' could not be resolved, git returned: b'22b65b0e9abc2b5802762d28ec49c70e9e0250ee missing'"
        },
        "execution_time": 0.22214031219482422,
        "is_functional_test": false
      },
      {
        "case_name": "Show Contents from Non-Git Directory",
        "purpose": "验证从未初始化的Git目录执行git show是否会返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "revision": "151b179fda7d9376dd02530240df016d7059783d"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.0030052661895751953,
        "is_functional_test": false
      },
      {
        "case_name": "Show Contents with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z",
          "revision": "7d2397483e89b8ac93c2659005d2de102c154c25"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.011538505554199219,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常获取提交内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   ",
          "revision": "eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2"
        },
        "response": {
          "result": "Commit: eccca4d9cf17d5f1ebe0233fea5b9d5b1efe88b2\nAuthor: pouchine\nDate: 2025-07-01 18:25:59+08:00\nMessage: 首次提交\n"
        },
        "execution_time": 0.49944281578063965,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并获取提交内容",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo",
          "revision": "feb3679e89c4efba158b6de98a582a1c6023cc9f"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.01329183578491211,
        "is_functional_test": true
      },
      {
        "case_name": "Show Contents from Network Drive Path",
        "purpose": "测试网络路径是否支持获取提交内容",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "revision": "b548ef77547b837a8cd3b764cf63b46ca3375e58"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.25653600692749,
        "is_functional_test": false
      },
      {
        "case_name": "Show Contents with Invalid Permissions",
        "purpose": "验证无权限访问仓库时是否返回安全错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "revision": "151b179fda7d9376dd02530240df016d7059783d"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.05510258674621582,
        "is_functional_test": false
      },
      {
        "case_name": "Show Contents with Long Revision Hash",
        "purpose": "测试长提交哈希值是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "revision": "very_long_invalid_hash_that_exceeds_normal_length_expectations"
        },
        "response": {
          "error": "ToolException: Ref 'very_long_invalid_hash_that_exceeds_normal_length_expectations' did not resolve to an object"
        },
        "execution_time": 0.04867053031921387,
        "is_functional_test": false
      }
    ],
    "git_create_branch": [
      {
        "case_name": "Create New Branch from Default Base",
        "purpose": "验证工具能否在指定仓库路径下成功创建一个新分支，使用默认的base_branch（即不提供该参数）",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "feature/new-feature"
        },
        "response": {
          "result": "Created branch 'feature/new-feature' from 'master'"
        },
        "execution_time": 0.15583181381225586,
        "is_functional_test": true
      },
      {
        "case_name": "Create New Branch with Explicit Base",
        "purpose": "测试工具是否能从显式提供的base_branch创建新分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "bugfix/issue-123",
          "base_branch": "main"
        },
        "response": {
          "error": "ToolException: No item found with id 'main'"
        },
        "execution_time": 0.0025060176849365234,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch in Non-Git Directory",
        "purpose": "验证尝试在未初始化Git仓库的目录中创建分支是否会失败并返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "branch_name": "test-branch"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Create Branch with Empty Name",
        "purpose": "测试使用空分支名是否会触发适当的错误处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": ""
        },
        "response": {
          "error": "ToolException: [WinError 183] 当文件已存在时，无法创建该文件。: 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\.git\\\\refs\\\\heads\\\\.lock' -> 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\new_repo\\\\.git\\\\refs\\\\heads\\\\'"
        },
        "execution_time": 0.2023909091949463,
        "is_functional_test": false
      },
      {
        "case_name": "Create Branch with Special Characters in Name",
        "purpose": "测试包含特殊字符的分支名称是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "release/v2.0@beta"
        },
        "response": {
          "result": "Created branch 'release/v2.0@beta' from 'master'"
        },
        "execution_time": 0.15807557106018066,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch with Chinese Name",
        "purpose": "验证中文命名的分支是否能正常创建",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "特性/新功能"
        },
        "response": {
          "result": "Created branch '特性/新功能' from 'master'"
        },
        "execution_time": 0.13610482215881348,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch in Read-Only Repository",
        "purpose": "测试在只读权限下尝试创建分支是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "branch_name": "read-only-branch"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.0020012855529785156,
        "is_functional_test": false
      },
      {
        "case_name": "Create Branch with Trailing Spaces in Name",
        "purpose": "验证分支名称末尾带有空格是否仍能成功创建",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "trailing-space-branch   "
        },
        "response": {
          "result": "Created branch 'trailing-space-branch   ' from 'master'"
        },
        "execution_time": 0.13644194602966309,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch Using Network Drive Path",
        "purpose": "测试网络路径中的仓库是否支持创建分支",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "branch_name": "network-drive-branch"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.2826313972473145,
        "is_functional_test": false
      },
      {
        "case_name": "Create Branch with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并创建分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo",
          "branch_name": "symbolic-link-branch"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.01172494888305664,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch on Bare Git Repository",
        "purpose": "验证是否能在裸仓库中创建分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\bare_repo.git",
          "branch_name": "bare-repo-branch"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\bare_repo.git"
        },
        "execution_time": 0.009071111679077148,
        "is_functional_test": true
      },
      {
        "case_name": "Create Branch with Maximum Length Name",
        "purpose": "测试最大长度的分支名称是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z"
        },
        "response": {
          "result": "Created branch 'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z' from 'master'"
        },
        "execution_time": 0.3516271114349365,
        "is_functional_test": true
      }
    ],
    "git_checkout": [
      {
        "case_name": "Checkout Valid Branch in Existing Repository",
        "purpose": "验证工具能否在指定仓库路径下成功切换到已存在的分支",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "feature/new-feature"
        },
        "response": {
          "result": "Switched to branch 'feature/new-feature'"
        },
        "execution_time": 0.2792093753814697,
        "is_functional_test": true
      },
      {
        "case_name": "Checkout Nonexistent Branch",
        "purpose": "测试尝试切换到不存在的分支是否会返回适当的错误信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "nonexistent-branch"
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(1)\n  cmdline: git checkout nonexistent-branch\n  stderr: 'error: pathspec 'nonexistent-branch' did not match any file(s) known to git'"
        },
        "execution_time": 0.3004159927368164,
        "is_functional_test": true
      },
      {
        "case_name": "Checkout Branch with Empty Name",
        "purpose": "测试使用空分支名是否会触发错误处理机制",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": ""
        },
        "response": {
          "error": "ToolException: Cmd('git') failed due to: exit code(128)\n  cmdline: git checkout \n  stderr: 'fatal: empty string is not a valid pathspec. please use . instead if you meant to match all paths'"
        },
        "execution_time": 0.24187302589416504,
        "is_functional_test": false
      },
      {
        "case_name": "Checkout Branch in Read-Only Repository",
        "purpose": "验证在只读权限下尝试切换分支是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.024062633514404297,
        "is_functional_test": false
      },
      {
        "case_name": "Checkout Branch with Special Characters in Name",
        "purpose": "测试包含特殊字符的分支名称是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "release/v2.0@beta"
        },
        "response": {
          "result": "Switched to branch 'release/v2.0@beta'"
        },
        "execution_time": 0.25450968742370605,
        "is_functional_test": true
      },
      {
        "case_name": "Checkout Branch with Chinese Name",
        "purpose": "验证中文命名的分支是否能正常切换",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "特性/新功能"
        },
        "response": {
          "result": "Switched to branch '特性/新功能'"
        },
        "execution_time": 0.3134949207305908,
        "is_functional_test": true
      },
      {
        "case_name": "Checkout Branch Using Network Drive Path",
        "purpose": "测试网络路径中的仓库是否支持切换分支",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo",
          "branch_name": "main"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 7.2967729568481445,
        "is_functional_test": false
      },
      {
        "case_name": "Checkout Branch with Maximum Length Name",
        "purpose": "测试最大长度的分支名称是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo",
          "branch_name": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z"
        },
        "response": {
          "result": "Switched to branch 'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z'"
        },
        "execution_time": 0.12276983261108398,
        "is_functional_test": true
      },
      {
        "case_name": "Checkout Branch in Non-Git Directory",
        "purpose": "验证尝试在未初始化Git仓库的目录中执行checkout是否会失败并返回错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo",
          "branch_name": "master"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.02203679084777832,
        "is_functional_test": false
      }
    ],
    "git_reset": [
      {
        "case_name": "Unstage All Staged Changes in Valid Repository",
        "purpose": "验证工具能否在指定路径下成功取消暂存所有已暂存的变更",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo"
        },
        "response": {
          "result": "All staged changes reset"
        },
        "execution_time": 0.23794102668762207,
        "is_functional_test": true
      },
      {
        "case_name": "Unstage Changes with Chinese Path",
        "purpose": "测试中文路径下是否能正确取消暂存变更",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\中文文件名.docx"
        },
        "execution_time": 0.02852940559387207,
        "is_functional_test": false
      },
      {
        "case_name": "Unstage Changes in Read-Only Repository",
        "purpose": "验证在只读仓库中执行取消暂存是否会失败并返回适当错误",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_repo"
        },
        "execution_time": 0.0245513916015625,
        "is_functional_test": false
      },
      {
        "case_name": "Unstage Changes with Empty Path",
        "purpose": "测试空路径参数是否能触发默认行为或报错",
        "args": {
          "repo_path": ""
        },
        "response": {
          "result": "All staged changes reset"
        },
        "execution_time": 0.2154982089996338,
        "is_functional_test": false
      },
      {
        "case_name": "Unstage Changes with Special Characters in Path",
        "purpose": "测试路径包含特殊字符时能否正确取消暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\repo@2025#"
        },
        "execution_time": 0.01951289176940918,
        "is_functional_test": true
      },
      {
        "case_name": "Unstage Changes in Non-Git Directory",
        "purpose": "验证在未初始化的Git目录中执行取消暂存是否会返回错误提示",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\non_git_repo"
        },
        "execution_time": 0.030167341232299805,
        "is_functional_test": false
      },
      {
        "case_name": "Unstage Changes with Maximum Length Path",
        "purpose": "测试最大长度的路径是否能被正确处理",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\a\\b\\c\\d\\e\\f\\g\\h\\i\\j\\k\\l\\m\\n\\o\\p\\q\\r\\s\\t\\u\\v\\w\\x\\y\\z"
        },
        "execution_time": 0.033180952072143555,
        "is_functional_test": true
      },
      {
        "case_name": "Unstage Changes with Trailing Spaces in Path",
        "purpose": "验证路径末尾带空格时能否正常取消暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_repo   "
        },
        "response": {
          "result": "All staged changes reset"
        },
        "execution_time": 0.1481156349182129,
        "is_functional_test": true
      },
      {
        "case_name": "Unstage Changes with Symbolic Link Path",
        "purpose": "测试符号链接路径是否能正确解析并取消暂存变更信息",
        "args": {
          "repo_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "response": {
          "error": "ToolException: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\symlink_to_new_repo"
        },
        "execution_time": 0.027021408081054688,
        "is_functional_test": true
      },
      {
        "case_name": "Unstage Changes on Network Drive Path",
        "purpose": "测试网络路径是否支持取消暂存变更信息",
        "args": {
          "repo_path": "\\\\network_drive\\shared_folder\\git_repo"
        },
        "response": {
          "error": "ToolException: \\\\network_drive\\shared_folder\\git_repo"
        },
        "execution_time": 0.017055511474609375,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 137
}