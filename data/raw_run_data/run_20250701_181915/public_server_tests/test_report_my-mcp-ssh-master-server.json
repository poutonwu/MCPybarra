{
  "server_name": "server",
  "parent_dir": "my-mcp-ssh-master",
  "report_name": "my-mcp-ssh-master-server",
  "server_path": "workspace\\public-mcp-servers\\my-mcp-ssh-master\\server.py",
  "timestamp": "2025-07-01T18:24:05.276067",
  "tools": [
    {
      "name": "connect",
      "description": "Connect to SSH server\n    \n    Args:\n        session_id: Session ID, will be automatically generated if not provided（默认的服务器是10.70.0.133，已经配置了免密登录，特别说明）\n        host: SSH server hostname or IP address, defaults to SSH_HOST environment variable\n        port: SSH server port, defaults to SSH_PORT environment variable or 22\n        username: SSH username, defaults to SSH_USERNAME environment variable\n        password: SSH password, defaults to SSH_PASSWORD environment variable\n        key_path: SSH private key file path, defaults to SSH_KEY_PATH environment variable or ~/.ssh/id_rsa\n        key_passphrase: SSH private key passphrase, defaults to SSH_KEY_PASSPHRASE environment variable\n    \n    Returns:\n        Connection status\n    ",
      "args_schema": {
        "properties": {
          "host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "10.70.0.133",
            "title": "Host"
          },
          "port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": "26002",
            "title": "Port"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "pengbocheng",
            "title": "Username"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "Password"
          },
          "key_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Key Path"
          },
          "key_passphrase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Key Passphrase"
          }
        },
        "title": "connectArguments",
        "type": "object"
      }
    },
    {
      "name": "disconnect",
      "description": "Disconnect from SSH server\n    \n    Args:\n        session_id: Session ID to disconnect\n    \n    Returns:\n        Disconnection status\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          }
        },
        "required": [
          "session_id"
        ],
        "title": "disconnectArguments",
        "type": "object"
      }
    },
    {
      "name": "list_sessions",
      "description": "List all active SSH sessions\n    \n    Returns:\n        List containing information about all sessions\n    ",
      "args_schema": {
        "properties": {},
        "title": "list_sessionsArguments",
        "type": "object"
      }
    },
    {
      "name": "execute",
      "description": "Execute command on SSH server\n    \n    Args:\n        session_id: Session ID\n        command: Command to execute\n        stdin: Input string to provide to the command, defaults to None\n        timeout: Command timeout in seconds, defaults to 60 seconds\n    \n    Returns:\n        Command output (stdout and stderr) and exit status\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          },
          "stdin": {
            "default": "",
            "title": "Stdin",
            "type": "string"
          },
          "timeout": {
            "default": 60,
            "title": "Timeout",
            "type": "integer"
          }
        },
        "required": [
          "session_id",
          "command"
        ],
        "title": "executeArguments",
        "type": "object"
      }
    },
    {
      "name": "upload",
      "description": "Upload file to SSH server\n    \n    Args:\n        session_id: Session ID\n        local_path: Local file path\n        remote_path: Remote file path\n    \n    Returns:\n        Dictionary containing upload status information\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "local_path",
          "remote_path"
        ],
        "title": "uploadArguments",
        "type": "object"
      }
    },
    {
      "name": "download",
      "description": "Download file from SSH server\n    \n    Args:\n        session_id: Session ID\n        remote_path: Remote file path\n        local_path: Local file path\n    \n    Returns:\n        Dictionary containing download status information\n    ",
      "args_schema": {
        "properties": {
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "remote_path": {
            "title": "Remote Path",
            "type": "string"
          },
          "local_path": {
            "title": "Local Path",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "remote_path",
          "local_path"
        ],
        "title": "downloadArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "connect": [
      {
        "case_name": "Connect With Default Parameters",
        "purpose": "使用默认参数成功连接到SSH服务器",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ySJwx977\"\n}"
        },
        "execution_time": 0.6332893371582031,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Custom Host And Port",
        "purpose": "使用自定义主机和端口连接SSH服务器",
        "args": {
          "host": "192.168.1.100",
          "port": 22,
          "username": "testuser"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。\"\n}"
        },
        "execution_time": 21.486948251724243,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Password Authentication",
        "purpose": "使用密码认证方式连接SSH服务器",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "password": "securePassword123"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ZYG3AwNh\"\n}"
        },
        "execution_time": 0.5328731536865234,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Key Path And Passphrase",
        "purpose": "使用密钥路径和密码短语进行SSH连接",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "key_path": "/home/user/.ssh/id_rsa",
          "key_passphrase": "passphrase123"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 2] No such file or directory: '/home/user/.ssh/id_rsa'\"\n}"
        },
        "execution_time": 0.4792900085449219,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Invalid Host",
        "purpose": "测试无效主机名或IP地址的错误处理",
        "args": {
          "host": "invalid.hostname.or.ip",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 11001] getaddrinfo failed\"\n}"
        },
        "execution_time": 0.5277771949768066,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Wrong Port",
        "purpose": "测试无效端口连接失败的情况",
        "args": {
          "host": "10.70.0.133",
          "port": 9999,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno None] Unable to connect to port 9999 on 10.70.0.133\"\n}"
        },
        "execution_time": 2.6718316078186035,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Invalid Username",
        "purpose": "测试无效用户名导致的身份验证失败",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "wronguser"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: Authentication failed.\"\n}"
        },
        "execution_time": 0.7271881103515625,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Empty Host",
        "purpose": "测试空主机参数时的行为",
        "args": {
          "host": "",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"N7Wr8dTt\"\n}"
        },
        "execution_time": 0.571523904800415,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Special Characters In Username",
        "purpose": "测试用户名包含特殊字符的边界情况",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "user@special!chars"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: Authentication failed.\"\n}"
        },
        "execution_time": 1.2136688232421875,
        "is_functional_test": true
      },
      {
        "case_name": "Connect With Long Hostname",
        "purpose": "测试极长主机名的边界情况",
        "args": {
          "host": "a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z",
          "port": 26002,
          "username": "pengbocheng"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Connection failed: [Errno 11001] getaddrinfo failed\"\n}"
        },
        "execution_time": 0.2525520324707031,
        "is_functional_test": true
      },
      {
        "case_name": "Connect Without Credentials",
        "purpose": "测试未提供任何认证凭据的安全性",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": ""
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"QganaKKe\"\n}"
        },
        "execution_time": 0.33574962615966797,
        "is_functional_test": false
      },
      {
        "case_name": "Connect With Sensitive Data Logging",
        "purpose": "检查是否记录敏感信息如密码或私钥",
        "args": {
          "host": "10.70.0.133",
          "port": 26002,
          "username": "pengbocheng",
          "password": "secretPass123!"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ipiGjKxy\"\n}"
        },
        "execution_time": 0.28014159202575684,
        "is_functional_test": false
      }
    ],
    "list_sessions": [
      {
        "case_name": "List Sessions With Active SSH Connections",
        "purpose": "验证工具能够正确列出当前所有活跃的SSH会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.8s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.3s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.2s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.5s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.2s\"\n}"
        ],
        "execution_time": 0.01250767707824707,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions After Establishing New SSH Connection",
        "purpose": "在成功建立新SSH连接后，验证list_sessions能检测到新增的会话",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.8s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.3s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.2s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.5s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.2s\"\n}"
        ],
        "execution_time": 0.021082162857055664,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions Without Any Active Connections",
        "purpose": "在没有任何活跃SSH连接的情况下，验证工具返回空列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.8s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.2s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.5s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.2s\"\n}"
        ],
        "execution_time": 0.017236709594726562,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions After Terminating All Connections",
        "purpose": "在关闭所有SSH连接后，验证工具返回空列表",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.8s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.2s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.5s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.2s\"\n}"
        ],
        "execution_time": 0.01651310920715332,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions Concurrently From Multiple Threads",
        "purpose": "测试并发调用list_sessions时的行为是否一致且线程安全",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.9s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.3s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.6s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.3s\"\n}"
        ],
        "execution_time": 0.019018173217773438,
        "is_functional_test": true
      },
      {
        "case_name": "Check Sensitive Data Exposure In Session List",
        "purpose": "检查list_sessions返回结果中是否存在敏感信息如密码或私钥",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.9s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.4s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.3s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.6s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.3s\"\n}"
        ],
        "execution_time": 0.024483919143676758,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions With Invalid Session ID Format",
        "purpose": "测试当内部存在格式错误的session_id时工具的健壮性",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"54.9s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.3s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.6s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.3s\"\n}"
        ],
        "execution_time": 0.014129638671875,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions When SSH Daemon Is Down",
        "purpose": "测试SSH服务未运行时list_sessions的错误处理能力",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"55.0s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.4s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.7s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.4s\"\n}"
        ],
        "execution_time": 0.031080961227416992,
        "is_functional_test": false
      },
      {
        "case_name": "List Sessions With Maximum Number Of Sessions",
        "purpose": "测试系统最大支持的SSH会话数量限制下的list_sessions行为",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"55.0s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.5s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.4s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.7s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.4s\"\n}"
        ],
        "execution_time": 0.013501644134521484,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions With Special Characters In Session Info",
        "purpose": "测试会话信息包含特殊字符时的兼容性和显示完整性",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"55.0s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.6s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.4s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.7s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.4s\"\n}"
        ],
        "execution_time": 0.014023542404174805,
        "is_functional_test": true
      },
      {
        "case_name": "List Sessions For Long Duration Under Load",
        "purpose": "测试长时间高负载下list_sessions功能的稳定性",
        "args": {},
        "response": [
          "{\n  \"session_id\": \"ySJwx977\",\n  \"idle_time\": \"55.0s\"\n}",
          "{\n  \"session_id\": \"ZYG3AwNh\",\n  \"idle_time\": \"32.6s\"\n}",
          "{\n  \"session_id\": \"N7Wr8dTt\",\n  \"idle_time\": \"26.4s\"\n}",
          "{\n  \"session_id\": \"QganaKKe\",\n  \"idle_time\": \"23.7s\"\n}",
          "{\n  \"session_id\": \"ipiGjKxy\",\n  \"idle_time\": \"23.4s\"\n}"
        ],
        "execution_time": 0.017525672912597656,
        "is_functional_test": true
      }
    ],
    "execute": [
      {
        "case_name": "Execute Command With Session ID And Default Timeout",
        "purpose": "验证使用有效session_id和默认timeout执行命令的基本功能",
        "args": {
          "session_id": "ySJwx977",
          "command": "echo 'Hello World'"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"Hello World\\n\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.026555776596069336,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command With Stdin Input",
        "purpose": "验证通过stdin传递输入字符串的功能",
        "args": {
          "session_id": "ySJwx977",
          "command": "cat",
          "stdin": "This is standard input"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"This is standard input\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.05411887168884277,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Long Running Command With Custom Timeout",
        "purpose": "测试长时间运行的命令并验证自定义超时设置是否生效",
        "args": {
          "session_id": "ySJwx977",
          "command": "sleep 10 && echo 'Done'",
          "timeout": 15
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"Done\\n\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 10.041606664657593,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Invalid Command",
        "purpose": "验证工具对无效命令的错误处理能力",
        "args": {
          "session_id": "ySJwx977",
          "command": "invalid_command_123"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"bash: line 1: invalid_command_123: command not found\\n\",\n  \"exit_status\": 127\n}"
        },
        "execution_time": 0.06251120567321777,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command With Empty Session ID",
        "purpose": "测试空session_id参数的错误处理",
        "args": {
          "session_id": "",
          "command": "ls -l"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: \"\n}"
        },
        "execution_time": 0.016393184661865234,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command With Special Characters In Arguments",
        "purpose": "测试命令中包含特殊字符（如管道、重定向）的兼容性",
        "args": {
          "session_id": "ySJwx977",
          "command": "echo 'Test' | grep 'es' > output.txt"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.06617116928100586,
        "is_functional_test": true
      },
      {
        "case_name": "Execute Command Without Session ID",
        "purpose": "测试未提供session_id时的行为",
        "args": {
          "command": "whoami"
        },
        "response": {
          "error": "ToolException: Error executing tool execute: 1 validation error for executeArguments\nsession_id\n  Field required [type=missing, input_value={'command': 'whoami'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.016544818878173828,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command On Terminated Session",
        "purpose": "验证在已终止会话上执行命令的错误处理",
        "args": {
          "session_id": "nonexistent_session_abc",
          "command": "pwd"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: nonexistent_session_abc\"\n}"
        },
        "execution_time": 0.011624574661254883,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Sensitive Command Without Exposure",
        "purpose": "检查敏感命令（如包含密码）是否被安全记录",
        "args": {
          "session_id": "ySJwx977",
          "command": "echo 'DB_PASSWORD=secret123'"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"DB_PASSWORD=secret123\\n\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
        },
        "execution_time": 0.032850027084350586,
        "is_functional_test": false
      },
      {
        "case_name": "Execute Command With Zero Timeout",
        "purpose": "测试最小合法timeout值的边界条件",
        "args": {
          "session_id": "ySJwx977",
          "command": "top -n 1",
          "timeout": 0
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"\",\n  \"exit_status\": 1\n}"
        },
        "execution_time": 0.1686842441558838,
        "is_functional_test": true
      },
      {
        "case_name": "Execute File Transfer Using SCP",
        "purpose": "验证通过execute工具调用scp命令传输文件的功能",
        "args": {
          "session_id": "ySJwx977",
          "command": "scp D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg pengbocheng@10.70.0.133:/tmp/"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"stdout\": \"\",\n  \"stderr\": \"ssh: connect to host 10.70.0.133 port 22: Connection refused\\r\\nscp: Connection closed\\r\\n\",\n  \"exit_status\": 255\n}"
        },
        "execution_time": 0.0608823299407959,
        "is_functional_test": true
      }
    ],
    "upload": [
      {
        "case_name": "Upload File With Valid Session And Paths",
        "purpose": "使用有效会话ID和合法本地/远程路径成功上传文件",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature_image.jpg",
          "remote_path": "/tmp/nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nature_image.jpg\",\n  \"remote_path\": \"/tmp/nature_image.jpg\",\n  \"session_id\": \"ySJwx977\"\n}"
        },
        "execution_time": 0.22992777824401855,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Nonexistent Local File",
        "purpose": "测试尝试上传不存在的本地文件时的错误处理",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
          "remote_path": "/tmp/nonexistent_file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\nonexistent_file.txt'\"\n}"
        },
        "execution_time": 0.1024010181427002,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Without Session ID",
        "purpose": "测试未提供session_id参数时的行为",
        "args": {
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\mas.png",
          "remote_path": "/tmp/mas.png"
        },
        "response": {
          "error": "ToolException: Error executing tool upload: 1 validation error for uploadArguments\nsession_id\n  Field required [type=missing, input_value={'local_path': 'D:\\\\devWo...e_path': '/tmp/mas.png'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.06775808334350586,
        "is_functional_test": false
      },
      {
        "case_name": "Upload To Invalid Remote Path",
        "purpose": "验证工具在无效远程路径下的错误处理能力",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico",
          "remote_path": "/invalid_path/app.ico"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.15273308753967285,
        "is_functional_test": false
      },
      {
        "case_name": "Upload Empty File",
        "purpose": "测试空文件上传功能的兼容性和正确性",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty.txt",
          "remote_path": "/tmp/empty.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\empty.txt'\"\n}"
        },
        "execution_time": 0.1669597625732422,
        "is_functional_test": true
      },
      {
        "case_name": "Upload With Special Characters In Filenames",
        "purpose": "测试包含特殊字符的文件名上传是否正常工作",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#$%^&*()_+file.txt",
          "remote_path": "/tmp/special!@#$%^&*()_+file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\special!@#$%^&*()_+file.txt'\"\n}"
        },
        "execution_time": 0.15279388427734375,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Very Large File",
        "purpose": "测试大文件上传时工具的性能和稳定性",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_file.iso",
          "remote_path": "/tmp/large_file.iso"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\large_file.iso'\"\n}"
        },
        "execution_time": 0.13374114036560059,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Sensitive Data Without Exposure",
        "purpose": "检查上传过程中敏感信息（如密码）是否被安全处理而不暴露",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sensitive_data.txt",
          "remote_path": "/tmp/sensitive_data.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\sensitive_data.txt'\"\n}"
        },
        "execution_time": 0.145186185836792,
        "is_functional_test": false
      },
      {
        "case_name": "Upload With Invalid Session ID",
        "purpose": "测试使用无效session_id进行上传时的错误处理",
        "args": {
          "session_id": "invalid_session_123",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\code (1).html",
          "remote_path": "/tmp/code.html"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.12107443809509277,
        "is_functional_test": false
      },
      {
        "case_name": "Upload To Read-Only Directory",
        "purpose": "验证工具在目标目录不可写情况下的错误处理",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\2023.nlposs-1.24.pdf",
          "remote_path": "/etc/test_upload.pdf"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [Errno 13] Permission denied\"\n}"
        },
        "execution_time": 0.1599292755126953,
        "is_functional_test": false
      },
      {
        "case_name": "Multiple Uploads Concurrently",
        "purpose": "测试并发上传多个文件时的功能稳定性和线程安全性",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\multi_merged_output.zip",
          "remote_path": "/tmp/multi_merged_output.zip"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\multi_merged_output.zip\",\n  \"remote_path\": \"/tmp/multi_merged_output.zip\",\n  \"session_id\": \"ySJwx977\"\n}"
        },
        "execution_time": 0.2356855869293213,
        "is_functional_test": true
      },
      {
        "case_name": "Upload Unicode Filename",
        "purpose": "测试带有Unicode字符（如中文）的文件名上传",
        "args": {
          "session_id": "ySJwx977",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg",
          "remote_path": "/tmp/涓枃_output_save_20250701_182609.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error uploading file: [WinError 2] 系统找不到指定的文件。: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\涓\\\\ue15f枃_output_save_20250701_182609.jpg'\"\n}"
        },
        "execution_time": 0.2350139617919922,
        "is_functional_test": true
      }
    ],
    "download": [
      {
        "case_name": "Download File With Valid Session And Paths",
        "purpose": "使用有效会话ID和合法本地/远程路径成功下载文件",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/nature_image.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nature_image.jpg"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"remote_path\": \"/tmp/nature_image.jpg\",\n  \"local_path\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\downloaded_nature_image.jpg\",\n  \"session_id\": \"ySJwx977\"\n}"
        },
        "execution_time": 0.10671138763427734,
        "is_functional_test": true
      },
      {
        "case_name": "Download File To Invalid Local Path",
        "purpose": "验证工具在无效本地路径下的错误处理能力",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/testfile.txt",
          "local_path": "D:\\invalid\\path\\testfile.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file or directory: 'D:\\\\\\\\invalid\\\\\\\\path\\\\\\\\testfile.txt'\"\n}"
        },
        "execution_time": 0.00458216667175293,
        "is_functional_test": false
      },
      {
        "case_name": "Download Without Session ID",
        "purpose": "测试未提供session_id参数时的行为",
        "args": {
          "remote_path": "/tmp/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\testfile.txt"
        },
        "response": {
          "error": "ToolException: Error executing tool download: 1 validation error for downloadArguments\nsession_id\n  Field required [type=missing, input_value={'remote_path': '/tmp/tes...estFiles\\\\testfile.txt'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      },
      {
        "case_name": "Download From Invalid Remote Path",
        "purpose": "验证从不存在的远程路径下载时的错误处理",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/nonexistent/path/file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\testfile.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.017546653747558594,
        "is_functional_test": false
      },
      {
        "case_name": "Download With Special Characters In Filenames",
        "purpose": "测试包含特殊字符的文件名下载是否正常工作",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/special!@#$%^&*()_+file.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special!@#$%^&*()_+file.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 22] Invalid argument: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\special!@#$%^&*()_+file.txt'\"\n}"
        },
        "execution_time": 0.0073223114013671875,
        "is_functional_test": true
      },
      {
        "case_name": "Download Sensitive Data Without Exposure",
        "purpose": "检查下载过程中敏感信息（如密码）是否被安全处理而不暴露",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/sensitive_data.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sensitive_data_download.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.00951838493347168,
        "is_functional_test": false
      },
      {
        "case_name": "Download With Invalid Session ID",
        "purpose": "测试使用无效session_id进行下载时的错误处理",
        "args": {
          "session_id": "invalid_session_123",
          "remote_path": "/tmp/testfile.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\testfile.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid_session_123\"\n}"
        },
        "execution_time": 0.0060062408447265625,
        "is_functional_test": false
      },
      {
        "case_name": "Download Unicode Filename",
        "purpose": "测试带有Unicode字符（如中文）的文件名下载",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/涓枃_output_save_20250701_182609.jpg",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\涓枃_output_save_20250701_182609.jpg"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.010020732879638672,
        "is_functional_test": true
      },
      {
        "case_name": "Download Very Large File",
        "purpose": "测试大文件下载时工具的性能和稳定性",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/large_file.iso",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_file_download.iso"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.018521785736083984,
        "is_functional_test": true
      },
      {
        "case_name": "Download Empty File",
        "purpose": "测试空文件下载功能的兼容性和正确性",
        "args": {
          "session_id": "ySJwx977",
          "remote_path": "/tmp/empty.txt",
          "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_download.txt"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Error downloading file: [Errno 2] No such file\"\n}"
        },
        "execution_time": 0.010591506958007812,
        "is_functional_test": true
      }
    ],
    "disconnect": [
      {
        "case_name": "Disconnect With Valid Session ID",
        "purpose": "使用有效session_id成功断开SSH连接",
        "args": {
          "session_id": "ySJwx977"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ySJwx977\"\n}"
        },
        "execution_time": 0.05669689178466797,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect With Empty Session ID",
        "purpose": "测试空session_id参数的错误处理",
        "args": {
          "session_id": ""
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: \"\n}"
        },
        "execution_time": 0.02053380012512207,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Without Session ID",
        "purpose": "测试未提供session_id时的行为",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool disconnect: 1 validation error for disconnectArguments\nsession_id\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.03405499458312988,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect Already Terminated Session",
        "purpose": "验证在已终止会话上执行disconnect的错误处理",
        "args": {
          "session_id": "nonexistent_session_abc"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: nonexistent_session_abc\"\n}"
        },
        "execution_time": 0.03556036949157715,
        "is_functional_test": false
      },
      {
        "case_name": "Disconnect With Special Characters In Session ID",
        "purpose": "测试包含特殊字符的session_id是否被正确拒绝",
        "args": {
          "session_id": "invalid!@#$%^&*()_+id"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: invalid!@#$%^&*()_+id\"\n}"
        },
        "execution_time": 0.012507200241088867,
        "is_functional_test": false
      },
      {
        "case_name": "Secure Disconnection Without Sensitive Data Exposure",
        "purpose": "检查断开连接过程中是否会暴露敏感信息如密码或私钥",
        "args": {
          "session_id": "ipiGjKxy"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ipiGjKxy\"\n}"
        },
        "execution_time": 0.04762840270996094,
        "is_functional_test": false
      },
      {
        "case_name": "Concurrent Disconnect From Multiple Threads",
        "purpose": "测试并发调用disconnect时的行为是否一致且线程安全",
        "args": {
          "session_id": "ZYG3AwNh"
        },
        "response": {
          "result": "{\n  \"success\": true,\n  \"session_id\": \"ZYG3AwNh\"\n}"
        },
        "execution_time": 0.020052671432495117,
        "is_functional_test": true
      },
      {
        "case_name": "Disconnect With Maximum Length Session ID",
        "purpose": "测试极长session_id的边界情况",
        "args": {
          "session_id": "aBcD1234567890aBcD1234567890aBcD1234567890aBcD1234567890aBcD1234567890"
        },
        "response": {
          "result": "{\n  \"success\": false,\n  \"error\": \"Session not found: aBcD1234567890aBcD1234567890aBcD1234567890aBcD1234567890aBcD1234567890\"\n}"
        },
        "execution_time": 0.030607938766479492,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 64
}