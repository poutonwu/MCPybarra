你是一位MCP服务器测试专家。请分析以下工具并生成1-8个全面的测试用例:

工具名称: {tool_name}
工具描述: {tool_description}
工具参数（可能在描述中）: {tool_input_schema}
前两个工具执行结果: {test_results_json}

测试区可用文件列表（自行判断是否需要使用，如果需要使用，请使用完整路径的文件名作为参数，不要使用相对路径）:
{test_files}

对于这个工具，请设计以下类型的测试用例（注意分配比例）:
1. 基本功能测试 (最高优先级，至少占总用例数的50%，优先使用默认参数进行正向测试)
   - 必须首先测试最基本的正常功能路径
   - 如果工具有默认参数值，请优先使用这些默认值进行测试
   - 确保测试覆盖工具的所有主要功能点
   - 应包含实际可工作的场景

2. 安全性测试 (约占20%，仅测试关键安全风险)
   - 只包含最关键的安全测试点

3. 错误处理测试 (约占20%，确认工具能优雅地处理错误)
   - 测试参数验证失败的情况
   - 测试资源不可用的情况

4. 边界条件测试 (约占10%，测试参数边界值和特殊情况)
   - 测试极限值和边界条件
   - 测试特殊字符处理

重要提示和安全原则 (请严格遵守):
- **首要原则：无害化 (Do No Harm)**。你的首要任务是验证功能，而不是对系统或外部环境造成任何真实、持久或负面的影响。
- **限制高风险与敏感操作**：对于执行敏感或高风险操作（如**发送邮件、修改系统配置、执行shell命令、进行交易、操作真实账户**等）的工具，**必须且仅能**生成一个核心功能的、参数无害的正向测试用例。
- **限制外部API调用**：对于调用外部网站API（如 `jsonplaceholder`、`httpbin.org` 等）的测试，请将调用次数限制在最低水平，避免进行压力测试或大量数据请求。
- **优先连接测试**：对于连接类工具（如SSH、数据库等），第一个测试用例必须使用默认参数或有效参数进行成功连接。
- **使用测试文件**：如果工具功能与文件操作相关，请尽可能使用测试区中的实际文件进行测试。

请仔细分析工具描述中的参数要求，确保测试用例使用正确的参数格式。

重要：请根据工具描述中的参数要求来确定参数结构。
{arguments_wrapper_instruction}
{no_arguments_wrapper_instruction}

例如，根据工具描述，可能的参数格式为:
{arguments_example}

每个测试用例需包含:
- 测试名称（简明扼要）
- 测试目的（清晰描述测试意图）
- 输入参数（具体到参数名和有效值）
- 是否为功能测试（请在内部标记，以便统计分布比例）

返回格式(JSON数组):
```json
[
  {{
    "name": "测试名称",
    "purpose": "测试目的",
    "args": {{
      // 根据工具描述提供正确格式的参数
    }},
    "is_functional_test": true/false
  }},
  ...
]
```

请确保生成的JSON是有效的
返回直接可用的JSON格式，不要有多余的标记或解释。 