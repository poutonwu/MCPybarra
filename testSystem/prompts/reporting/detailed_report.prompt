你是一位资深的MCP服务器测试分析专家。请基于以下完整的测试结果，生成一份详细的、专业的评估报告。

**测试结果 (JSON格式):**
```json
{results_json}
```

---

**请严格按照以下五个维度及其明确的评分标准进行全面评估和打分，总分为100分。注意：评分必须严格遵守区间规则，不允许出现区间错配！**

**A. 需要严格量化的维度:**

1.  **功能性 (满分 {functional_weight}分)**
    -   **任务**: 评估服务器功能是否符合预期。你需要判断每个测试用例的"语义成功率"，即返回结果在逻辑和内容上是否都完全符合预期。
    -   **评分标准** (必须严格遵守以下区间):
        -   当且仅当 `>95%` 的测试用例语义成功时: **30分**
        -   当且仅当 `>75% 且 ≤95%` 的测试用例语义成功时: **24-29分**
        -   当且仅当 `>60% 且 ≤75%` 的测试用例语义成功时: **18-23分**
        -   当且仅当 `≤60%` 的测试用例语义成功时: **18分以下**
    -   **示例**:
        - 如果成功率为96%，则必须得30分
        - 如果成功率为83.7%，则必须在24-29分区间
        - 如果成功率为70%，则必须在18-23分区间
        - 如果成功率为55%，则必须在18分以下

2.  **健壮性 (满分 {robustness_weight}分)**
    -   **任务**: 评估服务器处理边界、异常和错误情况的能力。重点分析`purpose`中包含"边界"、"错误"的测试用例。
    -   **评分标准** (必须严格遵守以下区间):
        -   当且仅当 `>95%` 的异常用例被正确处理时: **20分**
        -   当且仅当 `>75% 且 ≤95%` 的异常用例被正确处理时: **16-19分**
        -   当且仅当 `>60% 且 ≤75%` 的异常用例被正确处理时: **12-15分**
        -   当且仅当 `≤60%` 的异常用例被正确处理时: **12分以下**
    -   **示例**:
        - 如果成功率为97%，则必须得20分
        - 如果成功率为85%，则必须在16-19分区间
        - 如果成功率为68.8%，则必须在12-15分区间
        - 如果成功率为55%，则必须在12分以下

3.  **安全性 (满分 {security_weight}分)**
    -   **任务**: 评估服务器抵御不安全输入和访问控制的能力。重点分析`is_security_test`为`true`的用例。
    -   **评分标准** (必须严格遵守):
        -   当且仅当 `100%` 的安全威胁被成功阻止时: **20分**
        -   当存在潜在漏洞（非关键）时: **12-19分**
        -   当存在严重安全漏洞时: **12分以下**
-   **特别说明**: 如果出现内容截断的情况，是正常现象，认为正常完成功能，不算失败。

**B. 需要酌情判断的维度:**

4.  **性能 (满分 {performance_weight}分)**
    -   **任务**: 酌情评估服务器的响应速度。
    -   **评估依据**: 基于`execution_time`字段，综合评估服务器的平均响应延迟。综合工具类型和延迟，判断得分。

5.  **透明性 (满分 {transparency_weight}分)**
    -   **任务**: 酌情评估错误信息的清晰度。
    -   **评估依据**: 分析失败用例返回的`error`信息，评估其对开发者排查问题的帮助程度。模糊或无用的错误信息应扣分。

---

**报告生成要求:**

请生成一份专业的Markdown格式测试报告，包含:
1.  **摘要**: 总结服务器在五个维度下的整体表现和主要发现。
2.  **详细评估**: 针对每个维度进行详细分析，并给出具体评分和理由。对于A部分的维度：
    - 必须明确计算并展示成功率
    - 必须说明成功率属于哪个区间
    - 必须确保评分与成功率区间严格对应
3.  **注意**: 成功率需要结合测试任务的目的和测试用例的语义来判断，不要只看返回结果。如果目的是错误处理和边界处理，返回报错是正常响应。
4.  **问题与建议**: 发现的主要问题和可行的改进建议。
5.  **结论**: 对服务器的总体评价。

**评分格式要求 (必须严格遵守):**

在报告末尾，必须提供一个明确的`<SCORES>`模块，格式如下:

```
<SCORES>
功能性: X/{functional_weight}
健壮性: X/{robustness_weight}
安全性: X/{security_weight}
性能: X/{performance_weight}
透明性: X/{transparency_weight}
总分: X/100
</SCORES>
```

请将X替换为你的实际评分。此评分格式对后续处理非常重要，必须严格按照这个格式提供评分。
直接返回markdown格式，不要添加任何其他内容。 