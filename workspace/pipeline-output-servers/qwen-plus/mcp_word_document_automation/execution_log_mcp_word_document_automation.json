[
  {
    "step": {
      "step_id": "create_new_document",
      "tool_name": "create_document",
      "parameters": {
        "file_name": "test_document"
      },
      "description": "Happy path: Create a new document with a basic file name."
    },
    "substituted_params": {
      "file_name": "test_document"
    },
    "result": {
      "status": "success",
      "result": "Document 'test_document.docx' created successfully."
    }
  },
  {
    "step": {
      "step_id": "add_paragraph",
      "tool_name": "add_paragraph",
      "parameters": {
        "text": "This is a test paragraph."
      },
      "description": "Happy path: Add a paragraph to the newly created document."
    },
    "substituted_params": {
      "text": "This is a test paragraph."
    },
    "result": {
      "status": "success",
      "result": "Paragraph added successfully."
    }
  },
  {
    "step": {
      "step_id": "add_heading",
      "tool_name": "add_heading",
      "parameters": {
        "text": "Test Heading",
        "level": 1
      },
      "description": "Happy path: Add a level 1 heading to the document."
    },
    "substituted_params": {
      "text": "Test Heading",
      "level": 1
    },
    "result": {
      "status": "success",
      "result": "Heading added successfully."
    }
  },
  {
    "step": {
      "step_id": "add_table",
      "tool_name": "add_table",
      "parameters": {
        "rows": 2,
        "cols": 3
      },
      "description": "Happy path: Add a 2x3 table to the document."
    },
    "substituted_params": {
      "rows": 2,
      "cols": 3
    },
    "result": {
      "status": "success",
      "result": "Table added successfully."
    }
  },
  {
    "step": {
      "step_id": "add_page_break",
      "tool_name": "add_page_break",
      "parameters": {},
      "description": "Happy path: Add a page break to the document."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "Page break added successfully."
    }
  },
  {
    "step": {
      "step_id": "save_document",
      "tool_name": "save_document",
      "parameters": {
        "file_path": "$outputs.create_new_document"
      },
      "description": "Dependent call: Save the document created in the first step."
    },
    "substituted_params": {
      "file_path": "Document 'test_document.docx' created successfully."
    },
    "result": {
      "status": "success",
      "result": "Document saved successfully at 'Document 'test_document.docx' created successfully.'."
    }
  },
  {
    "step": {
      "step_id": "get_document_info",
      "tool_name": "get_document_info",
      "parameters": {},
      "description": "Happy path: Retrieve metadata about the current document."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"paragraphs\": 3, \"tables\": 1}"
    }
  },
  {
    "step": {
      "step_id": "search_text",
      "tool_name": "search_text",
      "parameters": {
        "query": "test"
      },
      "description": "Happy path: Search for the word 'test' in the document."
    },
    "substituted_params": {
      "query": "test"
    },
    "result": {
      "status": "success",
      "result": "[\"Paragraph 1\"]"
    }
  },
  {
    "step": {
      "step_id": "find_and_replace",
      "tool_name": "find_and_replace",
      "parameters": {
        "old_text": "test",
        "new_text": "example"
      },
      "description": "Happy path: Replace 'test' with 'example' in the document."
    },
    "substituted_params": {
      "old_text": "test",
      "new_text": "example"
    },
    "result": {
      "status": "success",
      "result": "Text replaced successfully."
    }
  },
  {
    "step": {
      "step_id": "delete_paragraph",
      "tool_name": "delete_paragraph",
      "parameters": {
        "paragraph_index": 0
      },
      "description": "Happy path: Delete the first paragraph in the document."
    },
    "substituted_params": {
      "paragraph_index": 0
    },
    "result": {
      "status": "success",
      "result": "Paragraph deleted successfully."
    }
  },
  {
    "step": {
      "step_id": "add_table_row",
      "tool_name": "add_table_row",
      "parameters": {
        "table_index": 0
      },
      "description": "Happy path: Add a new row to the existing table."
    },
    "substituted_params": {
      "table_index": 0
    },
    "result": {
      "status": "success",
      "result": "Row added successfully."
    }
  },
  {
    "step": {
      "step_id": "edit_table_cell",
      "tool_name": "edit_table_cell",
      "parameters": {
        "table_index": 0,
        "row_index": 0,
        "col_index": 0,
        "new_content": "Updated Cell"
      },
      "description": "Happy path: Edit the content of a specific cell in the table."
    },
    "substituted_params": {
      "table_index": 0,
      "row_index": 0,
      "col_index": 0,
      "new_content": "Updated Cell"
    },
    "result": {
      "status": "success",
      "result": "Cell edited successfully."
    }
  },
  {
    "step": {
      "step_id": "merge_table_cells",
      "tool_name": "merge_table_cells",
      "parameters": {
        "table_index": 0,
        "start_row": 0,
        "start_col": 0,
        "end_row": 0,
        "end_col": 1
      },
      "description": "Happy path: Merge cells in the first row of the table."
    },
    "substituted_params": {
      "table_index": 0,
      "start_row": 0,
      "start_col": 0,
      "end_row": 0,
      "end_col": 1
    },
    "result": {
      "status": "success",
      "result": "Cells merged successfully."
    }
  },
  {
    "step": {
      "step_id": "split_table",
      "tool_name": "split_table",
      "parameters": {
        "table_index": 0,
        "split_row_index": 1
      },
      "description": "Happy path: Split the table at row index 1."
    },
    "substituted_params": {
      "table_index": 0,
      "split_row_index": 1
    },
    "result": {
      "status": "success",
      "result": "Table split successfully."
    }
  },
  {
    "step": {
      "step_id": "set_page_margins",
      "tool_name": "set_page_margins",
      "parameters": {
        "top": 1.0,
        "bottom": 1.0,
        "left": 1.0,
        "right": 1.0
      },
      "description": "Happy path: Set standard page margins for the document."
    },
    "substituted_params": {
      "top": 1.0,
      "bottom": 1.0,
      "left": 1.0,
      "right": 1.0
    },
    "result": {
      "status": "success",
      "result": "Page margins set successfully."
    }
  },
  {
    "step": {
      "step_id": "save_as_document",
      "tool_name": "save_as_document",
      "parameters": {
        "new_file_path": "updated_test_document.docx"
      },
      "description": "Happy path: Save the document with a new file name."
    },
    "substituted_params": {
      "new_file_path": "updated_test_document.docx"
    },
    "result": {
      "status": "success",
      "result": "Document saved as 'updated_test_document.docx' successfully."
    }
  },
  {
    "step": {
      "step_id": "create_document_copy",
      "tool_name": "create_document_copy",
      "parameters": {
        "copy_file_path": "test_document_copy.docx"
      },
      "description": "Happy path: Create a copy of the current document."
    },
    "substituted_params": {
      "copy_file_path": "test_document_copy.docx"
    },
    "result": {
      "status": "success",
      "result": "Document copy created at 'test_document_copy.docx' successfully."
    }
  },
  {
    "step": {
      "step_id": "open_document",
      "tool_name": "open_document",
      "parameters": {
        "file_path": "$outputs.save_as_document"
      },
      "description": "Dependent call: Open the document saved with the new file name."
    },
    "substituted_params": {
      "file_path": "Document saved as 'updated_test_document.docx' successfully."
    },
    "result": {
      "status": "success",
      "result": "File 'Document saved as 'updated_test_document.docx' successfully.' does not exist."
    }
  },
  {
    "step": {
      "step_id": "delete_text",
      "tool_name": "delete_text",
      "parameters": {
        "text_to_delete": "example"
      },
      "description": "Happy path: Delete all instances of the word 'example' from the document."
    },
    "substituted_params": {
      "text_to_delete": "example"
    },
    "result": {
      "status": "success",
      "result": "Text deleted successfully."
    }
  },
  {
    "step": {
      "step_id": "delete_table_row",
      "tool_name": "delete_table_row",
      "parameters": {
        "table_index": 0,
        "row_index": 0
      },
      "description": "Happy path: Delete the first row of the table."
    },
    "substituted_params": {
      "table_index": 0,
      "row_index": 0
    },
    "result": {
      "status": "success",
      "result": "Row deleted successfully."
    }
  },
  {
    "step": {
      "step_id": "replace_section",
      "tool_name": "replace_section",
      "parameters": {
        "section_title": "Test Heading",
        "new_content": "This is the new section content."
      },
      "description": "Happy path: Replace the content under the 'Test Heading' section."
    },
    "substituted_params": {
      "section_title": "Test Heading",
      "new_content": "This is the new section content."
    },
    "result": {
      "status": "success",
      "result": "Section replaced successfully."
    }
  },
  {
    "step": {
      "step_id": "edit_section_by_keyword",
      "tool_name": "edit_section_by_keyword",
      "parameters": {
        "keyword": "new section",
        "new_content": "This is the updated section content."
      },
      "description": "Happy path: Edit a section containing the keyword 'new section'."
    },
    "substituted_params": {
      "keyword": "new section",
      "new_content": "This is the updated section content."
    },
    "result": {
      "status": "success",
      "result": "Section edited successfully."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_file_path",
      "tool_name": "open_document",
      "parameters": {
        "file_path": "nonexistent_file.docx"
      },
      "description": "Edge case: Attempt to open a document that does not exist."
    },
    "substituted_params": {
      "file_path": "nonexistent_file.docx"
    },
    "result": {
      "status": "success",
      "result": "File 'nonexistent_file.docx' does not exist."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_heading_level",
      "tool_name": "add_heading",
      "parameters": {
        "text": "Invalid Heading",
        "level": 10
      },
      "description": "Edge case: Test adding a heading with an invalid level (greater than 9)."
    },
    "substituted_params": {
      "text": "Invalid Heading",
      "level": 10
    },
    "result": {
      "status": "success",
      "result": "Heading level must be between 1 and 9."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_table_dimensions",
      "tool_name": "add_table",
      "parameters": {
        "rows": 0,
        "cols": -1
      },
      "description": "Edge case: Test adding a table with invalid dimensions (non-positive rows and negative columns)."
    },
    "substituted_params": {
      "rows": 0,
      "cols": -1
    },
    "result": {
      "status": "success",
      "result": "Rows and columns must be positive integers."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_paragraph_index",
      "tool_name": "delete_paragraph",
      "parameters": {
        "paragraph_index": -1
      },
      "description": "Edge case: Attempt to delete a paragraph with an invalid negative index."
    },
    "substituted_params": {
      "paragraph_index": -1
    },
    "result": {
      "status": "error",
      "result": "Invalid paragraph index."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_table_index",
      "tool_name": "add_table_row",
      "parameters": {
        "table_index": -1
      },
      "description": "Edge case: Attempt to add a row to a table with an invalid negative index."
    },
    "substituted_params": {
      "table_index": -1
    },
    "result": {
      "status": "error",
      "result": "Invalid table index."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_cell_indices",
      "tool_name": "edit_table_cell",
      "parameters": {
        "table_index": 0,
        "row_index": -1,
        "col_index": 2,
        "new_content": "Invalid Cell"
      },
      "description": "Edge case: Attempt to edit a cell with an invalid row index."
    },
    "substituted_params": {
      "table_index": 0,
      "row_index": -1,
      "col_index": 2,
      "new_content": "Invalid Cell"
    },
    "result": {
      "status": "error",
      "result": "Invalid row index."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_merge_indices",
      "tool_name": "merge_table_cells",
      "parameters": {
        "table_index": 0,
        "start_row": 0,
        "start_col": 0,
        "end_row": -1,
        "end_col": 1
      },
      "description": "Edge case: Attempt to merge cells with an invalid end row index."
    },
    "substituted_params": {
      "table_index": 0,
      "start_row": 0,
      "start_col": 0,
      "end_row": -1,
      "end_col": 1
    },
    "result": {
      "status": "error",
      "result": "Error merging table cells: list index out of range"
    }
  },
  {
    "step": {
      "step_id": "test_invalid_split_row",
      "tool_name": "split_table",
      "parameters": {
        "table_index": 0,
        "split_row_index": -1
      },
      "description": "Edge case: Attempt to split a table at an invalid row index."
    },
    "substituted_params": {
      "table_index": 0,
      "split_row_index": -1
    },
    "result": {
      "status": "error",
      "result": "Invalid split row index."
    }
  },
  {
    "step": {
      "step_id": "test_invalid_margins",
      "tool_name": "set_page_margins",
      "parameters": {
        "top": -1.0,
        "bottom": 0.5,
        "left": 0.5,
        "right": 0.5
      },
      "description": "Edge case: Test setting invalid negative top margin."
    },
    "substituted_params": {
      "top": -1.0,
      "bottom": 0.5,
      "left": 0.5,
      "right": 0.5
    },
    "result": {
      "status": "success",
      "result": "Page margins set successfully."
    }
  }
]