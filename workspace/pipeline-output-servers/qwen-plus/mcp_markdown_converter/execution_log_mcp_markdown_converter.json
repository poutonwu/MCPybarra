[
  {
    "step": {
      "step_id": "convert_html_url",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "https://example.com/sample.html"
      },
      "description": "Happy path: Convert a valid HTML page from a URL. Assumes the server can fetch and convert it successfully."
    },
    "substituted_params": {
      "content_source": "https://example.com/sample.html"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Failed to fetch content: HTTP request failed: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1010)"
    }
  },
  {
    "step": {
      "step_id": "verify_html_conversion_metadata",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "$outputs.convert_html_url.metadata.original_stats.size_bytes",
        "content_type": "$outputs.convert_html_url.metadata.source_type"
      },
      "description": "Dependent call: Use metadata from previous conversion as input to test file size and type detection logic."
    },
    "substituted_params": {
      "content_source": null,
      "content_type": null
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.convert_html_url.metadata.original_stats.size_bytes'"
    }
  },
  {
    "step": {
      "step_id": "convert_local_file",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.pptx"
      },
      "description": "Happy path: Convert a local PPTX file. Tests file system access and PowerPoint conversion."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\智能软件工.pptx"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Conversion failed: StreamInfo.__init__() got an unexpected keyword argument 'name'"
    }
  },
  {
    "step": {
      "step_id": "explicit_content_type",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
        "content_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      },
      "description": "Edge case: Test explicit content type with CSV file (which may be misidentified). Ensures explicit type overrides detection."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\机械设备精简.csv",
      "content_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Conversion failed: StreamInfo.__init__() got an unexpected keyword argument 'name'"
    }
  },
  {
    "step": {
      "step_id": "invalid_file_path",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
      },
      "description": "Edge case: Attempt to convert a non-existent local file to test error handling."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Failed to fetch content: File not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.docx"
    }
  },
  {
    "step": {
      "step_id": "invalid_content_type",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg",
        "content_type": "image/jpeg"
      },
      "description": "Edge case: Try to convert an unsupported content type (JPEG image) with explicit type parameter to test validation."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\积分.jpg",
      "content_type": "image/jpeg"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Unsupported content type: image/jpeg. Supported types are: text/html, application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.presentationml.presentation, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    }
  },
  {
    "step": {
      "step_id": "data_uri_conversion",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "data:text/html;base64,PCFET0NUWVBFIEhUTUw+PGh0bWw+PGhlYWQ+PHRpdGxlPkhhcHA8L3RpdGxlPjwvaGVhZD48Ym9keT48aDE+SGVsbG8gV29ybGQ8L2gxPjwvYm9keT48L2h0bWw+"
      },
      "description": "Happy path: Convert base64-encoded HTML data URI to test data URI handling capability."
    },
    "substituted_params": {
      "content_source": "data:text/html;base64,PCFET0NUWVBFIEhUTUw+PGh0bWw+PGhlYWQ+PHRpdGxlPkhhcHA8L3RpdGxlPjwvaGVhZD48Ym9keT48aDE+SGVsbG8gV29ybGQ8L2gxPjwvYm9keT48L2h0bWw+"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Could not determine or validate content type. Please provide an explicit content_type."
    }
  },
  {
    "step": {
      "step_id": "auto_detect_pdf",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\道路交通安全违法行为处理程序规定.pdf"
      },
      "description": "Happy path: Test PDF conversion without explicit content type to verify auto-detection works correctly."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\道路交通安全违法行为处理程序规定.pdf"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Conversion failed: StreamInfo.__init__() got an unexpected keyword argument 'name'"
    }
  },
  {
    "step": {
      "step_id": "docx_with_explicit_type",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\推荐报名表.doc",
        "content_type": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
      },
      "description": "Happy path: Convert DOCX file with explicit content type to ensure Word document support."
    },
    "substituted_params": {
      "content_source": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\推荐报名表.doc",
      "content_type": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Conversion failed: StreamInfo.__init__() got an unexpected keyword argument 'name'"
    }
  },
  {
    "step": {
      "step_id": "corrupted_data_uri",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_source": "data:text/plain;base64,invalidbase64data123!@#"
      },
      "description": "Edge case: Test corrupted base64 data URI to check error handling for malformed data URIs."
    },
    "substituted_params": {
      "content_source": "data:text/plain;base64,invalidbase64data123!@#"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool convert_to_markdown: Could not determine or validate content type. Please provide an explicit content_type."
    }
  }
]