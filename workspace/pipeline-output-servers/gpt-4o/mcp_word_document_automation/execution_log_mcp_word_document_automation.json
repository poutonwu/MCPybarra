[
  {
    "step": {
      "step_id": "create_new_document",
      "tool_name": "create_document",
      "parameters": {},
      "description": "Happy path: Create a new document and capture the file path."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document created successfully\", \"file_path\": \"new_document.docx\"}"
    }
  },
  {
    "step": {
      "step_id": "add_paragraph_to_document",
      "tool_name": "add_paragraph",
      "parameters": {
        "text": "This is a test paragraph for the MCP Word Document Automation tool."
      },
      "description": "Dependent call: Add a paragraph to the newly created document."
    },
    "substituted_params": {
      "text": "This is a test paragraph for the MCP Word Document Automation tool."
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Paragraph added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_heading_to_document",
      "tool_name": "add_heading",
      "parameters": {
        "text": "Test Heading Level 1",
        "level": 1
      },
      "description": "Dependent call: Add a heading to the document after adding a paragraph."
    },
    "substituted_params": {
      "text": "Test Heading Level 1",
      "level": 1
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Heading added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_table_to_document",
      "tool_name": "add_table",
      "parameters": {
        "rows": 3,
        "columns": 2
      },
      "description": "Dependent call: Add a table with 3 rows and 2 columns to the document."
    },
    "substituted_params": {
      "rows": 3,
      "columns": 2
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Table added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_page_break_to_document",
      "tool_name": "add_page_break",
      "parameters": {},
      "description": "Dependent call: Add a page break after the table."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"message\": \"Page break added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "save_current_document",
      "tool_name": "save_document",
      "parameters": {},
      "description": "Dependent call: Save the current document to disk."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
    }
  },
  {
    "step": {
      "step_id": "save_document_as_new_name",
      "tool_name": "save_as_document",
      "parameters": {
        "new_file_path": "saved_as_document.docx"
      },
      "description": "Dependent call: Save the document under a new name."
    },
    "substituted_params": {
      "new_file_path": "saved_as_document.docx"
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_as_document.docx\"}"
    }
  },
  {
    "step": {
      "step_id": "create_document_copy",
      "tool_name": "create_document_copy",
      "parameters": {
        "copy_file_path": "copied_document.docx"
      },
      "description": "Dependent call: Create a copy of the current document."
    },
    "substituted_params": {
      "copy_file_path": "copied_document.docx"
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document copied successfully\", \"file_path\": \"copied_document.docx\"}"
    }
  },
  {
    "step": {
      "step_id": "open_existing_document",
      "tool_name": "open_document",
      "parameters": {
        "file_path": "$outputs.create_new_document.file_path"
      },
      "description": "Dependent call: Open the previously created document again."
    },
    "substituted_params": {
      "file_path": "new_document.docx"
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document opened successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_invalid_paragraph",
      "tool_name": "add_paragraph",
      "parameters": {
        "text": ""
      },
      "description": "Edge case: Attempt to add an empty paragraph to test error handling."
    },
    "substituted_params": {
      "text": ""
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Paragraph added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_invalid_heading",
      "tool_name": "add_heading",
      "parameters": {
        "text": "",
        "level": 0
      },
      "description": "Edge case: Attempt to add an invalid heading (empty text, invalid level)."
    },
    "substituted_params": {
      "text": "",
      "level": 0
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Heading added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "add_invalid_table",
      "tool_name": "add_table",
      "parameters": {
        "rows": -1,
        "columns": -1
      },
      "description": "Edge case: Attempt to add a table with negative dimensions to test error handling."
    },
    "substituted_params": {
      "rows": -1,
      "columns": -1
    },
    "result": {
      "status": "success",
      "result": "{\"message\": \"Table added successfully\"}"
    }
  },
  {
    "step": {
      "step_id": "save_document_with_no_open",
      "tool_name": "save_document",
      "parameters": {},
      "description": "Edge case: Attempt to save without any document open to test error handling."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"message\": \"Document saved successfully\", \"file_path\": \"saved_document.docx\"}"
    }
  },
  {
    "step": {
      "step_id": "open_nonexistent_document",
      "tool_name": "open_document",
      "parameters": {
        "file_path": "nonexistent.docx"
      },
      "description": "Edge case: Attempt to open a non-existent file to test error handling."
    },
    "substituted_params": {
      "file_path": "nonexistent.docx"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Package not found at 'nonexistent.docx'\"}"
    }
  }
]