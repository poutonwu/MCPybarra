[
  {
    "step": {
      "step_id": "connect_ssh",
      "tool_name": "connect",
      "parameters": {
        "hostname": "localhost",
        "username": "testuser",
        "password": "testpass"
      },
      "description": "Happy path: Establish an SSH connection using username/password authentication."
    },
    "substituted_params": {
      "hostname": "localhost",
      "username": "testuser",
      "password": "testpass"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool connect: [Errno None] Unable to connect to port 22 on 127.0.0.1 or ::1"
    }
  },
  {
    "step": {
      "step_id": "list_sessions_after_connect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Verify that the session created in 'connect_ssh' appears in active sessions."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"sessions\": []}"
    }
  },
  {
    "step": {
      "step_id": "execute_command",
      "tool_name": "execute",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "command": "echo Hello, World!"
      },
      "description": "Dependent call: Execute a simple command on the established SSH session."
    },
    "substituted_params": {
      "session_id": null,
      "command": "echo Hello, World!"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "upload_file",
      "tool_name": "upload",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "local_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\执行结果文本.txt",
        "remote_path": "/tmp/执行结果文本.txt"
      },
      "description": "Dependent call: Upload a test file to the remote server."
    },
    "substituted_params": {
      "session_id": null,
      "local_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\执行结果文本.txt",
      "remote_path": "/tmp/执行结果文本.txt"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "download_file",
      "tool_name": "download",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "remote_path": "/tmp/执行结果文本.txt",
        "local_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\下载_执行结果文本.txt"
      },
      "description": "Dependent call: Download the previously uploaded file back to local machine."
    },
    "substituted_params": {
      "session_id": null,
      "remote_path": "/tmp/执行结果文本.txt",
      "local_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\下载_执行结果文本.txt"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "disconnect_session",
      "tool_name": "disconnect",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id"
      },
      "description": "Dependent call: Close the SSH session after completing operations."
    },
    "substituted_params": {
      "session_id": null
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "list_sessions_after_disconnect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Verify that the session was removed from active sessions after disconnection."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"sessions\": []}"
    }
  },
  {
    "step": {
      "step_id": "connect_with_private_key",
      "tool_name": "connect",
      "parameters": {
        "hostname": "localhost",
        "username": "testuser",
        "private_key_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\testkey.pem"
      },
      "description": "Edge case: Attempt connection using a private key file (assumes file exists but may fail if not configured)."
    },
    "substituted_params": {
      "hostname": "localhost",
      "username": "testuser",
      "private_key_path": "D:\\pbc_course\\MCPServer-Generator\\testSystem\\testFiles\\testkey.pem"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool connect: [Errno None] Unable to connect to port 22 on 127.0.0.1 or ::1"
    }
  },
  {
    "step": {
      "step_id": "connect_invalid_hostname",
      "tool_name": "connect",
      "parameters": {
        "hostname": "invalid.hostname.example",
        "username": "testuser",
        "password": "testpass"
      },
      "description": "Edge case: Attempt connection to a non-existent hostname."
    },
    "substituted_params": {
      "hostname": "invalid.hostname.example",
      "username": "testuser",
      "password": "testpass"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool connect: [Errno 11001] getaddrinfo failed"
    }
  },
  {
    "step": {
      "step_id": "connect_missing_credentials",
      "tool_name": "connect",
      "parameters": {
        "hostname": "localhost",
        "username": "testuser"
      },
      "description": "Edge case: Attempt connection without providing password or private key."
    },
    "substituted_params": {
      "hostname": "localhost",
      "username": "testuser"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool connect: [Errno None] Unable to connect to port 22 on 127.0.0.1 or ::1"
    }
  },
  {
    "step": {
      "step_id": "disconnect_invalid_session",
      "tool_name": "disconnect",
      "parameters": {
        "session_id": "nonexistent_session"
      },
      "description": "Edge case: Attempt to disconnect an invalid session ID."
    },
    "substituted_params": {
      "session_id": "nonexistent_session"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
    }
  },
  {
    "step": {
      "step_id": "execute_invalid_session",
      "tool_name": "execute",
      "parameters": {
        "session_id": "nonexistent_session",
        "command": "echo This should fail"
      },
      "description": "Edge case: Attempt to execute command on an invalid session."
    },
    "substituted_params": {
      "session_id": "nonexistent_session",
      "command": "echo This should fail"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
    }
  },
  {
    "step": {
      "step_id": "upload_invalid_paths",
      "tool_name": "upload",
      "parameters": {
        "session_id": "nonexistent_session",
        "local_path": "invalid/local/path.txt",
        "remote_path": "/invalid/remote/path.txt"
      },
      "description": "Edge case: Attempt upload with invalid session and file paths."
    },
    "substituted_params": {
      "session_id": "nonexistent_session",
      "local_path": "invalid/local/path.txt",
      "remote_path": "/invalid/remote/path.txt"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
    }
  },
  {
    "step": {
      "step_id": "download_invalid_paths",
      "tool_name": "download",
      "parameters": {
        "session_id": "nonexistent_session",
        "remote_path": "/invalid/remote/path.txt",
        "local_path": "invalid/local/path.txt"
      },
      "description": "Edge case: Attempt download with invalid session and file paths."
    },
    "substituted_params": {
      "session_id": "nonexistent_session",
      "remote_path": "/invalid/remote/path.txt",
      "local_path": "invalid/local/path.txt"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid session ID\", \"details\": \"Invalid session ID\"}"
    }
  }
]