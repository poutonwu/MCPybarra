[
  {
    "step": {
      "step_id": "convert_http_webpage",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "https://example.com",
        "content_type": "http"
      },
      "description": "Happy path: Convert a valid HTTP webpage to Markdown."
    },
    "substituted_params": {
      "content_url": "https://example.com",
      "content_type": "http"
    },
    "result": {
      "status": "success",
      "result": "{\"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: '<!doctype html>\\\\n<html>\\\\n<head>\\\\n    <title>Example Domain</title>\\\\n\\\\n    <meta charset=\\\"utf-8\\\" />\\\\n    <meta http-equiv=\\\"Content-type\\\" content=\\\"text/html; charset=utf-8\\\" />\\\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\\\n    <style type=\\\"text/css\\\">\\\\n    body {\\\\n        background-color: #f0f0f2;\\\\n        margin: 0;\\\\n        padding: 0;\\\\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\\\n        \\\\n    }\\\\n    div {\\\\n        width: 600px;\\\\n        margin: 5em auto;\\\\n        padding: 2em;\\\\n        background-color: #fdfdff;\\\\n        border-radius: 0.5em;\\\\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\\\n    }\\\\n    a:link, a:visited {\\\\n        color: #38488f;\\\\n        text-decoration: none;\\\\n    }\\\\n    @media (max-width: 700px) {\\\\n        div {\\\\n            margin: 0 auto;\\\\n            width: auto;\\\\n ...\", \"__truncation_alert__\": \"This JSON object has been intelligently truncated to save space. Lists may be shortened.\", \"__adapter_truncation_note__\": \"NOTE: This truncation is due to the MCP adapter's output length limit, NOT an issue with the tool itself.\"}"
    }
  },
  {
    "step": {
      "step_id": "convert_https_webpage",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "https://example.com",
        "content_type": "https"
      },
      "description": "Happy path: Convert a valid HTTPS webpage to Markdown."
    },
    "substituted_params": {
      "content_url": "https://example.com",
      "content_type": "https"
    },
    "result": {
      "status": "success",
      "result": "{\"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: '<!doctype html>\\\\n<html>\\\\n<head>\\\\n    <title>Example Domain</title>\\\\n\\\\n    <meta charset=\\\"utf-8\\\" />\\\\n    <meta http-equiv=\\\"Content-type\\\" content=\\\"text/html; charset=utf-8\\\" />\\\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\\\n    <style type=\\\"text/css\\\">\\\\n    body {\\\\n        background-color: #f0f0f2;\\\\n        margin: 0;\\\\n        padding: 0;\\\\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\\\n        \\\\n    }\\\\n    div {\\\\n        width: 600px;\\\\n        margin: 5em auto;\\\\n        padding: 2em;\\\\n        background-color: #fdfdff;\\\\n        border-radius: 0.5em;\\\\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\\\n    }\\\\n    a:link, a:visited {\\\\n        color: #38488f;\\\\n        text-decoration: none;\\\\n    }\\\\n    @media (max-width: 700px) {\\\\n        div {\\\\n            margin: 0 auto;\\\\n            width: auto;\\\\n ...\", \"__truncation_alert__\": \"This JSON object has been intelligently truncated to save space. Lists may be shortened.\", \"__adapter_truncation_note__\": \"NOTE: This truncation is due to the MCP adapter's output length limit, NOT an issue with the tool itself.\"}"
    }
  },
  {
    "step": {
      "step_id": "convert_local_file",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\present.html",
        "content_type": "file"
      },
      "description": "Happy path: Convert a local HTML file to Markdown."
    },
    "substituted_params": {
      "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\present.html",
      "content_type": "file"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 22] Invalid argument: '<!DOCTYPE html>\\\\n<html lang=\\\"zh-CN\\\">\\\\n<p>使用utf-8编码插入的HTML段落</p>\\\\n\\\\n<!-- 插入的注释 -->\\\\n'\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_data_uri",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==",
        "content_type": "data_uri"
      },
      "description": "Happy path: Convert a base64-encoded data URI to Markdown."
    },
    "substituted_params": {
      "content_url": "data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==",
      "content_type": "data_uri"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: [Errno 2] No such file or directory: 'Hello, World!'\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_invalid_content_type",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "https://example.com",
        "content_type": "ftp"
      },
      "description": "Edge case: Test with an invalid content_type (e.g., 'ftp'). Should raise ValueError."
    },
    "substituted_params": {
      "content_url": "https://example.com",
      "content_type": "ftp"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: Invalid content_type: ftp. Must be one of ['http', 'https', 'file', 'data_uri'].\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_nonexistent_file",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.html",
        "content_type": "file"
      },
      "description": "Edge case: Attempt to convert a non-existent file. Should raise FileNotFoundError."
    },
    "substituted_params": {
      "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.html",
      "content_type": "file"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: The file 'D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.html' does not exist.\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_invalid_data_uri",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "invalid_data_uri_format",
        "content_type": "data_uri"
      },
      "description": "Edge case: Test with an improperly formatted data URI. Should raise ValueError."
    },
    "substituted_params": {
      "content_url": "invalid_data_uri_format",
      "content_type": "data_uri"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: Invalid data URI format.\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_large_file",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
        "content_type": "file"
      },
      "description": "Edge case: Convert a large file to test performance and handling of larger inputs."
    },
    "substituted_params": {
      "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\whole_framework.pdf",
      "content_type": "file"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: function takes exactly 5 arguments (1 given)\"\n}"
    }
  },
  {
    "step": {
      "step_id": "convert_binary_file_utf8_error",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
        "content_type": "file"
      },
      "description": "Edge case: Attempt to convert a binary file (not text-based) which should raise UnicodeDecodeError."
    },
    "substituted_params": {
      "content_url": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nature.jpeg",
      "content_type": "file"
    },
    "result": {
      "status": "error",
      "result": "{\n  \"error\": \"An error occurred during conversion: function takes exactly 5 arguments (1 given)\"\n}"
    }
  },
  {
    "step": {
      "step_id": "use_converted_result_for_later_step",
      "tool_name": "convert_to_markdown",
      "parameters": {
        "content_url": "$outputs.convert_http_webpage.result",
        "content_type": "data_uri"
      },
      "description": "Dependent call: Use the result from a previous conversion as input for another conversion. This tests if the output can be reused correctly as a data URI."
    },
    "substituted_params": {
      "content_url": null,
      "content_type": "data_uri"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.convert_http_webpage.result'"
    }
  }
]