[
  {
    "step": {
      "step_id": "get_company_profile_valid",
      "tool_name": "get_company_profile",
      "parameters": {
        "ticker": "AAPL"
      },
      "description": "Happy path: Retrieve company profile for Apple (AAPL)."
    },
    "substituted_params": {
      "ticker": "AAPL"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_income_statements_annual",
      "tool_name": "get_income_statements",
      "parameters": {
        "ticker": "$outputs.get_company_profile_valid.ticker",
        "period": "annual",
        "limit": 3
      },
      "description": "Dependent call: Get annual income statements using ticker from previous step."
    },
    "substituted_params": {
      "ticker": null,
      "period": "annual",
      "limit": 3
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.get_company_profile_valid.ticker'"
    }
  },
  {
    "step": {
      "step_id": "get_balance_sheets_quarterly",
      "tool_name": "get_balance_sheets",
      "parameters": {
        "ticker": "$outputs.get_company_profile_valid.ticker",
        "period": "quarterly",
        "limit": 4
      },
      "description": "Dependent call: Get quarterly balance sheets using the same ticker."
    },
    "substituted_params": {
      "ticker": null,
      "period": "quarterly",
      "limit": 4
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.get_company_profile_valid.ticker'"
    }
  },
  {
    "step": {
      "step_id": "get_cash_flows_annual",
      "tool_name": "get_cash_flows",
      "parameters": {
        "ticker": "$outputs.get_company_profile_valid.ticker",
        "period": "annual",
        "limit": 5
      },
      "description": "Dependent call: Get annual cash flow statements using the same ticker."
    },
    "substituted_params": {
      "ticker": null,
      "period": "annual",
      "limit": 5
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.get_company_profile_valid.ticker'"
    }
  },
  {
    "step": {
      "step_id": "get_stock_prices_valid_range",
      "tool_name": "get_stock_prices",
      "parameters": {
        "ticker": "TSLA",
        "start_date": "2023-01-01",
        "end_date": "2023-01-31"
      },
      "description": "Happy path: Retrieve historical stock prices for Tesla (TSLA) for a valid date range."
    },
    "substituted_params": {
      "ticker": "TSLA",
      "start_date": "2023-01-01",
      "end_date": "2023-01-31"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_market_news_for_ticker",
      "tool_name": "get_market_news",
      "parameters": {
        "ticker": "NVDA"
      },
      "description": "Happy path: Retrieve recent market news for NVIDIA (NVDA)."
    },
    "substituted_params": {
      "ticker": "NVDA"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_analyst_estimates",
      "tool_name": "get_analyst_estimates",
      "parameters": {
        "ticker": "NFLX"
      },
      "description": "Happy path: Retrieve analyst estimates for Netflix (NFLX)."
    },
    "substituted_params": {
      "ticker": "NFLX"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_dividend_history_valid",
      "tool_name": "get_dividend_history",
      "parameters": {
        "ticker": "KO"
      },
      "description": "Happy path: Retrieve dividend history for Coca-Cola (KO)."
    },
    "substituted_params": {
      "ticker": "KO"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_splits_history_valid",
      "tool_name": "get_splits_history",
      "parameters": {
        "ticker": "AAPL"
      },
      "description": "Happy path: Retrieve stock splits history for Apple (AAPL)."
    },
    "substituted_params": {
      "ticker": "AAPL"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_earnings_history_valid",
      "tool_name": "get_earnings_history",
      "parameters": {
        "ticker": "META"
      },
      "description": "Happy path: Retrieve earnings history for Meta (META)."
    },
    "substituted_params": {
      "ticker": "META"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_financial_ratios_valid",
      "tool_name": "get_financial_ratios",
      "parameters": {
        "ticker": "JPM"
      },
      "description": "Happy path: Retrieve financial ratios for JPMorgan (JPM)."
    },
    "substituted_params": {
      "ticker": "JPM"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'JPM'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_ownership_data_valid",
      "tool_name": "get_ownership_data",
      "parameters": {
        "ticker": "BRK-A"
      },
      "description": "Happy path: Retrieve ownership data for Berkshire Hathaway (BRK-A)."
    },
    "substituted_params": {
      "ticker": "BRK-A"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_income_statements_invalid_period",
      "tool_name": "get_income_statements",
      "parameters": {
        "ticker": "GOOGL",
        "period": "monthly",
        "limit": 4
      },
      "description": "Edge case: Test invalid period input. Should return an error."
    },
    "substituted_params": {
      "ticker": "GOOGL",
      "period": "monthly",
      "limit": 4
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Period must be either 'annual' or 'quarterly'.\"}"
    }
  },
  {
    "step": {
      "step_id": "get_balance_sheets_invalid_limit",
      "tool_name": "get_balance_sheets",
      "parameters": {
        "ticker": "MSFT",
        "period": "annual",
        "limit": -2
      },
      "description": "Edge case: Test negative limit value. Should return an error."
    },
    "substituted_params": {
      "ticker": "MSFT",
      "period": "annual",
      "limit": -2
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Limit must be a positive integer.\"}"
    }
  },
  {
    "step": {
      "step_id": "get_stock_prices_invalid_dates",
      "tool_name": "get_stock_prices",
      "parameters": {
        "ticker": "AMZN",
        "start_date": "2025-01-01",
        "end_date": "2024-01-01"
      },
      "description": "Edge case: Start date after end date. Should return no data or error."
    },
    "substituted_params": {
      "ticker": "AMZN",
      "start_date": "2025-01-01",
      "end_date": "2024-01-01"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AMZN'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_company_profile_invalid_ticker",
      "tool_name": "get_company_profile",
      "parameters": {
        "ticker": "XYZ123"
      },
      "description": "Edge case: Invalid ticker symbol. Should return an error."
    },
    "substituted_params": {
      "ticker": "XYZ123"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'XYZ123'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_market_news_invalid_ticker",
      "tool_name": "get_market_news",
      "parameters": {
        "ticker": ""
      },
      "description": "Edge case: Empty ticker input. Should return an error."
    },
    "substituted_params": {
      "ticker": ""
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
    }
  }
]