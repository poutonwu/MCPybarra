[
  {
    "step": {
      "step_id": "get_company_profile_happy_path",
      "tool_name": "get_company_profile",
      "parameters": {
        "ticker": "AAPL"
      },
      "description": "Happy path: Get company profile for Apple Inc. (AAPL). This is expected to return valid company data including sector, industry, and summary."
    },
    "substituted_params": {
      "ticker": "AAPL"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
    }
  },
  {
    "step": {
      "step_id": "validate_ticker_from_profile",
      "tool_name": "get_income_statements",
      "parameters": {
        "ticker": "$outputs.get_company_profile_happy_path.symbol"
      },
      "description": "Dependent call: Use the ticker symbol returned from get_company_profile to fetch income statements. Validates that the ticker is valid and used across multiple tools."
    },
    "substituted_params": {
      "ticker": null
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.get_company_profile_happy_path.symbol'"
    }
  },
  {
    "step": {
      "step_id": "get_balance_sheets_with_period_limit",
      "tool_name": "get_balance_sheets",
      "parameters": {
        "ticker": "MSFT",
        "period": "quarterly",
        "limit": 4
      },
      "description": "Happy path: Fetch quarterly balance sheets for Microsoft (MSFT) with a limit of 4 reports."
    },
    "substituted_params": {
      "ticker": "MSFT",
      "period": "quarterly",
      "limit": 4
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'MSFT'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_cash_flows_annual_default_limit",
      "tool_name": "get_cash_flows",
      "parameters": {
        "ticker": "GOOGL"
      },
      "description": "Happy path: Fetch annual cash flow statements for Google (GOOGL) using default limit of 4."
    },
    "substituted_params": {
      "ticker": "GOOGL"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'GOOGL'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_stock_prices_date_range",
      "tool_name": "get_stock_prices",
      "parameters": {
        "ticker": "TSLA",
        "start_date": "2023-01-01",
        "end_date": "2023-01-31"
      },
      "description": "Happy path: Retrieve historical stock prices for Tesla (TSLA) for January 2023."
    },
    "substituted_params": {
      "ticker": "TSLA",
      "start_date": "2023-01-01",
      "end_date": "2023-01-31"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_market_news_for_ticker",
      "tool_name": "get_market_news",
      "parameters": {
        "ticker": "NVDA"
      },
      "description": "Happy path: Retrieve recent news articles related to NVIDIA (NVDA)."
    },
    "substituted_params": {
      "ticker": "NVDA"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NVDA'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_analyst_estimates",
      "tool_name": "get_analyst_estimates",
      "parameters": {
        "ticker": "NFLX"
      },
      "description": "Happy path: Retrieve analyst recommendations and ratings for Netflix (NFLX)."
    },
    "substituted_params": {
      "ticker": "NFLX"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'NFLX'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_dividend_history_valid_ticker",
      "tool_name": "get_dividend_history",
      "parameters": {
        "ticker": "KO"
      },
      "description": "Happy path: Retrieve dividend history for Coca-Cola (KO)."
    },
    "substituted_params": {
      "ticker": "KO"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'KO'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_splits_history_valid_ticker",
      "tool_name": "get_splits_history",
      "parameters": {
        "ticker": "AAPL"
      },
      "description": "Happy path: Retrieve stock split history for Apple (AAPL)."
    },
    "substituted_params": {
      "ticker": "AAPL"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'AAPL'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_earnings_history_valid_ticker",
      "tool_name": "get_earnings_history",
      "parameters": {
        "ticker": "META"
      },
      "description": "Happy path: Retrieve earnings history for Meta Platforms (META)."
    },
    "substituted_params": {
      "ticker": "META"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'META'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_financial_ratios_valid_ticker",
      "tool_name": "get_financial_ratios",
      "parameters": {
        "ticker": "JPM"
      },
      "description": "Happy path: Retrieve key financial ratios for JPMorgan Chase (JPM)."
    },
    "substituted_params": {
      "ticker": "JPM"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'JPM'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_ownership_data_valid_ticker",
      "tool_name": "get_ownership_data",
      "parameters": {
        "ticker": "BRK-A"
      },
      "description": "Happy path: Retrieve ownership structure for Berkshire Hathaway Class A shares (BRK-A)."
    },
    "substituted_params": {
      "ticker": "BRK-A"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'BRK-A'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_income_statements_invalid_ticker",
      "tool_name": "get_income_statements",
      "parameters": {
        "ticker": "INVALID-TICKER"
      },
      "description": "Edge case: Attempt to retrieve income statements for an invalid ticker symbol to test error handling."
    },
    "substituted_params": {
      "ticker": "INVALID-TICKER"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'INVALID-TICKER'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_balance_sheets_invalid_period",
      "tool_name": "get_balance_sheets",
      "parameters": {
        "ticker": "MSFT",
        "period": "monthly"
      },
      "description": "Edge case: Attempt to retrieve balance sheets with unsupported period 'monthly' to test validation logic."
    },
    "substituted_params": {
      "ticker": "MSFT",
      "period": "monthly"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Period must be either 'annual' or 'quarterly'.\"}"
    }
  },
  {
    "step": {
      "step_id": "get_cash_flows_negative_limit",
      "tool_name": "get_cash_flows",
      "parameters": {
        "ticker": "GOOGL",
        "limit": -1
      },
      "description": "Edge case: Attempt to retrieve cash flows with negative limit to test input validation."
    },
    "substituted_params": {
      "ticker": "GOOGL",
      "limit": -1
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Limit must be a positive integer.\"}"
    }
  },
  {
    "step": {
      "step_id": "get_stock_prices_future_dates",
      "tool_name": "get_stock_prices",
      "parameters": {
        "ticker": "TSLA",
        "start_date": "2099-01-01",
        "end_date": "2099-01-31"
      },
      "description": "Edge case: Request stock prices for future dates to test how server handles out-of-range date inputs."
    },
    "substituted_params": {
      "ticker": "TSLA",
      "start_date": "2099-01-01",
      "end_date": "2099-01-31"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Invalid or unknown ticker symbol: 'TSLA'\"}"
    }
  },
  {
    "step": {
      "step_id": "get_market_news_empty_ticker",
      "tool_name": "get_market_news",
      "parameters": {
        "ticker": ""
      },
      "description": "Edge case: Attempt to retrieve market news with empty ticker string to test validation logic."
    },
    "substituted_params": {
      "ticker": ""
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Ticker symbol must be a non-empty string.\"}"
    }
  }
]