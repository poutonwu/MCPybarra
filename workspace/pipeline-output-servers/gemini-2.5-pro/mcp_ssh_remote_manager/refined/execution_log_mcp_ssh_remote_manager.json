[
  {
    "step": {
      "step_id": "connect_ssh",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.7.63",
        "port": 26002,
        "username": "pengbocheng",
        "password": "123456"
      },
      "description": "Happy path: Establish an SSH connection using default credentials."
    },
    "substituted_params": {
      "hostname": "10.70.7.63",
      "port": 26002,
      "username": "pengbocheng",
      "password": "123456"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Connection timed out while resolving hostname.\"}"
    }
  },
  {
    "step": {
      "step_id": "list_sessions_after_connect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Verify that the newly created session appears in active sessions."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"active_sessions\": []}"
    }
  },
  {
    "step": {
      "step_id": "execute_command_success",
      "tool_name": "execute",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "command": "echo 'Hello from remote server'"
      },
      "description": "Dependent call: Execute a simple echo command on the connected SSH session."
    },
    "substituted_params": {
      "session_id": null,
      "command": "echo 'Hello from remote server'"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "upload_file_to_server",
      "tool_name": "upload",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\执行结果文本.txt",
        "remote_path": "/tmp/执行结果文本.txt"
      },
      "description": "Dependent call: Upload a test file to the remote server."
    },
    "substituted_params": {
      "session_id": null,
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\执行结果文本.txt",
      "remote_path": "/tmp/执行结果文本.txt"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "download_file_from_server",
      "tool_name": "download",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "remote_path": "/tmp/执行结果文本.txt",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\下载执行结果文本.txt"
      },
      "description": "Dependent call: Download the previously uploaded file back to local machine."
    },
    "substituted_params": {
      "session_id": null,
      "remote_path": "/tmp/执行结果文本.txt",
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\下载执行结果文本.txt"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "disconnect_session",
      "tool_name": "disconnect",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id"
      },
      "description": "Dependent call: Terminate the established SSH session."
    },
    "substituted_params": {
      "session_id": null
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "list_sessions_after_disconnect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Verify that the session list is empty after disconnecting."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\"active_sessions\": []}"
    }
  },
  {
    "step": {
      "step_id": "connect_with_invalid_password",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.7.63",
        "port": 26002,
        "username": "pengbocheng",
        "password": "wrong_password"
      },
      "description": "Edge case: Attempt to connect with incorrect password."
    },
    "substituted_params": {
      "hostname": "10.70.7.63",
      "port": 26002,
      "username": "pengbocheng",
      "password": "wrong_password"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Connection timed out while resolving hostname.\"}"
    }
  },
  {
    "step": {
      "step_id": "connect_with_timeout",
      "tool_name": "connect",
      "parameters": {
        "hostname": "invalid.hostname.example",
        "port": 22,
        "username": "user",
        "password": "pass",
        "timeout": 3
      },
      "description": "Edge case: Test connection timeout behavior with unreachable host."
    },
    "substituted_params": {
      "hostname": "invalid.hostname.example",
      "port": 22,
      "username": "user",
      "password": "pass",
      "timeout": 3
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"[Errno 11001] getaddrinfo failed\"}"
    }
  },
  {
    "step": {
      "step_id": "execute_on_disconnected_session",
      "tool_name": "execute",
      "parameters": {
        "session_id": "$outputs.connect_ssh.session_id",
        "command": "whoami"
      },
      "description": "Edge case: Attempt to execute a command on a disconnected (nonexistent) session."
    },
    "substituted_params": {
      "session_id": null,
      "command": "whoami"
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: '$outputs.connect_ssh.session_id'"
    }
  },
  {
    "step": {
      "step_id": "disconnect_nonexistent_session",
      "tool_name": "disconnect",
      "parameters": {
        "session_id": "non-existent-session-id"
      },
      "description": "Edge case: Attempt to disconnect a session that doesn't exist."
    },
    "substituted_params": {
      "session_id": "non-existent-session-id"
    },
    "result": {
      "status": "error",
      "result": "{\"error\": \"Session not found\"}"
    }
  }
]