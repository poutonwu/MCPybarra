[
  {
    "step": {
      "step_id": "connect_ssh",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.5.21",
        "username": "pengbocheng",
        "password": "123456",
        "port": 26002
      },
      "description": "Happy path: Establish an SSH connection to the default host."
    },
    "substituted_params": {
      "hostname": "10.70.5.21",
      "username": "pengbocheng",
      "password": "123456",
      "port": 26002
    },
    "result": {
      "status": "success",
      "result": "session_1"
    }
  },
  {
    "step": {
      "step_id": "verify_session_list_after_connect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Dependent call: Verify that the session appears in active sessions after connect."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "{\n  \"session_id\": \"session_1\",\n  \"hostname\": \"10.70.5.21\",\n  \"username\": \"pengbocheng\",\n  \"status\": \"active\"\n}"
    }
  },
  {
    "step": {
      "step_id": "execute_simple_command",
      "tool_name": "execute",
      "parameters": {
        "session_id": "$outputs.connect_ssh",
        "command": "echo 'Hello from SSH'"
      },
      "description": "Dependent call: Execute a simple echo command on the connected SSH session."
    },
    "substituted_params": {
      "session_id": "session_1",
      "command": "echo 'Hello from SSH'"
    },
    "result": {
      "status": "success",
      "result": "{\n  \"stdout\": \"Hello from SSH\",\n  \"stderr\": \"\",\n  \"exit_status\": 0\n}"
    }
  },
  {
    "step": {
      "step_id": "upload_file_to_server",
      "tool_name": "upload",
      "parameters": {
        "session_id": "$outputs.connect_ssh",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf",
        "remote_path": "/tmp/sample1.pdf"
      },
      "description": "Dependent call: Upload a local file to the remote server."
    },
    "substituted_params": {
      "session_id": "session_1",
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf",
      "remote_path": "/tmp/sample1.pdf"
    },
    "result": {
      "status": "success",
      "result": "File D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sample1.pdf uploaded to /tmp/sample1.pdf successfully."
    }
  },
  {
    "step": {
      "step_id": "download_file_from_server",
      "tool_name": "download",
      "parameters": {
        "session_id": "$outputs.connect_ssh",
        "remote_path": "/tmp/sample1.pdf",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_sample1.pdf"
      },
      "description": "Dependent call: Download the previously uploaded file back from the server."
    },
    "substituted_params": {
      "session_id": "session_1",
      "remote_path": "/tmp/sample1.pdf",
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_sample1.pdf"
    },
    "result": {
      "status": "success",
      "result": "File /tmp/sample1.pdf downloaded to D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_sample1.pdf successfully."
    }
  },
  {
    "step": {
      "step_id": "disconnect_ssh",
      "tool_name": "disconnect",
      "parameters": {
        "session_id": "$outputs.connect_ssh"
      },
      "description": "Dependent call: Disconnect the established SSH session."
    },
    "substituted_params": {
      "session_id": "session_1"
    },
    "result": {
      "status": "success",
      "result": "Session session_1 disconnected successfully."
    }
  },
  {
    "step": {
      "step_id": "verify_session_list_after_disconnect",
      "tool_name": "list_sessions",
      "parameters": {},
      "description": "Dependent call: Ensure the disconnected session no longer appears in active sessions."
    },
    "substituted_params": {},
    "result": {
      "status": "success",
      "result": "No output returned."
    }
  },
  {
    "step": {
      "step_id": "connect_with_invalid_password",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.5.21",
        "username": "pengbocheng",
        "password": "wrong_password",
        "port": 26002
      },
      "description": "Edge case: Attempt to connect with an incorrect password and expect failure."
    },
    "substituted_params": {
      "hostname": "10.70.5.21",
      "username": "pengbocheng",
      "password": "wrong_password",
      "port": 26002
    },
    "result": {
      "status": "success",
      "result": "session_1"
    }
  },
  {
    "step": {
      "step_id": "connect_with_missing_private_key",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.5.21",
        "username": "pengbocheng",
        "private_key": "nonexistent_key.pem",
        "port": 26002
      },
      "description": "Edge case: Attempt to connect using a missing private key file."
    },
    "substituted_params": {
      "hostname": "10.70.5.21",
      "username": "pengbocheng",
      "private_key": "nonexistent_key.pem",
      "port": 26002
    },
    "result": {
      "status": "error",
      "result": "Error executing tool connect: SSH connection failed: Private key file not found: nonexistent_key.pem"
    }
  },
  {
    "step": {
      "step_id": "connect_without_auth_method",
      "tool_name": "connect",
      "parameters": {
        "hostname": "10.70.5.21",
        "username": "pengbocheng",
        "password": null,
        "private_key": null,
        "port": 26002
      },
      "description": "Edge case: Attempt to connect without providing any authentication method."
    },
    "substituted_params": {
      "hostname": "10.70.5.21",
      "username": "pengbocheng",
      "password": null,
      "private_key": null,
      "port": 26002
    },
    "result": {
      "status": "error",
      "result": "A required parameter resolved to None, likely due to a failure in a dependency. Failed placeholder: 'None'"
    }
  },
  {
    "step": {
      "step_id": "execute_on_invalid_session",
      "tool_name": "execute",
      "parameters": {
        "session_id": "invalid_session_id",
        "command": "echo 'This should not run'"
      },
      "description": "Edge case: Try executing a command on a non-existent session ID."
    },
    "substituted_params": {
      "session_id": "invalid_session_id",
      "command": "echo 'This should not run'"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool execute: 'Session invalid_session_id not found.'"
    }
  },
  {
    "step": {
      "step_id": "upload_nonexistent_local_file",
      "tool_name": "upload",
      "parameters": {
        "session_id": "$outputs.connect_ssh",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
        "remote_path": "/tmp/nonexistent_file.txt"
      },
      "description": "Edge case: Attempt to upload a local file that does not exist."
    },
    "substituted_params": {
      "session_id": "session_1",
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt",
      "remote_path": "/tmp/nonexistent_file.txt"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool upload: Local file not found: D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_file.txt"
    }
  },
  {
    "step": {
      "step_id": "download_nonexistent_remote_file",
      "tool_name": "download",
      "parameters": {
        "session_id": "$outputs.connect_ssh",
        "remote_path": "/tmp/nonexistent_file.txt",
        "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nonexistent_file.txt"
      },
      "description": "Edge case: Attempt to download a remote file that does not exist."
    },
    "substituted_params": {
      "session_id": "session_1",
      "remote_path": "/tmp/nonexistent_file.txt",
      "local_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\downloaded_nonexistent_file.txt"
    },
    "result": {
      "status": "error",
      "result": "Error executing tool download: File download failed: [Errno 2] No such file"
    }
  }
]