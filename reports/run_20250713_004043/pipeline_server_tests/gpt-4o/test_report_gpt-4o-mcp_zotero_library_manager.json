{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_zotero_library_manager",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_zotero_library_manager/refined/server.py",
  "timestamp": "2025-07-13T00:43:30.993565",
  "tools": [
    {
      "name": "get_item_metadata",
      "description": "\n    Fetch detailed metadata of a Zotero item using its unique item key.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A JSON string containing item metadata, such as title, creators, publication year, and other bibliographic details.\n            Example:\n            {\n                \"title\": \"Sample Title\",\n                \"creators\": [\"John Doe\", \"Jane Smith\"],\n                \"year\": 2023,\n                \"publisher\": \"Sample Publisher\",\n                \"DOI\": \"10.1234/sample.doi\"\n            }\n\n    Raises:\n        ValueError: If the item key is invalid.\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_metadataArguments",
        "type": "object"
      }
    },
    {
      "name": "get_item_fulltext",
      "description": "\n    Extract the full text content of a Zotero item. If the item contains a PDF, extract text from the PDF file.\n\n    Args:\n        item_key (str): The unique key identifying the Zotero item.\n            Example: \"ABC123XYZ\"\n\n    Returns:\n        str: A string containing the extracted full text content of the item.\n            Example: \"This is the extracted full text content of the PDF associated with the Zotero item.\"\n\n    Raises:\n        ValueError: If the item key is invalid or no PDF attachment is found.\n        Exception: If the Zotero API call or PDF extraction fails.\n    ",
      "args_schema": {
        "properties": {
          "item_key": {
            "title": "Item Key",
            "type": "string"
          }
        },
        "required": [
          "item_key"
        ],
        "title": "get_item_fulltextArguments",
        "type": "object"
      }
    },
    {
      "name": "search_items",
      "description": "\n    Search the Zotero library based on specified criteria and return a list of formatted search results.\n\n    Args:\n        title (str, optional): Search by title.\n            Example: \"Sample Title\"\n        creators (str, optional): Search by creators.\n            Example: \"John Doe\"\n        year (int, optional): Search by publication year.\n            Example: 2023\n        fulltext (str, optional): Perform a full-text search.\n            Example: \"Keyword\"\n\n    Returns:\n        str: A JSON string containing a list of dictionaries, each containing metadata for a matching item.\n            Example:\n            [\n                {\n                    \"title\": \"Sample Title\",\n                    \"creators\": [\"John Doe\", \"Jane Smith\"],\n                    \"year\": 2023,\n                    \"DOI\": \"10.1234/sample.doi\"\n                },\n                {\n                    \"title\": \"Another Title\",\n                    \"creators\": [\"Alice Johnson\"],\n                    \"year\": 2022,\n                    \"DOI\": \"10.5678/another.doi\"\n                }\n            ]\n\n    Raises:\n        Exception: If the Zotero API call fails.\n    ",
      "args_schema": {
        "properties": {
          "title": {
            "default": null,
            "title": "Title",
            "type": "string"
          },
          "creators": {
            "default": null,
            "title": "Creators",
            "type": "string"
          },
          "year": {
            "default": null,
            "title": "Year",
            "type": "integer"
          },
          "fulltext": {
            "default": null,
            "title": "Fulltext",
            "type": "string"
          }
        },
        "title": "search_itemsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "search_items": [
      {
        "case_name": "Search by Title",
        "purpose": "Verify that the tool can search items by title and return matching results.",
        "args": {
          "title": "Sample Title"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 3.28387713432312,
        "is_functional_test": true
      },
      {
        "case_name": "Search by Creator",
        "purpose": "Verify that the tool can search items by creator name and return matching results.",
        "args": {
          "creators": "John Doe"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.8262183666229248,
        "is_functional_test": true
      },
      {
        "case_name": "Search by Year",
        "purpose": "Verify that the tool can search items by publication year and return matching results.",
        "args": {
          "year": 2023
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 1.45566725730896,
        "is_functional_test": true
      },
      {
        "case_name": "Fulltext Search",
        "purpose": "Verify that the tool can perform a full-text search with a given keyword.",
        "args": {
          "fulltext": "Keyword"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 1.0478429794311523,
        "is_functional_test": true
      },
      {
        "case_name": "Combined Search by Title and Creator",
        "purpose": "Verify that the tool can perform a combined search using both title and creator parameters.",
        "args": {
          "title": "Another Title",
          "creators": "Alice Johnson"
        },
        "response": {
          "result": "{\"status\": \"success\", \"data\": []}"
        },
        "execution_time": 0.9691059589385986,
        "is_functional_test": true
      },
      {
        "case_name": "Empty Search Returns No Results",
        "purpose": "Verify that when no parameters are provided, the tool returns an empty result set as expected.",
        "args": {},
        "response": {
          "result": "{\"status\": \"success\", \"data\": [{\"title\": \"CODESIM: Multi-Agent Code Generation and Problem Solving through Simulation-Driven Planning and Debugging\", \"creators\": [\"Islam\", \"Ali\", \"Parvez\"], \"year\": \"2025-02-08\", \"DOI\": \"10.48550/arXiv.2502.05664\"}, {\"title\": \"Self-Organized Agents: A LLM Multi-Agent Framework toward Ultra Large-Scale Code Generation and Optimization\", \"creators\": [\"Ishibashi\", \"Nishimura\"], \"year\": \"2024-04-02\", \"DOI\": \"10.48550/arXiv.2404.02183\"}, {\"title\": \"SWE-bench: Can Language Models Resolve Real-World GitHub Issues?\", \"creators\": [\"Jimenez\", \"Yang\", \"Wettig\", \"Yao\", \"Pei\", \"Press\", \"Narasimhan\"], \"year\": \"2024-11-11\", \"DOI\": \"10.48550/arXiv.2310.06770\"}, {\"title\": \"CodeAgent: Autonomous Communicative Agents for Code Review\", \"creators\": [\"Tang\", \"Kim\", \"Song\", \"Lothritz\", \"Li\", \"Ezzini\", \"Tian\", \"Klein\", \"Bissyande\"], \"year\": \"2024-09-24\", \"DOI\": \"10.48550/arXiv.2402.02172\"}, {\"title\": \"SOTOPIA: Interactive Evaluation for Social Intelligence in Language Agents\", \"creators\": [\"Zhou\", \"Zhu\", \"Mathur\", \"Zhang\", \"Yu\", \"Qi\", \"Morency\", \"Bisk\", \"Fried\", \"Neubig\", \"Sap\"], \"year\": \"2024-03-22\", \"DOI\": \"10.48550/arXiv.2310.11667\"}, {\"title\": \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\", \"creators\": [\"Hong\", \"Zhuge\", \"Chen\", \"Zheng\", \"Cheng\", \"Zhang\", \"Wang\", \"Wang\", \"Yau\", \"Lin\", \"Zhou\", \"Ran\", \"Xiao\", \"Wu\", \"Schmidhuber\"], \"year\": \"2024-11-01\", \"DOI\": \"10.48550/arXiv.2308.00352\"}, {\"title\": \"Agent Laboratory: Using LLM Agents as Resear...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2387字符，剩余887字符"
        },
        "execution_time": 0.9805905818939209,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Year Input Handling",
        "purpose": "Ensure the tool gracefully handles invalid or non-integer values for the year parameter.",
        "args": {
          "year": "invalid_year"
        },
        "response": {
          "error": "ToolException: Error executing tool search_items: 1 validation error for search_itemsArguments\nyear\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='invalid_year', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.10/v/int_parsing"
        },
        "execution_time": 0.007004499435424805,
        "is_functional_test": false
      }
    ],
    "get_item_metadata": [
      {
        "case_name": "Get Metadata with Valid Item Key",
        "purpose": "Verify that the tool successfully retrieves metadata for a valid Zotero item key.",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.007991313934326172,
        "is_functional_test": true
      },
      {
        "case_name": "Handle Invalid Item Key Gracefully",
        "purpose": "Ensure the tool raises a ValueError when an invalid item key is provided.",
        "args": {
          "item_key": "invalid_key!"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid_key!'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.00700068473815918,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input Handling",
        "purpose": "Ensure the tool properly validates and rejects empty item key input.",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.009000301361083984,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "Test the tool's behavior when the item key contains special characters.",
        "args": {
          "item_key": "KEY@#%&*"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@#%&*'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.011990785598754883,
        "is_functional_test": false
      },
      {
        "case_name": "Non-String Item Key Input",
        "purpose": "Verify that the tool correctly handles non-string inputs for item key, such as numbers or null.",
        "args": {
          "item_key": "1234567890"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: '1234567890'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.007992267608642578,
        "is_functional_test": false
      },
      {
        "case_name": "Zotero API Failure Simulation",
        "purpose": "Simulate a Zotero API failure to verify the tool raises a generic Exception appropriately.",
        "args": {
          "item_key": "FAKE_API_FAILURE_KEY"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'FAKE_API_FAILURE_KEY'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.012008428573608398,
        "is_functional_test": false
      },
      {
        "case_name": "Retrieve Metadata from Existing Search Results",
        "purpose": "Use an item key obtained from previous search results to validate metadata retrieval consistency.",
        "args": {
          "item_key": "arXiv:2310.06770"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'arXiv:2310.06770'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0069980621337890625,
        "is_functional_test": true
      }
    ],
    "get_item_fulltext": [
      {
        "case_name": "Basic PDF Text Extraction",
        "purpose": "Verify that the tool successfully extracts full text from a valid Zotero item with a PDF attachment.",
        "args": {
          "item_key": "ABC123XYZ"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'ABC123XYZ'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.004113912582397461,
        "is_functional_test": true
      },
      {
        "case_name": "No PDF Attachment Handling",
        "purpose": "Test that the tool raises ValueError when the specified Zotero item has no associated PDF file.",
        "args": {
          "item_key": "NO_PDF_ITEM"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'NO_PDF_ITEM'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.00652313232421875,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Item Key Format",
        "purpose": "Ensure the tool properly validates and rejects invalid item key formats.",
        "args": {
          "item_key": "invalid@key!"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'invalid@key!'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0039958953857421875,
        "is_functional_test": false
      },
      {
        "case_name": "Zotero API Failure Simulation",
        "purpose": "Simulate a Zotero API failure to verify generic exception handling during item retrieval.",
        "args": {
          "item_key": "FAKE_API_FAILURE_KEY"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'FAKE_API_FAILURE_KEY'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0029997825622558594,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Item Key",
        "purpose": "Test the tool's behavior when the item key contains special characters like @, #, %, etc.",
        "args": {
          "item_key": "KEY@#%&*"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'KEY@#%&*'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.003000020980834961,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Item Key Input",
        "purpose": "Verify that the tool correctly handles empty string input for item key parameter.",
        "args": {
          "item_key": ""
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: ''. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0030465126037597656,
        "is_functional_test": false
      },
      {
        "case_name": "PDF Text Extraction from Search Result",
        "purpose": "Use an item key obtained from previous search results to validate full text extraction consistency.",
        "args": {
          "item_key": "arXiv:2310.06770"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'arXiv:2310.06770'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.00599980354309082,
        "is_functional_test": true
      },
      {
        "case_name": "Long Item Key Boundary Test",
        "purpose": "Test the tool's behavior when the item key exceeds the expected length (typically 8 characters).",
        "args": {
          "item_key": "VERYLONGITEMKEY123"
        },
        "response": {
          "result": "{\"status\": \"error\", \"message\": \"Invalid item key format: 'VERYLONGITEMKEY123'. Must be 8 uppercase letters or numbers.\"}"
        },
        "execution_time": 0.0029976367950439453,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 22
}