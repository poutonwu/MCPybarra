{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gpt-4o-mcp_opencv_image_processing",
  "server_path": "workspace/pipeline-output-servers/gpt-4o/mcp_opencv_image_processing/refined/server.py",
  "timestamp": "2025-07-13T00:42:14.619805",
  "tools": [
    {
      "name": "save_image_tool",
      "description": "Saves an image to the file system in the desired format.\n\n    Args:\n        image_path (str): Path to the input image file.\n        output_path (str): Path to save the output image file.\n\n    Returns:\n        bool: True if the image is successfully saved, otherwise False.\n\n    Raises:\n        FileNotFoundError: If the input image file doesn't exist\n        ValueError: If the image can't be loaded or saved\n\n    Example:\n        save_image_tool(\"input.jpg\", \"output.png\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "image_path",
          "output_path"
        ],
        "title": "save_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image_tool",
      "description": "Resizes the image to specific dimensions.\n\n    Args:\n        image_path (str): Path to the input image file.\n        width (int): The new width of the image. Must be positive.\n        height (int): The new height of the image. Must be positive.\n\n    Returns:\n        str: Path to the resized image file.\n\n    Raises:\n        ValueError: If width or height are not positive integers\n\n    Example:\n        resize_image_tool(\"input.jpg\", 800, 600)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "width",
          "height"
        ],
        "title": "resize_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image_tool",
      "description": "Crops a specific rectangular region from the image.\n\n    Args:\n        image_path (str): Path to the input image file.\n        x (int): The x-coordinate of the top-left corner of the crop box.\n        y (int): The y-coordinate of the top-left corner of the crop box.\n        width (int): The width of the crop box. Must be positive.\n        height (int): The height of the crop box. Must be positive.\n\n    Returns:\n        str: Path to the cropped image file.\n\n    Raises:\n        ValueError: If any dimension parameters are invalid\n\n    Example:\n        crop_image_tool(\"input.jpg\", 10, 10, 100, 100)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_image_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats_tool",
      "description": "Retrieves basic statistics about the image, including dimensions and pixel intensity histograms.\n\n    Args:\n        image_path (str): Path to the input image file.\n\n    Returns:\n        str: JSON string containing dimensions and histogram data.\n\n    Example:\n        get_image_stats_tool(\"input.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "get_image_stats_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter_tool",
      "description": "Applies a specified filter to the image (e.g., Gaussian blur, median blur).\n\n    Args:\n        image_path (str): Path to the input image file.\n        filter_type (str): The type of filter to apply (\"gaussian\", \"median\", etc.).\n        kernel_size (int): The size of the kernel used for filtering. Must be odd and positive.\n\n    Returns:\n        str: Path to the filtered image file.\n\n    Raises:\n        ValueError: If filter_type is unsupported or kernel_size is invalid\n\n    Example:\n        apply_filter_tool(\"input.jpg\", \"gaussian\", 5)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          },
          "kernel_size": {
            "title": "Kernel Size",
            "type": "integer"
          }
        },
        "required": [
          "image_path",
          "filter_type",
          "kernel_size"
        ],
        "title": "apply_filter_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges_tool",
      "description": "Detects edges in the image using OpenCV's Canny edge detection algorithm.\n\n    Args:\n        image_path (str): Path to the input image file.\n        threshold1 (float): The first threshold for the hysteresis procedure.\n        threshold2 (float): The second threshold for the hysteresis procedure.\n\n    Returns:\n        str: Path to the edge-detected image file.\n\n    Example:\n        detect_edges_tool(\"input.jpg\", 50.0, 150.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edges_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold_tool",
      "description": "Applies a thresholding operation to the image.\n\n    Args:\n        image_path (str): Path to the input grayscale image file.\n        threshold_value (float): The threshold value.\n        max_value (float): The maximum value to assign to pixels exceeding the threshold.\n\n    Returns:\n        str: Path to the thresholded binary image file.\n\n    Example:\n        apply_threshold_tool(\"input.jpg\", 127.0, 255.0)\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "image_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_threshold_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours_tool",
      "description": "Detects contours in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of contours.\n\n    Example:\n        detect_contours_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "detect_contours_toolArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes_tool",
      "description": "Identifies and classifies simple geometric shapes (e.g., circles, squares) in the image.\n\n    Args:\n        image_path (str): Path to the input binary image file.\n\n    Returns:\n        str: JSON string containing a list of detected shapes.\n\n    Example:\n        find_shapes_tool(\"thresholded_image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "image_path": {
            "title": "Image Path",
            "type": "string"
          }
        },
        "required": [
          "image_path"
        ],
        "title": "find_shapes_toolArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image_tool": [
      {
        "case_name": "Basic Image Save JPG to PNG",
        "purpose": "验证工具能够将JPG图像成功保存为PNG格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "true"
        },
        "execution_time": 0.2783191204071045,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Save PNG to JPG",
        "purpose": "验证工具能够将PNG图像成功保存为JPG格式",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004998683929443359,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image with Same Format",
        "purpose": "验证工具支持将图像以相同格式保存（如PNG到PNG）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copy.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.00400090217590332,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image to Non-Existent Directory",
        "purpose": "验证工具能否处理输出路径中目录不存在的情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir\\output.png"
        },
        "response": {
          "result": "false"
        },
        "execution_time": 0.06068921089172363,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Input File Path",
        "purpose": "验证工具在输入文件路径无效时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output.png"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.0049974918365478516,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Output Path",
        "purpose": "验证工具对空的输出路径参数进行正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": ""
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1051: error: (-2:Unspecified error) could not find a writer for the specified extension in function 'cv::imwrite_'\\n\"}"
        },
        "execution_time": 0.053998708724975586,
        "is_functional_test": false
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证工具是否支持特殊字符作为输出文件名",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_@#$.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0070073604583740234,
        "is_functional_test": true
      },
      {
        "case_name": "Long File Path Boundary Test",
        "purpose": "测试超长文件路径是否能被正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      }
    ],
    "get_image_stats_tool": [
      {
        "case_name": "Basic Image Stats for Valid JPG",
        "purpose": "验证工具能够成功获取JPG图像的基本统计信息（尺寸和直方图）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"dimensions\": [2416, 3568, 3], \"histogram\": [66449.0, 24135.0, 28989.0, 31987.0, 25351.0, 24979.0, 25093.0, 28098.0, 30404.0, 32103.0, 33634.0, 34111.0, 34061.0, 33373.0, 32463.0, 33134.0, 33960.0, 34462.0, 35118.0, 34764.0, 34467.0, 34037.0, 35288.0, 36703.0, 37421.0, 37711.0, 38083.0, 38862.0, 38937.0, 39134.0, 39363.0, 39281.0, 39151.0, 38616.0, 38342.0, 37450.0, 37351.0, 37107.0, 36286.0, 36033.0, 35227.0, 34519.0, 33534.0, 32225.0, 31377.0, 30946.0, 31134.0, 31265.0, 31628.0, 32517.0, 32672.0, 32660.0, 32572.0, 32711.0, 31900.0, 31975.0, 31818.0, 31995.0, 31707.0, 31601.0, 31842.0, 31695.0, 31413.0, 31280.0, 31320.0, 31127.0, 30985.0, 30407.0, 30445.0, 30446.0, 30051.0, 29870.0, 29379.0, 28556.0, 27915.0, 27562.0, 27367.0, 26848.0, 26997.0, 26958.0, 26838.0, 27237.0, 26879.0, 26981.0, 26312.0, 25951.0, 25730.0, 25728.0, 25690.0, 25379.0, 24663.0, 24807.0, 24633.0, 23987.0, 23995.0, 24198.0, 23919.0, 23176.0, 23304.0, 23198.0, 23163.0, 22764.0, 22716.0, 22751.0, 22473.0, 22280.0, 22037.0, 22105.0, 21863.0, 21430.0, 21257.0, 21438.0, 21238.0, 21043.0, 20819.0, 20565.0, 20231.0, 20231.0, 20370.0, 19970.0, 19967.0, 19767.0, 19719.0, 19104.0, 18888.0, 18938.0, 18643.0, 18716.0, 18379.0, 18273.0, 17961.0, 17833.0, 17936.0, 17594.0, 17854.0, 17654.0, 17954.0, 18134.0, 17955.0, 18329.0, 17865.0, 18136.0, 18077.0, 18371.0, 18249.0, 18573.0, 18324.0, 18385.0, 18067.0, 17833.0, 17330.0, 17085.0, 16840.0, 16546.0, 16621.0, 16979.0, 17084.0, 17207.0, 17198.0, 17072.0, 16604.0, 16218...[截断]，输出已被MCP适配器截断，这是适配器的限制而非工具本身的问题。共计2352字符，剩余852字符"
        },
        "execution_time": 0.09750843048095703,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Stats for Valid PNG",
        "purpose": "验证工具能够成功获取PNG图像的基本统计信息（尺寸和直方图）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0040013790130615234,
        "is_functional_test": true
      },
      {
        "case_name": "Image Stats with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_icons\\icon_new_directory_icon.png"
        },
        "response": {
          "result": "{\"dimensions\": [256, 256, 3], \"histogram\": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 65536.0]}"
        },
        "execution_time": 0.004005908966064453,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats for Non-Existent File",
        "purpose": "验证工具在图像文件不存在时能否正确返回错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats with Empty Path",
        "purpose": "验证工具对空字符串作为输入路径的处理情况",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.005762815475463867,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats for Very Long File Path",
        "purpose": "测试超长文件路径是否能被正常处理以获取图像统计信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.008523702621459961,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats for Non-Image File",
        "purpose": "验证工具能否检测并拒绝非图像文件（如PDF、DOC等）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.0072765350341796875,
        "is_functional_test": false
      },
      {
        "case_name": "Image Stats for ICO File",
        "purpose": "验证工具是否支持ICO格式图像的统计信息提取",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.004006385803222656,
        "is_functional_test": true
      }
    ],
    "resize_image_tool": [
      {
        "case_name": "Basic Image Resize Valid JPG",
        "purpose": "验证工具能够成功将JPG图像调整为指定尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.06246519088745117,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Image Resize Valid PNG",
        "purpose": "验证工具能够成功将PNG图像调整为指定尺寸",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0049419403076171875,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image with Same Dimensions",
        "purpose": "验证工具在目标尺寸与原图相同的情况下是否仍能正确处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 2416,
          "height": 3568
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.10157322883605957,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Non-Existent Image",
        "purpose": "验证工具在输入图像文件不存在时能否正确返回错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.0049474239349365234,
        "is_functional_test": false
      },
      {
        "case_name": "Resize with Zero Width",
        "purpose": "验证工具是否能检测并拒绝宽度为0的非法参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 0,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=600\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Resize with Negative Height",
        "purpose": "验证工具是否能检测并拒绝高度为负数的非法参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": -100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=800, height=-100\"}"
        },
        "execution_time": 0.011012077331542969,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_icons\\icon_new_directory_icon.png",
          "width": 256,
          "height": 256
        },
        "response": {
          "result": "resized_image.jpg"
        },
        "execution_time": 0.012005805969238281,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Very Large File Path",
        "purpose": "测试超长文件路径是否能被正常处理以进行图像缩放",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt",
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": false
      }
    ],
    "crop_image_tool": [
      {
        "case_name": "Basic Crop Functionality",
        "purpose": "验证工具能够正确裁剪图像的指定矩形区域",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.056008338928222656,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Entire Image",
        "purpose": "验证工具是否能处理裁剪整个图像的情况（x=0, y=0, width=image_width, height=image_height）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 0,
          "y": 0,
          "width": 2416,
          "height": 3568
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.08251214027404785,
        "is_functional_test": true
      },
      {
        "case_name": "Negative Coordinates Test",
        "purpose": "验证工具对负数坐标值的处理情况",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": -10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Coordinates cannot be negative. Received: x=-10, y=10\"}"
        },
        "execution_time": 0.005995988845825195,
        "is_functional_test": false
      },
      {
        "case_name": "Zero Width or Height",
        "purpose": "验证工具能否检测到宽度或高度为零的非法参数并抛出异常",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 0,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Width and height must be positive values. Received: width=0, height=100\"}"
        },
        "execution_time": 0.003005504608154297,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Beyond Image Bounds",
        "purpose": "验证当裁剪区域超出原始图像尺寸时的行为",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 2000,
          "y": 3000,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"error\": \"OpenCV(4.12.0) D:\\\\a\\\\opencv-python\\\\opencv-python\\\\opencv\\\\modules\\\\imgcodecs\\\\src\\\\loadsave.cpp:1146: error: (-215:Assertion failed) !_img.empty() in function 'cv::imwrite'\\n\"}"
        },
        "execution_time": 0.05965113639831543,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正常工作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "cropped_image.jpg"
        },
        "execution_time": 0.05852675437927246,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Image Path",
        "purpose": "验证输入图像路径无效时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.007995367050170898,
        "is_functional_test": false
      },
      {
        "case_name": "Long File Path Boundary Test",
        "purpose": "测试超长文件路径是否能被正常处理以进行图像裁剪",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.004998445510864258,
        "is_functional_test": false
      }
    ],
    "apply_filter_tool": [
      {
        "case_name": "Basic Gaussian Filter Application",
        "purpose": "验证工具能够对有效图像应用高斯滤波器并生成输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.09351921081542969,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Median Filter Application",
        "purpose": "验证工具能够对有效图像应用中值滤波器并生成输出文件",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\secure_screenshot.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.04710102081298828,
        "is_functional_test": true
      },
      {
        "case_name": "Unsupported Filter Type Handling",
        "purpose": "验证工具在接收到不支持的滤波器类型时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "bilateral",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Unsupported filter type 'bilateral'. Supported filters: ['gaussian', 'median']\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Kernel Size Handling",
        "purpose": "验证工具在接收到偶数或非正数的kernel_size参数时是否抛出ValueError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "filter_type": "gaussian",
          "kernel_size": 4
        },
        "response": {
          "result": "{\"error\": \"Kernel size should be odd for OpenCV filters. Received: 4\"}"
        },
        "execution_time": 0.005513668060302734,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter to PNG Image",
        "purpose": "验证工具能否正确处理PNG格式图像并应用滤波器",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_icons\\icon_new_directory_icon.png",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.009641885757446289,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的输入路径并成功应用滤波器",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\截图测试_@#￥%——&×.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u622a\\u56fe\\u6d4b\\u8bd5_@#\\uffe5%\\u2014\\u2014&\\u00d7.png\"}"
        },
        "execution_time": 0.004998207092285156,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter to Non-Image File",
        "purpose": "验证工具是否能检测并拒绝非图像文件进行滤波操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "filter_type": "gaussian",
          "kernel_size": 5
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.0069997310638427734,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter to Very Long File Path",
        "purpose": "测试超长文件路径是否能被正常处理以执行滤波操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.png",
          "filter_type": "median",
          "kernel_size": 3
        },
        "response": {
          "result": "filtered_image.jpg"
        },
        "execution_time": 0.045516252517700195,
        "is_functional_test": false
      }
    ],
    "detect_edges_tool": [
      {
        "case_name": "Basic Edge Detection with Valid Image",
        "purpose": "验证工具能够使用默认阈值对有效图像进行边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.10831189155578613,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Zero Thresholds",
        "purpose": "测试工具在阈值为0时的行为是否符合预期（最小边缘）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 0.0,
          "threshold2": 0.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.13176202774047852,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection with Max Thresholds",
        "purpose": "测试工具在最大阈值下的行为（几乎无边缘）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold1": 255.0,
          "threshold2": 255.0
        },
        "response": {
          "result": "edges_image.jpg"
        },
        "execution_time": 0.0954580307006836,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on PNG Image",
        "purpose": "验证工具是否支持PNG格式图像的边缘检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.00408625602722168,
        "is_functional_test": true
      },
      {
        "case_name": "Edge Detection on Invalid File Type",
        "purpose": "验证工具能否正确处理非图像文件输入（如PDF）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.00600123405456543,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\截图测试_@#￥%——&×.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\\\u622a\\u56fe\\u6d4b\\u8bd5_@#\\uffe5%\\u2014\\u2014&\\u00d7.png\"}"
        },
        "execution_time": 0.003997802734375,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection on Non-Existent Image",
        "purpose": "验证工具在图像文件不存在时能否返回错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.004000186920166016,
        "is_functional_test": false
      },
      {
        "case_name": "Edge Detection with Empty Image Path",
        "purpose": "验证工具对空字符串作为图像路径的处理情况",
        "args": {
          "image_path": "",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.007004261016845703,
        "is_functional_test": false
      }
    ],
    "apply_threshold_tool": [
      {
        "case_name": "Basic Thresholding on Grayscale Image",
        "purpose": "验证工具能够对灰度图像执行基本的阈值处理，生成二值化图像",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.07821059226989746,
        "is_functional_test": true
      },
      {
        "case_name": "Threshold Value Equals Max Value",
        "purpose": "验证当阈值等于最大值时工具的行为是否符合预期（所有像素可能被设为max_value）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 255.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.06751513481140137,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to Non-Existent File",
        "purpose": "验证工具在输入文件不存在时能否正确返回错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.0038199424743652344,
        "is_functional_test": false
      },
      {
        "case_name": "Negative Threshold Value Handling",
        "purpose": "验证工具是否能正确处理负的阈值参数",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": -10.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.0738518238067627,
        "is_functional_test": false
      },
      {
        "case_name": "Max Value Less Than Threshold",
        "purpose": "验证当max_value小于threshold_value时工具的行为是否安全合理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 150.0,
          "max_value": 100.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.07752847671508789,
        "is_functional_test": true
      },
      {
        "case_name": "Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时工具是否能正常处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "thresholded_image.jpg"
        },
        "execution_time": 0.08081340789794922,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold to Very Long File Path",
        "purpose": "测试超长文件路径是否能被正常处理以应用阈值操作",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.png",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.png\"}"
        },
        "execution_time": 0.004004001617431641,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold to Non-Image File",
        "purpose": "验证工具能否检测并拒绝非图像文件进行阈值处理",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "threshold_value": 128.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      }
    ],
    "detect_contours_tool": [
      {
        "case_name": "Basic Contour Detection Valid Image",
        "purpose": "验证工具能够成功检测有效图像中的轮廓并返回JSON格式结果",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]]}"
        },
        "execution_time": 0.07828783988952637,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Invalid File Path",
        "purpose": "验证工具在输入文件路径无效时是否抛出FileNotFoundError",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.010086536407470703,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection for Non-Binary Image",
        "purpose": "验证工具能否处理非二值化图像的情况，预期返回空或合理警告",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.007704257965087891,
        "is_functional_test": true
      },
      {
        "case_name": "Contour Detection with Empty Image Path",
        "purpose": "验证工具对空字符串作为输入路径的处理情况",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.010334491729736328,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection for Very Long File Path",
        "purpose": "测试超长文件路径是否能被正常处理以进行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.006063222885131836,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection for Non-Image File",
        "purpose": "验证工具能否检测并拒绝非图像文件（如PDF、DOC等）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.01190948486328125,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_icons\\icon_new_directory_icon.png"
        },
        "response": {
          "result": "{\"contours\": [[[[0, 0]], [[0, 255]], [[255, 255]], [[255, 0]]]]}"
        },
        "execution_time": 0.007002592086791992,
        "is_functional_test": false
      },
      {
        "case_name": "Contour Detection on Hidden System File",
        "purpose": "验证工具是否会对隐藏系统文件（如.git目录中的文件）尝试执行轮廓检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\index"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\index\"}"
        },
        "execution_time": 0.0055522918701171875,
        "is_functional_test": false
      }
    ],
    "find_shapes_tool": [
      {
        "case_name": "Basic Shape Detection in Valid JPG Image",
        "purpose": "验证工具能够成功识别并分类JPG图像中的几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 2415]], [[3567, 2415]], [[3567, 0]]]}]}"
        },
        "execution_time": 0.06399989128112793,
        "is_functional_test": true
      },
      {
        "case_name": "Basic Shape Detection in Valid PNG Image",
        "purpose": "验证工具能够成功识别并分类PNG图像中的几何形状",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005997419357299805,
        "is_functional_test": true
      },
      {
        "case_name": "Shape Detection with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\new_icons\\icon_new_directory_icon.png"
        },
        "response": {
          "result": "{\"shapes\": [{\"shape\": \"rectangle\", \"contour\": [[[0, 0]], [[0, 255]], [[255, 255]], [[255, 0]]]}]}"
        },
        "execution_time": 0.003979206085205078,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection for Non-Existent File",
        "purpose": "验证工具在图像文件不存在时能否正确返回错误信息",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\invalid_image.jpg\"}"
        },
        "execution_time": 0.004002571105957031,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection with Empty Path",
        "purpose": "验证工具对空字符串作为输入路径的处理情况",
        "args": {
          "image_path": ""
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: \"}"
        },
        "execution_time": 0.0035102367401123047,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection for Very Long File Path",
        "purpose": "测试超长文件路径是否能被正常处理以进行形状检测",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt"
        },
        "response": {
          "result": "{\"error\": \"Image not found at the specified path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_file_name_that_tests_the_maximum_allowed_length_of_a_file_path_in_windows_systems.txt\"}"
        },
        "execution_time": 0.0057337284088134766,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection for Non-Image File",
        "purpose": "验证工具能否检测并拒绝非图像文件（如PDF、DOC等）",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"}"
        },
        "execution_time": 0.004006385803222656,
        "is_functional_test": false
      },
      {
        "case_name": "Shape Detection for ICO File",
        "purpose": "验证工具是否支持ICO格式图像的形状识别",
        "args": {
          "image_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Failed to load image from path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.0050008296966552734,
        "is_functional_test": true
      }
    ]
  },
  "total_cases": 72
}