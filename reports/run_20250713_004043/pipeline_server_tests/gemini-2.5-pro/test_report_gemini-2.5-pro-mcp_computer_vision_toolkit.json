{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "gemini-2.5-pro-mcp_computer_vision_toolkit",
  "server_path": "workspace/pipeline-output-servers/gemini-2.5-pro/mcp_computer_vision_toolkit/refined/server.py",
  "timestamp": "2025-07-13T00:47:30.004036",
  "tools": [
    {
      "name": "save_image",
      "description": "Saves an image from a source path to a destination path.\n    This function is useful for creating copies or changing the format of an image file.\n\n    Args:\n        source_path (str): The full path to the existing image file.\n        destination_path (str): The full path where the new image file will be saved.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path where the image was successfully saved, or an error message.\n\n    Example:\n        save_image(source_path=\"input/logo.png\", destination_path=\"output/logo_copy.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "source_path": {
            "title": "Source Path",
            "type": "string"
          },
          "destination_path": {
            "title": "Destination Path",
            "type": "string"
          }
        },
        "required": [
          "source_path",
          "destination_path"
        ],
        "title": "save_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "resize_image",
      "description": "Changes the dimensions of an image to a specified width and height.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the resized image file.\n        width (int): The target width for the resized image in pixels.\n        height (int): The target height for the resized image in pixels.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created resized image, or an error message.\n\n    Example:\n        resize_image(input_path=\"input/photo.jpg\", output_path=\"output/photo_resized.jpg\", width=800, height=600)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "width",
          "height"
        ],
        "title": "resize_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "crop_image",
      "description": "Extracts a rectangular region from an image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the cropped image file.\n        x (int): The x-coordinate of the top-left corner of the crop area.\n        y (int): The y-coordinate of the top-left corner of the crop area.\n        width (int): The width of the crop rectangle.\n        height (int): The height of the crop rectangle.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created cropped image, or an error message.\n\n    Example:\n        crop_image(input_path=\"input/scenery.png\", output_path=\"output/scenery_cropped.png\", x=100, y=150, width=300, height=200)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "crop_imageArguments",
        "type": "object"
      }
    },
    {
      "name": "get_image_stats",
      "description": "Retrieves basic statistical information about an image, such as its\n    dimensions and number of color channels.\n\n    Args:\n        input_path (str): The path to the image file to be analyzed.\n\n    Returns:\n        str: A JSON string containing the image's statistics: {'width': int, 'height': int, 'channels': int}, or an error message.\n\n    Example:\n        get_image_stats(input_path=\"input/image.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          }
        },
        "required": [
          "input_path"
        ],
        "title": "get_image_statsArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_filter",
      "description": "Applies a pre-defined filter to an image. Supported filters are 'blur',\n    'grayscale', and 'sharpen'.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the filtered image file.\n        filter_type (str): The type of filter to apply. Must be one of 'blur', 'grayscale', or 'sharpen'.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created filtered image, or an error message.\n\n    Example:\n        apply_filter(input_path=\"input/portrait.jpg\", output_path=\"output/portrait_blurred.jpg\", filter_type=\"blur\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "filter_type": {
            "title": "Filter Type",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "filter_type"
        ],
        "title": "apply_filterArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_edges",
      "description": "Detects and highlights edges in an image using the Canny edge detection algorithm.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the resulting edge-detected image.\n        threshold1 (float): The first (lower) threshold for the hysteresis procedure.\n        threshold2 (float): The second (higher) threshold for the hysteresis procedure.\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created edge-map image, or an error message.\n\n    Example:\n        detect_edges(input_path=\"input/building.jpg\", output_path=\"output/building_edges.jpg\", threshold1=100.0, threshold2=200.0)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "threshold1": {
            "title": "Threshold1",
            "type": "number"
          },
          "threshold2": {
            "title": "Threshold2",
            "type": "number"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "threshold1",
          "threshold2"
        ],
        "title": "detect_edgesArguments",
        "type": "object"
      }
    },
    {
      "name": "apply_threshold",
      "description": "Applies a fixed-level binary threshold to a grayscale image.\n\n    Args:\n        input_path (str): The path to the source image file (will be converted to grayscale).\n        output_path (str): The path to save the thresholded image.\n        threshold_value (float): The pixel intensity value used as the threshold.\n        max_value (float): The value assigned to pixels that exceed the threshold (e.g., 255 for white).\n\n    Returns:\n        str: A JSON string with a confirmation message indicating the path of the newly created thresholded image, or an error message.\n\n    Example:\n        apply_threshold(input_path=\"input/text.png\", output_path=\"output/text_binary.png\", threshold_value=127.0, max_value=255.0)\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          },
          "threshold_value": {
            "title": "Threshold Value",
            "type": "number"
          },
          "max_value": {
            "title": "Max Value",
            "type": "number"
          }
        },
        "required": [
          "input_path",
          "output_path",
          "threshold_value",
          "max_value"
        ],
        "title": "apply_thresholdArguments",
        "type": "object"
      }
    },
    {
      "name": "detect_contours",
      "description": "Finds the contours of objects in a binary image and draws them onto a new image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the image with contours drawn on it.\n\n    Returns:\n        str: A JSON string with a confirmation message and the number of contours found, or an error message.\n\n    Example:\n        detect_contours(input_path=\"input/shapes.png\", output_path=\"output/shapes_contours.png\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path"
        ],
        "title": "detect_contoursArguments",
        "type": "object"
      }
    },
    {
      "name": "find_shapes",
      "description": "A simplified shape detection tool that identifies and counts circles and rectangles in an image.\n\n    Args:\n        input_path (str): The path to the source image file.\n        output_path (str): The path to save the image with detected shapes drawn on it.\n\n    Returns:\n        str: A JSON string with a message and counts of detected circles and rectangles, or an error message.\n\n    Example:\n        find_shapes(input_path=\"input/geometry.jpg\", output_path=\"output/geometry_detected.jpg\")\n    ",
      "args_schema": {
        "properties": {
          "input_path": {
            "title": "Input Path",
            "type": "string"
          },
          "output_path": {
            "title": "Output Path",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "output_path"
        ],
        "title": "find_shapesArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "save_image": [
      {
        "case_name": "Save Image - Basic PNG to JPG Conversion",
        "purpose": "验证工具能够将PNG图像文件转换为JPG格式并保存到目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\converted_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004621267318725586,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image - Copy JPG to New Location",
        "purpose": "验证工具可以复制现有的JPG图像文件到新的位置而不更改其格式",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\copied_xue.jpg"
        },
        "response": {
          "result": "{\"message\": \"Image successfully saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\copied_xue.jpg\"}"
        },
        "execution_time": 0.08638334274291992,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image - Invalid Source Path",
        "purpose": "验证当提供不存在的源路径时，工具是否能正确返回错误信息",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\error_test.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.png\"}"
        },
        "execution_time": 0.004000663757324219,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image - No Write Permissions in Destination",
        "purpose": "测试当目标目录不可写时工具的错误处理能力",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_file.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.00424647331237793,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image - Long File Name with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg"
        },
        "response": {
          "result": "{\"message\": \"Image successfully saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@file!.jpg\"}"
        },
        "execution_time": 0.09106779098510742,
        "is_functional_test": true
      },
      {
        "case_name": "Save Image - Attempting to Save Git Internal File",
        "purpose": "验证工具是否允许保存.git目录中的敏感文件（安全测试）",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\saved_HEAD.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.004000425338745117,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image - Missing Source Path Parameter",
        "purpose": "验证当未提供source_path参数时工具的错误处理机制",
        "args": {
          "destination_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_source.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image: 1 validation error for save_imageArguments\nsource_path\n  Field required [type=missing, input_value={'destination_path': 'D:\\...es\\\\missing_source.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0055179595947265625,
        "is_functional_test": false
      },
      {
        "case_name": "Save Image - Missing Destination Path Parameter",
        "purpose": "验证当未提供destination_path参数时工具的错误处理机制",
        "args": {
          "source_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "error": "ToolException: Error executing tool save_image: 1 validation error for save_imageArguments\ndestination_path\n  Field required [type=missing, input_value={'source_path': 'D:\\\\devW...em\\\\testFiles\\\\hit.png'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0029993057250976562,
        "is_functional_test": false
      }
    ],
    "get_image_stats": [
      {
        "case_name": "Get Image Stats - Basic PNG File",
        "purpose": "验证工具能够正确获取PNG图像文件的基本统计信息（宽度、高度、通道数）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005997180938720703,
        "is_functional_test": true
      },
      {
        "case_name": "Get Image Stats - Basic JPG File",
        "purpose": "验证工具能够正确获取JPG图像文件的基本统计信息（宽度、高度、通道数）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "result": "{\"width\": 3568, \"height\": 2416, \"channels\": 3}"
        },
        "execution_time": 0.0608065128326416,
        "is_functional_test": true
      },
      {
        "case_name": "Get Image Stats - ICO File",
        "purpose": "验证工具是否支持ICO格式图像并返回其统计信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\app.ico"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\app.ico\"}"
        },
        "execution_time": 0.005998849868774414,
        "is_functional_test": true
      },
      {
        "case_name": "Get Image Stats - Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的图像路径并成功返回统计信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg"
        },
        "response": {
          "result": "{\"width\": 3568, \"height\": 2416, \"channels\": 3}"
        },
        "execution_time": 0.0514988899230957,
        "is_functional_test": true
      },
      {
        "case_name": "Get Image Stats - Invalid File Format",
        "purpose": "验证当提供非图像文件时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Get Image Stats - Nonexistent File",
        "purpose": "验证当提供的图像文件路径不存在时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.005006313323974609,
        "is_functional_test": false
      },
      {
        "case_name": "Get Image Stats - .git Internal File",
        "purpose": "验证工具是否拒绝读取.git目录中的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.004994392395019531,
        "is_functional_test": false
      },
      {
        "case_name": "Get Image Stats - Missing Input Path Parameter",
        "purpose": "验证当未提供input_path参数时工具是否能正确进行参数验证并返回错误信息",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool get_image_stats: 1 validation error for get_image_statsArguments\ninput_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.004001140594482422,
        "is_functional_test": false
      }
    ],
    "resize_image": [
      {
        "case_name": "Resize Image - Basic JPG Resize",
        "purpose": "验证工具能够正确调整JPG图像的尺寸并保存到目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\resized_xue.jpg\"}"
        },
        "execution_time": 0.06307268142700195,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image - Basic PNG Resize",
        "purpose": "验证工具能够正确调整PNG图像的尺寸并保存到目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_hit.png",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999471664428711,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image - Invalid Input Path",
        "purpose": "验证当提供不存在的输入路径时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\error_resized.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.00412297248840332,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image - No Write Permissions in Output Directory",
        "purpose": "测试当输出目录不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_resized.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\unwritable_resized.jpg\"}"
        },
        "execution_time": 0.06570196151733398,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image - Long File Name with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@resized!.jpg",
          "width": 1024,
          "height": 768
        },
        "response": {
          "result": "{\"message\": \"Image resized and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@resized!.jpg\"}"
        },
        "execution_time": 0.06499600410461426,
        "is_functional_test": true
      },
      {
        "case_name": "Resize Image - Attempting to Resize Git Internal File",
        "purpose": "验证工具是否拒绝调整.git目录中的敏感文件大小以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\resized_HEAD.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.007000446319580078,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image - Missing Input Path Parameter",
        "purpose": "验证当未提供input_path参数时工具的错误处理机制",
        "args": {
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_input_resized.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image: 1 validation error for resize_imageArguments\ninput_path\n  Field required [type=missing, input_value={'output_path': 'D:\\\\devW...th': 800, 'height': 600}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.005518913269042969,
        "is_functional_test": false
      },
      {
        "case_name": "Resize Image - Missing Output Path Parameter",
        "purpose": "验证当未提供output_path参数时工具的错误处理机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "width": 800,
          "height": 600
        },
        "response": {
          "error": "ToolException: Error executing tool resize_image: 1 validation error for resize_imageArguments\noutput_path\n  Field required [type=missing, input_value={'input_path': 'D:\\\\devWo...th': 800, 'height': 600}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.0060045719146728516,
        "is_functional_test": false
      }
    ],
    "crop_image": [
      {
        "case_name": "Crop Image - Basic PNG Crop",
        "purpose": "验证工具能够正确裁剪PNG图像并保存到目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit_cropped.png",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005252361297607422,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image - JPG Crop with Same Dimensions",
        "purpose": "验证工具能够正确裁剪JPG图像并保持原尺寸保存",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_cropped.jpg",
          "x": 0,
          "y": 0,
          "width": 3568,
          "height": 2416
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.08060240745544434,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image - Zero Coordinates",
        "purpose": "验证工具在裁剪区域从图像左上角(0,0)开始时的处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\zero_start_cropped.jpg",
          "x": 0,
          "y": 0,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\zero_start_cropped.jpg\"}"
        },
        "execution_time": 0.05676913261413574,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image - Crop Area at Edge",
        "purpose": "验证工具在裁剪区域位于图像边缘时的处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edge_cropped.jpg",
          "x": 3068,
          "y": 1916,
          "width": 500,
          "height": 500
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\edge_cropped.jpg\"}"
        },
        "execution_time": 0.060151100158691406,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image - Invalid Input Path",
        "purpose": "验证当提供不存在的输入路径时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\error_test.jpg",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.png\"}"
        },
        "execution_time": 0.003999948501586914,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image - No Write Permissions in Output Directory",
        "purpose": "测试当输出目录不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_cropped.jpg",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": false
      },
      {
        "case_name": "Crop Image - Long File Name with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@cropped!.jpg",
          "x": 100,
          "y": 150,
          "width": 300,
          "height": 200
        },
        "response": {
          "result": "{\"message\": \"Image cropped and saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@cropped!.jpg\"}"
        },
        "execution_time": 0.06230902671813965,
        "is_functional_test": true
      },
      {
        "case_name": "Crop Image - Attempting to Crop .git Internal File",
        "purpose": "验证工具是否拒绝裁剪.git目录中的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\cropped_HEAD.jpg",
          "x": 10,
          "y": 10,
          "width": 100,
          "height": 100
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.006512165069580078,
        "is_functional_test": false
      }
    ],
    "apply_filter": [
      {
        "case_name": "Apply Filter - Basic Blur Filter Application",
        "purpose": "验证工具能够正确对图像应用'blur'滤镜并保存到指定路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\blurred_xue.jpg",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"message\": \"Filter 'blur' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\blurred_xue.jpg\"}"
        },
        "execution_time": 0.09678077697753906,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter - Grayscale Filter on JPG Image",
        "purpose": "验证工具能够正确对JPG图像应用'grayscale'滤镜并输出灰度图像",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\grayscale_hit.png",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003003835678100586,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter - Sharpen Filter on Cropped Image",
        "purpose": "验证工具能够正确对裁剪后的图像应用'sharpen'滤镜并保存结果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_cropped.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\sharpened_cropped.jpg",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_cropped.jpg\"}"
        },
        "execution_time": 0.005518436431884766,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter - Invalid Filter Type",
        "purpose": "验证当提供无效的filter_type参数时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_filter.jpg",
          "filter_type": "invert"
        },
        "response": {
          "result": "{\"error\": \"Invalid filter_type. Supported filters are 'blur', 'grayscale', 'sharpen'.\"}"
        },
        "execution_time": 0.0568089485168457,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter - Input File Does Not Exist",
        "purpose": "验证当输入文件路径不存在时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\filtered_output.jpg",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.jpg\"}"
        },
        "execution_time": 0.008856058120727539,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter - No Write Permissions in Output Directory",
        "purpose": "测试当目标目录不可写时，工具是否能优雅地处理错误",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_filter.jpg",
          "filter_type": "grayscale"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.0050046443939208984,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Filter - Long Output Path with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长路径的输出路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@filtered!.jpg",
          "filter_type": "sharpen"
        },
        "response": {
          "result": "{\"message\": \"Filter 'sharpen' applied and image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@filtered!.jpg\"}"
        },
        "execution_time": 0.11656498908996582,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Filter - Attempt to Apply Filter on .git Internal File",
        "purpose": "验证工具是否拒绝处理.git目录中的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\filtered_HEAD.jpg",
          "filter_type": "blur"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.004999399185180664,
        "is_functional_test": false
      }
    ],
    "detect_edges": [
      {
        "case_name": "Detect Edges - Basic JPG File with Default Thresholds",
        "purpose": "验证工具能够使用默认阈值对JPG图像执行Canny边缘检测并保存结果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue_edges.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\xue_edges.jpg\"}"
        },
        "execution_time": 0.09870290756225586,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges - PNG Image with Custom Thresholds",
        "purpose": "验证工具能够处理PNG图像并使用自定义阈值进行边缘检测",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit_edges.png",
          "threshold1": 50.0,
          "threshold2": 150.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.003999233245849609,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges - Invalid Input Path",
        "purpose": "验证当提供不存在的输入路径时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_edge.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.004792690277099609,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges - No Write Permissions in Output Directory",
        "purpose": "测试当输出目录不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_output.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_output.jpg\"}"
        },
        "execution_time": 0.1062314510345459,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges - Long File Name with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\edge_result_!@#$%^&*()_+.jpg",
          "threshold1": 80.0,
          "threshold2": 160.0
        },
        "response": {
          "result": "{\"message\": \"Edge detection complete. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\edge_result_!@#$%^&*()_+.jpg\"}"
        },
        "execution_time": 0.0777592658996582,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Edges - Attempting to Process .git Internal File",
        "purpose": "验证工具是否拒绝读取.git目录中的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_head_edge.jpg",
          "threshold1": 100.0,
          "threshold2": 200.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.003509044647216797,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges - Missing Required Parameters",
        "purpose": "验证当未提供必需参数时工具是否能正确进行参数验证并返回错误信息",
        "args": {},
        "response": {
          "error": "ToolException: Error executing tool detect_edges: 4 validation errors for detect_edgesArguments\ninput_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\noutput_path\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nthreshold1\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nthreshold2\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.006001949310302734,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Edges - Extreme Threshold Values",
        "purpose": "验证工具在极值阈值下是否仍能正常运行（0.0 和 1000.0）",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extreme_threshold_edge.jpg",
          "threshold1": 0.0,
          "threshold2": 1000.0
        },
        "response": {
          "result": "{\"error\": \"Threshold values must be between 0 and 255.\"}"
        },
        "execution_time": 0.006001949310302734,
        "is_functional_test": true
      }
    ],
    "apply_threshold": [
      {
        "case_name": "Apply Threshold - Basic Grayscale Image",
        "purpose": "验证工具能够对灰度图像应用固定阈值并正确保存结果",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_xue.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\thresholded_xue.png\"}"
        },
        "execution_time": 0.08138537406921387,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold - Nonexistent Input File",
        "purpose": "验证当输入文件不存在时，工具是否能返回适当的错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_nonexistent.png",
          "threshold_value": 100.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_image.jpg\"}"
        },
        "execution_time": 0.0032808780670166016,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold - Invalid Output Path Permissions",
        "purpose": "测试当目标路径不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_output.jpg",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_output.jpg\"}"
        },
        "execution_time": 0.08313131332397461,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold - Zero Threshold Value",
        "purpose": "验证工具在最小阈值（0）下的行为是否符合预期",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_zero.png",
          "threshold_value": 0.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.005140066146850586,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold - Max Threshold Value",
        "purpose": "验证工具在最大阈值（255）下的行为是否符合预期",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\thresholded_max.png",
          "threshold_value": 255.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004003047943115234,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold - Special Characters in Output Path",
        "purpose": "验证工具是否支持包含特殊字符的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@thresholded!.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@thresholded!.png\"}"
        },
        "execution_time": 0.08353400230407715,
        "is_functional_test": true
      },
      {
        "case_name": "Apply Threshold - Attempt to Write to .git Directory",
        "purpose": "验证工具是否拒绝将输出写入.git目录以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\thresholded_image.png",
          "threshold_value": 127.0,
          "max_value": 255.0
        },
        "response": {
          "result": "{\"message\": \"Threshold applied. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\thresholded_image.png\"}"
        },
        "execution_time": 0.08194637298583984,
        "is_functional_test": false
      },
      {
        "case_name": "Apply Threshold - Missing Required Parameters",
        "purpose": "验证当缺少必需参数时工具是否能正确进行参数验证并返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool apply_threshold: 3 validation errors for apply_thresholdArguments\noutput_path\n  Field required [type=missing, input_value={'input_path': 'D:\\\\devWo...em\\\\testFiles\\\\xue.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nthreshold_value\n  Field required [type=missing, input_value={'input_path': 'D:\\\\devWo...em\\\\testFiles\\\\xue.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing\nmax_value\n  Field required [type=missing, input_value={'input_path': 'D:\\\\devWo...em\\\\testFiles\\\\xue.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00496673583984375,
        "is_functional_test": false
      }
    ],
    "detect_contours": [
      {
        "case_name": "Detect Contours - Basic PNG File",
        "purpose": "验证工具能够正确检测PNG图像中的轮廓并保存结果图像",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\hit.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_hit.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\hit.png\"}"
        },
        "execution_time": 0.004999876022338867,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours - JPG Input with Special Characters in Path",
        "purpose": "验证工具是否能处理包含特殊字符的输入路径并成功检测JPG图像的轮廓",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_special.jpg"
        },
        "response": {
          "result": "{\"message\": \"Contours detected and drawn. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\contoured_special.jpg\", \"contours_found\": 2371}"
        },
        "execution_time": 0.11261129379272461,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours - Nonexistent Input File",
        "purpose": "验证当提供不存在的源路径时，工具是否能正确返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_contour.png",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output_contour.png"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent_contour.png\"}"
        },
        "execution_time": 0.0030007362365722656,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Contours - No Write Permissions in Output Directory",
        "purpose": "测试当目标目录不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\locked_output_contour.jpg"
        },
        "response": {
          "result": "{\"message\": \"Contours detected and drawn. Image saved to D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\readonly_dir\\\\locked_output_contour.jpg\", \"contours_found\": 2282}"
        },
        "execution_time": 0.11949849128723145,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Contours - Long File Name with Special Characters",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_output_file_name_with_!@#$%^&*()_+[]{};':\",./<>?_contour.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to write image to path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\very_long_output_file_name_with_!@#$%^&*()_+[]{};':\\\",./<>?_contour.png. Reason: [WinError 123] \\u6587\\u4ef6\\u540d\\u3001\\u76ee\\u5f55\\u540d\\u6216\\u5377\\u6807\\u8bed\\u6cd5\\u4e0d\\u6b63\\u786e\\u3002: 'D:\\\\\\\\devWorkspace\\\\\\\\MCPServer-Generator\\\\\\\\testSystem\\\\\\\\testFiles\\\\\\\\very_long_output_file_name_with_!@#$%^&*()_+[]{};\\\\':\\\",.'\"}"
        },
        "execution_time": 0.0901026725769043,
        "is_functional_test": true
      },
      {
        "case_name": "Detect Contours - Attempting to Process .git Internal File",
        "purpose": "验证工具是否拒绝读取.git目录中的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\contoured_git_head.png"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.0038700103759765625,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Contours - Missing Input Path Parameter",
        "purpose": "验证当未提供input_path参数时工具的错误处理机制",
        "args": {
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_input_contour.png"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours: 1 validation error for detect_contoursArguments\ninput_path\n  Field required [type=missing, input_value={'output_path': 'D:\\\\devW...sing_input_contour.png'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.00431513786315918,
        "is_functional_test": false
      },
      {
        "case_name": "Detect Contours - Missing Output Path Parameter",
        "purpose": "验证当未提供output_path参数时工具的错误处理机制",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "error": "ToolException: Error executing tool detect_contours: 1 validation error for detect_contoursArguments\noutput_path\n  Field required [type=missing, input_value={'input_path': 'D:\\\\devWo...em\\\\testFiles\\\\xue.jpg'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.10/v/missing"
        },
        "execution_time": 0.002998828887939453,
        "is_functional_test": false
      }
    ],
    "find_shapes": [
      {
        "case_name": "Find Shapes - Basic Shape Detection in Valid Image",
        "purpose": "验证工具能够正确识别并统计图像中的圆形和矩形",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\detected_shapes_xue.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.01000452041626,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes - Input File Does Not Exist",
        "purpose": "验证当输入文件路径不存在时，工具是否能返回合理的错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent_image.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\output\\detected_shapes_missing.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.00387525558472,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes - Read Image with Special Characters in Path",
        "purpose": "验证工具是否支持包含特殊字符的输入路径并正确处理形状检测",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@file!.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@detected!.jpg"
        },
        "response": {
          "result": "{\"error\": \"Input file not found at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@file!.jpg\"}"
        },
        "execution_time": 22.35955286026001,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes - Attempt to Access .git Internal File",
        "purpose": "验证工具是否拒绝访问.git目录下的敏感文件以防止安全风险",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\HEAD",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\detected_shapes_git.jpg"
        },
        "response": {
          "result": "{\"error\": \"Failed to read or decode the image at path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\HEAD\"}"
        },
        "execution_time": 0.003998994827270508,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes - No Write Permissions in Output Directory",
        "purpose": "测试当目标目录不可写时工具的错误处理能力",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\readonly_dir\\unwritable_shape_output.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.00388789176941,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes - Long File Name with Special Characters in Output",
        "purpose": "验证工具是否支持带有特殊字符和长文件名的目标路径",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg",
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\very_long_filename_with_special_characters_!@#$%^&*()_+=-`~[]{};',.<>:\\\"|/?.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.01107430458069,
        "is_functional_test": true
      },
      {
        "case_name": "Find Shapes - Missing Input Path Parameter",
        "purpose": "验证当未提供input_path参数时工具是否能正确进行参数验证并返回错误信息",
        "args": {
          "output_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_input_detected.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.02226114273071,
        "is_functional_test": false
      },
      {
        "case_name": "Find Shapes - Missing Output Path Parameter",
        "purpose": "验证当未提供output_path参数时工具是否能正确进行参数验证并返回错误信息",
        "args": {
          "input_path": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\xue.jpg"
        },
        "response": {
          "error": "Tool call 'find_shapes' was cancelled."
        },
        "execution_time": 40.01923060417175,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 72
}