{
  "server_name": "server",
  "parent_dir": "refined",
  "report_name": "qwen-plus-mcp_pdf_file_processor",
  "server_path": "workspace/pipeline-output-servers/qwen-plus/mcp_pdf_file_processor/refined/server.py",
  "timestamp": "2025-07-13T00:53:06.981730",
  "tools": [
    {
      "name": "merge_pdfs",
      "description": "\n    Merge multiple PDF files into a single PDF file.\n\n    Args:\n        input_files: List of paths to the PDF files to be merged.\n        output_file: Path where the merged PDF will be saved.\n\n    Returns:\n        A JSON string containing the operation status, merged file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_files": {
            "items": {},
            "title": "Input Files",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_files",
          "output_file"
        ],
        "title": "merge_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "extract_pages",
      "description": "\n    Extract specific pages from a PDF file and save them as a new PDF.\n\n    Args:\n        input_file: Path to the source PDF file.\n        page_numbers: List of page numbers to extract (1-based index).\n        output_file: Path where the extracted pages will be saved.\n\n    Returns:\n        A JSON string containing the operation status, extracted file path (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the extraction process fails.\n    ",
      "args_schema": {
        "properties": {
          "input_file": {
            "title": "Input File",
            "type": "string"
          },
          "page_numbers": {
            "items": {},
            "title": "Page Numbers",
            "type": "array"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          }
        },
        "required": [
          "input_file",
          "page_numbers",
          "output_file"
        ],
        "title": "extract_pagesArguments",
        "type": "object"
      }
    },
    {
      "name": "search_pdfs",
      "description": "\n    Search for PDF files matching a specific pattern in a given directory.\n\n    Args:\n        directory: Path to the directory to search in.\n        pattern: Regular expression pattern to match PDF filenames.\n\n    Returns:\n        A JSON string containing the operation status, list of matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "pattern": {
            "title": "Pattern",
            "type": "string"
          }
        },
        "required": [
          "directory",
          "pattern"
        ],
        "title": "search_pdfsArguments",
        "type": "object"
      }
    },
    {
      "name": "merge_pdfs_ordered",
      "description": "\n    Merge PDF files in a specific order based on a pattern.\n\n    Args:\n        directory: Path to the directory containing PDF files.\n        order_pattern: Pattern to determine the merge order (exact filename or partial match).\n        output_file: Path where the merged PDF will be saved.\n        exact_match: Boolean indicating whether to use exact match (True) or partial match (False).\n\n    Returns:\n        A JSON string containing the operation status, merged file path, matched files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the merging process fails.\n    ",
      "args_schema": {
        "properties": {
          "directory": {
            "title": "Directory",
            "type": "string"
          },
          "order_pattern": {
            "title": "Order Pattern",
            "type": "string"
          },
          "output_file": {
            "title": "Output File",
            "type": "string"
          },
          "exact_match": {
            "default": false,
            "title": "Exact Match",
            "type": "boolean"
          }
        },
        "required": [
          "directory",
          "order_pattern",
          "output_file"
        ],
        "title": "merge_pdfs_orderedArguments",
        "type": "object"
      }
    },
    {
      "name": "find_related_pdfs",
      "description": "\n    Find PDF files related to a target PDF based on filename patterns and content similarity.\n\n    Args:\n        target_file: Path to the target PDF file.\n        search_directory: Path to the directory to search for related files.\n\n    Returns:\n        A JSON string containing the operation status, related files (if successful), or error message (if failed).\n\n    Raises:\n        ValueError: If any input parameter is invalid.\n        RuntimeError: If the search process fails.\n    ",
      "args_schema": {
        "properties": {
          "target_file": {
            "title": "Target File",
            "type": "string"
          },
          "search_directory": {
            "title": "Search Directory",
            "type": "string"
          }
        },
        "required": [
          "target_file",
          "search_directory"
        ],
        "title": "find_related_pdfsArguments",
        "type": "object"
      }
    }
  ],
  "test_results": {
    "merge_pdfs": [
      {
        "case_name": "Basic PDF Merge",
        "purpose": "验证基础功能：合并两个有效的PDF文件并生成一个输出文件",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\"}"
        },
        "execution_time": 0.0844271183013916,
        "is_functional_test": true
      },
      {
        "case_name": "Merge Single PDF File",
        "purpose": "验证当输入只有一个PDF时，工具是否仍能正常处理并生成输出文件",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.05478048324584961,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正确处理",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@merged!.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"}"
        },
        "execution_time": 0.0830070972442627,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Input File Type",
        "purpose": "验证非PDF文件作为输入时是否会抛出错误",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_type_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.02550983428955078,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Input Files List",
        "purpose": "验证空的输入列表是否会触发参数校验失败",
        "args": {
          "input_files": [],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_input_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.024118900299072266,
        "is_functional_test": false
      },
      {
        "case_name": "Output Directory Does Not Exist",
        "purpose": "验证输出目录不存在时是否会处理失败",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_output_dir\\merged_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.02801227569580078,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否会抛出运行时错误",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_input_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.023296356201171875,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt Merge Git Internal Files",
        "purpose": "验证尝试合并.git内部文件是否会成功或安全拒绝",
        "args": {
          "input_files": [
            "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config"
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_config_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: At least two input files are required for merging\"}"
        },
        "execution_time": 0.02463221549987793,
        "is_functional_test": false
      }
    ],
    "extract_pages": [
      {
        "case_name": "Basic Page Extraction",
        "purpose": "验证基础功能：从PDF中提取指定页面并生成新文件",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1,
            2
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\extracted_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\"}"
        },
        "execution_time": 0.21843981742858887,
        "is_functional_test": true
      },
      {
        "case_name": "Extract Single Page",
        "purpose": "验证仅提取单个页面时是否能正确处理",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\rule1.pdf",
          "page_numbers": [
            3
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_page_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\"}"
        },
        "execution_time": 0.10028767585754395,
        "is_functional_test": true
      },
      {
        "case_name": "Extract with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正确处理",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@extracted!.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\"}"
        },
        "execution_time": 0.131514310836792,
        "is_functional_test": true
      },
      {
        "case_name": "Invalid Input File Type",
        "purpose": "验证非PDF文件作为输入是否会抛出参数错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_type_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid input file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 2.5976383686065674,
        "is_functional_test": false
      },
      {
        "case_name": "Input File Does Not Exist",
        "purpose": "验证输入文件不存在时是否会抛出运行时错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\missing_input_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Input file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 5.281857490539551,
        "is_functional_test": false
      },
      {
        "case_name": "Output Directory Does Not Exist",
        "purpose": "验证输出目录不存在时是否会抛出错误",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_output_dir\\extracted_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"extracted_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\nonexistent_output_dir\\\\extracted_output.pdf\"}"
        },
        "execution_time": 2.3414783477783203,
        "is_functional_test": false
      },
      {
        "case_name": "Security Check - Attempt Extract Git Internal File",
        "purpose": "验证尝试提取.git内部文件是否会拒绝或安全处理",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git\\config",
          "page_numbers": [
            1
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_config_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid input file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\.git\\\\config\"}"
        },
        "execution_time": 4.1918745040893555,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - First and Last Page Extraction",
        "purpose": "验证提取第一页和最后一页是否能正确处理",
        "args": {
          "input_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "page_numbers": [
            1,
            10
          ],
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\first_last_page_extracted.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Some page numbers are out of range (document has 7 pages): [10]\"}"
        },
        "execution_time": 3.2464239597320557,
        "is_functional_test": true
      }
    ],
    "search_pdfs": [
      {
        "case_name": "Basic PDF Search",
        "purpose": "验证基础功能：在指定目录中搜索符合正则表达式模式的PDF文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"]}"
        },
        "execution_time": 0.049034833908081055,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Exact Filename Match",
        "purpose": "验证工具是否能正确识别完全匹配的PDF文件名",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "^paper1.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.007001399993896484,
        "is_functional_test": true
      },
      {
        "case_name": "Search for Special Character Filenames",
        "purpose": "验证包含特殊字符的PDF文件名能否被正确识别",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "#.*\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"]}"
        },
        "execution_time": 0.008799076080322266,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt Search in Git Internal Directory",
        "purpose": "验证尝试搜索.git内部目录中的PDF是否会拒绝或安全处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "pattern": "\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": []}"
        },
        "execution_time": 0.014856815338134766,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证无效目录路径是否会导致错误处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir",
          "pattern": "\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\nonexistent_dir\"}"
        },
        "execution_time": 0.07113003730773926,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Pattern Input",
        "purpose": "验证空模式输入是否触发参数校验失败",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": ""
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"]}"
        },
        "execution_time": 0.0070002079010009766,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Regular Expression",
        "purpose": "验证无效的正则表达式是否会被正确捕获并报错",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "*invalid_regex"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid regular expression pattern: *invalid_regex. Error: nothing to repeat at position 0\"}"
        },
        "execution_time": 0.6562232971191406,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Long Pattern Matching",
        "purpose": "验证长正则表达式模式是否能被正确处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "pattern": "^[a-zA-Z0-9_#@$!\\-]{1,100}\\.pdf$"
        },
        "response": {
          "result": "{\"status\": \"success\", \"matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"]}"
        },
        "execution_time": 0.006000041961669922,
        "is_functional_test": true
      }
    ],
    "merge_pdfs_ordered": [
      {
        "case_name": "Basic PDF Merge with Exact Match",
        "purpose": "验证基础功能：使用精确匹配模式合并指定顺序的PDF文件并生成一个输出文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper1.pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_merge_exact_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_exact_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.061033010482788086,
        "is_functional_test": true
      },
      {
        "case_name": "Basic PDF Merge with Partial Match",
        "purpose": "验证基础功能：使用部分匹配模式合并包含特定关键词的PDF文件并生成输出文件",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "rule",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\basic_merge_partial_output.pdf",
          "exact_match": false
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_partial_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\"]}"
        },
        "execution_time": 0.026018619537353516,
        "is_functional_test": true
      },
      {
        "case_name": "Merge with Special Characters in Output Path",
        "purpose": "验证输出路径包含特殊字符时是否能正确处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@merged!.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"]}"
        },
        "execution_time": 0.06040811538696289,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Attempt Merge Git Internal Files",
        "purpose": "验证尝试合并.git内部文件是否会拒绝或安全处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git",
          "order_pattern": ".git",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\git_config_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: .git\"}"
        },
        "execution_time": 0.040915489196777344,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Directory Path",
        "purpose": "验证无效目录路径是否会触发参数校验失败",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir",
          "order_pattern": "paper",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\invalid_dir_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\nonexistent_dir\"}"
        },
        "execution_time": 0.04076266288757324,
        "is_functional_test": false
      },
      {
        "case_name": "No Matching Files Found",
        "purpose": "验证未找到匹配文件时是否会返回错误信息",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "nonexistentfile",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\no_match_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: No files found matching the pattern: nonexistentfile\"}"
        },
        "execution_time": 0.03852581977844238,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Single File Match",
        "purpose": "验证仅匹配到一个文件时是否会抛出错误（至少需要两个文件）",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": "single_page_extracted.pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\single_file_output.pdf",
          "exact_match": true
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_file_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\"]}"
        },
        "execution_time": 0.015500545501708984,
        "is_functional_test": true
      },
      {
        "case_name": "Boundary Condition - Large Number of Files",
        "purpose": "验证大量文件合并时是否能正确处理",
        "args": {
          "directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles",
          "order_pattern": ".pdf",
          "output_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_merge_output.pdf"
        },
        "response": {
          "result": "{\"status\": \"success\", \"merged_file\": \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_merge_output.pdf\", \"matched_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_exact_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\basic_merge_partial_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\extracted_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\merged_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\rule1.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_file_output.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\single_page_extracted.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@extracted!.pdf\", \"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@merged!.pdf\"]}"
        },
        "execution_time": 0.32706642150878906,
        "is_functional_test": true
      }
    ],
    "find_related_pdfs": [
      {
        "case_name": "Basic Related PDF Search",
        "purpose": "验证基础功能：基于目标PDF文件在指定目录中搜索相关PDF文件",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"filename_matches\": [\"D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\paper1.pdf\"], \"content_matches\": []}"
        },
        "execution_time": 0.6825881004333496,
        "is_functional_test": true
      },
      {
        "case_name": "Search with Special Characters in Directory Path",
        "purpose": "验证搜索目录路径包含特殊字符时是否能正确处理",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\special#chars@dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\special#chars@dir\"}"
        },
        "execution_time": 0.0317995548248291,
        "is_functional_test": true
      },
      {
        "case_name": "Security Check - Search in Git Internal Directory",
        "purpose": "验证尝试在.git内部目录中搜索是否会拒绝或安全处理",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\.git"
        },
        "response": {
          "result": "{\"status\": \"success\", \"related_files\": [], \"filename_matches\": [], \"content_matches\": []}"
        },
        "execution_time": 0.7292816638946533,
        "is_functional_test": false
      },
      {
        "case_name": "Invalid Target File Type",
        "purpose": "验证非PDF文件作为目标文件时是否会抛出参数错误",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\existing_file.txt",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid target file path: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\existing_file.txt\"}"
        },
        "execution_time": 0.06255841255187988,
        "is_functional_test": false
      },
      {
        "case_name": "Target File Does Not Exist",
        "purpose": "验证目标文件不存在时是否会抛出运行时错误",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\nonexistent.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Target file does not exist: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\nonexistent.pdf\"}"
        },
        "execution_time": 0.04766535758972168,
        "is_functional_test": false
      },
      {
        "case_name": "Empty Search Directory",
        "purpose": "验证搜索目录为空时是否会处理失败",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\empty_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\empty_dir\"}"
        },
        "execution_time": 0.035823822021484375,
        "is_functional_test": false
      },
      {
        "case_name": "Boundary Condition - Large Number of Files in Directory",
        "purpose": "验证在包含大量文件的目录中搜索是否会正确处理",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\large_file_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\testFiles\\\\large_file_dir\"}"
        },
        "execution_time": 0.10117340087890625,
        "is_functional_test": true
      },
      {
        "case_name": "Search Directory Does Not Exist",
        "purpose": "验证搜索目录不存在时是否会抛出参数校验失败",
        "args": {
          "target_file": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\testFiles\\paper1.pdf",
          "search_directory": "D:\\devWorkspace\\MCPServer-Generator\\testSystem\\nonexistent_dir"
        },
        "response": {
          "result": "{\"status\": \"error\", \"error\": \"ValueError: Invalid search directory: D:\\\\devWorkspace\\\\MCPServer-Generator\\\\testSystem\\\\nonexistent_dir\"}"
        },
        "execution_time": 0.03316760063171387,
        "is_functional_test": false
      }
    ]
  },
  "total_cases": 40
}